// Class: ReadBDTGrad
// Automatically generated by MethodBase::MakeClass
//

/* configuration options =====================================================

#GEN -*-*-*-*-*-*-*-*-*-*-*- general info -*-*-*-*-*-*-*-*-*-*-*-

Method         : BDT::BDTGrad
TMVA Release   : 4.0.7         [262151]
ROOT Release   : 5.27/06       [334598]
Creator        : marfin
Date           : Mon Apr 23 21:31:41 2012
Host           : Linux lxbuild042.cern.ch 2.6.18-238.1.1.el5 #1 SMP Wed Jan 19 11:06:36 CET 2011 x86_64 x86_64 x86_64 GNU/Linux
Dir            : /data/user/marfin/CMSSW_4_2_4_patch1/src/Analysis/Utilities/test
Training events: 200000
Analysis type  : [Classification]


#OPT -*-*-*-*-*-*-*-*-*-*-*-*- options -*-*-*-*-*-*-*-*-*-*-*-*-

# Set by User:
V: "False" [Verbose output (short form of "VerbosityLevel" below - overrides the latter one)]
H: "True" [Print method-specific help message]
NTrees: "1000" [Number of trees in the forest]
BoostType: "Grad" [Boosting type for the trees in the forest]
UseBaggedGrad: "True" [Use only a random subsample of all events for growing the trees in each iteration. (Only valid for GradBoost)]
GradBaggingFraction: "6.000000e-01" [Defines the fraction of events to be used in each iteration when UseBaggedGrad=kTRUE. (Only valid for GradBoost)]
Shrinkage: "1.000000e-01" [Learning rate for GradBoost algorithm]
UseWeightedTrees: "True" [Use weighted trees or simple average in classification from the forest]
SeparationType: "sdivsqrtsplusb" [Separation criterion for node splitting]
nCuts: "20" [Number of steps during node cut optimisation]
PruneMethod: "nopruning" [Method used for pruning (removal) of statistically insignificant branches]
NNodesMax: "30" [Max number of nodes in tree]
# Default:
VerbosityLevel: "Default" [Verbosity level]
VarTransform: "None" [List of variable transformations performed before training, e.g., "D_Background,P_Signal,G,N_AllClasses" for: "Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)"]
CreateMVAPdfs: "False" [Create PDFs for classifier outputs (signal and background)]
IgnoreNegWeightsInTraining: "False" [Events with negative weights are ignored in the training (but are included for testing and performance evaluation)]
AdaBoostR2Loss: "quadratic" [Type of Loss function in AdaBoostR2t (Linear,Quadratic or Exponential)]
AdaBoostBeta: "1.000000e+00" [Parameter for AdaBoost algorithm]
UseRandomisedTrees: "False" [Choose at each node splitting a random set of variables]
UseNvars: "2" [Number of variables used if randomised tree option is chosen]
UseNTrainEvents: "200000" [number of randomly picked training events used in randomised (and bagged) trees]
UseYesNoLeaf: "True" [Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node]
NodePurityLimit: "5.000000e-01" [In boosting/pruning, nodes with purity > NodePurityLimit are signal; background otherwise.]
nEventsMin: "55" [Minimum number of events required in a leaf node (default: max(20, N_train/(Nvar^2)/10) ) ]
PruneStrength: "-1.000000e+00" [Pruning strength]
PruneBeforeBoost: "False" [Flag to prune the tree before applying boosting algorithm]
PruningValFraction: "5.000000e-01" [Fraction of events to use for optimizing automatic pruning.]
MaxDepth: "3" [Max depth of the decision tree allowed]
##


#VAR -*-*-*-*-*-*-*-*-*-*-*-* variables *-*-*-*-*-*-*-*-*-*-*-*-

NVar 19
D                             D                             D                             D                             F                                 'F'    [8.09350796018e-13,0.969845294952]
Et3byEt1                      Et3byEt1                      Et3byEt1                      Et3byEt1                      F                                 'F'    [0.0213338062167,0.995630800724]
Et3byEt2                      Et3byEt2                      Et3byEt2                      Et3byEt2                      F                                 'F'    [0.0256310589612,0.999987959862]
Eta1                          Eta1                          Eta1                          Eta1                          F                                 'F'    [-2.59995794296,2.59998321533]
Eta2                          Eta2                          Eta2                          Eta2                          F                                 'F'    [-2.5999815464,2.59995913506]
Eta3                          Eta3                          Eta3                          Eta3                          F                                 'F'    [-2.5999994278,2.59999895096]
aplanarity                    aplanarity                    aplanarity                    aplanarity                    F                                 'F'    [7.72851021461e-13,0.425171911716]
detajet1jet2                  detajet1jet2                  detajet1jet2                  detajet1jet2                  F                                 'F'    [1.82086080258e-06,5.18003892899]
detajet2jet3                  detajet2jet3                  detajet2jet3                  detajet2jet3                  F                                 'F'    [3.12055794893e-06,5.1712808609]
dphijet1jet3                  dphijet1jet3                  dphijet1jet3                  dphijet1jet3                  F                                 'F'    [9.89213640423e-06,3.14158535004]
dphijet2jet3                  dphijet2jet3                  dphijet2jet3                  dphijet2jet3                  F                                 'F'    [7.99048575573e-06,3.14154052734]
dphijet2jet3_boost12          dphijet2jet3_boost12          dphijet2jet3_boost12          dphijet2jet3_boost12          F                                 'F'    [2.08782535083e-06,3.14154076576]
dptjet1jet3                   dptjet1jet3                   dptjet1jet3                   dptjet1jet3                   F                                 'F'    [0.00093678914709,0.749734222889]
isotropy                      isotropy                      isotropy                      isotropy                      F                                 'F'    [0.0916248187423,0.999600529671]
maxdijetmass                  maxdijetmass                  maxdijetmass                  maxdijetmass                  F                                 'F'    [0.222750738263,0.988934218884]
mindijetmass                  mindijetmass                  mindijetmass                  mindijetmass                  F                                 'F'    [0.00732990400866,0.580337285995]
sphericity                    sphericity                    sphericity                    sphericity                    F                                 'F'    [0.000508818775415,0.927527248859]
thetajet1_boost12             thetajet1_boost12             thetajet1_boost12             thetajet1_boost12             F                                 'F'    [0.0203365664929,3.13854455948]
thetajet3_boost12             thetajet3_boost12             thetajet3_boost12             thetajet3_boost12             F                                 'F'    [0.00201850407757,3.13869547844]
NSpec 0


============================================================================ */

#include <vector>
#include <cmath>
#include <string>
#include <iostream>

#ifndef NN
#define NN new BDT_DecisionTreeNode
#endif
   
#ifndef BDT_DecisionTreeNode__def
#define BDT_DecisionTreeNode__def
   
class BDT_DecisionTreeNode {
   
public:
   
   // constructor of an essentially "empty" node floating in space
   BDT_DecisionTreeNode ( BDT_DecisionTreeNode* left,
                          BDT_DecisionTreeNode* right,
                          double cutValue, Bool_t cutType, int selector,
                          int nodeType, double purity, double response ) :
   fLeft    ( left     ),
   fRight   ( right    ),
   fCutValue( cutValue ),
   fCutType ( cutType  ),
   fSelector( selector ),
   fNodeType( nodeType ),
   fPurity  ( purity   ),
   fResponse( response ){}

   virtual ~BDT_DecisionTreeNode();

   // test event if it decends the tree at this node to the right
   virtual Bool_t GoesRight( const std::vector<double>& inputValues ) const;
   BDT_DecisionTreeNode* GetRight( void )  {return fRight; };

   // test event if it decends the tree at this node to the left 
   virtual Bool_t GoesLeft ( const std::vector<double>& inputValues ) const;
   BDT_DecisionTreeNode* GetLeft( void ) { return fLeft; };   

   // return  S/(S+B) (purity) at this node (from  training)

   double GetPurity( void ) const { return fPurity; } 
   // return the node type
   int    GetNodeType( void ) const { return fNodeType; }
   double GetResponse(void) const {return fResponse;}

private:

   BDT_DecisionTreeNode*   fLeft;     // pointer to the left daughter node
   BDT_DecisionTreeNode*   fRight;    // pointer to the right daughter node
   double                  fCutValue; // cut value appplied on this node to discriminate bkg against sig
   Bool_t                  fCutType;  // true: if event variable > cutValue ==> signal , false otherwise
   int                     fSelector; // index of variable used in node selection (decision tree)   
   int                     fNodeType; // Type of node: -1 == Bkg-leaf, 1 == Signal-leaf, 0 = internal 
   double                  fPurity;   // Purity of node from training
   double                  fResponse; // Regression response value of node
}; 
   
//_______________________________________________________________________
BDT_DecisionTreeNode::~BDT_DecisionTreeNode()
{
   if (fLeft  != NULL) delete fLeft;
   if (fRight != NULL) delete fRight;
}; 
   
//_______________________________________________________________________
Bool_t BDT_DecisionTreeNode::GoesRight( const std::vector<double>& inputValues ) const
{
   // test event if it decends the tree at this node to the right
   Bool_t result = (inputValues[fSelector] > fCutValue );
   if (fCutType == true) return result; //the cuts are selecting Signal ;
   else return !result;
}
   
//_______________________________________________________________________
Bool_t BDT_DecisionTreeNode::GoesLeft( const std::vector<double>& inputValues ) const
{
   // test event if it decends the tree at this node to the left
   if (!this->GoesRight(inputValues)) return true;
   else return false;
}
   
#endif
   
#ifndef IClassifierReader__def
#define IClassifierReader__def

class IClassifierReader {

 public:

   // constructor
   IClassifierReader() : fStatusIsClean( true ) {}
   virtual ~IClassifierReader() {}

   // return classifier response
   virtual double GetMvaValue( const std::vector<double>& inputValues ) const = 0;

   // returns classifier status
   Bool_t IsStatusClean() const { return fStatusIsClean; }

 protected:

   Bool_t fStatusIsClean;
};

#endif

class ReadBDTGrad : public IClassifierReader {

 public:

   // constructor
   ReadBDTGrad( std::vector<std::string>& theInputVars ) 
      : IClassifierReader(),
        fClassName( "ReadBDTGrad" ),
        fNvars( 19 ),
        fIsNormalised( false )
   {      
      // the training input variables
      const char* inputVars[] = { "D", "Et3byEt1", "Et3byEt2", "Eta1", "Eta2", "Eta3", "aplanarity", "detajet1jet2", "detajet2jet3", "dphijet1jet3", "dphijet2jet3", "dphijet2jet3_boost12", "dptjet1jet3", "isotropy", "maxdijetmass", "mindijetmass", "sphericity", "thetajet1_boost12", "thetajet3_boost12" };

      // sanity checks
      if (theInputVars.size() <= 0) {
         std::cout << "Problem in class \"" << fClassName << "\": empty input vector" << std::endl;
         fStatusIsClean = false;
      }

      if (theInputVars.size() != fNvars) {
         std::cout << "Problem in class \"" << fClassName << "\": mismatch in number of input values: "
                   << theInputVars.size() << " != " << fNvars << std::endl;
         fStatusIsClean = false;
      }

      // validate input variables
      for (size_t ivar = 0; ivar < theInputVars.size(); ivar++) {
         if (theInputVars[ivar] != inputVars[ivar]) {
            std::cout << "Problem in class \"" << fClassName << "\": mismatch in input variable names" << std::endl
                      << " for variable [" << ivar << "]: " << theInputVars[ivar].c_str() << " != " << inputVars[ivar] << std::endl;
            fStatusIsClean = false;
         }
      }

      // initialize min and max vectors (for normalisation)
      fVmin[0] = 8.09350796018155e-13;
      fVmax[0] = 0.969845294952393;
      fVmin[1] = 0.0213338062167168;
      fVmax[1] = 0.99563080072403;
      fVmin[2] = 0.025631058961153;
      fVmax[2] = 0.999987959861755;
      fVmin[3] = -2.59995794296265;
      fVmax[3] = 2.59998321533203;
      fVmin[4] = -2.59998154640198;
      fVmax[4] = 2.59995913505554;
      fVmin[5] = -2.59999942779541;
      fVmax[5] = 2.59999895095825;
      fVmin[6] = 7.72851021461213e-13;
      fVmax[6] = 0.425171911716461;
      fVmin[7] = 1.82086080258159e-06;
      fVmax[7] = 5.1800389289856;
      fVmin[8] = 3.1205579489324e-06;
      fVmax[8] = 5.17128086090088;
      fVmin[9] = 9.89213640423259e-06;
      fVmax[9] = 3.14158535003662;
      fVmin[10] = 7.9904857557267e-06;
      fVmax[10] = 3.14154052734375;
      fVmin[11] = 2.08782535082719e-06;
      fVmax[11] = 3.14154076576233;
      fVmin[12] = 0.000936789147090167;
      fVmax[12] = 0.749734222888947;
      fVmin[13] = 0.0916248187422752;
      fVmax[13] = 0.999600529670715;
      fVmin[14] = 0.22275073826313;
      fVmax[14] = 0.988934218883514;
      fVmin[15] = 0.00732990400865674;
      fVmax[15] = 0.580337285995483;
      fVmin[16] = 0.000508818775415421;
      fVmax[16] = 0.927527248859406;
      fVmin[17] = 0.0203365664929152;
      fVmax[17] = 3.13854455947876;
      fVmin[18] = 0.00201850407756865;
      fVmax[18] = 3.13869547843933;

      // initialize input variable types
      fType[0] = 'F';
      fType[1] = 'F';
      fType[2] = 'F';
      fType[3] = 'F';
      fType[4] = 'F';
      fType[5] = 'F';
      fType[6] = 'F';
      fType[7] = 'F';
      fType[8] = 'F';
      fType[9] = 'F';
      fType[10] = 'F';
      fType[11] = 'F';
      fType[12] = 'F';
      fType[13] = 'F';
      fType[14] = 'F';
      fType[15] = 'F';
      fType[16] = 'F';
      fType[17] = 'F';
      fType[18] = 'F';

      // initialize constants
      Initialize();

   }

   // destructor
   virtual ~ReadBDTGrad() {
      Clear(); // method-specific
   }

   // the classifier response
   // "inputValues" is a vector of input values in the same order as the 
   // variables given to the constructor
   double GetMvaValue( const std::vector<double>& inputValues ) const;

 private:

   // method-specific destructor
   void Clear();

   // common member variables
   const char* fClassName;

   const size_t fNvars;
   size_t GetNvar()           const { return fNvars; }
   char   GetType( int ivar ) const { return fType[ivar]; }

   // normalisation of input variables
   const Bool_t fIsNormalised;
   Bool_t IsNormalised() const { return fIsNormalised; }
   double fVmin[19];
   double fVmax[19];
   double NormVariable( double x, double xmin, double xmax ) const {
      // normalise to output range: [-1, 1]
      return 2*(x - xmin)/(xmax - xmin) - 1.0;
   }

   // type of input variable: 'F' or 'I'
   char   fType[19];

   // initialize internal variables
   void Initialize();
   double GetMvaValue__( const std::vector<double>& inputValues ) const;

   // private members (method specific)
   std::vector<BDT_DecisionTreeNode*> fForest;       // i.e. root nodes of decision trees
   std::vector<double>                fBoostWeights; // the weights applied in the individual boosts
};

double ReadBDTGrad::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDT_DecisionTreeNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDT_DecisionTreeNode*)current->GetRight();
         else current=(BDT_DecisionTreeNode*)current->GetLeft();
      }
      myMVA += current->GetResponse();
   }
   return 2.0/(1.0+exp(-2.0*myMVA))-1.0;
};

void ReadBDTGrad::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.866021,-0.000198426) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.639197,-0.000107533) , 
2.35609, 0, 17, 0, 0.674922,-0.174922) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.510232,-7.07419e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0953673,0.000982961) , 
0.0296197, 1, 0, 0, 0.383292,0.116708) , 
0.132487, 0, 15, 0, 0.640011,-0.140011) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.77163,-0.000129918) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.364082,0.000299345) , 
0.754649, 1, 17, 0, 0.402532,0.0974682) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.479784,0.000402203) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0594475,0.00528184) , 
0.899179, 0, 1, 0, 0.073521,0.426479) , 
0.0637927, 0, 15, 0, 0.350206,0.149794) , 
0.659385, 0, 14, 0, 0.522242,-0.0222422)    );
  // itree = 1
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.659756,-0.000127535) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.341877,8.1264e-05) , 
0.107925, 0, 15, 0, 0.635751,-0.135715) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.554741,-4.5141e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.268164,7.40523e-05) , 
0.0160596, 1, 6, 0, 0.418028,0.0819925) , 
0.383284, 1, 16, 0, 0.60063,-0.100596) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712095,-0.000113992) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.345899,0.000279215) , 
0.640214, 0, 14, 0, 0.425211,0.0742322) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.441772,0.000176029) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.142602,0.00101685) , 
1.83225, 0, 17, 0, 0.226181,0.273274) , 
0.935131, 0, 7, 0, 0.310276,0.189175) , 
0.659126, 0, 14, 0, 0.479505,0.0202851)    );
  // itree = 2
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.697891,-0.000134013) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.52186,-1.93076e-05) , 
0.702179, 0, 14, 0, 0.65166,-0.151585) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687448,-0.000221917) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.376755,3.40385e-05) , 
0.876184, 0, 14, 0, 0.461852,0.0382109) , 
0.452685, 0, 2, 0, 0.582883,-0.0828127) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.491737,0.000133345) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.262541,0.000361326) , 
0.0607388, 0, 6, 0, 0.350941,0.148385) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.238201,0.012688) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0399638,0.00160807) , 
0.737383, 0, 16, 0, 0.0473628,0.451125) , 
0.492418, 0, 14, 0, 0.296141,0.203034) , 
0.658369, 0, 14, 0, 0.462085,0.0376076)    );
  // itree = 3
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707898,-0.000136146) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.379979,6.11093e-05) , 
0.110562, 1, 0, 0, 0.674707,-0.174573) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.640444,-0.000181658) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.284061,0.000518344) , 
0.870171, 0, 14, 0, 0.435397,0.0647027) , 
0.357681, 0, 2, 0, 0.622213,-0.122087) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.53997,-9.63884e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.299187,0.000320727) , 
2.09445, 0, 10, 0, 0.364002,0.135267) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.896198,-0.000234885) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0634095,0.00224459) , 
2.35034, 0, 5, 0, 0.0939637,0.403585) , 
0.498961, 0, 14, 0, 0.312234,0.186705) , 
0.677134, 0, 14, 0, 0.479604,0.0199761)    );
  // itree = 4
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.876927,-0.000245914) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.69058,-0.000247249) , 
0.190785, 0, 15, 0, 0.803593,-0.303403) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.61569,-9.81529e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.307976,0.000359576) , 
0.138743, 0, 15, 0, 0.57645,-0.0763571) , 
1.96485, 0, 7, 0, 0.621588,-0.121475) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.422417,0.000130635) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.223745,0.000590357) , 
1.79231, 1, 18, 0, 0.35194,0.147069) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7588,0.000319004) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.059416,0.00495953) , 
2.98675, 0, 18, 0, 0.0843875,0.411584) , 
0.0639518, 0, 15, 0, 0.306718,0.191778) , 
0.66057, 0, 14, 0, 0.491892,0.00755451)    );
  // itree = 5
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.85553,-0.000155686) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.666227,-0.000172384) , 
0.866526, 0, 5, 0, 0.740555,-0.240389) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.605475,-6.98262e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322734,9.04368e-05) , 
0.0327394, 1, 6, 0, 0.548307,-0.0483279) , 
1.22075, 0, 7, 0, 0.630103,-0.130045) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.775535,-5.98213e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0726573,0.0132694) , 
1.86965, 0, 17, 0, 0.506254,-0.00783137) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.466978,0.000100035) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174126,0.000571991) , 
1.3464, 1, 9, 0, 0.225405,0.27225) , 
0.240875, 1, 8, 0, 0.272058,0.225725) , 
0.63667, 0, 14, 0, 0.514842,-0.0155163)    );
  // itree = 6
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.807583,-0.000148156) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.569262,-0.000225419) , 
0.590619, 0, 2, 0, 0.731055,-0.230787) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.553028,-7.17019e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.281183,7.19599e-05) , 
0.0327394, 1, 6, 0, 0.497106,0.00292789) , 
1.23334, 0, 7, 0, 0.600402,-0.100265) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.507885,9.48202e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.269556,0.000378926) , 
0.530699, 1, 14, 0, 0.358394,0.139881) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.468738,0.000707924) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.119978,0.00105224) , 
1.82777, 0, 7, 0, 0.172693,0.322498) , 
0.0898002, 0, 15, 0, 0.290779,0.206373) , 
0.643347, 0, 14, 0, 0.489385,0.00968153)    );
  // itree = 7
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.684729,-0.000155912) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.470577,-4.7131e-05) , 
0.131921, 0, 15, 0, 0.649477,-0.149174) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556582,-5.67478e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172664,2.90054e-05) , 
0.371741, 1, 4, 0, 0.468939,0.0311845) , 
0.740038, 0, 7, 0, 0.585698,-0.0854589) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.57473,4.71209e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204523,0.00102616) , 
-0.371025, 0, 5, 0, 0.473888,0.02365) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670103,-0.000102085) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.179356,0.000627004) , 
0.764665, 1, 17, 0, 0.227093,0.269927) , 
1.49557, 0, 11, 0, 0.307037,0.19015) , 
0.66057, 0, 14, 0, 0.466547,0.0323876)    );
  // itree = 8
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.732249,-0.000122066) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.409242,-3.89958e-05) , 
0.395032, 1, 16, 0, 0.698013,-0.197627) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.681632,-0.000296692) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.384914,-5.39523e-05) , 
0.0771545, 1, 16, 0, 0.440627,0.0595421) , 
0.354981, 0, 1, 0, 0.59978,-0.0994771) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558816,-2.67537e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322469,0.00033709) , 
0.319727, 1, 16, 0, 0.430919,0.0674286) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.543546,0.000297049) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.146419,0.00126253) , 
1.94423, 0, 11, 0, 0.205972,0.288883) , 
0.0914033, 0, 15, 0, 0.358061,0.139155) , 
0.673088, 0, 14, 0, 0.484844,0.0139914)    );
  // itree = 9
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718055,-0.000164842) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.441855,-7.22668e-05) , 
0.132453, 0, 15, 0, 0.673449,-0.17301) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.548099,-7.80502e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259475,9.42671e-05) , 
0.704895, 0, 14, 0, 0.493835,0.00636288) , 
0.982427, 0, 7, 0, 0.589486,-0.0891597) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.643293,-7.64311e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.301357,0.000295049) , 
0.451283, 1, 13, 0, 0.479361,0.0177347) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709719,-4.93318e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233128,0.000610565) , 
1.35152, 1, 9, 0, 0.257886,0.238609) , 
2.0944, 0, 10, 0, 0.319221,0.17744) , 
0.659126, 0, 14, 0, 0.473416,0.0253359)    );
  // itree = 10
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.834257,-0.000173803) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.564422,-6.11545e-05) , 
0.73123, 1, 8, 0, 0.728637,-0.228169) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.630169,-0.000156632) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335189,2.94513e-05) , 
0.732489, 0, 7, 0, 0.532449,-0.0320191) , 
2.39359, 0, 9, 0, 0.648456,-0.148003) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.66581,-0.000158147) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.356779,0.000223065) , 
2.10387, 0, 7, 0, 0.382952,0.114846) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.791332,-0.000143715) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0875022,0.00188853) , 
0.313092, 1, 14, 0, 0.112038,0.381119) , 
0.493781, 0, 14, 0, 0.340915,0.156163) , 
0.697055, 0, 14, 0, 0.493699,0.0050554)    );
  // itree = 11
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683158,-0.000126614) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.413761,0.000198712) , 
0.118377, 0, 15, 0, 0.648966,-0.148714) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760726,-0.000183461) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.284069,-4.30771e-06) , 
2.15666, 0, 17, 0, 0.396917,0.103024) , 
0.394993, 1, 15, 0, 0.621786,-0.121568) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.843961,-0.000174355) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.304548,0.00230421) , 
-1.35799, 1, 4, 0, 0.487519,0.0100093) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615083,-8.29085e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.206229,0.000478659) , 
2.54285, 0, 11, 0, 0.226255,0.269137) , 
0.619611, 0, 14, 0, 0.261332,0.234347) , 
0.637994, 0, 14, 0, 0.504858,-0.00611248)    );
  // itree = 12
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695138,-0.00011937) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.468701,0.000106601) , 
0.132082, 0, 15, 0, 0.665343,-0.16486) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.631082,-0.000176211) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.370526,-5.31719e-05) , 
1.69708, 0, 8, 0, 0.436219,0.0641323) , 
1.19679, 1, 11, 0, 0.603792,-0.103345) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.563684,5.60469e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.243272,0.00039613) , 
0.787618, 1, 2, 0, 0.470462,0.026151) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.382902,0.000308889) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.137977,0.000903454) , 
0.36549, 1, 16, 0, 0.242251,0.253288) , 
0.904102, 0, 7, 0, 0.347571,0.148463) , 
0.66057, 0, 14, 0, 0.495264,0.00331401)    );
  // itree = 13
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742405,-0.000148919) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.469494,-5.28128e-05) , 
0.0284979, 1, 6, 0, 0.684392,-0.183845) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.5734,-0.000173052) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.288392,0.000206047) , 
0.149167, 1, 16, 0, 0.39852,0.101725) , 
0.350411, 0, 2, 0, 0.632975,-0.132482) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817129,-0.000177143) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0354468,3.54352e-06) , 
0.574003, 1, 17, 0, 0.73824,-0.240801) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.310825,0.000289534) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0620069,0.00653821) , 
0.0629401, 0, 15, 0, 0.270307,0.225223) , 
0.629926, 1, 17, 0, 0.296658,0.198979) , 
0.66057, 0, 14, 0, 0.499697,-0.00112841)    );
  // itree = 14
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.856791,-0.000210292) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.380255,3.12959e-05) , 
0.559764, 0, 13, 0, 0.817313,-0.316414) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720033,-0.000117544) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.533539,-8.40182e-05) , 
0.448827, 1, 11, 0, 0.587188,-0.0867159) , 
2.35982, 0, 17, 0, 0.624382,-0.123841) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.627572,-5.8864e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340398,0.000415062) , 
0.936229, 1, 17, 0, 0.393044,0.103417) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.334937,3.63826e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0599635,0.00227943) , 
2.09335, 0, 10, 0, 0.154932,0.33645) , 
0.51463, 0, 14, 0, 0.331151,0.16399) , 
0.66057, 0, 14, 0, 0.503202,-0.00489221)    );
  // itree = 15
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695916,-0.000130797) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.522819,-6.39292e-05) , 
0.592223, 0, 13, 0, 0.672004,-0.171945) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682043,-5.68755e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.381542,0.000172442) , 
-0.927306, 1, 4, 0, 0.464712,0.033706) , 
0.31021, 1, 16, 0, 0.593186,-0.0937516) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622016,7.99641e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322531,0.000232555) , 
1.94335, 0, 17, 0, 0.436973,0.0601587) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.842077,-0.000163548) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0937207,0.0059271) , 
0.475511, 1, 17, 0, 0.154632,0.336187) , 
0.0748946, 0, 15, 0, 0.32548,0.169159) , 
0.116474, 0, 15, 0, 0.522242,-0.0240786)    );
  // itree = 16
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.747346,-0.000139058) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.552252,-0.000122745) , 
0.452704, 0, 2, 0, 0.679872,-0.179189) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.693286,-0.000130996) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.287925,2.46087e-05) , 
0.817159, 0, 14, 0, 0.434143,0.0660909) , 
0.306753, 1, 16, 0, 0.623208,-0.122629) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.607565,-4.76937e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.206361,0.000556819) , 
1.49683, 1, 10, 0, 0.469672,0.0258153) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.468539,0.000111828) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.19667,0.000451665) , 
1.3464, 1, 9, 0, 0.242984,0.250836) , 
1.35614, 0, 7, 0, 0.297811,0.196411) , 
0.671261, 0, 14, 0, 0.48265,0.0151834)    );
  // itree = 17
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717438,-0.00015142) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.508313,-5.9736e-05) , 
0.137927, 0, 15, 0, 0.677278,-0.176817) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.784027,-0.000104134) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.390798,2.63538e-06) , 
0.906891, 0, 2, 0, 0.447737,0.0521547) , 
0.73248, 0, 7, 0, 0.599312,-0.0990444) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.83278,-0.00021081) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0655304,0.000809792) , 
1.10904, 1, 8, 0, 0.713784,-0.21738) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.508804,6.30923e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.237065,0.000540685) , 
1.71202, 0, 7, 0, 0.273729,0.219356) , 
0.59885, 1, 9, 0, 0.304246,0.189069) , 
0.63667, 0, 14, 0, 0.49501,0.00279983)    );
  // itree = 18
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679954,-0.000129071) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.419888,5.94172e-05) , 
0.304002, 0, 2, 0, 0.644585,-0.143766) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674499,-0.000262282) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.235956,0.000598056) , 
0.0734471, 1, 16, 0, 0.357434,0.142119) , 
0.131797, 0, 15, 0, 0.612948,-0.112268) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.777094,-0.00014037) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.243219,3.40654e-05) , 
1.19611, 1, 10, 0, 0.578517,-0.0829687) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.300854,0.00026016) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0616677,0.00680227) , 
0.0637927, 0, 15, 0, 0.263046,0.230674) , 
1.85243, 0, 7, 0, 0.297951,0.195971) , 
0.671261, 0, 14, 0, 0.476431,0.0213202)    );
  // itree = 19
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721194,-0.000129182) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.539586,-0.000107542) , 
0.449426, 0, 2, 0, 0.660656,-0.159879) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.598682,-0.000149869) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.324768,6.56271e-05) , 
1.01006, 0, 7, 0, 0.389473,0.110614) , 
0.315376, 1, 16, 0, 0.599798,-0.0991759) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.868489,-9.26501e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.455514,0.000263221) , 
2.09476, 0, 10, 0, 0.660702,-0.165649) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.395595,0.000272) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194898,0.00049617) , 
0.739443, 0, 2, 0, 0.296007,0.197051) , 
2.67741, 0, 8, 0, 0.333733,0.159532) , 
0.659385, 0, 14, 0, 0.48749,0.0100266)    );
  // itree = 20
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.900805,-0.000298627) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.696999,-0.000215505) , 
0.618464, 0, 3, 0, 0.822994,-0.32189) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.613533,-9.16911e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194266,0.000524283) , 
0.230559, 0, 2, 0, 0.589048,-0.0884184) , 
1.96486, 0, 7, 0, 0.637118,-0.136391) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.665217,-2.94286e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340163,0.000212785) , 
2.36387, 0, 17, 0, 0.365217,0.130433) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.323761,0.00130505) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0525007,0.00672117) , 
1.63662, 0, 7, 0, 0.110126,0.370461) , 
0.0635042, 0, 15, 0, 0.324791,0.168472) , 
0.671266, 0, 14, 0, 0.502641,-0.00512795)    );
  // itree = 21
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769088,-0.000162092) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.548757,-0.000183953) , 
1.19641, 1, 11, 0, 0.714305,-0.213614) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.560379,-7.29545e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238801,0.000849172) , 
0.139733, 0, 15, 0, 0.516137,-0.0160784) , 
1.23334, 0, 7, 0, 0.600038,-0.0997113) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.486601,0.000163428) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.219083,0.000462783) , 
0.227398, 1, 0, 0, 0.430779,0.0647123) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.516426,9.37294e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.137947,0.00376374) , 
0.0827718, 0, 15, 0, 0.213646,0.271631) , 
0.0904962, 0, 15, 0, 0.3512,0.140547) , 
0.637994, 0, 14, 0, 0.508114,-0.0109572)    );
  // itree = 22
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69251,-0.000125113) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.515505,-7.96023e-05) , 
0.388087, 0, 1, 0, 0.600422,-0.0997125) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.481301,0.00359926) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154132,-5.33243e-05) , 
1.18384, 1, 11, 0, 0.191001,0.309432) , 
0.470838, 0, 13, 0, 0.587058,-0.0863579) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.855487,-0.000184114) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306782,0.00548522) , 
0.598612, 1, 10, 0, 0.686779,-0.191934) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.345244,0.000195444) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.137342,0.00116204) , 
0.0904962, 0, 15, 0, 0.273945,0.217478) , 
0.341071, 0, 12, 0, 0.32306,0.16877) , 
0.66057, 0, 14, 0, 0.474371,0.0225433)    );
  // itree = 23
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.794695,-0.000222986) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.601581,-9.09103e-05) , 
1.6965, 0, 7, 0, 0.66302,-0.162773) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.640205,-0.000112335) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239651,0.00093253) , 
0.906031, 1, 17, 0, 0.382572,0.10975) , 
0.115759, 0, 15, 0, 0.598196,-0.0997804) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764862,-2.77077e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113488,0.000259834) , 
0.304807, 1, 3, 0, 0.674373,-0.179215) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.414068,3.13839e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.16849,0.000462526) , 
0.66338, 0, 14, 0, 0.262627,0.231464) , 
2.69275, 0, 10, 0, 0.303991,0.190207) , 
0.309582, 1, 16, 0, 0.486387,0.0104257)    );
  // itree = 24
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.693986,-0.000125166) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.472236,1.5017e-05) , 
0.39488, 1, 16, 0, 0.656911,-0.156179) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761258,-0.000246107) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.274512,0.000414343) , 
0.071645, 1, 16, 0, 0.397555,0.100821) , 
0.136819, 0, 15, 0, 0.616467,-0.116102) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.62694,-0.000190723) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257226,0.000351485) , 
0.598655, 1, 9, 0, 0.277952,0.214291) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.114332,0.00109635) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0174608,0.00264366) , 
0.22614, 1, 0, 0, 0.0713671,0.411333) , 
0.489684, 0, 14, 0, 0.232992,0.257175) , 
0.635977, 0, 14, 0, 0.492681,0.00439167)    );
  // itree = 25
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.775373,-0.000245546) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.274917,-5.80559e-05) , 
0.0773894, 0, 15, 0, 0.74477,-0.244167) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.560484,-8.4323e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.316889,0.000272972) , 
0.142, 0, 15, 0, 0.518278,-0.0184888) , 
1.97335, 0, 7, 0, 0.553431,-0.0535155) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.521792,1.47584e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.231895,0.00257062) , 
0.0905104, 0, 15, 0, 0.405035,0.0857679) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689436,-5.04915e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0984498,0.000562834) , 
2.31154, 0, 17, 0, 0.126067,0.362514) , 
0.357966, 1, 16, 0, 0.272841,0.216909) , 
0.62241, 0, 14, 0, 0.461508,0.0350767)    );
  // itree = 26
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.739698,-0.000172353) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.574924,-9.33044e-05) , 
0.0208719, 1, 0, 0, 0.692779,-0.191601) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.781855,-0.000164583) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.405696,-1.28104e-05) , 
0.532863, 1, 13, 0, 0.480945,0.0195601) , 
0.306732, 1, 16, 0, 0.645816,-0.144786) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.576687,-4.17483e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160333,0.011991) , 
0.50922, 0, 14, 0, 0.532047,-0.0385041) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.25486,0.000267132) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113952,0.000433157) , 
0.448997, 1, 16, 0, 0.203066,0.287809) , 
1.37079, 0, 7, 0, 0.294403,0.197213) , 
0.694257, 0, 14, 0, 0.481026,0.0155885)    );
  // itree = 27
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731799,-0.000120963) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.401569,-3.8139e-05) , 
0.3946, 1, 15, 0, 0.693506,-0.193098) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.57577,-0.000160463) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.398259,0.00014253) , 
0.770233, 0, 14, 0, 0.502862,-0.00268285) , 
0.541201, 0, 2, 0, 0.607545,-0.10724) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7584,-8.9495e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.339787,0.000261227) , 
2.14422, 1, 10, 0, 0.428248,0.0621953) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.345567,0.000241741) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118317,0.00152594) , 
0.33842, 1, 16, 0, 0.224493,0.264124) , 
2.09434, 0, 10, 0, 0.281376,0.207751) , 
0.636907, 0, 14, 0, 0.494504,0.001927)    );
  // itree = 28
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.921744,-0.000245665) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.712541,-0.000228093) , 
1.3619, 0, 3, 0, 0.82035,-0.319134) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.609559,-0.000114763) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.419739,-3.60849e-05) , 
0.0160596, 1, 6, 0, 0.53451,-0.0340306) , 
2.18104, 0, 7, 0, 0.576791,-0.0762027) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677112,1.00595e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.323452,0.000587046) , 
1.79506, 0, 9, 0, 0.502805,-0.0113949) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.484631,0.000113055) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.156886,0.000927438) , 
0.463121, 1, 10, 0, 0.241089,0.247479) , 
1.94478, 0, 10, 0, 0.33986,0.14978) , 
0.644389, 0, 14, 0, 0.48255,0.013684)    );
  // itree = 29
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.675853,-0.000119417) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.397154,3.03521e-05) , 
0.350412, 0, 2, 0, 0.63084,-0.130111) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.508219,-0.000110327) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192656,0.00106511) , 
1.21988, 0, 7, 0, 0.363771,0.133077) , 
0.137915, 0, 15, 0, 0.583961,-0.0839127) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.756689,-0.000106287) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322515,0.000383987) , 
0.243204, 1, 13, 0, 0.351837,0.136692) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.642815,-0.000203808) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0830866,0.000655139) , 
2.54227, 0, 11, 0, 0.11152,0.375806) , 
0.446495, 1, 16, 0, 0.273681,0.214456) , 
0.622998, 0, 14, 0, 0.485774,0.0105056)    );
  // itree = 30
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688149,-0.000123607) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.450738,1.46322e-05) , 
0.371543, 1, 16, 0, 0.645273,-0.144341) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.733867,-0.000241891) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.218754,0.000698817) , 
0.0732341, 1, 16, 0, 0.356819,0.140197) , 
0.110995, 0, 15, 0, 0.619757,-0.119171) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.70705,3.01116e-07) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175909,0.000947136) , 
0.877128, 1, 2, 0, 0.62674,-0.136924) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.401054,0.000217814) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168421,0.000553767) , 
0.437843, 1, 13, 0, 0.234135,0.253696) , 
1.87012, 0, 7, 0, 0.279746,0.208315) , 
0.636914, 0, 14, 0, 0.50506,-0.00869898)    );
  // itree = 31
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.658734,-0.000144889) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.500508,-5.29645e-05) , 
0.0284143, 1, 6, 0, 0.616511,-0.11555) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.602826,-0.000151712) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199202,0.00176291) , 
0.863858, 0, 14, 0, 0.409387,0.0909487) , 
0.304014, 0, 2, 0, 0.585726,-0.0848585) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.477605,9.04021e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0913479,0.00130394) , 
0.493775, 0, 14, 0, 0.407724,0.0824087) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.503761,0.000151115) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165822,0.000537695) , 
0.24758, 1, 1, 0, 0.19843,0.289763) , 
1.79517, 0, 10, 0, 0.283949,0.205036) , 
0.66057, 0, 14, 0, 0.460677,0.0352665)    );
  // itree = 32
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.894881,-0.000198473) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.669374,-0.00022882) , 
0.530265, 0, 1, 0, 0.741023,-0.239531) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556213,-9.02385e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.298498,0.000378811) , 
0.321695, 0, 2, 0, 0.513501,-0.0128606) , 
0.115546, 1, 16, 0, 0.581641,-0.0807455) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556006,3.50364e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143172,0.00102632) , 
0.567115, 0, 2, 0, 0.482133,0.00818848) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.537098,1.07841e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199724,0.000457242) , 
0.134901, 1, 16, 0, 0.230916,0.257285) , 
2.24356, 0, 10, 0, 0.288518,0.200169) , 
0.659385, 0, 14, 0, 0.45896,0.036826)    );
  // itree = 33
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709839,-0.00020217) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.393098,5.00271e-05) , 
0.257417, 0, 2, 0, 0.65866,-0.157325) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.613685,-6.75867e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.420715,-6.31061e-05) , 
-0.866674, 1, 5, 0, 0.481944,0.0186992) , 
0.784137, 0, 14, 0, 0.560588,-0.0596378) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.750296,-8.69273e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.338464,0.000204955) , 
1.31784, 0, 7, 0, 0.443918,0.0500952) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.377554,0.00037141) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.147873,0.000469877) , 
2.84239, 0, 9, 0, 0.200561,0.285814) , 
0.171397, 0, 15, 0, 0.274605,0.214094) , 
0.659385, 0, 14, 0, 0.438585,0.0571391)    );
  // itree = 34
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.844712,-0.000243021) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.572986,-0.000162303) , 
2.11693, 0, 7, 0, 0.813524,-0.31211) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.582437,-8.00488e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.242982,0.00104821) , 
0.115644, 0, 15, 0, 0.550233,-0.0505254) , 
1.96486, 0, 7, 0, 0.601734,-0.101693) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634246,-2.81794e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318619,0.000291121) , 
1.28159, 0, 7, 0, 0.399982,0.0928004) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.511535,4.61724e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.088621,0.00155232) , 
2.64875, 0, 8, 0, 0.131424,0.347697) , 
0.0900273, 0, 15, 0, 0.304954,0.182995) , 
0.622998, 0, 14, 0, 0.507088,-0.0109028)    );
  // itree = 35
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.765055,-0.000198955) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.627421,-9.59061e-05) , 
0.758337, 0, 14, 0, 0.702061,-0.201055) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.533433,-5.54337e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.110374,0.00642682) , 
0.140837, 0, 15, 0, 0.490106,0.0100023) , 
0.740047, 0, 7, 0, 0.631405,-0.130699) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.941965,-0.00018785) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0377435,0.0181932) , 
0.204991, 0, 15, 0, 0.785299,-0.294211) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.531484,0.000132675) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265022,0.000486071) , 
1.63636, 0, 7, 0, 0.306045,0.181635) , 
0.236077, 0, 6, 0, 0.329321,0.158524) , 
0.643027, 0, 14, 0, 0.522047,-0.0259964)    );
  // itree = 36
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.895038,-0.00013243) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.665988,-0.00012318) , 
0.214769, 1, 12, 0, 0.734909,-0.233456) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.583368,-0.000164295) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.241168,6.71758e-05) , 
0.759912, 0, 14, 0, 0.506101,-0.00501447) , 
1.19679, 1, 11, 0, 0.679675,-0.178311) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.564252,1.02375e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0294245,0.00455348) , 
0.816485, 1, 1, 0, 0.538907,-0.0477328) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.513974,9.0501e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236567,0.000369229) , 
0.912338, 0, 2, 0, 0.289565,0.200922) , 
2.09437, 0, 10, 0, 0.362379,0.128308) , 
0.706618, 0, 14, 0, 0.516908,-0.0210211)    );
  // itree = 37
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727716,-0.000140222) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.478685,-9.62612e-05) , 
0.342657, 1, 16, 0, 0.691142,-0.189515) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.8196,-0.000585448) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257995,0.000139258) , 
2.16227, 0, 7, 0, 0.290984,0.208586) , 
0.311796, 0, 2, 0, 0.637662,-0.13631) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.851522,-0.00010365) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.381475,0.000107598) , 
0.231539, 1, 13, 0, 0.40769,0.0865898) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.311051,0.00020136) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0810197,0.00306884) , 
2.09428, 0, 10, 0, 0.142108,0.336868) , 
0.0905465, 0, 15, 0, 0.33093,0.158927) , 
0.697055, 0, 14, 0, 0.482494,0.0130434)    );
  // itree = 38
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.787502,-0.000218736) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.575823,-9.92983e-05) , 
0.350195, 0, 2, 0, 0.69368,-0.192073) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.562558,-0.000105525) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.17063,0.000516238) , 
0.32828, 0, 2, 0, 0.523883,-0.0228239) , 
0.808248, 0, 14, 0, 0.598102,-0.096803) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.759183,-0.000183037) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.365984,0.000182899) , 
0.615988, 1, 17, 0, 0.386258,0.10573) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.299364,0.000411337) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0409671,0.00198138) , 
2.54062, 0, 10, 0, 0.0800531,0.395767) , 
0.493781, 0, 14, 0, 0.337817,0.151613) , 
0.697055, 0, 14, 0, 0.459699,0.0352883)    );
  // itree = 39
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.939286,-0.000191359) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.728885,-0.000238997) , 
0.909667, 0, 2, 0, 0.785764,-0.283581) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.565901,-8.41793e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.162738,0.000984862) , 
0.111763, 0, 15, 0, 0.540702,-0.0400078) , 
1.71693, 0, 7, 0, 0.607604,-0.106504) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714977,-6.66849e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.385181,0.000815041) , 
0.740237, 0, 2, 0, 0.5491,-0.0596966) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.314885,0.000180919) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0998982,0.00111486) , 
0.0912836, 0, 15, 0, 0.241838,0.244957) , 
1.79482, 0, 11, 0, 0.302621,0.18469) , 
0.66057, 0, 14, 0, 0.483704,0.0117945)    );
  // itree = 40
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.786439,-0.000159476) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.526586,-3.05623e-05) , 
0.290568, 0, 1, 0, 0.715915,-0.21415) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.485523,-7.35117e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0958722,0.000106867) , 
0.207346, 0, 15, 0, 0.409876,0.0907599) , 
0.0737083, 1, 0, 0, 0.678644,-0.177017) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.829394,-0.000148809) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.462955,-8.35644e-05) , 
0.577059, 0, 1, 0, 0.724368,-0.229973) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.388455,0.000135797) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.178968,0.000626904) , 
0.116475, 0, 15, 0, 0.296257,0.192673) , 
2.10387, 0, 7, 0, 0.33485,0.154572) , 
0.695491, 0, 14, 0, 0.51684,-0.0209566)    );
  // itree = 41
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.743225,-0.000154288) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.585805,-7.6214e-05) , 
0.976608, 0, 7, 0, 0.67627,-0.174775) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.602338,-0.000168341) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.200398,0.000280165) , 
0.92576, 0, 13, 0, 0.309,0.190397) , 
0.304007, 0, 2, 0, 0.635194,-0.133933) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.881126,-0.00015623) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.334698,0.000252307) , 
0.233886, 0, 6, 0, 0.356425,0.13339) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.786947,-0.000175029) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0772587,0.00179004) , 
0.313091, 1, 14, 0, 0.102005,0.372399) , 
0.49378, 0, 14, 0, 0.307274,0.179564) , 
0.66057, 0, 14, 0, 0.506275,-0.010685)    );
  // itree = 42
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706062,-0.000120713) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.42823,4.62726e-06) , 
0.394804, 1, 16, 0, 0.670725,-0.169823) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.723961,-0.00024357) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.368353,0.000143763) , 
0.0748728, 1, 16, 0, 0.441156,0.0580048) , 
0.357682, 0, 2, 0, 0.626834,-0.126265) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.562286,9.8909e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.181424,0.00120309) , 
0.490251, 0, 14, 0, 0.489275,-0.00149111) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.855075,-0.00016852) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.246439,0.000715787) , 
0.243364, 0, 6, 0, 0.266158,0.218207) , 
1.79495, 0, 10, 0, 0.361785,0.124045) , 
0.636907, 0, 14, 0, 0.533083,-0.0377271)    );
  // itree = 43
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.733319,-0.000139795) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.521864,-0.000115561) , 
0.449444, 0, 2, 0, 0.665691,-0.164146) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.515379,-5.66825e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.069748,0.0151463) , 
0.137915, 0, 15, 0, 0.474596,0.0258214) , 
0.276189, 1, 16, 0, 0.605399,-0.10421) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.88256,-0.000231827) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.047794,-2.45275e-05) , 
0.0294844, 1, 0, 0, 0.732202,-0.240642) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.489445,0.000187369) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.223083,0.000422797) , 
0.325072, 0, 12, 0, 0.254199,0.230982) , 
0.616699, 1, 17, 0, 0.27841,0.207094) , 
0.659385, 0, 14, 0, 0.476455,0.0185493)    );
  // itree = 44
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.699113,-0.000137474) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238234,0.000416113) , 
0.231977, 0, 2, 0, 0.676903,-0.174944) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.61148,-6.65422e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.353509,0.000181812) , 
1.00494, 0, 7, 0, 0.453644,0.0410105) , 
0.703275, 0, 14, 0, 0.58719,-0.0881656) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.834125,-0.000259599) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.266954,0.011469) , 
0.0189218, 1, 0, 0, 0.738621,-0.242221) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.450166,0.000128503) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.142539,0.000740502) , 
0.781089, 1, 17, 0, 0.170506,0.310964) , 
2.45612, 0, 7, 0, 0.229882,0.253148) , 
0.115897, 0, 15, 0, 0.499483,-0.00438474)    );
  // itree = 45
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712938,-0.000130507) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.503275,-8.60151e-05) , 
0.160285, 0, 15, 0, 0.660851,-0.159613) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.631208,-6.53757e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.369335,3.59818e-05) , 
0.690672, 0, 3, 0, 0.449337,0.0493066) , 
0.315631, 1, 16, 0, 0.608789,-0.10819) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.553674,6.05899e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.20776,0.00120151) , 
0.205575, 1, 12, 0, 0.363898,0.122224) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.878406,-0.000163647) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.146751,0.000422416) , 
0.322503, 1, 14, 0, 0.164848,0.317315) , 
0.653249, 0, 13, 0, 0.25274,0.231171) , 
0.645919, 0, 14, 0, 0.480591,0.0139993)    );
  // itree = 46
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.811159,-0.000129084) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.405313,-9.46904e-05) , 
1.64551, 1, 10, 0, 0.766156,-0.263831) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.576245,-0.000153661) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.276716,6.27267e-05) , 
0.760233, 0, 14, 0, 0.524886,-0.0242272) , 
0.498282, 0, 2, 0, 0.65939,-0.157802) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.757451,-0.000167046) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167874,0.000819233) , 
0.59753, 0, 14, 0, 0.644762,-0.149345) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.343847,0.000287575) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.116634,0.000306585) , 
0.181918, 1, 0, 0, 0.285503,0.202031) , 
1.87017, 0, 7, 0, 0.331427,0.157115) , 
0.706903, 0, 14, 0, 0.491857,0.00306634)    );
  // itree = 47
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694024,-0.000127853) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.43639,0.000124028) , 
0.112698, 1, 0, 0, 0.668569,-0.167023) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.778018,-0.00141691) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226946,0.000497243) , 
1.71695, 0, 7, 0, 0.284418,0.214096) , 
0.22793, 0, 2, 0, 0.650655,-0.14925) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.583475,6.38822e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.219363,0.000530448) , 
0.123433, 1, 3, 0, 0.471186,0.016941) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.369247,0.000216749) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154973,0.00049397) , 
0.30637, 1, 16, 0, 0.247073,0.238362) , 
1.49593, 0, 11, 0, 0.318052,0.168235) , 
0.677134, 0, 14, 0, 0.50741,-0.0125159)    );
  // itree = 48
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72021,-0.000125115) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.525159,-0.00011735) , 
0.412679, 0, 2, 0, 0.67721,-0.176526) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.644915,-0.000116802) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.206634,0.00101504) , 
0.908074, 1, 17, 0, 0.373789,0.113747) , 
0.115548, 0, 15, 0, 0.609427,-0.11168) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.515953,8.67506e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.305653,0.000170181) , 
0.52235, 1, 14, 0, 0.34834,0.143152) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.60748,6.67732e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0483487,0.00241715) , 
0.0232984, 1, 12, 0, 0.0707848,0.400307) , 
0.474378, 0, 14, 0, 0.316521,0.172633) , 
0.309515, 1, 16, 0, 0.497166,-0.00271208)    );
  // itree = 49
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.734741,-0.000139134) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.27172,4.83615e-05) , 
-1.36189, 0, 5, 0, 0.717135,-0.21498) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738199,-0.000455882) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.364186,4.52863e-05) , 
1.67796, 0, 7, 0, 0.438887,0.0613446) , 
0.29624, 0, 1, 0, 0.638818,-0.137205) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.812686,-0.000176348) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128905,0.000295135) , 
0.067569, 0, 15, 0, 0.733029,-0.236824) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.504179,1.4028e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.235256,0.000289038) , 
1.3464, 1, 9, 0, 0.279729,0.207761) , 
2.12179, 0, 7, 0, 0.329064,0.159374) , 
0.709799, 0, 14, 0, 0.471812,0.0226978)    );
  // itree = 50
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.739508,-0.00014317) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.493109,-0.000157487) , 
1.79369, 1, 18, 0, 0.676412,-0.174474) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.517772,-8.11858e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224581,0.000856928) , 
0.985057, 1, 8, 0, 0.435131,0.0647296) , 
0.740007, 0, 7, 0, 0.598249,-0.0969839) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622384,-3.85067e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.230432,0.000498345) , 
1.04808, 0, 18, 0, 0.543094,-0.0567438) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.439298,0.000181199) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192467,0.000374067) , 
0.0461831, 1, 0, 0, 0.274213,0.21107) , 
1.94423, 0, 11, 0, 0.310771,0.174657) , 
0.67165, 0, 14, 0, 0.46948,0.0246918)    );
  // itree = 51
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.877718,-0.00018633) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.675222,-0.000163592) , 
-0.339477, 0, 4, 0, 0.762267,-0.260321) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.598306,-0.000107295) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.302237,0.000616615) , 
0.132299, 0, 15, 0, 0.565006,-0.0642238) , 
0.906031, 1, 17, 0, 0.606093,-0.105068) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575806,1.9671e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234971,0.000377591) , 
0.372128, 1, 3, 0, 0.490761,-0.00352876) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.38198,0.000230861) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125755,0.00103342) , 
2.55063, 0, 9, 0, 0.255361,0.228431) , 
2.09456, 0, 10, 0, 0.32062,0.164125) , 
0.66057, 0, 14, 0, 0.487668,0.00660359)    );
  // itree = 52
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.856256,-0.00023081) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.658632,-0.000183301) , 
0.18022, 0, 15, 0, 0.774383,-0.273) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.618632,-9.11765e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.440717,6.60706e-05) , 
0.717458, 0, 14, 0, 0.547484,-0.048751) , 
1.71925, 0, 7, 0, 0.603282,-0.103898) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.851666,-0.000233377) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0814254,0.00574476) , 
1.1075, 1, 8, 0, 0.750502,-0.259034) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.394116,0.000283298) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.177762,0.000653238) , 
0.357508, 1, 16, 0, 0.282866,0.199357) , 
0.598653, 1, 9, 0, 0.325734,0.157337) , 
0.611391, 0, 14, 0, 0.521151,-0.0265933)    );
  // itree = 53
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.916431,-0.000206631) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.697008,-0.000215097) , 
0.908778, 0, 2, 0, 0.734815,-0.232494) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.577758,-7.28283e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.321594,-4.9234e-05) , 
-0.735324, 0, 3, 0, 0.537832,-0.0373004) , 
0.118583, 1, 16, 0, 0.593454,-0.0924165) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.425168,7.7672e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.213684,0.000407782) , 
0.357026, 1, 16, 0, 0.320606,0.167386) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.267358,0.00453448) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0368976,0.00427651) , 
2.39516, 0, 17, 0, 0.0550083,0.408469) , 
0.0625482, 0, 15, 0, 0.278257,0.205826) , 
0.66057, 0, 14, 0, 0.462933,0.0310842)    );
  // itree = 54
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634557,-0.000125444) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.350738,6.56099e-06) , 
-1.11429, 0, 5, 0, 0.603945,-0.103471) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714505,-9.07876e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.23767,1.08916e-05) , 
0.642129, 0, 1, 0, 0.380655,0.118222) , 
0.0819633, 1, 0, 0, 0.566718,-0.0665097) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.592981,-1.11451e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318467,0.000267618) , 
1.04168, 1, 17, 0, 0.368741,0.120235) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.391114,0.000310754) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0899401,0.00118711) , 
0.776592, 1, 17, 0, 0.117691,0.35337) , 
0.0909793, 0, 15, 0, 0.27917,0.203414) , 
0.636325, 0, 14, 0, 0.463377,0.030497)    );
  // itree = 55
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688942,-0.000139854) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.466901,-2.40304e-05) , 
0.315628, 1, 16, 0, 0.639338,-0.139338) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.533371,-3.59475e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.324095,0.000362472) , 
0.985011, 1, 8, 0, 0.455785,0.0406788) , 
0.711272, 0, 7, 0, 0.566412,-0.067817) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.861433,-0.000193468) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.437652,-0.000281557) , 
0.818561, 0, 2, 0, 0.652615,-0.15789) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.774742,-0.000300201) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163845,0.000714547) , 
3.61588, 0, 8, 0, 0.178793,0.299827) , 
0.0865503, 1, 16, 0, 0.230492,0.249885) , 
0.115897, 0, 15, 0, 0.4818,0.0122061)    );
  // itree = 56
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.713381,-0.000127288) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.364882,0.000104933) , 
0.122945, 1, 0, 0, 0.683876,-0.182193) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612961,-0.000179375) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.24664,0.00051884) , 
0.14447, 1, 16, 0, 0.404488,0.0944191) , 
0.304019, 0, 2, 0, 0.650551,-0.149199) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.63646,-1.53248e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.287197,0.000245025) , 
-0.866493, 1, 4, 0, 0.395803,0.0945368) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.359509,0.000370696) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0851009,0.000622032) , 
1.93174, 0, 17, 0, 0.174095,0.30109) , 
0.118166, 0, 15, 0, 0.285256,0.197527) , 
0.659385, 0, 14, 0, 0.512615,-0.0182743)    );
  // itree = 57
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.795221,-0.000200091) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.540994,-0.000122702) , 
0.293382, 0, 1, 0, 0.690107,-0.18786) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.593141,-8.57866e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322222,9.89442e-05) , 
0.557263, 0, 2, 0, 0.496045,0.00294618) , 
0.786892, 0, 14, 0, 0.574178,-0.0738762) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.581795,2.03424e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0404921,0.000638639) , 
0.571281, 0, 2, 0, 0.49802,-0.0148884) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.343798,0.000235006) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.131365,0.0008287) , 
0.35644, 1, 16, 0, 0.237938,0.243174) , 
2.39359, 0, 10, 0, 0.281707,0.199745) , 
0.636907, 0, 14, 0, 0.467464,0.0259605)    );
  // itree = 58
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.752577,-0.000129084) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.386436,-0.000128636) , 
0.152282, 0, 15, 0, 0.713461,-0.210828) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.577492,-0.000127614) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.241069,0.00018702) , 
0.764286, 0, 14, 0, 0.51443,-0.0136776) , 
0.449444, 0, 2, 0, 0.634974,-0.133082) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.902688,-0.000215876) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.313066,0.00138443) , 
0.907673, 1, 8, 0, 0.768849,-0.276375) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655997,-0.00014016) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.267365,0.00031615) , 
2.10388, 0, 7, 0, 0.300202,0.184765) , 
0.59849, 1, 9, 0, 0.336347,0.149199) , 
0.695075, 0, 14, 0, 0.483951,0.00967389)    );
  // itree = 59
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.743042,-0.000141167) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.441847,5.95344e-05) , 
0.110458, 0, 15, 0, 0.712573,-0.210846) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.515919,-5.12711e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.105476,0.00158731) , 
0.139913, 0, 15, 0, 0.468646,0.0298435) , 
0.276253, 1, 16, 0, 0.637635,-0.136903) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.789352,-6.60166e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.298263,0.000453141) , 
0.0983263, 0, 6, 0, 0.333061,0.149871) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.813006,-0.000217297) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0563317,0.00052165) , 
0.805332, 0, 16, 0, 0.0930536,0.384971) , 
0.230916, 1, 0, 0, 0.280825,0.201039) , 
0.636319, 0, 14, 0, 0.522173,-0.0275463)    );
  // itree = 60
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677091,-0.000122685) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209522,0.000249715) , 
0.21122, 0, 2, 0, 0.66184,-0.159389) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.77805,-0.000245482) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.243654,0.000598013) , 
0.0718205, 1, 16, 0, 0.414252,0.0821053) , 
0.134232, 0, 15, 0, 0.630647,-0.128964) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.43839,0.000125166) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.122692,0.00332334) , 
0.0621049, 0, 15, 0, 0.393659,0.0911438) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.562268,-5.14812e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.122246,0.000658736) , 
0.242955, 0, 6, 0, 0.158528,0.322575) , 
0.480303, 1, 16, 0, 0.335818,0.148074) , 
0.671908, 0, 14, 0, 0.503168,-0.00917775)    );
  // itree = 61
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744392,-0.0001281) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.435997,-3.87477e-05) , 
0.382521, 1, 16, 0, 0.706914,-0.204498) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.560542,-9.31474e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257544,0.000231985) , 
0.490585, 0, 7, 0, 0.476827,0.0231498) , 
0.299065, 0, 1, 0, 0.648529,-0.146731) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.642084,-8.10547e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.387984,0.000251048) , 
0.632742, 0, 14, 0, 0.459712,0.0254854) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.411775,0.0002264) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134019,0.00072948) , 
0.17361, 0, 15, 0, 0.238589,0.243525) , 
0.876583, 0, 7, 0, 0.344605,0.138987) , 
0.671644, 0, 14, 0, 0.518128,-0.0241417)    );
  // itree = 62
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.865575,-0.000248346) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.283013,-0.000125204) , 
0.0727122, 0, 15, 0, 0.842204,-0.339607) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.610544,-0.000101689) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.33321,6.86384e-05) , 
0.690636, 0, 14, 0, 0.561584,-0.0611128) , 
2.22004, 0, 7, 0, 0.601871,-0.101095) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558237,7.04582e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229099,0.000751278) , 
1.79543, 0, 10, 0, 0.384072,0.0978908) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.328114,0.000263515) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0614789,0.000978514) , 
0.35028, 1, 16, 0, 0.194968,0.284037) , 
1.49444, 1, 18, 0, 0.296364,0.184226) , 
0.642489, 0, 14, 0, 0.492256,0.00127817)    );
  // itree = 63
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.678496,-0.000135197) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.420822,-2.8358e-05) , 
-1.11424, 0, 5, 0, 0.652025,-0.15083) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.480474,1.50355e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128753,0.00205321) , 
0.139366, 0, 7, 0, 0.448869,0.0455488) , 
0.302746, 1, 16, 0, 0.570525,-0.072049) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.907174,-9.06406e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229107,0.000527772) , 
2.14422, 1, 10, 0, 0.502946,-0.0217355) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.407403,4.17061e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.100555,0.00151036) , 
1.04803, 1, 17, 0, 0.180339,0.296796) , 
2.09435, 0, 10, 0, 0.275652,0.202688) , 
0.115897, 0, 15, 0, 0.493041,0.000143896)    );
  // itree = 64
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.794114,-0.000160027) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.634697,-0.000110478) , 
1.06676, 1, 17, 0, 0.684653,-0.182189) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.843758,-0.00282289) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.123713,0.000308187) , 
2.04403, 0, 7, 0, 0.161509,0.336807) , 
0.211223, 0, 2, 0, 0.665269,-0.162958) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.632248,-1.12081e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.185899,0.000176712) , 
0.458351, 0, 7, 0, 0.559889,-0.0722839) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.517135,4.61403e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199815,0.000537492) , 
0.171585, 0, 15, 0, 0.328926,0.156681) , 
2.09436, 0, 10, 0, 0.393108,0.0930539) , 
0.708182, 0, 14, 0, 0.517978,-0.0244071)    );
  // itree = 65
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707505,-0.000139665) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378241,-6.05019e-05) , 
0.125947, 0, 15, 0, 0.685128,-0.182312) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670453,-0.000161254) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.300942,0.000515428) , 
0.880208, 0, 14, 0, 0.473318,0.0261712) , 
0.311736, 0, 2, 0, 0.647027,-0.14481) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.436622,-2.35577e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154643,0.000632215) , 
0.230916, 1, 0, 0, 0.389665,0.103101) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.570105,0.000112474) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0981892,0.000708127) , 
2.65169, 0, 8, 0, 0.150249,0.324313) , 
0.116291, 0, 15, 0, 0.290604,0.19463) , 
0.706898, 0, 14, 0, 0.464945,0.0285963)    );
  // itree = 66
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735179,-0.00014009) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.280134,-4.85189e-05) , 
0.1277, 0, 15, 0, 0.707101,-0.204111) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.618726,-0.000124634) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.296672,0.000214794) , 
0.726649, 0, 7, 0, 0.489246,0.0110237) , 
0.357681, 0, 2, 0, 0.656104,-0.153751) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.851294,-0.000240132) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.432304,-3.2312e-05) , 
0.0182179, 1, 0, 0, 0.705997,-0.212957) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.517684,-1.44723e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.219835,0.000372438) , 
0.306045, 0, 15, 0, 0.267266,0.215932) , 
2.08397, 0, 7, 0, 0.310693,0.173478) , 
0.697055, 0, 14, 0, 0.487687,0.0058013)    );
  // itree = 67
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.681654,-0.000125592) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.488947,-2.13645e-06) , 
0.702842, 0, 7, 0, 0.611877,-0.112654) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67137,-0.00014246) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152597,0.000367715) , 
0.242802, 0, 6, 0, 0.214365,0.274656) , 
0.227398, 1, 0, 0, 0.582273,-0.0838097) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.625141,-0.000153205) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0862891,0.000376432) , 
0.071227, 1, 0, 0, 0.52599,-0.0404962) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.359967,0.00026709) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.109635,0.00164512) , 
0.734756, 1, 8, 0, 0.219352,0.256673) , 
0.90688, 1, 17, 0, 0.278685,0.199172) , 
0.11583, 0, 15, 0, 0.504062,-0.0109078)    );
  // itree = 68
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.763983,-0.000139147) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.541539,-0.00011432) , 
0.449437, 0, 2, 0, 0.698303,-0.195696) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.773173,-8.70923e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.429509,7.91954e-06) , 
1.03614, 1, 17, 0, 0.479623,0.0197966) , 
0.276186, 1, 16, 0, 0.63242,-0.130774) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.481991,9.51581e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239859,0.000441403) , 
0.936844, 1, 8, 0, 0.368567,0.115657) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.138774,0.000313099) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0254623,0.00414433) , 
0.100978, 0, 15, 0, 0.0562905,0.409364) , 
0.493042, 0, 14, 0, 0.314291,0.166706) , 
0.659385, 0, 14, 0, 0.504987,-0.0116122)    );
  // itree = 69
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.876104,-0.000185425) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.648155,-0.000288076) , 
0.636637, 0, 2, 0, 0.76693,-0.263785) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.601463,-8.82556e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.262505,0.00036546) , 
0.304007, 0, 2, 0, 0.561324,-0.0602825) , 
0.115342, 1, 16, 0, 0.619082,-0.11745) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.450408,0.000152597) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.150533,0.000859054) , 
0.463168, 0, 7, 0, 0.388652,0.0934351) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.327146,0.00243291) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0635251,0.000597776) , 
0.280163, 0, 15, 0, 0.107751,0.369067) , 
0.489368, 1, 16, 0, 0.325799,0.15511) , 
0.66057, 0, 14, 0, 0.498294,-0.00519668)    );
  // itree = 70
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.826927,-0.000248651) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.262972,-0.000175705) , 
0.690319, 0, 14, 0, 0.800015,-0.295803) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.593756,-9.5904e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.274701,0.000358038) , 
0.136723, 0, 15, 0, 0.553582,-0.0526176) , 
1.95319, 0, 7, 0, 0.602797,-0.101184) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.88477,-0.000245112) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0864376,-8.30545e-05) , 
1.37498, 0, 8, 0, 0.760424,-0.271059) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.272007,0.000268387) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.102936,0.000501196) , 
0.357921, 1, 16, 0, 0.186939,0.291744) , 
0.616699, 1, 17, 0, 0.218849,0.260429) , 
0.659126, 0, 14, 0, 0.456205,0.0368801)    );
  // itree = 71
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.775966,-0.000123928) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.559363,-8.70077e-05) , 
1.1964, 1, 11, 0, 0.732496,-0.229605) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.585228,-0.000125675) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.280338,0.000196009) , 
0.764781, 0, 14, 0, 0.512997,-0.0124016) , 
0.45497, 0, 2, 0, 0.656047,-0.153956) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.821324,-0.0001204) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34941,0.000139948) , 
0.233886, 0, 6, 0, 0.373958,0.1143) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615095,-0.000272601) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.144734,0.00105825) , 
0.0871152, 1, 16, 0, 0.172897,0.294226) , 
0.0909793, 0, 15, 0, 0.307498,0.173774) , 
0.675948, 0, 14, 0, 0.510494,-0.0170966)    );
  // itree = 72
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.844089,-0.000133446) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.663375,-0.000219181) , 
0.303634, 0, 15, 0, 0.742102,-0.238657) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647803,-0.000128395) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.411075,-6.93563e-06) , 
0.788217, 0, 14, 0, 0.522464,-0.0216626) , 
1.23339, 0, 7, 0, 0.619159,-0.117194) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731383,-0.000168283) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0677336,0.0122839) , 
2.24438, 1, 18, 0, 0.649156,-0.161133) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.512431,0.000107855) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.223765,0.000342282) , 
2.16712, 0, 8, 0, 0.276463,0.203847) , 
2.39322, 0, 11, 0, 0.301602,0.179228) , 
0.671644, 0, 14, 0, 0.481518,0.0112869)    );
  // itree = 73
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.785138,-0.000230396) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.250782,0.000109356) , 
0.688154, 0, 14, 0, 0.769824,-0.265514) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.605452,-9.13309e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279954,0.000319343) , 
0.1346, 0, 15, 0, 0.571111,-0.0698099) , 
1.72668, 0, 7, 0, 0.620417,-0.118369) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.495105,5.72244e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159267,0.000292985) , 
1.78735, 1, 18, 0, 0.392532,0.095598) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.473638,0.000212785) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0923559,0.00101897) , 
2.10401, 0, 7, 0, 0.128509,0.335777) , 
0.0898002, 0, 15, 0, 0.312275,0.168607) , 
0.673093, 0, 14, 0, 0.484856,0.00788035)    );
  // itree = 74
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719265,-0.000125234) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.518084,-6.42414e-05) , 
0.164203, 0, 15, 0, 0.663117,-0.161948) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.489272,1.57411e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172405,0.000171058) , 
0.365131, 0, 2, 0, 0.424844,0.0717747) , 
0.325299, 1, 16, 0, 0.606264,-0.106181) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.807472,-0.000100351) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.356193,0.000233082) , 
2.14435, 1, 10, 0, 0.458783,0.0214261) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.367658,0.000173029) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.151758,0.000823221) , 
1.08876, 1, 17, 0, 0.195625,0.279529) , 
2.09442, 0, 10, 0, 0.272539,0.204093) , 
0.622998, 0, 14, 0, 0.503731,-0.0108537)    );
  // itree = 75
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745346,-0.000140554) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.411927,-1.00331e-05) , 
0.106645, 1, 0, 0, 0.714338,-0.210833) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.573684,-0.000109226) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.141301,0.000347559) , 
0.326764, 1, 16, 0, 0.488714,0.0115635) , 
0.363247, 0, 2, 0, 0.660754,-0.158015) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.849931,-0.000178485) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.130155,0.000490157) , 
0.602605, 0, 14, 0, 0.749236,-0.255665) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.355272,0.00014499) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.101012,0.00107727) , 
0.0915319, 0, 15, 0, 0.281596,0.200016) , 
2.08401, 0, 7, 0, 0.335438,0.14755) , 
0.697055, 0, 14, 0, 0.502914,-0.00975837)    );
  // itree = 76
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761898,-0.000116457) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.490286,-0.000130591) , 
2.88514, 1, 9, 0, 0.721924,-0.218986) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.823019,-0.000334511) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.441888,-7.54266e-05) , 
2.19568, 0, 7, 0, 0.508625,-0.00628357) , 
2.24398, 0, 9, 0, 0.652071,-0.149328) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.598597,3.26176e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.302574,7.97597e-05) , 
2.54319, 1, 9, 0, 0.525729,-0.0391115) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.522126,-4.3768e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212097,0.000489235) , 
1.94468, 0, 11, 0, 0.249587,0.231228) , 
0.935106, 0, 7, 0, 0.383338,0.100287) , 
0.708182, 0, 14, 0, 0.505197,-0.0129027)    );
  // itree = 77
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727945,-0.000124974) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.470198,7.52618e-05) , 
0.106777, 1, 0, 0, 0.694829,-0.192328) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764257,-0.000215396) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.477969,9.29917e-06) , 
2.54311, 0, 10, 0, 0.519735,-0.0192345) , 
0.452704, 0, 2, 0, 0.631004,-0.129233) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.786394,-0.000117249) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.216019,0.000208887) , 
2.69278, 0, 9, 0, 0.554387,-0.0702125) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.327159,0.000224566) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.085919,0.000995036) , 
0.0922641, 0, 15, 0, 0.249382,0.228554) , 
1.63649, 0, 7, 0, 0.299581,0.179382) , 
0.659385, 0, 14, 0, 0.500052,-0.00729312)    );
  // itree = 78
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694597,-0.000121945) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.395148,6.47739e-05) , 
0.319785, 0, 2, 0, 0.658385,-0.155917) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.608479,-0.00014592) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279974,0.000301907) , 
0.59839, 1, 10, 0, 0.402697,0.0893622) , 
0.138103, 0, 15, 0, 0.618769,-0.117914) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.63306,2.83422e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0979631,0.00201278) , 
0.341744, 1, 16, 0, 0.466834,0.011493) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.611459,-0.000124224) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.1774,0.000486996) , 
0.5984, 1, 9, 0, 0.209417,0.267166) , 
0.748069, 1, 10, 0, 0.288396,0.188722) , 
0.637994, 0, 14, 0, 0.508241,-0.0153276)    );
  // itree = 79
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689772,-0.000133747) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.330042,8.11624e-05) , 
0.112698, 1, 0, 0, 0.654635,-0.15179) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.784367,-0.000559543) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.321734,0.000111162) , 
1.92196, 0, 7, 0, 0.377607,0.12198) , 
0.350411, 0, 2, 0, 0.599399,-0.0972036) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.985925,-0.000217266) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.342674,0.00023238) , 
0.955542, 0, 2, 0, 0.874101,-0.379999) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.326708,0.000152052) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.114592,0.000962727) , 
0.0898002, 0, 15, 0, 0.258973,0.219995) , 
-2.1037, 1, 3, 0, 0.280082,0.199405) , 
0.676721, 0, 14, 0, 0.457459,0.0346423)    );
  // itree = 80
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69703,-0.000127283) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.410959,-7.59366e-05) , 
-1.11429, 0, 5, 0, 0.67147,-0.170014) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.882275,-0.000244498) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.304053,0.000478909) , 
0.461056, 1, 17, 0, 0.370327,0.110962) , 
0.116474, 0, 15, 0, 0.603469,-0.106567) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645716,-9.0888e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.101767,0.000367539) , 
0.746583, 1, 2, 0, 0.495956,-0.0110361) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.399409,0.000167775) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.179207,0.000448963) , 
-0.484689, 1, 4, 0, 0.26291,0.221018) , 
0.975468, 0, 7, 0, 0.331219,0.152999) , 
0.30858, 1, 16, 0, 0.498681,-0.00666129)    );
  // itree = 81
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.938273,-0.000105764) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.674505,-0.000158987) , 
0.451024, 0, 15, 0, 0.735528,-0.23466) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.819558,-0.000124549) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.509022,-3.87548e-05) , 
0.907066, 0, 2, 0, 0.557116,-0.0578503) , 
1.2023, 1, 17, 0, 0.625357,-0.125479) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.503793,5.84175e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.217869,0.000712181) , 
0.4326, 1, 4, 0, 0.377227,0.100784) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558472,-8.50612e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128991,0.000549895) , 
2.10466, 0, 5, 0, 0.153254,0.320332) , 
1.79166, 0, 17, 0, 0.242051,0.233289) , 
0.622998, 0, 14, 0, 0.515313,-0.022479)    );
  // itree = 82
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.828662,-0.000272969) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.664463,-0.000122233) , 
0.0738517, 1, 16, 0, 0.701821,-0.199877) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.641987,-5.86607e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.398783,-4.04069e-06) , 
0.628718, 0, 2, 0, 0.492597,0.00667404) , 
0.981101, 0, 7, 0, 0.604109,-0.103413) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.915885,-0.000156589) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.40087,0.000175919) , 
0.351664, 1, 14, 0, 0.432895,0.0448251) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.810713,-0.000137193) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.176684,0.000559167) , 
2.3522, 0, 5, 0, 0.201118,0.2728) , 
1.4958, 0, 11, 0, 0.277247,0.19792) , 
0.636914, 0, 14, 0, 0.491125,0.000746061)    );
  // itree = 83
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721315,-0.000125579) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.504297,-3.77029e-05) , 
0.293382, 0, 1, 0, 0.663161,-0.160856) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692797,-0.000135316) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198448,0.000290473) , 
1.10315, 1, 17, 0, 0.317567,0.181434) , 
0.112698, 1, 0, 0, 0.632348,-0.130337) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.822641,-0.000286985) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0803573,0.000856355) , 
0.12015, 0, 15, 0, 0.670378,-0.187178) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.487916,0.000233799) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.244982,0.000347406) , 
0.349146, 1, 13, 0, 0.280628,0.196369) , 
2.10459, 0, 5, 0, 0.301128,0.176195) , 
0.659385, 0, 14, 0, 0.500741,-0.00853944)    );
  // itree = 84
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.771229,-0.000226473) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.59822,-8.46951e-05) , 
1.82211, 0, 7, 0, 0.649756,-0.147176) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.577173,-9.05571e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.258692,6.38722e-05) , 
0.541027, 0, 2, 0, 0.402984,0.0968973) , 
0.490593, 0, 7, 0, 0.597318,-0.0953108) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.805814,-0.0002743) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.343618,0.000119734) , 
2.63821, 0, 7, 0, 0.375963,0.102925) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692119,0.000115318) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.132297,0.000578621) , 
0.861537, 0, 1, 0, 0.162303,0.312731) , 
0.93507, 0, 7, 0, 0.250786,0.225844) , 
0.659385, 0, 14, 0, 0.459351,0.0325523)    );
  // itree = 85
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.783578,-0.000204774) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.605535,-0.000100866) , 
0.15345, 1, 16, 0, 0.684706,-0.18082) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.517895,-7.95515e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159112,0.000435565) , 
0.794354, 0, 14, 0, 0.435798,0.0640445) , 
0.350417, 0, 2, 0, 0.629257,-0.126272) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.44478,6.22414e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.137698,0.000218192) , 
0.0786925, 1, 6, 0, 0.389796,0.0983705) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.543213,2.10854e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127403,0.00114365) , 
0.349901, 0, 12, 0, 0.158714,0.303891) , 
0.0899738, 0, 15, 0, 0.322553,0.158175) , 
0.697055, 0, 14, 0, 0.473458,0.0182207)    );
  // itree = 86
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.805399,-0.00023637) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.397637,-7.24457e-05) , 
0.558255, 0, 13, 0, 0.759237,-0.25476) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.75412,-0.000148503) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.511187,-5.16326e-05) , 
0.244094, 1, 8, 0, 0.571977,-0.0706622) , 
1.72672, 0, 7, 0, 0.616042,-0.113983) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.586919,-3.39281e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306702,0.000222681) , 
1.04699, 1, 11, 0, 0.474769,0.00602495) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.414774,0.000152013) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.133992,0.000630198) , 
0.451416, 1, 13, 0, 0.219266,0.256151) , 
1.31501, 0, 7, 0, 0.285645,0.191169) , 
0.66057, 0, 14, 0, 0.48398,0.00798842)    );
  // itree = 87
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.658056,-0.000114976) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.472015,6.28887e-05) , 
0.13624, 0, 15, 0, 0.625184,-0.124355) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.188739,1.35656e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0467022,0.0077278) , 
0.891599, 1, 11, 0, 0.104461,0.38988) , 
0.574726, 1, 16, 0, 0.612654,-0.111981) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692466,-3.90738e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.331324,0.000387407) , 
1.79208, 0, 9, 0, 0.506185,-0.0264545) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.618623,9.05172e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.173563,0.000717061) , 
0.775852, 0, 1, 0, 0.226706,0.246742) , 
2.09435, 0, 10, 0, 0.312049,0.163318) , 
0.636319, 0, 14, 0, 0.507081,-0.0152954)    );
  // itree = 88
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7859,-0.000127099) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.576189,-0.000135305) , 
-0.618736, 0, 3, 0, 0.750583,-0.246479) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670496,-0.000212611) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.42473,-4.9789e-05) , 
0.864051, 0, 14, 0, 0.50883,-0.00700807) , 
0.355567, 0, 1, 0, 0.649154,-0.146007) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612967,-3.90923e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.25957,0.000419593) , 
-0.703634, 1, 4, 0, 0.485458,-7.27522e-05) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.483547,0.000138301) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180667,0.000269074) , 
0.360752, 0, 15, 0, 0.22627,0.25298) , 
1.20348, 1, 17, 0, 0.309534,0.171687) , 
0.704811, 0, 14, 0, 0.476756,0.0152614)    );
  // itree = 89
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689478,-0.000118726) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.373413,0.000223814) , 
0.110676, 0, 15, 0, 0.663425,-0.162022) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.625389,-0.000171183) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.297727,0.00036094) , 
0.869843, 0, 14, 0, 0.426891,0.0719244) , 
0.350417, 0, 2, 0, 0.621814,-0.120867) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.78031,-0.000124165) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157709,0.0100284) , 
0.565299, 1, 2, 0, 0.617124,-0.139907) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.350324,0.000250195) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.150426,0.00058573) , 
0.357508, 1, 16, 0, 0.248034,0.226031) , 
2.64875, 0, 8, 0, 0.283027,0.191336) , 
0.63667, 0, 14, 0, 0.507768,-0.0157697)    );
  // itree = 90
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720821,-0.00012618) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.547399,-0.000110998) , 
-0.371469, 0, 5, 0, 0.674327,-0.172487) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.495897,5.25709e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.110995,0.000189973) , 
0.159589, 0, 15, 0, 0.434615,0.0578342) , 
0.31021, 1, 16, 0, 0.586975,-0.0885564) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.950861,-0.000223009) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34274,0.00150354) , 
0.869173, 0, 2, 0, 0.786099,-0.296822) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.368874,6.5793e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.122487,0.000914909) , 
1.05785, 1, 17, 0, 0.187528,0.282985) , 
-1.85666, 1, 3, 0, 0.23586,0.236168) , 
0.11583, 0, 15, 0, 0.502713,-0.0106284)    );
  // itree = 91
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.698274,-0.000149796) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.133879,3.80361e-05) , 
0.366984, 0, 13, 0, 0.68746,-0.185466) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672514,-0.000136232) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.368546,2.0728e-05) , 
0.784363, 0, 14, 0, 0.506673,-0.00740215) , 
0.97586, 0, 7, 0, 0.601203,-0.100509) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.383411,0.000149934) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160335,0.00153362) , 
0.0904962, 0, 15, 0, 0.301298,0.173586) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.579998,0.0042394) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0547993,0.000500736) , 
2.98941, 0, 10, 0, 0.0669977,0.401977) , 
0.277099, 1, 0, 0, 0.262639,0.21127) , 
0.637994, 0, 14, 0, 0.482026,0.00923996)    );
  // itree = 92
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.834002,-0.000155599) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.634122,-0.000103473) , 
1.05974, 1, 17, 0, 0.699097,-0.195643) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.757407,-0.000226878) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.421596,-6.19758e-05) , 
2.24398, 0, 11, 0, 0.51682,-0.0143466) , 
1.04719, 1, 11, 0, 0.639833,-0.136697) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.800595,-0.00017398) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.050377,0.0171088) , 
0.442659, 0, 2, 0, 0.737241,-0.249031) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.352689,0.000147601) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.13778,0.000545762) , 
0.471507, 0, 7, 0, 0.288962,0.189535) , 
0.598413, 1, 9, 0, 0.319916,0.159252) , 
0.697055, 0, 14, 0, 0.481031,0.0102079)    );
  // itree = 93
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767883,-0.000133256) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.414736,-0.000114172) , 
0.130559, 0, 15, 0, 0.746088,-0.241767) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.734544,-0.000240542) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.362453,0.000111445) , 
0.115375, 1, 16, 0, 0.52398,-0.0229047) , 
0.295902, 0, 1, 0, 0.6864,-0.182952) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.525822,0.000110621) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.334624,0.000162755) , 
2.09439, 1, 9, 0, 0.42058,0.0635656) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.27778,0.000700853) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.063809,0.00580571) , 
1.8527, 0, 7, 0, 0.096091,0.353634) , 
0.0622596, 0, 15, 0, 0.380322,0.0995535) , 
0.697055, 0, 14, 0, 0.537478,-0.0454994)    );
  // itree = 94
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.807299,-0.000137286) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.624712,-0.000124693) , 
1.48221, 1, 17, 0, 0.740726,-0.236582) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575068,-0.000142796) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.278228,0.000419579) , 
0.808254, 0, 14, 0, 0.476964,0.0241078) , 
0.30581, 0, 1, 0, 0.666991,-0.163706) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645515,2.22543e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.362839,0.000103337) , 
0.448725, 1, 10, 0, 0.41927,0.0679606) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.568528,5.32857e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118309,0.00130414) , 
2.67741, 0, 8, 0, 0.168992,0.290675) , 
0.0900775, 0, 15, 0, 0.348454,0.130978) , 
0.697055, 0, 14, 0, 0.510646,-0.0190692)    );
  // itree = 95
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689243,-0.000110819) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.140605,0.00658568) , 
0.536384, 1, 16, 0, 0.671742,-0.169971) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.739745,-0.000218604) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340705,-1.70259e-05) , 
2.69276, 0, 10, 0, 0.382093,0.116822) , 
0.311451, 0, 1, 0, 0.600799,-0.0997283) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.93604,-0.000327369) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.395435,0.00209931) , 
0.191572, 1, 16, 0, 0.593932,-0.108573) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.428605,0.000159942) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165855,0.00041723) , 
2.54317, 0, 10, 0, 0.199395,0.270945) , 
0.471329, 0, 15, 0, 0.220246,0.250888) , 
0.63667, 0, 14, 0, 0.475177,0.0160118)    );
  // itree = 96
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.768613,-0.00015128) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.539498,-0.000122564) , 
0.164013, 0, 15, 0, 0.70306,-0.201585) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655304,-0.000123773) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.361583,3.74067e-05) , 
0.775652, 0, 14, 0, 0.489669,0.00858916) , 
0.986691, 0, 7, 0, 0.603641,-0.103665) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.876186,-0.000210194) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.116959,4.5009e-05) , 
0.399329, 0, 9, 0, 0.72344,-0.2407) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.437085,0.000322563) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.205462,0.000442425) , 
0.0454348, 1, 0, 0, 0.267738,0.203872) , 
0.59885, 1, 9, 0, 0.299288,0.173092) , 
0.622762, 0, 14, 0, 0.505718,-0.0146208)    );
  // itree = 97
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.78518,-0.000155937) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.597046,-8.185e-05) , 
0.014249, 1, 6, 0, 0.70673,-0.203274) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.554168,-0.000186789) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.303853,0.000297533) , 
0.879487, 0, 14, 0, 0.378458,0.120685) , 
0.357663, 0, 2, 0, 0.649506,-0.146802) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760562,-0.000173372) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0965967,0.011606) , 
2.23924, 1, 18, 0, 0.670925,-0.187371) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.432467,0.000134611) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209578,0.000450722) , 
0.172148, 0, 15, 0, 0.277179,0.196714) , 
2.3932, 0, 11, 0, 0.30322,0.171311) , 
0.66057, 0, 14, 0, 0.515102,-0.0233324)    );
  // itree = 98
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.737836,-0.00015854) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.553987,-6.47156e-05) , 
0.969354, 0, 7, 0, 0.646789,-0.144147) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.610911,-0.000179818) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.267833,0.000401454) , 
0.912446, 1, 17, 0, 0.372202,0.118252) , 
0.136289, 0, 15, 0, 0.605384,-0.10458) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742664,-8.97562e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.246484,0.000226564) , 
0.688208, 1, 8, 0, 0.552976,-0.0760066) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.356046,0.000411675) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.044833,0.000588166) , 
0.18173, 1, 0, 0, 0.272936,0.199055) , 
2.39352, 0, 10, 0, 0.327461,0.145499) , 
0.637994, 0, 14, 0, 0.506614,-0.0157051)    );
  // itree = 99
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749135,-0.000140122) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.557841,-6.64672e-05) , 
0.277334, 1, 16, 0, 0.69609,-0.192603) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628903,-0.000185411) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.350744,0.000310271) , 
0.863927, 0, 14, 0, 0.469397,0.0301208) , 
0.363247, 0, 2, 0, 0.645457,-0.142856) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.465038,8.6346e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249515,0.000555202) , 
0.456924, 0, 7, 0, 0.403071,0.0782637) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.253186,0.00681108) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0372918,0.00425433) , 
0.357252, 0, 12, 0, 0.044698,0.399679) , 
0.0639183, 0, 15, 0, 0.352486,0.123632) , 
0.669886, 0, 14, 0, 0.519995,-0.0287353)    );
  // itree = 100
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735849,-0.000133416) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.570965,-9.17366e-05) , 
0.449437, 0, 2, 0, 0.670915,-0.167006) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.932657,-0.000293712) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.284839,4.29299e-06) , 
1.19097, 0, 3, 0, 0.32034,0.177919) , 
0.419927, 1, 16, 0, 0.638965,-0.135571) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.625059,-1.2422e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.156494,0.00051961) , 
0.899895, 0, 18, 0, 0.565053,-0.082909) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.37474,0.000147184) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.135782,0.000698965) , 
0.383342, 1, 16, 0, 0.283496,0.193512) , 
2.09445, 0, 10, 0, 0.366727,0.111798) , 
0.697055, 0, 14, 0, 0.49858,-0.00801033)    );
  // itree = 101
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.770383,-0.000119891) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.498442,-5.92819e-05) , 
0.45723, 0, 2, 0, 0.696778,-0.194005) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.484518,-3.25866e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.206721,0.000111067) , 
0.699816, 0, 14, 0, 0.394491,0.101773) , 
0.349561, 1, 16, 0, 0.645019,-0.14336) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.45653,0.000167079) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192728,0.000803986) , 
1.79516, 1, 18, 0, 0.367098,0.105679) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.734608,-0.000129809) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128063,0.000497449) , 
0.785113, 0, 0, 0, 0.145831,0.322635) , 
0.401222, 1, 16, 0, 0.279381,0.191687) , 
0.635913, 0, 14, 0, 0.527465,-0.0356409)    );
  // itree = 102
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.814141,-0.000201503) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.593241,-0.00025439) , 
-0.619023, 0, 3, 0, 0.772544,-0.266974) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.650079,-0.000109996) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.410743,1.90144e-05) , 
0.310087, 0, 1, 0, 0.570847,-0.0681967) , 
0.115375, 1, 16, 0, 0.637576,-0.13396) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.726365,-2.95718e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271396,0.000195647) , 
1.49516, 1, 18, 0, 0.591851,-0.113682) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.405141,4.88539e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180163,0.000418669) , 
0.311454, 1, 16, 0, 0.284316,0.193732) , 
2.39357, 0, 10, 0, 0.338696,0.139374) , 
0.706898, 0, 14, 0, 0.477305,0.012612)    );
  // itree = 103
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.813612,-0.000237439) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0446053,0.034102) , 
0.581083, 0, 14, 0, 0.799378,-0.296744) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.580402,-9.99743e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.392114,0.000141964) , 
0.698514, 0, 14, 0, 0.488591,0.0061163) , 
1.93872, 0, 7, 0, 0.537017,-0.0410743) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769732,-0.000249044) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.404306,0.000544284) , 
-0.619603, 1, 5, 0, 0.576346,-0.0895014) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.360707,0.000136861) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.10434,0.00143341) , 
0.24428, 1, 8, 0, 0.144745,0.31339) , 
0.0801208, 1, 16, 0, 0.176603,0.283651) , 
0.0905444, 0, 15, 0, 0.477603,0.0124566)    );
  // itree = 104
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.939971,-0.000188707) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.725881,-0.000246976) , 
0.910414, 0, 2, 0, 0.803026,-0.298264) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.626191,-9.06868e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.298737,0.000366045) , 
0.140153, 0, 15, 0, 0.58153,-0.0809158) , 
1.9622, 0, 7, 0, 0.620862,-0.119511) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.588468,-3.06685e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.3105,0.000300169) , 
1.2815, 0, 7, 0, 0.380601,0.100205) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.425951,0.000214095) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0836735,0.00121522) , 
1.94453, 0, 11, 0, 0.131416,0.320361) , 
0.0900775, 0, 15, 0, 0.293538,0.177126) , 
0.638, 0, 14, 0, 0.508919,-0.018063)    );
  // itree = 105
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.863693,-0.000228832) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.361632,-0.000288226) , 
1.60922, 1, 4, 0, 0.835742,-0.330647) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.607175,-9.25678e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.232951,0.00087979) , 
0.114046, 0, 15, 0, 0.574982,-0.0742204) , 
2.2075, 0, 7, 0, 0.611548,-0.110179) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653503,-4.96484e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.098657,0.000417886) , 
0.0818112, 1, 0, 0, 0.550049,-0.0747565) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.450491,5.39807e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.166763,0.000534137) , 
2.39354, 0, 10, 0, 0.216352,0.252553) , 
1.62093, 0, 7, 0, 0.273897,0.19611) , 
0.63667, 0, 14, 0, 0.496224,-0.00556592)    );
  // itree = 106
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.758933,-0.000159353) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.553385,-9.48913e-05) , 
0.0352815, 1, 0, 0, 0.692504,-0.187648) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.642302,-0.000170163) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.425972,8.94777e-05) , 
0.406754, 0, 12, 0, 0.514673,-0.0133942) , 
0.29624, 0, 1, 0, 0.635004,-0.131305) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.586092,8.19628e-07) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.343902,0.000164789) , 
0.913034, 0, 2, 0, 0.389332,0.0905435) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.460958,-1.52695e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.105555,0.000632799) , 
2.39293, 0, 10, 0, 0.167826,0.303088) , 
0.474571, 1, 16, 0, 0.339442,0.138415) , 
0.708187, 0, 14, 0, 0.475598,0.0141639)    );
  // itree = 107
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.84288,-0.000130389) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.646932,-0.000149441) , 
0.654706, 1, 14, 0, 0.680476,-0.178733) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.576177,-6.61596e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129585,0.00269563) , 
0.141264, 0, 15, 0, 0.527499,-0.0276786) , 
0.982427, 0, 7, 0, 0.604745,-0.103954) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.698635,-0.000152314) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125006,0.000673365) , 
0.561069, 0, 14, 0, 0.549707,-0.0735764) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.371246,0.000189126) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159226,0.000584525) , 
1.88741, 0, 17, 0, 0.224308,0.244429) , 
1.85249, 0, 7, 0, 0.258433,0.21108) , 
0.637994, 0, 14, 0, 0.48711,0.00305659)    );
  // itree = 108
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.810137,-0.000220861) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.244157,-0.000142381) , 
0.351153, 1, 15, 0, 0.793456,-0.288721) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674824,-0.00013169) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.481771,-5.2183e-05) , 
-0.866131, 1, 4, 0, 0.531332,-0.0317641) , 
1.71929, 0, 7, 0, 0.60619,-0.105147) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764724,-0.00012766) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.140006,0.00919826) , 
0.565119, 1, 2, 0, 0.608462,-0.134638) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.710821,-0.000124685) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.178417,0.000466509) , 
2.54247, 0, 11, 0, 0.210297,0.258754) , 
2.67755, 0, 8, 0, 0.24676,0.222727) , 
0.642489, 0, 14, 0, 0.481586,0.00851822)    );
  // itree = 109
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702636,-0.000126861) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.395225,6.97735e-05) , 
0.11096, 1, 0, 0, 0.666158,-0.162662) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647153,-0.000103471) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.297199,4.4003e-05) , 
0.435987, 0, 12, 0, 0.369873,0.128932) , 
0.361484, 0, 2, 0, 0.608392,-0.105811) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.492074,6.15931e-07) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184143,0.00224688) , 
0.0910488, 0, 15, 0, 0.387776,0.0867942) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.326129,3.40485e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0850752,0.00110672) , 
2.09437, 0, 10, 0, 0.152235,0.315477) , 
0.351146, 1, 16, 0, 0.272907,0.198318) , 
0.659126, 0, 14, 0, 0.474739,0.0153503)    );
  // itree = 110
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.867635,-0.000183172) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.425639,0.00104071) , 
0.111361, 1, 16, 0, 0.830406,-0.329245) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.659983,-0.000292613) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.243676,-3.10957e-05) , 
0.7361, 0, 7, 0, 0.606029,-0.104517) , 
0.636619, 0, 2, 0, 0.732807,-0.231493) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.80083,-0.000141073) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.493656,-2.3537e-05) , 
2.54297, 0, 11, 0, 0.511737,-0.0168647) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.510646,0.000144349) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.150949,0.000797308) , 
2.09437, 0, 10, 0, 0.257683,0.206022) , 
0.117809, 0, 15, 0, 0.436492,0.0491489) , 
0.129571, 1, 16, 0, 0.505737,-0.0164336)    );
  // itree = 111
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.781406,-0.000201456) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.600127,-8.2035e-05) , 
0.159879, 1, 16, 0, 0.670337,-0.166325) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.753913,-0.000246152) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.248601,0.000739875) , 
0.0733625, 1, 16, 0, 0.389299,0.103639) , 
0.133389, 0, 15, 0, 0.635269,-0.132638) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.498433,4.43986e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171013,0.000873004) , 
0.0914033, 0, 15, 0, 0.402625,0.0714804) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.582212,-1.84121e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143579,0.000968239) , 
2.67761, 0, 8, 0, 0.195616,0.273394) , 
1.79146, 1, 18, 0, 0.328713,0.143573) , 
0.659126, 0, 14, 0, 0.513053,-0.0225203)    );
  // itree = 112
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731306,-0.000130637) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.419366,9.0866e-05) , 
0.106777, 1, 0, 0, 0.69481,-0.190728) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.565205,-8.22808e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.196933,0.000365254) , 
0.242181, 0, 7, 0, 0.519691,-0.0188986) , 
0.30581, 0, 1, 0, 0.640171,-0.137115) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.6904,-3.80751e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.241713,0.000567194) , 
1.94431, 0, 10, 0, 0.446024,0.0293211) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.303719,0.000108032) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0871487,0.0013325) , 
0.0912836, 0, 15, 0, 0.234572,0.237407) , 
-1.36192, 1, 5, 0, 0.271473,0.201093) , 
0.676433, 0, 14, 0, 0.485263,0.00498236)    );
  // itree = 113
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.916046,-0.000161657) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.343269,-8.16949e-05) , 
0.255315, 1, 16, 0, 0.86109,-0.357018) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.63736,-0.000114237) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.4159,5.49631e-05) , 
0.707485, 0, 14, 0, 0.596746,-0.0943542) , 
0.908231, 0, 2, 0, 0.634292,-0.131661) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.690127,1.96509e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125943,0.000365399) , 
0.788158, 1, 2, 0, 0.581225,-0.106695) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.747066,-0.000179511) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.262217,0.000431459) , 
0.652795, 1, 17, 0, 0.290411,0.179915) , 
2.39358, 0, 10, 0, 0.342524,0.128555) , 
0.66057, 0, 14, 0, 0.516778,-0.0268548)    );
  // itree = 114
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.822536,-0.00012578) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.610072,-0.000132798) , 
0.534689, 0, 1, 0, 0.667805,-0.163339) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.505656,-4.32236e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.213663,0.000727435) , 
0.463383, 0, 1, 0, 0.401378,0.0753714) , 
0.680424, 0, 14, 0, 0.581676,-0.0861705) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.802575,-0.000108398) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.41957,-2.22896e-05) , 
1.06323, 1, 17, 0, 0.543409,-0.0623721) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.374699,7.11024e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.156675,0.000568326) , 
0.170414, 0, 15, 0, 0.268141,0.210795) , 
2.39354, 0, 10, 0, 0.310044,0.169213) , 
0.308582, 1, 16, 0, 0.476674,0.0125501)    );
  // itree = 115
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71173,-0.00014405) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.558784,-7.00203e-05) , 
0.969564, 0, 7, 0, 0.645159,-0.145144) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.46285,5.25996e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.115212,0.000826164) , 
0.601682, 0, 14, 0, 0.36299,0.125243) , 
0.398399, 1, 16, 0, 0.581792,-0.0844226) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.47042,6.33705e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233407,0.000982547) , 
0.0814357, 0, 15, 0, 0.37639,0.0966965) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.490702,0.000235323) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.048371,0.00255996) , 
0.0247847, 1, 12, 0, 0.0678807,0.37724) , 
0.496935, 0, 14, 0, 0.306354,0.160385) , 
0.117723, 0, 15, 0, 0.506297,-0.0173231)    );
  // itree = 116
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731469,-0.000134688) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.492601,2.15035e-05) , 
0.350411, 0, 2, 0, 0.682114,-0.178369) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689464,-7.62158e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157343,0.000138347) , 
1.36426, 0, 7, 0, 0.320445,0.181221) , 
0.403717, 1, 15, 0, 0.657005,-0.153405) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.602416,-3.4972e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239762,0.000446308) , 
0.371889, 1, 4, 0, 0.515664,-0.0389504) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.521231,7.08353e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125707,0.000857685) , 
2.09412, 0, 10, 0, 0.250986,0.218151) , 
0.926297, 0, 7, 0, 0.376446,0.0962823) , 
0.671644, 0, 14, 0, 0.533721,-0.0436866)    );
  // itree = 117
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692732,-0.000120859) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.41956,5.11011e-05) , 
0.136819, 0, 15, 0, 0.650954,-0.149023) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.559305,-8.36972e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227372,0.000263158) , 
0.403729, 0, 12, 0, 0.372258,0.125703) , 
0.317766, 0, 2, 0, 0.61306,-0.111669) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.429961,0.000155805) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.162205,0.000274958) , 
0.406898, 1, 16, 0, 0.332428,0.135676) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695897,-0.000114086) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.115854,0.00118116) , 
2.84109, 0, 11, 0, 0.130215,0.334043) , 
0.461784, 0, 1, 0, 0.260719,0.206021) , 
0.637994, 0, 14, 0, 0.494812,-0.00505)    );
  // itree = 118
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.804487,-0.000225456) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.613764,-0.000106101) , 
1.99995, 0, 7, 0, 0.666097,-0.163147) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.573584,-7.35952e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.311087,8.26371e-05) , 
2.39354, 0, 9, 0, 0.459814,0.0380275) , 
0.736821, 0, 7, 0, 0.592912,-0.0917747) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.41816,9.49271e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.148441,0.00130765) , 
-0.618995, 0, 5, 0, 0.352904,0.125333) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.713308,-0.000160833) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0840211,0.00106112) , 
0.325237, 1, 14, 0, 0.0999066,0.345468) , 
0.0898002, 0, 15, 0, 0.263286,0.20331) , 
0.63667, 0, 14, 0, 0.480006,0.00930032)    );
  // itree = 119
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738984,-0.000139896) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.422717,-2.22332e-05) , 
0.106645, 1, 0, 0, 0.710539,-0.204763) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.613508,-0.000167853) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236372,0.000399141) , 
0.868626, 0, 14, 0, 0.419177,0.0813618) , 
0.350397, 0, 2, 0, 0.649031,-0.14436) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.892588,-0.000192854) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.511456,-8.26246e-05) , 
0.171481, 0, 15, 0, 0.659508,-0.172057) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.533169,3.23177e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229443,0.000310494) , 
0.333492, 0, 15, 0, 0.279932,0.194022) , 
1.85243, 0, 7, 0, 0.334743,0.14116) , 
0.708182, 0, 14, 0, 0.483624,0.00590688)    );
  // itree = 120
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.915191,-0.000177977) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.684701,-0.000263085) , 
0.864956, 0, 2, 0, 0.78004,-0.275224) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.56688,-8.43711e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.139846,0.000843058) , 
0.115161, 0, 15, 0, 0.533122,-0.0328357) , 
1.9532, 0, 7, 0, 0.578704,-0.0775813) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.846228,-0.000414074) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0713726,0.0340187) , 
0.5724, 0, 14, 0, 0.732969,-0.255197) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.429194,7.55439e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.189553,0.000433) , 
1.94425, 0, 11, 0, 0.219915,0.245698) , 
-2.10441, 1, 4, 0, 0.23381,0.232132) , 
0.636914, 0, 14, 0, 0.461845,0.0273579)    );
  // itree = 121
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741176,-0.00018314) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.589073,-6.56002e-05) , 
0.764166, 0, 14, 0, 0.663632,-0.160349) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.497443,-7.30903e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0874356,0.00392759) , 
0.249265, 1, 16, 0, 0.354516,0.143407) , 
0.257621, 0, 2, 0, 0.6403,-0.137422) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.938856,-0.000243321) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.079351,0.0159513) , 
-0.861569, 1, 3, 0, 0.706616,-0.229501) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.751062,-0.000115236) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249772,0.000341368) , 
0.250192, 0, 6, 0, 0.263014,0.205107) , 
0.220385, 1, 13, 0, 0.282001,0.186505) , 
0.66057, 0, 14, 0, 0.501327,-0.011781)    );
  // itree = 122
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.860049,-0.000200429) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.540767,-0.000167094) , 
0.610442, 0, 13, 0, 0.78954,-0.288912) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663243,-0.000181982) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.46612,-0.000202866) , 
0.738757, 1, 8, 0, 0.577496,-0.076146) , 
0.405682, 0, 1, 0, 0.697644,-0.196703) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.521349,-4.95721e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.328044,8.16169e-05) , 
0.556442, 0, 7, 0, 0.45207,0.0402369) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.872693,-0.000224656) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.104948,0.000973296) , 
3.67583, 0, 8, 0, 0.132173,0.318944) , 
0.0915319, 0, 15, 0, 0.39198,0.0925899) , 
0.132002, 1, 16, 0, 0.461686,0.0266171)    );
  // itree = 123
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717976,-0.000130366) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270342,0.000226691) , 
-1.36195, 0, 5, 0, 0.693509,-0.191887) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.710541,-0.000193002) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.425479,-3.57142e-05) , 
1.19646, 1, 9, 0, 0.502958,-0.00266315) , 
0.747974, 1, 11, 0, 0.595954,-0.0950112) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717297,-5.89949e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0874497,0.00258364) , 
0.659879, 1, 13, 0, 0.548513,-0.0791633) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.347974,0.000232793) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172427,0.000686932) , 
0.739455, 0, 2, 0, 0.263793,0.201522) , 
2.40796, 0, 8, 0, 0.301825,0.164028) , 
0.637994, 0, 14, 0, 0.489711,-0.0014428)    );
  // itree = 124
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670253,-0.000119594) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34822,-1.49203e-05) , 
0.523994, 0, 13, 0, 0.643914,-0.143988) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767065,-0.00023432) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.166767,0.00335443) , 
0.612718, 1, 17, 0, 0.291839,0.17358) , 
0.0885232, 0, 15, 0, 0.595461,-0.100283) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.739309,-6.779e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.41063,5.3917e-05) , 
2.0405, 0, 10, 0, 0.55338,-0.0728942) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.739565,-1.59066e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204098,0.0003644) , 
1.1887, 0, 3, 0, 0.245268,0.231582) , 
0.441304, 1, 8, 0, 0.345157,0.132871) , 
0.308582, 1, 16, 0, 0.496196,-0.00781985)    );
  // itree = 125
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.771506,-0.000137451) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.51685,-8.52599e-05) , 
0.452704, 0, 2, 0, 0.682221,-0.178493) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.824304,-0.000151938) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.308131,-4.38485e-05) , 
0.148361, 0, 6, 0, 0.35982,0.140789) , 
0.0321193, 1, 6, 0, 0.637895,-0.134596) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.60286,-4.03935e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.097878,0.000965396) , 
0.518435, 0, 14, 0, 0.533921,-0.0589275) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.638144,-0.000100662) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.243827,0.000376514) , 
2.3931, 0, 11, 0, 0.272188,0.196571) , 
1.05844, 1, 17, 0, 0.330758,0.139396) , 
0.671902, 0, 14, 0, 0.504702,-0.0157767)    );
  // itree = 126
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749362,-0.000137948) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.200025,4.85653e-06) , 
0.465014, 0, 13, 0, 0.737505,-0.231715) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.946384,-0.000206668) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.373912,2.89596e-05) , 
0.691367, 0, 16, 0, 0.418835,0.0807367) , 
0.350403, 0, 2, 0, 0.674007,-0.169456) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.552179,-6.00116e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.332662,0.000290237) , 
0.359388, 1, 16, 0, 0.452862,0.0341368) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.886584,-0.000206631) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171441,0.000564596) , 
3.06488, 0, 7, 0, 0.194513,0.263645) , 
0.117052, 0, 15, 0, 0.346536,0.128593) , 
0.706898, 0, 14, 0, 0.507007,-0.0174609)    );
  // itree = 127
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.725015,-0.000122996) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.512762,2.84261e-05) , 
0.250423, 0, 1, 0, 0.687244,-0.18355) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.770336,-0.000125107) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.254809,0.000465476) , 
0.650455, 0, 1, 0, 0.380666,0.117372) , 
0.122945, 1, 0, 0, 0.66233,-0.159095) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.521857,-5.06884e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.290266,0.000443022) , 
0.35846, 1, 16, 0, 0.409635,0.0697012) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.37721,0.000533865) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.106702,0.000915476) , 
1.34657, 1, 9, 0, 0.153315,0.291898) , 
0.0893674, 0, 15, 0, 0.32998,0.138752) , 
0.659385, 0, 14, 0, 0.533802,-0.0439106)    );
  // itree = 128
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705118,-0.000128979) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.30374,-4.47024e-05) , 
0.707902, 0, 14, 0, 0.68567,-0.180726) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.882302,-0.000851633) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226895,0.000179752) , 
1.96223, 0, 7, 0, 0.292095,0.205509) , 
0.257621, 0, 2, 0, 0.655993,-0.151603) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.83613,-0.00016578) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.462279,1.83915e-05) , 
2.22901, 0, 7, 0, 0.516275,-0.0221768) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.38058,0.000206045) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180583,0.000553879) , 
0.722449, 1, 8, 0, 0.263169,0.201774) , 
0.64965, 0, 14, 0, 0.329712,0.142896) , 
0.694595, 0, 14, 0, 0.500657,-0.0113975)    );
  // itree = 129
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735285,-0.000147195) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.450781,-6.29994e-05) , 
0.135798, 0, 15, 0, 0.687783,-0.184571) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74249,-0.000147274) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.402776,9.91241e-07) , 
2.54298, 0, 10, 0, 0.445627,0.0519335) , 
0.736831, 0, 7, 0, 0.608831,-0.107461) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.886529,-0.000243829) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0650834,0.0248539) , 
2.31564, 0, 17, 0, 0.748215,-0.272039) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.348859,0.000125459) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.181601,0.000616406) , 
1.94496, 0, 10, 0, 0.236217,0.226908) , 
-1.85713, 1, 3, 0, 0.256791,0.206859) , 
0.636907, 0, 14, 0, 0.489399,-0.000825939)    );
  // itree = 130
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744541,-0.000177806) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.600461,-9.31566e-05) , 
1.22811, 0, 7, 0, 0.665662,-0.160617) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.921675,-0.00139643) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.20835,0.000444022) , 
1.96222, 0, 7, 0, 0.287049,0.21083) , 
0.226803, 0, 2, 0, 0.643717,-0.139088) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769623,-0.00018689) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.287577,-8.61392e-05) , 
0.0287634, 1, 6, 0, 0.672392,-0.185699) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.444772,0.000104828) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.24264,0.000498802) , 
0.144631, 0, 15, 0, 0.336581,0.136217) , 
1.85246, 0, 7, 0, 0.380855,0.0937753) , 
0.706618, 0, 14, 0, 0.501063,-0.0127144)    );
  // itree = 131
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.810897,-0.000201042) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.643945,-0.000128413) , 
0.24417, 1, 8, 0, 0.675449,-0.171031) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.595669,-8.39745e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.369344,4.54956e-05) , 
2.39367, 0, 9, 0, 0.497521,0.00216948) , 
0.740007, 0, 7, 0, 0.612131,-0.109395) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.397955,0.00014702) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.124378,0.00164066) , 
0.42933, 0, 2, 0, 0.365489,0.106655) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.739934,-0.000219652) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0692686,0.00162947) , 
0.313092, 1, 14, 0, 0.0949381,0.34891) , 
0.493778, 0, 14, 0, 0.315614,0.151315) , 
0.66057, 0, 14, 0, 0.490131,-0.00212808)    );
  // itree = 132
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702037,-0.000139827) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.555414,-2.72316e-05) , 
0.716294, 0, 7, 0, 0.647803,-0.14501) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.553249,-0.000176808) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.195932,0.0007733) , 
0.907224, 1, 17, 0, 0.296549,0.187335) , 
0.112399, 0, 15, 0, 0.617488,-0.116328) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.791784,-0.000153576) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145883,0.0073845) , 
0.566586, 1, 2, 0, 0.623185,-0.154877) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.796742,-0.00015627) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.20407,0.000415367) , 
2.35221, 0, 5, 0, 0.223788,0.238648) , 
2.78449, 0, 8, 0, 0.252327,0.210528) , 
0.636907, 0, 14, 0, 0.494036,-0.00582569)    );
  // itree = 133
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717563,-0.000133048) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.534348,1.06161e-05) , 
0.357687, 0, 2, 0, 0.66935,-0.164881) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.512927,-0.000149962) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.14165,0.000141879) , 
0.304618, 1, 16, 0, 0.446305,0.0579965) , 
-0.618926, 0, 3, 0, 0.6286,-0.124161) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.835644,-0.000198527) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163338,0.00532386) , 
0.0840448, 1, 0, 0, 0.783852,-0.29896) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.596429,2.32101e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.268425,0.000262389) , 
0.335069, 0, 15, 0, 0.321512,0.149914) , 
0.629926, 1, 17, 0, 0.353415,0.11894) , 
0.697055, 0, 14, 0, 0.48719,0.000761253)    );
  // itree = 134
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705415,-0.000137893) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.308364,-4.17597e-05) , 
0.678422, 0, 14, 0, 0.680467,-0.175753) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679328,-9.2777e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.391253,-1.03552e-05) , 
-1.0891, 1, 4, 0, 0.457588,0.039763) , 
0.272145, 1, 16, 0, 0.609322,-0.106958) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.858861,-0.000205445) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163197,7.19482e-05) , 
0.0305897, 0, 6, 0, 0.662829,-0.18531) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.328853,0.000244992) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157474,0.00120854) , 
0.46759, 0, 7, 0, 0.275326,0.188124) , 
0.598655, 1, 9, 0, 0.298113,0.166164) , 
0.645712, 0, 14, 0, 0.495616,-0.0071676)    );
  // itree = 135
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706598,-0.000114547) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.55082,-9.49561e-05) , 
0.536008, 0, 2, 0, 0.633389,-0.129921) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.518006,9.82558e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.241739,0.000385801) , 
-0.12349, 1, 3, 0, 0.395964,0.0809898) , 
0.640947, 0, 14, 0, 0.579995,-0.0824898) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.665284,-0.000131596) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249728,0.000281999) , 
1.11466, 0, 3, 0, 0.357598,0.107712) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.341615,-1.54704e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0727657,0.00144027) , 
1.96492, 0, 7, 0, 0.115542,0.34132) , 
0.732907, 1, 8, 0, 0.222793,0.237812) , 
0.115897, 0, 15, 0, 0.493172,-0.0046364)    );
  // itree = 136
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717115,-0.000132332) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.47687,7.05716e-05) , 
0.112698, 1, 0, 0, 0.689246,-0.184223) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615177,-0.00014763) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.276746,0.000273844) , 
0.183635, 1, 16, 0, 0.457447,0.0426711) , 
0.357681, 0, 2, 0, 0.63992,-0.135941) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.511226,0.000102688) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.230325,0.000399211) , 
0.866595, 1, 5, 0, 0.461379,0.00979019) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730341,-0.000156493) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186554,0.000922115) , 
0.249637, 0, 6, 0, 0.210033,0.253911) , 
0.463124, 0, 7, 0, 0.392703,0.0764914) , 
0.677134, 0, 14, 0, 0.524524,-0.0367817)    );
  // itree = 137
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.800926,-0.000121302) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.602132,-0.000102062) , 
0.139231, 1, 12, 0, 0.650224,-0.150848) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.560302,-0.000100481) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157634,0.00284629) , 
1.96267, 0, 7, 0, 0.278785,0.179955) , 
0.090198, 0, 15, 0, 0.59835,-0.104648) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622208,-6.44495e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.308933,0.000124765) , 
0.74825, 1, 10, 0, 0.399674,0.0902441) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.878003,-0.000260537) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.1111,0.000394374) , 
-1.81975, 1, 4, 0, 0.129199,0.330342) , 
0.173122, 0, 15, 0, 0.265352,0.20948) , 
0.344087, 1, 16, 0, 0.496351,-0.00842916)    );
  // itree = 138
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729841,-0.000133805) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530103,-7.7193e-05) , 
0.719832, 0, 14, 0, 0.66685,-0.162475) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.585794,-0.000167615) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.362214,7.35275e-05) , 
0.40947, 0, 12, 0, 0.442925,0.0564849) , 
0.295902, 0, 1, 0, 0.610969,-0.107832) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689767,-0.000108539) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.339629,0.000219805) , 
1.64758, 0, 7, 0, 0.391239,0.0860794) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.497615,0.00126179) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0840083,0.00087117) , 
2.38786, 0, 17, 0, 0.121759,0.319794) , 
0.0905104, 0, 15, 0, 0.303685,0.162013) , 
0.66057, 0, 14, 0, 0.48497,0.00281502)    );
  // itree = 139
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.775399,-0.000153483) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.535432,-0.000253283) , 
0.454199, 0, 2, 0, 0.728601,-0.223678) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.79788,-4.10616e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.434379,-4.21707e-05) , 
0.432724, 1, 13, 0, 0.46844,0.0302059) , 
1.23334, 0, 7, 0, 0.583767,-0.082339) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.973783,-0.000219122) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0416119,0.0114732) , 
0.915818, 0, 5, 0, 0.799079,-0.327169) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.287541,0.000346881) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0450982,0.00067293) , 
0.286265, 1, 0, 0, 0.250736,0.211021) , 
0.242955, 0, 6, 0, 0.278847,0.18343) , 
0.637994, 0, 14, 0, 0.474524,0.012878)    );
  // itree = 140
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.684406,-0.000122128) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317576,0.000400004) , 
0.231977, 0, 2, 0, 0.668177,-0.163269) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.711811,-0.000198041) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245072,0.000372579) , 
0.910664, 1, 17, 0, 0.422961,0.0703008) , 
0.133083, 0, 15, 0, 0.637516,-0.134064) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.594581,-5.17785e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.296866,0.000204748) , 
-0.865331, 1, 4, 0, 0.380452,0.0961824) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.572012,-0.000145992) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0922964,0.000925917) , 
0.326467, 1, 14, 0, 0.106467,0.333616) , 
0.0912836, 0, 15, 0, 0.291083,0.173629) , 
0.658369, 0, 14, 0, 0.505117,-0.0164702)    );
  // itree = 141
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.725073,-0.000131305) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.425128,-6.87342e-06) , 
0.397453, 1, 15, 0, 0.695737,-0.190245) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.537952,-0.000155581) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.207291,0.00243972) , 
1.23374, 0, 7, 0, 0.399837,0.0927973) , 
0.132167, 0, 15, 0, 0.664541,-0.160404) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.40741,8.34682e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0956976,0.00287464) , 
0.0625482, 0, 15, 0, 0.358142,0.110297) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.610397,-3.40901e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.131107,0.000503737) , 
0.236078, 0, 6, 0, 0.173955,0.288542) , 
0.445553, 1, 16, 0, 0.30181,0.164812) , 
0.673088, 0, 14, 0, 0.516451,-0.0276298)    );
  // itree = 142
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.81247,-0.000125407) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.359686,0.000453643) , 
0.34768, 1, 16, 0, 0.757518,-0.253881) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.603045,-0.00011553) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.289572,0.000408886) , 
0.135721, 0, 15, 0, 0.554892,-0.0539609) , 
0.532, 0, 1, 0, 0.611137,-0.109455) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.897472,-0.00025503) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0731298,0.0128721) , 
2.84411, 1, 10, 0, 0.779523,-0.300743) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.564193,0.000245832) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239324,0.000409217) , 
0.448918, 1, 18, 0, 0.278721,0.18301) , 
2.54146, 0, 11, 0, 0.318598,0.144491) , 
0.643347, 0, 14, 0, 0.502873,-0.0154735)    );
  // itree = 143
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.751799,-0.000130697) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.393502,-6.7391e-05) , 
0.132637, 1, 0, 0, 0.727305,-0.220351) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.699572,-0.000209646) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.404723,0.000116072) , 
0.868629, 0, 14, 0, 0.532068,-0.0304654) , 
0.396815, 0, 2, 0, 0.664166,-0.158943) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688162,-9.84577e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306635,0.00023079) , 
1.52488, 1, 17, 0, 0.558109,-0.0688475) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.507848,-8.83637e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227679,0.000378681) , 
1.63641, 0, 7, 0, 0.280116,0.18649) , 
0.251703, 0, 15, 0, 0.341077,0.130498) , 
0.708187, 0, 14, 0, 0.495679,-0.00800268)    );
  // itree = 144
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.696097,-0.000127125) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.305287,0.000122104) , 
0.226795, 0, 2, 0, 0.683629,-0.181869) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.68092,-0.000134705) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191,0.000834534) , 
0.897969, 1, 17, 0, 0.387474,0.0810705) , 
0.116474, 0, 15, 0, 0.617761,-0.123388) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.533308,-1.77269e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.301454,0.000149497) , 
-0.532587, 1, 4, 0, 0.397541,0.0903512) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.597087,-8.18772e-07) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.075389,0.000835059) , 
2.66517, 0, 18, 0, 0.138838,0.309341) , 
0.116291, 0, 15, 0, 0.315713,0.159618) , 
0.309515, 1, 16, 0, 0.505759,-0.0184476)    );
  // itree = 145
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.752126,-0.000133152) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.36019,-0.000130607) , 
0.594304, 1, 1, 0, 0.733712,-0.226857) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.586135,-9.49332e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113609,0.00106066) , 
0.326766, 1, 16, 0, 0.503081,-0.00227928) , 
0.350411, 0, 2, 0, 0.67977,-0.174331) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817176,-0.000151254) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.383089,0.00012899) , 
0.0454809, 1, 0, 0, 0.565357,-0.0912475) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.512089,7.72698e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271056,0.000335357) , 
2.09435, 0, 10, 0, 0.326973,0.143876) , 
0.685749, 0, 1, 0, 0.378719,0.0928379) , 
0.708187, 0, 14, 0, 0.523005,-0.0352088)    );
  // itree = 146
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717453,-0.000143936) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.573103,-7.22858e-05) , 
0.309748, 0, 1, 0, 0.661991,-0.157189) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.444438,-6.31611e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.151103,0.000393867) , 
1.94548, 0, 9, 0, 0.345794,0.157635) , 
0.393966, 1, 15, 0, 0.638148,-0.133449) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.882833,-0.000163088) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.484648,-5.20674e-05) , 
0.646323, 0, 14, 0, 0.759156,-0.268668) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.482763,3.46896e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265122,0.000392391) , 
2.09438, 0, 10, 0, 0.322663,0.145974) , 
2.12181, 0, 7, 0, 0.367095,0.103767) , 
0.697055, 0, 14, 0, 0.498256,-0.0110205)    );
  // itree = 147
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.774205,-0.000141382) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.534551,-9.47033e-05) , 
0.305472, 0, 1, 0, 0.712532,-0.206704) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.616415,-0.000152115) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.344798,4.72915e-05) , 
0.415991, 1, 8, 0, 0.434583,0.064831) , 
0.306791, 1, 16, 0, 0.651611,-0.147189) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.559712,2.54846e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143588,0.000819253) , 
0.499481, 0, 14, 0, 0.48944,-0.0176104) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.825053,-0.000430504) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201828,0.000341026) , 
3.6062, 0, 8, 0, 0.218616,0.244325) , 
1.49593, 0, 11, 0, 0.312437,0.153583) , 
0.676721, 0, 14, 0, 0.505326,-0.0174667)    );
  // itree = 148
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.844301,-0.000134928) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.643742,-0.000120134) , 
0.909634, 0, 2, 0, 0.676093,-0.173377) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.555507,-6.30729e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271946,0.000400092) , 
1.79214, 1, 18, 0, 0.46581,0.0218089) , 
0.309275, 1, 16, 0, 0.596867,-0.0998386) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.592396,3.34025e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0948268,0.0166802) , 
0.74046, 0, 7, 0, 0.508805,-0.0369027) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.822299,-0.000212042) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0937737,0.000699751) , 
0.317942, 1, 14, 0, 0.119252,0.328005) , 
0.0449691, 1, 0, 0, 0.29792,0.160641) , 
0.115759, 0, 15, 0, 0.519283,-0.0322385)    );
  // itree = 149
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.708219,-0.00013772) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.489231,-2.56797e-05) , 
0.137593, 0, 15, 0, 0.663721,-0.160833) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.636438,-8.03551e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34885,4.08346e-05) , 
0.748301, 1, 10, 0, 0.457335,0.036671) , 
0.288627, 1, 16, 0, 0.596281,-0.0962954) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.943895,-0.000218274) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.040266,0.0107999) , 
0.493443, 0, 3, 0, 0.710204,-0.2452) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.335125,0.000165103) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.133635,0.000539406) , 
0.325808, 1, 16, 0, 0.220296,0.236823) , 
0.242955, 0, 6, 0, 0.243527,0.213965) , 
0.62241, 0, 14, 0, 0.489994,-0.00281144)    );
  // itree = 150
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.842889,-0.000292453) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.299235,0.00352503) , 
0.769531, 0, 14, 0, 0.816323,-0.306501) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.633199,-0.000152087) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378942,5.40566e-05) , 
0.350417, 0, 2, 0, 0.540464,-0.0365614) , 
1.71928, 0, 7, 0, 0.631363,-0.125509) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.547293,-8.86817e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.366356,7.6986e-05) , 
1.05943, 1, 17, 0, 0.407138,0.0735027) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.716612,-0.000220014) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0943201,0.00155577) , 
0.316387, 1, 14, 0, 0.118733,0.31968) , 
0.492362, 0, 14, 0, 0.371781,0.103683) , 
0.746423, 0, 14, 0, 0.459479,0.026252)    );
  // itree = 151
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.787479,-0.000211528) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0905362,0.000124146) , 
0.338274, 1, 16, 0, 0.77744,-0.275606) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.861993,-0.000207033) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.313073,0.000577429) , 
0.47587, 1, 17, 0, 0.478944,-0.00745045) , 
0.0869765, 0, 15, 0, 0.72448,-0.228029) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709261,-0.000104894) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.493945,-4.66622e-05) , 
0.489611, 0, 2, 0, 0.602354,-0.0989581) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.500548,3.06082e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271911,0.000448758) , 
2.09438, 0, 10, 0, 0.332636,0.135719) , 
0.701191, 0, 14, 0, 0.452214,0.0316758) , 
1.69639, 0, 7, 0, 0.510545,-0.0239639)    );
  // itree = 152
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703159,-0.000142626) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.560612,-7.6779e-05) , 
0.955044, 0, 7, 0, 0.641014,-0.140622) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.529831,2.90011e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.196968,0.000419851) , 
1.19675, 1, 10, 0, 0.368168,0.117876) , 
0.391241, 1, 16, 0, 0.57655,-0.0795476) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.596094,-0.000144169) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.114625,0.0114415) , 
0.447467, 0, 13, 0, 0.530594,-0.0552509) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.404698,0.000177298) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113674,0.000842494) , 
1.49503, 0, 11, 0, 0.204029,0.247065) , 
0.906163, 1, 17, 0, 0.265171,0.190463) , 
0.116474, 0, 15, 0, 0.497744,-0.0112111)    );
  // itree = 153
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679203,-0.000136282) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.301056,-2.82845e-05) , 
0.238797, 0, 7, 0, 0.648623,-0.142591) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.576409,-4.5561e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.297026,0.000271684) , 
0.359719, 1, 16, 0, 0.455988,0.0283336) , 
0.698514, 0, 14, 0, 0.571617,-0.0742643) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714845,-0.000270918) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220916,5.75856e-06) , 
0.58951, 1, 2, 0, 0.497628,-0.0251737) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.448246,4.1273e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.131478,0.000792443) , 
1.34795, 1, 9, 0, 0.187792,0.264085) , 
0.905778, 1, 17, 0, 0.2452,0.21049) , 
0.117052, 0, 15, 0, 0.488382,-0.00165278)    );
  // itree = 154
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.84456,-0.000222983) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.643725,-9.48261e-05) , 
1.88398, 0, 7, 0, 0.69545,-0.192181) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.562464,1.81816e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.247504,0.000444458) , 
0.480906, 1, 8, 0, 0.347438,0.116437) , 
0.116474, 0, 15, 0, 0.621804,-0.126871) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.56451,-5.58554e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172077,0.000491571) , 
0.0888828, 0, 15, 0, 0.482048,-0.00794577) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.487429,-2.71374e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265035,0.000502446) , 
0.196205, 1, 8, 0, 0.298983,0.172885) , 
0.865774, 0, 7, 0, 0.360986,0.111639) , 
0.309652, 1, 16, 0, 0.521239,-0.0349075)    );
  // itree = 155
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.716811,-0.000164665) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.362856,-4.32223e-05) , 
0.0846728, 1, 0, 0, 0.690652,-0.185711) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65983,-8.2305e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.339743,5.20716e-05) , 
0.546472, 0, 2, 0, 0.489234,0.0108837) , 
0.736861, 0, 7, 0, 0.622812,-0.119496) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.624456,4.43727e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211113,0.000270374) , 
0.789133, 1, 2, 0, 0.473394,-0.00956103) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.621386,-0.000107415) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220445,0.000466097) , 
2.54247, 0, 11, 0, 0.242621,0.218667) , 
0.482281, 1, 13, 0, 0.323897,0.138288) , 
0.66057, 0, 14, 0, 0.500046,-0.0136229)    );
  // itree = 156
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.765094,-0.000176752) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253095,-8.77375e-05) , 
0.0814738, 0, 15, 0, 0.746804,-0.239336) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.564674,-9.37631e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.287491,0.000299714) , 
0.985094, 1, 8, 0, 0.488609,0.0128998) , 
1.23337, 0, 7, 0, 0.610948,-0.106616) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761128,-0.000110272) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.379293,0.000116639) , 
2.14464, 1, 10, 0, 0.447538,0.020082) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.576802,-0.00012327) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212789,0.000521615) , 
0.776592, 1, 17, 0, 0.24068,0.22073) , 
2.0944, 0, 10, 0, 0.29831,0.16483) , 
0.67165, 0, 14, 0, 0.475525,0.0109638)    );
  // itree = 157
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.70444,-0.000124325) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.486496,6.81517e-06) , 
0.330988, 1, 16, 0, 0.649711,-0.14689) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.5475,-9.35143e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183555,0.00130766) , 
1.1987, 1, 17, 0, 0.349893,0.126717) , 
0.113284, 0, 15, 0, 0.619205,-0.119051) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558856,0.000133087) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.313134,0.000149585) , 
0.117723, 1, 15, 0, 0.487283,-0.0254107) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.592018,-9.67857e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.147023,0.000639951) , 
2.08403, 0, 7, 0, 0.174584,0.279064) , 
1.79517, 0, 10, 0, 0.320854,0.136641) , 
0.624085, 0, 14, 0, 0.523572,-0.0370921)    );
  // itree = 158
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.856819,-0.000269181) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.636168,-0.000171681) , 
2.45282, 0, 7, 0, 0.697481,-0.196739) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.646058,-4.91141e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.425473,2.38592e-05) , 
2.09437, 0, 10, 0, 0.479267,0.00750372) , 
0.130554, 1, 16, 0, 0.527604,-0.0377386) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.586189,0.000239611) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.12835,0.000394955) , 
0.916071, 0, 2, 0, 0.271967,0.1705) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.273563,0.00588483) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0421969,0.00182444) , 
2.63269, 0, 8, 0, 0.0496574,0.385795) , 
2.54161, 0, 10, 0, 0.0814419,0.355013) , 
0.497618, 0, 14, 0, 0.491894,-0.00630309)    );
  // itree = 159
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.824307,-0.000218542) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.601412,-7.48155e-05) , 
1.67132, 0, 7, 0, 0.656921,-0.152921) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.514527,-0.000110575) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129734,0.00105395) , 
1.20726, 1, 17, 0, 0.31305,0.165961) , 
0.110578, 0, 15, 0, 0.627136,-0.125301) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575084,-3.68578e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0333079,0.000256078) , 
-0.370453, 0, 3, 0, 0.463627,0.00143487) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.775686,-0.000147004) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159925,0.000426218) , 
-2.10378, 1, 3, 0, 0.170251,0.284752) , 
1.94453, 0, 11, 0, 0.211692,0.244731) , 
0.638, 0, 14, 0, 0.494651,-0.0072975)    );
  // itree = 160
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761937,-0.000221926) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.468239,-0.000110338) , 
0.543745, 0, 13, 0, 0.720064,-0.2169) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686628,-0.000123757) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.436118,-2.18161e-05) , 
2.24397, 0, 10, 0, 0.48305,0.0123882) , 
1.72671, 0, 7, 0, 0.537531,-0.0403165) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702,-0.000140363) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.193717,0.00227985) , 
1.50787, 0, 7, 0, 0.509078,-0.0499364) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.423479,7.8481e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0775218,0.000517339) , 
0.171556, 0, 15, 0, 0.168159,0.284932) , 
0.182118, 1, 16, 0, 0.220831,0.233195) , 
0.601912, 0, 14, 0, 0.448763,0.0363464)    );
  // itree = 161
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.792741,-0.000159952) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.623483,-0.000166023) , 
0.187662, 0, 15, 0, 0.730312,-0.224112) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.894585,-0.00019316) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.524985,-3.80158e-05) , 
2.54307, 0, 11, 0, 0.563858,-0.0643507) , 
1.22638, 0, 7, 0, 0.632165,-0.129911) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.521301,0.000139955) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180151,0.00183679) , 
0.497856, 0, 14, 0, 0.419779,0.0395812) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.35705,0.000125595) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159414,0.000839522) , 
0.935264, 0, 7, 0, 0.24903,0.208981) , 
0.060739, 0, 6, 0, 0.325728,0.13289) , 
0.642261, 0, 14, 0, 0.522484,-0.035849)    );
  // itree = 162
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.834545,-0.000236914) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.294514,-8.94787e-05) , 
0.0786924, 0, 15, 0, 0.805784,-0.298836) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.570971,-8.26565e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192701,0.000795394) , 
0.113949, 0, 15, 0, 0.54115,-0.0409306) , 
1.96488, 0, 7, 0, 0.593086,-0.0915463) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.68321,-1.75386e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251317,0.000249699) , 
0.124123, 0, 5, 0, 0.536735,-0.0701761) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.63975,-9.03373e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.173741,0.000679737) , 
1.35152, 1, 9, 0, 0.19477,0.259357) , 
2.09432, 0, 10, 0, 0.307802,0.150434) , 
0.636319, 0, 14, 0, 0.491528,-0.00540358)    );
  // itree = 163
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.775952,-0.000210706) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.588355,-7.99079e-05) , 
0.124882, 1, 16, 0, 0.638942,-0.134476) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7149,-0.000255937) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252313,0.000394724) , 
0.0732658, 1, 16, 0, 0.371556,0.114822) , 
0.136027, 0, 15, 0, 0.598525,-0.096793) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.544816,5.35837e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.213587,0.0022286) , 
0.0883691, 0, 15, 0, 0.420352,0.0430993) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.481153,0.000162148) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.149415,0.000428043) , 
0.149627, 1, 11, 0, 0.174378,0.279783) , 
1.16889, 0, 7, 0, 0.250789,0.206258) , 
0.638, 0, 14, 0, 0.481184,0.00546981)    );
  // itree = 164
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.748245,-0.000162587) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0755108,5.90317e-05) , 
0.56667, 0, 14, 0, 0.730148,-0.225386) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.582816,-5.51439e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.263638,0.00056278) , 
2.24062, 1, 18, 0, 0.532003,-0.0390282) , 
1.21169, 0, 7, 0, 0.603698,-0.106458) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.805538,-0.000269702) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180426,-8.83887e-05) , 
0.069788, 0, 15, 0, 0.676942,-0.18896) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.427244,0.000136938) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.166091,0.000754972) , 
0.956065, 1, 17, 0, 0.210474,0.23909) , 
2.20762, 0, 7, 0, 0.273934,0.180857) , 
0.11629, 0, 15, 0, 0.52026,-0.0337612)    );
  // itree = 165
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.771093,-0.00015985) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.610591,-0.000109542) , 
0.732895, 1, 8, 0, 0.702045,-0.194719) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.699773,-0.000205098) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.298966,0.000121285) , 
0.109294, 1, 16, 0, 0.452042,0.0486901) , 
0.350393, 0, 2, 0, 0.642854,-0.137089) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.600032,-9.86182e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.24274,0.00128708) , 
0.0888785, 0, 15, 0, 0.504649,-0.0297679) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.517388,-2.99306e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.240992,0.000224601) , 
1.34641, 1, 9, 0, 0.287379,0.17886) , 
1.05622, 1, 17, 0, 0.333175,0.134886) , 
0.710494, 0, 14, 0, 0.475452,0.00993142)    );
  // itree = 166
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.724333,-0.000132197) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.466286,-8.32498e-05) , 
0.484283, 0, 7, 0, 0.681568,-0.175637) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.494482,-8.05105e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168305,0.0012298) , 
0.327815, 1, 16, 0, 0.420137,0.0789674) , 
0.350417, 0, 2, 0, 0.629979,-0.125395) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703348,-0.000119931) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.331241,0.000163382) , 
0.776318, 0, 1, 0, 0.382348,0.0835197) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.324902,0.000112438) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0968577,0.000621599) , 
1.49573, 0, 11, 0, 0.16578,0.290628) , 
0.357921, 1, 16, 0, 0.2832,0.178338) , 
0.676174, 0, 14, 0, 0.481924,0.00428137)    );
  // itree = 167
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71819,-0.000154754) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.162069,1.80381e-05) , 
0.547793, 0, 14, 0, 0.700614,-0.199923) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.529458,-3.80157e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.248629,0.000234285) , 
0.138549, 1, 0, 0, 0.467167,0.0221811) , 
1.2117, 0, 7, 0, 0.553303,-0.05977) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.522993,-0.000115093) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.197311,0.000752846) , 
2.54326, 0, 9, 0, 0.351959,0.106494) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.48046,0.000222206) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0564956,0.00106995) , 
-2.3521, 1, 5, 0, 0.065356,0.368439) , 
1.48018, 0, 7, 0, 0.142225,0.298183) , 
0.0887553, 0, 15, 0, 0.492384,-0.0067235)    );
  // itree = 168
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719739,-0.000133086) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183064,4.72131e-05) , 
0.310981, 1, 16, 0, 0.703019,-0.196078) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.626865,-0.000136072) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279542,0.000131821) , 
0.566582, 1, 8, 0, 0.46371,0.0358234) , 
0.343669, 1, 16, 0, 0.661699,-0.156037) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.618897,1.35244e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.146815,0.00153393) , 
-0.619012, 0, 5, 0, 0.53157,-0.0634337) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.436329,3.91309e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201902,0.000372502) , 
0.171556, 0, 15, 0, 0.28795,0.176604) , 
0.598434, 1, 10, 0, 0.348485,0.116959) , 
0.695491, 0, 14, 0, 0.505942,-0.0202798)    );
  // itree = 169
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.84536,-0.000225397) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.680733,-0.000175764) , 
0.17916, 0, 15, 0, 0.77822,-0.271844) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677126,-9.0679e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.473278,-3.78859e-05) , 
0.448804, 1, 11, 0, 0.529752,-0.0323685) , 
1.71693, 0, 7, 0, 0.593591,-0.0938972) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.528944,4.14836e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.185347,0.000570468) , 
0.743896, 0, 2, 0, 0.394909,0.0651916) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.60426,-0.000236673) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.114301,0.000659636) , 
0.0995282, 1, 16, 0, 0.138404,0.311875) , 
0.922984, 1, 8, 0, 0.275326,0.180196) , 
0.624085, 0, 14, 0, 0.491747,-0.00618788)    );
  // itree = 170
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7327,-0.000131266) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.507416,-5.99406e-05) , 
0.276784, 1, 16, 0, 0.665865,-0.162193) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.453616,-3.17826e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0764841,0.00026315) , 
0.0242186, 1, 6, 0, 0.404715,0.0929649) , 
0.36634, 0, 2, 0, 0.613865,-0.111387) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.648338,-1.05104e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199813,0.000252857) , 
0.124348, 0, 4, 0, 0.494941,-0.030831) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.33904,0.000197579) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.109414,0.00115172) , 
0.342465, 1, 16, 0, 0.218752,0.235705) , 
2.09436, 0, 10, 0, 0.303448,0.153969) , 
0.643347, 0, 14, 0, 0.50193,-0.0157005)    );
  // itree = 171
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.819974,-0.000232306) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.604031,-9.76043e-05) , 
0.751274, 1, 17, 0, 0.646345,-0.1441) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.627837,-8.08107e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318434,0.000107284) , 
1.01006, 0, 7, 0, 0.412798,0.0778761) , 
0.294014, 1, 16, 0, 0.572539,-0.0739509) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.59651,-7.20948e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225717,0.000411108) , 
0.0164518, 1, 0, 0, 0.420197,0.0345192) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.348705,0.000102562) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.109071,0.000409682) , 
2.39354, 0, 10, 0, 0.147476,0.301544) , 
0.181584, 1, 16, 0, 0.184751,0.265047) , 
0.606642, 0, 14, 0, 0.469937,0.0157417)    );
  // itree = 172
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71974,-0.000253519) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.521807,-8.74918e-05) , 
1.93873, 0, 7, 0, 0.572581,-0.0757532) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.594226,-2.48092e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.348389,4.64496e-05) , 
0.0973239, 0, 6, 0, 0.388609,0.0879335) , 
0.023676, 1, 0, 0, 0.465984,0.0190901) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.868551,-0.000230922) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.726847,-0.000167055) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158404,0.000401877) , 
2.54217, 0, 11, 0, 0.1832,0.280353) , 
0.809147, 0, 16, 0, 0.201399,0.262236) , 
0.503663, 1, 16, 0, 0.429008,0.0530694)    );
  // itree = 173
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.73097,-0.000138075) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.438792,-4.17582e-06) , 
0.110562, 1, 0, 0, 0.70344,-0.196113) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691084,-0.000180867) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.342993,0.000385578) , 
0.875601, 0, 14, 0, 0.492197,0.00821918) , 
0.350417, 0, 2, 0, 0.655218,-0.149469) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.867766,-0.000216857) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.132202,0.0012294) , 
0.577829, 0, 14, 0, 0.794927,-0.316323) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.496092,4.65629e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.267175,0.000231084) , 
1.34641, 1, 9, 0, 0.304589,0.159697) , 
-1.85719, 1, 3, 0, 0.330782,0.134269) , 
0.695491, 0, 14, 0, 0.498524,-0.0124306)    );
  // itree = 174
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.828879,-0.000182625) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.653627,-0.000263878) , 
0.545165, 0, 2, 0, 0.755698,-0.247763) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.850048,-9.76988e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.505099,-5.08697e-05) , 
0.497626, 0, 15, 0, 0.534409,-0.0359046) , 
0.124074, 1, 16, 0, 0.60013,-0.0988247) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.671499,-6.84762e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.298608,0.000264456) , 
0.564688, 0, 13, 0, 0.535272,-0.0747109) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.323022,0.000269868) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0377203,0.00542833) , 
0.0625482, 0, 15, 0, 0.276192,0.178046) , 
1.62103, 0, 7, 0, 0.313801,0.141356) , 
0.636319, 0, 14, 0, 0.498787,-0.0138159)    );
  // itree = 175
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.667478,-0.000115086) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335366,5.16118e-05) , 
-1.3619, 0, 5, 0, 0.646024,-0.14164) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.733968,-0.00018816) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.304161,0.000306132) , 
2.22033, 0, 7, 0, 0.412054,0.0737088) , 
0.136513, 0, 15, 0, 0.608227,-0.106851) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735161,-0.000161093) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.109344,0.000457345) , 
0.589751, 0, 14, 0, 0.475925,-0.0124465) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.501456,0.000281106) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187192,0.000397356) , 
1.84518, 0, 4, 0, 0.200769,0.251681) , 
-1.36175, 1, 4, 0, 0.237203,0.216708) , 
0.638, 0, 14, 0, 0.483568,0.00186041)    );
  // itree = 176
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735673,-0.000155567) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.511063,-9.78218e-05) , 
0.135588, 0, 15, 0, 0.69054,-0.185932) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.564963,-7.51308e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.275638,0.000183063) , 
0.70306, 0, 14, 0, 0.49065,0.00794977) , 
0.982437, 0, 7, 0, 0.597809,-0.0959882) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.652796,-5.69094e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.235698,0.00170587) , 
0.0932223, 0, 15, 0, 0.516252,-0.0539113) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.425831,6.2132e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.142094,0.000554273) , 
1.34633, 1, 9, 0, 0.188904,0.262746) , 
1.06112, 1, 17, 0, 0.267523,0.186694) , 
0.637994, 0, 14, 0, 0.481875,0.00323679)    );
  // itree = 177
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.833473,-0.000167921) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.624002,-0.000172973) , 
1.0512, 1, 18, 0, 0.721061,-0.213495) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.82074,-0.000199714) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.486364,-4.1419e-05) , 
2.39349, 0, 11, 0, 0.525168,-0.0235868) , 
1.22638, 0, 7, 0, 0.608376,-0.104253) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.840661,-0.000106895) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.474304,4.07491e-05) , 
2.67775, 0, 8, 0, 0.517456,-0.0511708) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.442616,8.48596e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.208367,0.000509333) , 
0.498646, 1, 10, 0, 0.262183,0.194592) , 
2.09432, 0, 10, 0, 0.334703,0.124774) , 
0.671644, 0, 14, 0, 0.486345,-0.00212948)    );
  // itree = 178
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.752542,-0.000136652) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.320792,-1.93628e-05) , 
-1.3619, 0, 5, 0, 0.736032,-0.227771) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674021,-0.000161155) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.246117,9.69394e-05) , 
0.981139, 0, 7, 0, 0.452712,0.048336) , 
0.357672, 0, 2, 0, 0.674964,-0.168258) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.90068,-0.000214999) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.320435,-5.77867e-05) , 
0.117972, 1, 16, 0, 0.783337,-0.299659) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.913115,-0.000185642) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.255195,0.000222066) , 
0.796451, 0, 16, 0, 0.268899,0.194688) , 
2.31553, 0, 7, 0, 0.312019,0.153252) , 
0.706203, 0, 14, 0, 0.494093,-0.00803623)    );
  // itree = 179
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694604,-0.000163516) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.511286,-5.1379e-05) , 
0.740038, 0, 7, 0, 0.638336,-0.13352) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.839123,-0.000159746) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.30187,-9.13439e-06) , 
2.84361, 0, 9, 0, 0.372653,0.124264) , 
0.0819633, 1, 0, 0, 0.599785,-0.0961149) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.522415,3.31549e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180112,0.000810572) , 
1.79291, 1, 18, 0, 0.423147,0.050441) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.532248,-3.14955e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.109731,0.000517373) , 
0.774723, 1, 17, 0, 0.158636,0.28058) , 
0.116408, 0, 15, 0, 0.299994,0.157591) , 
0.657988, 0, 14, 0, 0.475642,0.00894423)    );
  // itree = 180
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67541,-0.000115263) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.513227,-9.70377e-05) , 
0.452697, 0, 2, 0, 0.629307,-0.128788) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.629126,1.92953e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.310991,0.000155885) , 
1.49568, 0, 11, 0, 0.43099,0.0498173) , 
0.308915, 1, 16, 0, 0.548551,-0.0560586) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.678253,-0.000172389) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.108203,0.000789873) , 
0.576479, 0, 13, 0, 0.490761,-0.0211341) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.453598,-3.41476e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0679618,0.0042608) , 
0.085124, 0, 15, 0, 0.117469,0.316344) , 
0.90688, 1, 17, 0, 0.192081,0.24889) , 
0.0889957, 0, 15, 0, 0.490403,-0.00631504)    );
  // itree = 181
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.747055,-0.000138826) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.50505,-5.68529e-05) , 
0.311796, 0, 2, 0, 0.712561,-0.204912) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.551143,-5.2468e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22354,4.32485e-06) , 
0.299185, 0, 15, 0, 0.42674,0.0731868) , 
0.315374, 1, 16, 0, 0.661056,-0.154798) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.560997,-3.19231e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.345757,0.000205101) , 
0.313647, 1, 16, 0, 0.446266,0.0313589) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.477247,2.72928e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.151063,0.0032114) , 
0.0820119, 0, 15, 0, 0.214411,0.218042) , 
0.0898002, 0, 15, 0, 0.380459,0.0843453) , 
0.697055, 0, 14, 0, 0.519576,-0.0342202)    );
  // itree = 182
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.716191,-0.000101558) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.572581,-0.000122925) , 
0.636136, 0, 2, 0, 0.639953,-0.137357) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.777429,-6.40951e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.337493,0.000376142) , 
0.0657214, 1, 12, 0, 0.411805,0.0460478) , 
0.116155, 0, 15, 0, 0.580064,-0.0892125) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.555369,-5.96682e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.290267,0.000212414) , 
1.64551, 0, 11, 0, 0.353706,0.117748) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.581051,-0.000241514) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.05688,0.000421116) , 
2.52631, 0, 11, 0, 0.0623442,0.390055) , 
0.271367, 1, 0, 0, 0.28977,0.177503) , 
0.353683, 1, 16, 0, 0.489829,-0.00630694)    );
  // itree = 183
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.8155,-0.000124979) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.600266,-0.000102328) , 
0.271368, 0, 12, 0, 0.68061,-0.175219) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761854,-0.000580163) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.395972,-4.36014e-05) , 
1.96491, 0, 7, 0, 0.43963,0.0605341) , 
0.345354, 0, 1, 0, 0.597379,-0.0937931) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.671611,-7.27699e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.303034,0.000215128) , 
0.487157, 1, 8, 0, 0.427594,0.0350324) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.402585,0.000200932) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154206,0.000417598) , 
-0.867894, 1, 3, 0, 0.207836,0.245078) , 
1.15778, 0, 7, 0, 0.2779,0.17811) , 
0.66057, 0, 14, 0, 0.46598,0.0180389)    );
  // itree = 184
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767188,-0.000218388) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.070676,-9.67229e-05) , 
0.0796953, 1, 0, 0, 0.749759,-0.241342) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.564822,-7.92925e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.328611,0.000239283) , 
2.24062, 1, 18, 0, 0.527344,-0.0279752) , 
1.72669, 0, 7, 0, 0.581494,-0.0799227) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.808246,-0.00028002) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.068531,0.0326247) , 
2.54337, 1, 9, 0, 0.681229,-0.211355) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.413144,1.28661e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172829,0.000407621) , 
1.68022, 0, 7, 0, 0.202802,0.246612) , 
-1.85693, 1, 4, 0, 0.231386,0.21925) , 
0.636914, 0, 14, 0, 0.463652,0.0207751)    );
  // itree = 185
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.808328,-0.000182478) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.634758,-0.000112663) , 
0.243782, 1, 8, 0, 0.679758,-0.171947) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.675308,-0.00019526) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.358228,0.00010188) , 
0.874346, 0, 14, 0, 0.468472,0.0330638) , 
0.308013, 0, 1, 0, 0.612275,-0.106468) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738604,-0.000160829) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.361792,8.7242e-05) , 
0.427845, 1, 1, 0, 0.558139,-0.0687523) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.430887,0.000169818) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238352,0.000249657) , 
2.8424, 0, 9, 0, 0.279299,0.178505) , 
0.307192, 0, 15, 0, 0.321642,0.140958) , 
0.694595, 0, 14, 0, 0.465117,0.0188129)    );
  // itree = 186
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.793612,-0.000152513) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.63237,-0.000120921) , 
0.619056, 0, 3, 0, 0.699974,-0.195092) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.522455,-4.61464e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253185,2.28574e-05) , 
0.0163697, 1, 6, 0, 0.416945,0.0795044) , 
0.740047, 0, 7, 0, 0.611844,-0.109589) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.608788,3.02488e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.244542,0.000708839) , 
1.79081, 1, 18, 0, 0.500788,-0.0430633) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.479198,0.00012396) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163582,0.000539437) , 
-1.1136, 1, 3, 0, 0.209025,0.239286) , 
1.4958, 0, 11, 0, 0.313468,0.138212) , 
0.638, 0, 14, 0, 0.507059,-0.0225647)    );
  // itree = 187
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.801736,-0.000145717) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.406763,-9.04229e-06) , 
0.394985, 1, 15, 0, 0.761481,-0.252623) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.649212,-0.00016026) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.44195,-4.15498e-05) , 
0.808249, 0, 14, 0, 0.562885,-0.0590846) , 
0.39816, 0, 1, 0, 0.657637,-0.151423) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.885313,-0.000106661) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.406591,0.000518206) , 
0.478247, 1, 8, 0, 0.57723,-0.109265) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.429926,6.27082e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.1821,0.000247924) , 
0.0454795, 1, 0, 0, 0.26758,0.193885) , 
2.99199, 0, 9, 0, 0.305731,0.156534) , 
0.697055, 0, 14, 0, 0.487971,-0.00294641)    );
  // itree = 188
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.684307,-0.00011532) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.376243,-3.80137e-05) , 
-1.1142, 0, 5, 0, 0.655464,-0.150083) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.584366,-0.000145804) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.263136,0.000190821) , 
0.83031, 0, 13, 0, 0.377262,0.107787) , 
0.136145, 0, 15, 0, 0.616186,-0.113675) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.497266,8.23961e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.147586,0.000973255) , 
0.0893674, 0, 15, 0, 0.391492,0.0655646) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.49771,4.67099e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134052,0.000653676) , 
1.94327, 0, 11, 0, 0.187725,0.259653) , 
1.64363, 1, 18, 0, 0.3091,0.144043) , 
0.641941, 0, 14, 0, 0.504851,-0.0202381)    );
  // itree = 189
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709303,-0.00014753) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.397604,6.41612e-05) , 
0.265919, 0, 2, 0, 0.67636,-0.169994) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.604416,-6.86782e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.312167,-8.45544e-05) , 
-0.37179, 1, 3, 0, 0.455813,0.0500568) , 
0.322612, 1, 15, 0, 0.630269,-0.124007) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.631596,-8.99184e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.329281,0.000191193) , 
0.633639, 0, 14, 0, 0.453298,0.0162549) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.301411,0.000139976) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.133011,0.000577919) , 
0.780475, 0, 2, 0, 0.194345,0.261058) , 
0.935106, 0, 7, 0, 0.311718,0.150098) , 
0.695491, 0, 14, 0, 0.472993,0.0113248)    );
  // itree = 190
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718231,-0.000131551) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.56753,-2.09423e-05) , 
0.70398, 0, 14, 0, 0.685178,-0.179826) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.690652,-0.000164296) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.214112,0.000858691) , 
0.877317, 0, 14, 0, 0.454685,0.0448935) , 
0.317754, 0, 2, 0, 0.651149,-0.14665) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.880679,-0.000214512) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.16651,0.0186577) , 
2.23739, 0, 7, 0, 0.819959,-0.342654) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.384447,0.000225927) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0472149,0.00531797) , 
0.0629401, 0, 15, 0, 0.334431,0.121051) , 
0.628431, 1, 17, 0, 0.370214,0.0868769) , 
0.659126, 0, 14, 0, 0.53832,-0.0528613)    );
  // itree = 191
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703874,-0.000146373) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.480763,-6.65401e-05) , 
0.136289, 0, 15, 0, 0.659538,-0.155407) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.549561,-0.000101824) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.30138,2.41501e-05) , 
0.782223, 0, 14, 0, 0.398377,0.0983865) , 
0.740007, 0, 7, 0, 0.574398,-0.0726691) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.620455,-4.29684e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318439,0.000328531) , 
0.172892, 0, 15, 0, 0.393241,0.0598692) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666463,1.13175e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134077,0.000566036) , 
-0.97553, 1, 3, 0, 0.199107,0.250057) , 
0.358515, 1, 16, 0, 0.298043,0.153132) , 
0.638, 0, 14, 0, 0.473513,0.00976066)    );
  // itree = 192
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692019,-0.00011371) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.522307,-5.02674e-05) , 
0.454199, 0, 2, 0, 0.630769,-0.129109) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.819679,-0.000231999) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.314354,0.00016049) , 
2.84275, 0, 9, 0, 0.376199,0.114342) , 
0.122945, 1, 0, 0, 0.603205,-0.102749) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.510045,1.95174e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.189778,0.000965004) , 
0.0912836, 0, 15, 0, 0.402132,0.0519718) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.412636,0.000379003) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125264,0.00105608) , 
2.54254, 0, 10, 0, 0.161421,0.28233) , 
1.79077, 1, 18, 0, 0.318787,0.131732) , 
0.624085, 0, 14, 0, 0.510916,-0.0266637)    );
  // itree = 193
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.751991,-0.000135517) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.462357,4.67846e-06) , 
0.110562, 1, 0, 0, 0.722442,-0.214026) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.614073,-0.00013185) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.281531,0.000402092) , 
0.805835, 0, 14, 0, 0.516631,-0.0141341) , 
0.302952, 0, 1, 0, 0.661417,-0.154756) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738512,-0.0001651) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259161,-0.000125205) , 
2.2441, 0, 9, 0, 0.633557,-0.158875) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.354127,0.000164268) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.103654,0.00525384) , 
0.0636216, 0, 15, 0, 0.317953,0.141126) , 
2.10391, 0, 7, 0, 0.340617,0.119582) , 
0.695075, 0, 14, 0, 0.506211,-0.0220283)    );
  // itree = 194
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.659595,-0.00012092) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251392,-5.86733e-05) , 
0.434108, 1, 15, 0, 0.639811,-0.134768) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.523235,-0.000107608) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.153142,0.000199863) , 
0.916851, 0, 7, 0, 0.30867,0.18773) , 
0.304014, 0, 2, 0, 0.59911,-0.0951292) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.533065,3.67839e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.293431,0.000299769) , 
0.439019, 1, 13, 0, 0.357502,0.097999) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817137,-0.000866886) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0918648,0.000664873) , 
-2.35243, 1, 5, 0, 0.104073,0.342048) , 
0.52012, 1, 16, 0, 0.310149,0.143599) , 
0.658743, 0, 14, 0, 0.479197,0.00393841)    );
  // itree = 195
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736461,-0.000144608) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.109767,0.000294744) , 
0.572249, 0, 14, 0, 0.714538,-0.210825) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.500092,-2.45282e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221853,5.30342e-05) , 
0.180637, 0, 7, 0, 0.457038,0.032546) , 
0.948349, 0, 7, 0, 0.590456,-0.0935517) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.546451,3.79828e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265121,0.000283028) , 
0.294881, 0, 16, 0, 0.316118,0.137725) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.413818,9.21992e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0517415,0.000605814) , 
2.54253, 0, 10, 0, 0.101264,0.330428) , 
0.32588, 1, 16, 0, 0.222618,0.221585) , 
0.116867, 0, 15, 0, 0.500055,-0.0161024)    );
  // itree = 196
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706639,-0.000125682) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.394231,0.000104362) , 
0.112698, 1, 0, 0, 0.673128,-0.167288) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.603924,-0.000166725) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.178119,0.00141222) , 
0.877317, 0, 14, 0, 0.377506,0.120329) , 
0.311808, 0, 2, 0, 0.635171,-0.130359) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.778906,-0.000113657) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.417824,0.000100469) , 
0.169187, 0, 15, 0, 0.52079,-0.0579996) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.45501,0.000218917) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183406,0.000371636) , 
0.255258, 0, 15, 0, 0.227848,0.222556) , 
1.37088, 0, 7, 0, 0.30196,0.151578) , 
0.659126, 0, 14, 0, 0.504505,-0.0197997)    );
  // itree = 197
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677852,-0.000121108) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.297181,6.14945e-05) , 
0.122945, 1, 0, 0, 0.649387,-0.142713) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.697908,-0.000261697) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201764,0.000693305) , 
0.0732341, 1, 16, 0, 0.341227,0.146847) , 
0.132299, 0, 15, 0, 0.613334,-0.108836) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727003,-0.000146141) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.140415,0.00171077) , 
0.695433, 1, 2, 0, 0.626302,-0.168932) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.38401,0.000155993) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158791,0.000656892) , 
1.00191, 1, 8, 0, 0.29011,0.162324) , 
2.62978, 0, 8, 0, 0.325815,0.127142) , 
0.659385, 0, 14, 0, 0.494884,-0.0116195)    );
  // itree = 198
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.835613,-0.000148533) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.667756,-0.000256022) , 
0.545151, 0, 2, 0, 0.785239,-0.275918) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.598388,-7.75421e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26485,0.000144758) , 
1.21222, 1, 8, 0, 0.536269,-0.0346766) , 
1.23334, 0, 7, 0, 0.658676,-0.153283) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.94603,-0.000216252) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.063758,0.00311677) , 
0.920083, 1, 18, 0, 0.705509,-0.242675) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.641766,-0.00014302) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.260764,0.000345024) , 
2.10392, 0, 7, 0, 0.288334,0.164688) , 
0.226948, 1, 13, 0, 0.308165,0.145324) , 
0.66057, 0, 14, 0, 0.525489,-0.0398192)    );
  // itree = 199
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.848586,-0.000183082) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.666898,-0.000282949) , 
0.636099, 0, 2, 0, 0.758152,-0.254141) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.73001,-0.000168855) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227684,0.00303676) , 
0.221002, 0, 15, 0, 0.481835,0.0109715) , 
0.0159709, 1, 0, 0, 0.722447,-0.219884) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668572,-7.50005e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.469528,7.41395e-06) , 
2.09437, 0, 10, 0, 0.526663,-0.0459154) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.462523,1.71574e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168596,0.000467145) , 
0.174134, 0, 15, 0, 0.32851,0.143721) , 
0.587231, 0, 7, 0, 0.455132,0.0225412) , 
0.132943, 1, 16, 0, 0.514631,-0.0314181)    );
  // itree = 200
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727502,-0.000121496) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.545032,-0.000202333) , 
0.499687, 0, 2, 0, 0.681399,-0.17817) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.597802,-9.37852e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.321486,0.000160017) , 
0.310808, 1, 16, 0, 0.459773,0.0313475) , 
0.969392, 0, 7, 0, 0.563434,-0.06665) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.457085,-3.65112e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.17921,0.00076428) , 
0.0745278, 0, 15, 0, 0.350092,0.106537) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.584576,-3.34573e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0698481,0.00140053) , 
2.54286, 0, 10, 0, 0.142404,0.289863) , 
0.968628, 0, 7, 0, 0.242525,0.201487) , 
0.115897, 0, 15, 0, 0.481533,0.0017826)    );
  // itree = 201
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.786046,-0.000171127) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.606939,-9.26211e-05) , 
1.22804, 0, 7, 0, 0.704554,-0.195556) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.641649,-0.000235963) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.348108,5.18895e-05) , 
0.115345, 1, 16, 0, 0.457248,0.0447068) , 
0.30581, 0, 1, 0, 0.630096,-0.123218) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.567393,-6.46746e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340873,0.000181275) , 
1.37073, 0, 7, 0, 0.393895,0.0747749) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.91197,-0.000423081) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0690665,0.00524063) , 
2.35189, 0, 3, 0, 0.0981607,0.308591) , 
0.0637927, 0, 15, 0, 0.353536,0.106684) , 
0.697055, 0, 14, 0, 0.487363,-0.00456512)    );
  // itree = 202
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749199,-0.00012936) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.521912,-5.83433e-06) , 
0.315559, 1, 16, 0, 0.702681,-0.196792) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.66162,-0.000277352) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.243157,0.000334438) , 
1.6833, 0, 7, 0, 0.36336,0.138485) , 
-1.11429, 0, 5, 0, 0.674405,-0.168853) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.618875,-9.26177e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.215009,0.000180014) , 
0.87009, 1, 2, 0, 0.565942,-0.104633) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.453452,0.000146724) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.169786,0.000579171) , 
0.298106, 1, 16, 0, 0.294904,0.157706) , 
2.09435, 0, 10, 0, 0.377303,0.0779512) , 
0.671644, 0, 14, 0, 0.550244,-0.0657115)    );
  // itree = 203
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.640175,-0.000111186) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.44414,-1.21467e-05) , 
0.394062, 1, 15, 0, 0.615249,-0.112426) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.750905,-0.00354206) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163867,0.000182298) , 
0.133447, 1, 1, 0, 0.187431,0.279578) , 
0.0846761, 0, 15, 0, 0.598811,-0.0973639) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.963165,-0.000160042) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.00862233,7.18936e-05) , 
0.646372, 1, 16, 0, 0.769839,-0.30889) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735337,-0.000105875) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.231807,0.000389027) , 
0.220385, 1, 13, 0, 0.25236,0.195017) , 
0.242955, 0, 6, 0, 0.277507,0.170529) , 
0.636907, 0, 14, 0, 0.488867,-0.00569611)    );
  // itree = 204
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691788,-0.000118942) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.397467,0.000189181) , 
0.311808, 0, 2, 0, 0.650209,-0.14475) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.759434,-0.00015724) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.379067,-8.34547e-05) , 
0.662868, 0, 1, 0, 0.426223,0.0767109) , 
-0.371354, 0, 3, 0, 0.591989,-0.0871865) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.972161,-0.000236685) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165576,0.00164046) , 
-0.460696, 0, 4, 0, 0.899909,-0.412932) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.544823,1.56349e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251897,0.000283689) , 
0.253313, 0, 15, 0, 0.301072,0.15198) , 
-2.10479, 1, 3, 0, 0.321049,0.133134) , 
0.673088, 0, 14, 0, 0.46773,0.0138575)    );
  // itree = 205
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69998,-0.000135683) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.37211,0.000187654) , 
-1.36194, 0, 5, 0, 0.676756,-0.173392) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.561595,-7.51405e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249296,7.16312e-05) , 
0.36869, 1, 16, 0, 0.484075,0.0146485) , 
0.0163697, 1, 6, 0, 0.606272,-0.104606) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705384,8.94322e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.13639,0.000714667) , 
-0.371573, 0, 5, 0, 0.586933,-0.127806) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663538,-0.00010302) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.205788,0.000454915) , 
2.86881, 0, 8, 0, 0.237471,0.208018) , 
1.49605, 1, 9, 0, 0.324908,0.123993) , 
0.637994, 0, 14, 0, 0.505422,-0.022668)    );
  // itree = 206
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720902,-0.000115647) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.44863,-4.50949e-05) , 
0.363232, 0, 2, 0, 0.683468,-0.181474) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.511263,-2.82262e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198292,0.000857173) , 
1.0601, 1, 17, 0, 0.320758,0.129807) , 
0.115994, 0, 15, 0, 0.605156,-0.114266) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728741,-2.5674e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22825,-7.8324e-05) , 
0.534611, 1, 14, 0, 0.598578,-0.130034) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.798841,-0.000133603) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209999,0.000386761) , 
0.773152, 0, 0, 0, 0.230109,0.231652) , 
2.39285, 0, 10, 0, 0.298879,0.164148) , 
0.390647, 1, 16, 0, 0.531828,-0.0476084)    );
  // itree = 207
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719489,-0.000125665) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.453286,-3.5456e-05) , 
0.383454, 1, 16, 0, 0.686861,-0.179331) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.584268,-0.000150054) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.190538,0.000287309) , 
0.885014, 0, 14, 0, 0.365312,0.133319) , 
0.304014, 0, 2, 0, 0.646274,-0.139868) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.785851,-0.000224677) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22679,0.0178047) , 
0.533245, 0, 2, 0, 0.7352,-0.260452) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.383448,0.000128407) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.135233,0.000888351) , 
0.0904962, 0, 15, 0, 0.308279,0.146505) , 
0.0944228, 1, 16, 0, 0.334625,0.121392) , 
0.677134, 0, 14, 0, 0.509291,-0.0250332)    );
  // itree = 208
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.733282,-0.000131655) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.534506,-3.10835e-05) , 
0.985053, 1, 8, 0, 0.662791,-0.157732) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.596823,-0.000150998) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225495,7.96976e-05) , 
0.731878, 0, 7, 0, 0.49133,0.0115116) , 
1.04712, 1, 11, 0, 0.602176,-0.0979016) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556163,-3.00628e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.291111,0.000357721) , 
2.0944, 0, 10, 0, 0.374764,0.0800371) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.419888,0.000132766) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128995,0.000496273) , 
1.1968, 1, 9, 0, 0.16432,0.280078) , 
1.63995, 1, 18, 0, 0.288952,0.161607) , 
0.66057, 0, 14, 0, 0.472918,0.00918987)    );
  // itree = 209
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.773965,-0.000212662) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.576067,-9.11845e-05) , 
1.6714, 0, 7, 0, 0.639415,-0.135426) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676609,-7.66337e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.369682,0.00011993) , 
2.39354, 0, 10, 0, 0.42208,0.0621663) , 
0.309615, 1, 16, 0, 0.554777,-0.0584768) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.904152,-0.000219608) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154484,0.000318822) , 
1.79823, 1, 9, 0, 0.720966,-0.274903) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728087,-0.000245765) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211258,0.000541882) , 
2.71341, 0, 7, 0, 0.239952,0.202466) , 
0.812517, 0, 1, 0, 0.288542,0.154244) , 
0.117052, 0, 15, 0, 0.479638,0.00155944)    );
  // itree = 210
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742229,-0.0001496) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.484845,-4.27161e-05) , 
0.288633, 1, 16, 0, 0.681663,-0.178638) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.890909,-0.000175415) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.432438,2.95258e-05) , 
0.242955, 0, 6, 0, 0.462146,0.0260406) , 
0.706484, 0, 7, 0, 0.597802,-0.100445) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.610533,-6.91044e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236035,0.000323155) , 
0.0851759, 0, 15, 0, 0.431947,0.0277176) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.494289,6.06821e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.105402,0.000829555) , 
2.54286, 0, 10, 0, 0.152895,0.278596) , 
1.23354, 0, 7, 0, 0.262232,0.180298) , 
0.116155, 0, 15, 0, 0.514081,-0.0304033)    );
  // itree = 211
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703558,-0.000119424) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.434583,6.11655e-05) , 
0.120632, 1, 0, 0, 0.671683,-0.167669) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.608892,-0.000159675) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.286049,0.000576659) , 
0.873464, 0, 14, 0, 0.428034,0.0693719) , 
0.315883, 0, 2, 0, 0.638133,-0.135029) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.632347,-2.73142e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0910646,0.000618905) , 
0.0329675, 0, 6, 0, 0.484325,-0.0329846) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.317919,0.000270807) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.116264,0.000714496) , 
0.445553, 1, 16, 0, 0.250459,0.195083) , 
1.3464, 1, 9, 0, 0.28958,0.156932) , 
0.642489, 0, 14, 0, 0.520563,-0.0365485)    );
  // itree = 212
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7472,-0.000136869) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.570302,-9.4989e-05) , 
0.729082, 1, 8, 0, 0.665899,-0.159081) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.565076,-0.000148905) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.361108,0.000155788) , 
0.80555, 0, 14, 0, 0.483155,0.018421) , 
0.45421, 0, 2, 0, 0.598053,-0.093181) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645577,-7.80057e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34243,0.000105673) , 
0.0152409, 1, 6, 0, 0.448135,0.0105008) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.389009,0.000256614) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.123971,0.000504855) , 
0.750917, 1, 18, 0, 0.196252,0.250213) , 
0.904102, 0, 7, 0, 0.314958,0.137243) , 
0.670887, 0, 14, 0, 0.470032,0.0110211)    );
  // itree = 213
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.827263,-0.000197513) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.534764,-0.000229276) , 
-1.11433, 0, 4, 0, 0.789555,-0.280357) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.626899,-8.13256e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.328295,8.70237e-05) , 
0.684776, 0, 14, 0, 0.576809,-0.0758084) , 
1.72669, 0, 7, 0, 0.630656,-0.127581) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.857078,-0.000265771) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.325983,0.000635171) , 
0.746226, 1, 13, 0, 0.719488,-0.250982) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670317,-0.000151515) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245275,0.000388176) , 
0.628431, 1, 17, 0, 0.262482,0.183029) , 
0.598413, 1, 9, 0, 0.296635,0.150595) , 
0.635137, 0, 14, 0, 0.519937,-0.035373)    );
  // itree = 214
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.783478,-0.00011437) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.619414,-0.000110676) , 
0.538901, 0, 1, 0, 0.675538,-0.174242) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742625,-0.000237352) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.216115,0.00310157) , 
0.614972, 1, 17, 0, 0.321392,0.12521) , 
0.0891212, 0, 15, 0, 0.628849,-0.134764) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.519126,-6.99597e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.302249,0.000213385) , 
0.975476, 0, 7, 0, 0.358799,0.118187) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.226487,0.0111328) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0302199,0.000513383) , 
0.954604, 0, 2, 0, 0.0430206,0.370983) , 
0.0893674, 0, 15, 0, 0.295235,0.169073) , 
0.309541, 1, 16, 0, 0.508583,-0.0252329)    );
  // itree = 215
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760426,-0.000138471) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.578113,-8.30743e-05) , 
1.06516, 1, 17, 0, 0.642178,-0.143653) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764702,-0.000237973) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209387,0.00141737) , 
0.0509456, 1, 16, 0, 0.260163,0.175386) , 
0.0895322, 0, 15, 0, 0.590395,-0.100407) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.573598,-9.66351e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.31621,0.000296641) , 
0.927115, 0, 7, 0, 0.382251,0.0861093) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.787098,-0.00117211) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0914936,0.000735706) , 
0.744636, 0, 14, 0, 0.10962,0.337888) , 
0.818594, 1, 2, 0, 0.32889,0.135389) , 
0.353659, 1, 16, 0, 0.509296,-0.0272813)    );
  // itree = 216
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.878979,-0.000161003) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143761,0.00290201) , 
0.3283, 1, 16, 0, 0.83048,-0.32341) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668333,-0.000160951) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.453721,-4.27506e-05) , 
0.768222, 0, 14, 0, 0.571733,-0.0677485) , 
0.907136, 0, 2, 0, 0.607422,-0.103012) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.923179,-0.000390511) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306108,-6.3414e-05) , 
2.18451, 0, 17, 0, 0.681142,-0.214589) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.389204,0.000153994) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.146058,0.000410837) , 
-0.371778, 1, 4, 0, 0.254395,0.194849) , 
2.54277, 0, 11, 0, 0.277767,0.172425) , 
0.659126, 0, 14, 0, 0.476387,0.00647155)    );
  // itree = 217
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672573,-0.000118115) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.424815,3.0567e-05) , 
0.350417, 0, 2, 0, 0.627971,-0.122018) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.471863,-4.19915e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.155138,0.000362413) , 
1.94062, 0, 18, 0, 0.288711,0.185971) , 
0.110086, 0, 15, 0, 0.598885,-0.0956128) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.835485,-0.000260037) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0454497,0.000639372) , 
0.751173, 1, 13, 0, 0.682833,-0.215443) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.37577,0.000215803) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.156645,0.000480501) , 
0.312555, 1, 16, 0, 0.248472,0.195828) , 
0.598412, 1, 9, 0, 0.27679,0.169015) , 
0.641403, 0, 14, 0, 0.482815,-0.000251893)    );
  // itree = 218
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.667088,-0.000120272) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.445679,6.45561e-05) , 
0.304019, 0, 2, 0, 0.638304,-0.132454) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676238,-0.000198748) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184356,0.000632329) , 
0.107557, 1, 16, 0, 0.380895,0.104384) , 
0.136091, 0, 15, 0, 0.598907,-0.0962058) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.892876,-0.000237709) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138807,-8.39426e-06) , 
0.785265, 0, 2, 0, 0.661215,-0.194738) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.469263,0.000129791) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.195702,0.00040352) , 
3.02048, 0, 9, 0, 0.220796,0.22308) , 
0.598492, 1, 9, 0, 0.249595,0.19576) , 
0.641941, 0, 14, 0, 0.477938,0.00490354)    );
  // itree = 219
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731762,-0.000116263) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.532656,-2.53763e-05) , 
0.976723, 1, 8, 0, 0.657318,-0.158731) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.75052,-0.000215753) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.33607,4.65041e-05) , 
2.30805, 0, 11, 0, 0.43728,0.0557738) , 
1.19676, 1, 11, 0, 0.592288,-0.095337) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.618849,-4.94359e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.364865,0.000181057) , 
0.0927145, 1, 15, 0, 0.456946,0.0049656) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.62609,-0.000209216) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.124006,0.00350313) , 
0.622946, 1, 17, 0, 0.166155,0.25579) , 
0.0852895, 0, 15, 0, 0.305996,0.135169) , 
0.116474, 0, 15, 0, 0.517274,-0.0349395)    );
  // itree = 220
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695043,-0.000127413) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.153216,8.90777e-06) , 
0.512507, 1, 16, 0, 0.678824,-0.170212) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.617876,-0.000181026) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.323004,0.000366446) , 
0.873883, 0, 14, 0, 0.44599,0.0546341) , 
0.263123, 0, 1, 0, 0.629038,-0.122133) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.52131,-3.98136e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.311338,0.000195429) , 
0.30818, 1, 16, 0, 0.402765,0.0705139) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760552,-0.000274345) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.117532,0.000891968) , 
0.312558, 1, 14, 0, 0.130508,0.28455) , 
0.0908507, 0, 15, 0, 0.324614,0.131953) , 
0.694257, 0, 14, 0, 0.477843,0.00406057)    );
  // itree = 221
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719294,-0.000110316) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.269096,5.17485e-05) , 
2.39351, 1, 10, 0, 0.706775,-0.203617) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622787,-0.000165438) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.348837,9.03489e-05) , 
0.806366, 0, 14, 0, 0.486085,0.0132785) , 
0.543909, 0, 2, 0, 0.608202,-0.106739) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769837,-0.00010878) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.179773,0.000848291) , 
0.620224, 1, 13, 0, 0.600129,-0.154126) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.384099,0.000234496) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191005,0.000513973) , 
1.48637, 1, 17, 0, 0.288394,0.157328) , 
2.64875, 0, 8, 0, 0.31662,0.129127) , 
0.642261, 0, 14, 0, 0.501068,-0.0200761)    );
  // itree = 222
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.81244,-0.000162972) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.372113,-9.45287e-05) , 
-0.128736, 0, 3, 0, 0.793377,-0.283669) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.620968,-0.000113745) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.407437,-5.27803e-05) , 
0.012787, 1, 6, 0, 0.535605,-0.0306256) , 
1.19008, 1, 17, 0, 0.649021,-0.141961) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.570465,-8.54967e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.281206,0.000292796) , 
0.614283, 0, 14, 0, 0.426328,0.0366968) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.34688,0.000122779) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.132345,0.000594385) , 
0.361024, 1, 16, 0, 0.22352,0.227775) , 
0.913812, 0, 7, 0, 0.313812,0.142705) , 
0.697055, 0, 14, 0, 0.485914,-0.00344716)    );
  // itree = 223
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.747848,-0.000112576) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.605498,-9.86771e-05) , 
0.550769, 0, 2, 0, 0.676591,-0.169325) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.518971,-0.000124718) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.144213,0.0004773) , 
0.249552, 1, 16, 0, 0.42589,0.0669747) , 
0.157958, 0, 15, 0, 0.629152,-0.124611) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622453,-0.000137088) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0988524,0.000819339) , 
0.267272, 1, 16, 0, 0.548866,-0.0891886) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.425691,0.000105319) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.185924,0.000512988) , 
1.49568, 0, 11, 0, 0.263319,0.184153) , 
1.73584, 0, 7, 0, 0.301558,0.147549) , 
0.659385, 0, 14, 0, 0.499663,-0.0170336)    );
  // itree = 224
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.747914,-0.000123963) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.55444,-0.000141715) , 
0.458642, 0, 2, 0, 0.693553,-0.186018) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.514882,-3.38212e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174034,0.000174251) , 
0.365132, 0, 2, 0, 0.473075,0.0129358) , 
0.29585, 1, 16, 0, 0.604828,-0.105955) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.818466,-0.000201025) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.324483,0.000119615) , 
1.196, 1, 10, 0, 0.641421,-0.158535) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.418191,8.9117e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.218055,0.000462266) , 
0.492506, 1, 8, 0, 0.280225,0.165283) , 
0.759123, 1, 17, 0, 0.325568,0.124633) , 
0.143345, 0, 15, 0, 0.507755,-0.0258009)    );
  // itree = 225
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7086,-0.000123889) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.453085,-2.20125e-05) , 
0.0427469, 1, 6, 0, 0.675693,-0.169041) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.624878,-0.000140174) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192332,0.000560016) , 
0.180457, 1, 16, 0, 0.422875,0.0750472) , 
0.31179, 0, 2, 0, 0.640662,-0.135219) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.85154,-0.000259427) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.176215,0.000536823) , 
0.754765, 1, 13, 0, 0.734403,-0.264191) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666907,-0.000131583) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22918,0.000300754) , 
2.10453, 0, 5, 0, 0.253543,0.19237) , 
2.54278, 0, 11, 0, 0.284184,0.163276) , 
0.658743, 0, 14, 0, 0.505461,-0.0220096)    );
  // itree = 226
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686391,-0.00012304) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.508627,1.18423e-05) , 
0.350411, 0, 2, 0, 0.651228,-0.143636) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.865472,-0.0001664) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.33461,0.000234) , 
0.236078, 0, 6, 0, 0.378182,0.0918154) , 
0.658898, 0, 14, 0, 0.590236,-0.0910427) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.89475,-0.000282321) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226003,-7.42469e-06) , 
1.04977, 1, 18, 0, 0.770476,-0.29281) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.425571,-2.14505e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.207667,0.000364945) , 
0.598269, 1, 10, 0, 0.265615,0.181343) , 
2.69259, 0, 11, 0, 0.293084,0.155544) , 
0.14413, 0, 15, 0, 0.48446,-0.00326613)    );
  // itree = 227
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.883958,-0.000178229) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.65116,-0.000141593) , 
0.173679, 0, 0, 0, 0.673682,-0.168498) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64654,-6.16804e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.407821,-3.84963e-06) , 
0.632959, 0, 2, 0, 0.496738,0.00135539) , 
0.982427, 0, 7, 0, 0.588216,-0.0864567) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.750223,-5.81594e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.36843,0.000313746) , 
1.79428, 0, 9, 0, 0.559084,-0.104295) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.457265,0.000254755) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.117372,0.000567746) , 
0.251502, 0, 15, 0, 0.156983,0.280001) , 
2.09456, 0, 10, 0, 0.30263,0.140803) , 
0.638, 0, 14, 0, 0.485656,-0.00484266)    );
  // itree = 228
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.680041,-0.000100422) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.474652,-4.72912e-05) , 
0.299065, 0, 1, 0, 0.64072,-0.140448) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71114,-3.93803e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.261264,0.000385662) , 
0.416942, 0, 16, 0, 0.351574,0.092451) , 
0.11583, 0, 15, 0, 0.569433,-0.083028) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.654732,-6.38453e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229507,0.000140737) , 
1.2132, 0, 8, 0, 0.418938,0.0408911) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.371906,-2.117e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0836847,0.00101785) , 
0.700475, 0, 14, 0, 0.147946,0.306346) , 
1.49557, 0, 11, 0, 0.243925,0.212328) , 
0.460805, 1, 16, 0, 0.515352,-0.0339568)    );
  // itree = 229
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.825235,-0.000163597) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.66225,-0.000164372) , 
1.05025, 1, 18, 0, 0.730286,-0.220722) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.598763,-7.78429e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198369,0.00106994) , 
0.138136, 0, 15, 0, 0.557259,-0.0558833) , 
1.21979, 0, 7, 0, 0.629862,-0.12505) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.754332,-0.000151881) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.334483,0.000196026) , 
2.1046, 0, 5, 0, 0.367869,0.0820148) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.77712,-0.000805032) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0914351,0.00057801) , 
-2.35181, 1, 5, 0, 0.101475,0.337825) , 
0.489051, 1, 16, 0, 0.307435,0.140048) , 
0.659126, 0, 14, 0, 0.502992,-0.0207383)    );
  // itree = 230
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.855137,-0.000137139) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.60327,-0.000103442) , 
1.6284, 1, 17, 0, 0.786688,-0.276352) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.772705,-0.000211405) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.541529,-9.76832e-05) , 
2.24392, 0, 11, 0, 0.57031,-0.0653128) , 
0.249466, 1, 12, 0, 0.660281,-0.153064) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.800903,-0.000120489) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.383293,0.000113458) , 
0.7738, 0, 1, 0, 0.459187,0.00588951) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.610124,-7.45235e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.176413,0.00034035) , 
0.369001, 0, 12, 0, 0.205864,0.240999) , 
0.356328, 1, 16, 0, 0.351776,0.105577) , 
0.697055, 0, 14, 0, 0.506994,-0.0245529)    );
  // itree = 231
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.804571,-0.000247191) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204029,4.68592e-07) , 
0.515417, 0, 13, 0, 0.774651,-0.261285) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615647,-0.000105193) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.400503,9.0849e-06) , 
0.403461, 0, 2, 0, 0.535684,-0.0304157) , 
1.70905, 0, 7, 0, 0.600289,-0.0928312) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668552,-0.000137437) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212728,-5.89795e-05) , 
0.373048, 1, 5, 0, 0.57568,-0.102874) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.568409,6.92376e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.218803,0.000256044) , 
0.49548, 0, 15, 0, 0.243146,0.209671) , 
1.87011, 0, 7, 0, 0.282496,0.172686) , 
0.697055, 0, 14, 0, 0.439396,0.0415956)    );
  // itree = 232
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.73673,-0.000134422) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.203044,0.00126188) , 
0.534613, 1, 16, 0, 0.725488,-0.214735) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.690438,-0.000143554) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.273416,0.000181311) , 
1.34571, 1, 17, 0, 0.480731,0.0208251) , 
0.350417, 0, 2, 0, 0.669792,-0.161132) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.860278,-0.00016067) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.465944,-5.88655e-05) , 
0.652172, 0, 1, 0, 0.729881,-0.246072) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736937,-8.20124e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.298593,0.00020249) , 
0.242955, 0, 6, 0, 0.315414,0.14028) , 
0.756812, 1, 17, 0, 0.361441,0.0973757) , 
0.708182, 0, 14, 0, 0.508385,-0.0258158)    );
  // itree = 233
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745855,-0.000108932) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.527146,-4.7486e-05) , 
0.457988, 0, 2, 0, 0.684016,-0.180882) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.649203,-0.000177314) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.395723,8.91368e-08) , 
0.788413, 0, 14, 0, 0.504337,-0.00300995) , 
1.04719, 1, 11, 0, 0.620995,-0.118495) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.724526,-0.000132732) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118816,0.00075892) , 
0.531356, 0, 2, 0, 0.611364,-0.146264) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.643404,-8.26351e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.196587,0.000388167) , 
0.220367, 1, 13, 0, 0.215157,0.225128) , 
2.24367, 0, 11, 0, 0.252998,0.189657) , 
0.637994, 0, 14, 0, 0.501051,-0.018057)    );
  // itree = 234
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701009,-0.000137259) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335652,0.000586673) , 
-1.36189, 0, 5, 0, 0.678033,-0.169626) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.526423,-9.53498e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253048,0.000250746) , 
0.106777, 1, 0, 0, 0.488407,0.0127756) , 
1.21475, 1, 17, 0, 0.55833,-0.0544834) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.890396,-0.000177991) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.428507,8.32673e-05) , 
0.229876, 1, 8, 0, 0.601163,-0.138281) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.306153,0.000144819) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165233,0.000439438) , 
0.670466, 1, 8, 0, 0.215324,0.228082) , 
0.139664, 1, 16, 0, 0.259751,0.185897) , 
0.66057, 0, 14, 0, 0.432323,0.0469621)    );
  // itree = 235
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.930376,-9.67027e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.662994,-0.00015535) , 
0.467531, 0, 15, 0, 0.694914,-0.189239) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.632796,-0.000129287) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.40009,2.0652e-05) , 
0.781955, 0, 14, 0, 0.496875,0.00122469) , 
0.986685, 0, 7, 0, 0.602546,-0.100404) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.613937,-3.00692e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.288574,0.000266484) , 
0.172662, 0, 15, 0, 0.393379,0.0528402) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668053,-4.56035e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.140648,0.000499269) , 
2.54148, 0, 11, 0, 0.171561,0.26676) , 
0.70288, 1, 8, 0, 0.262454,0.179103) , 
0.636319, 0, 14, 0, 0.487788,-0.00608905)    );
  // itree = 236
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647848,-0.000121319) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.10202,0.000666423) , 
0.508852, 1, 16, 0, 0.635494,-0.141316) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.855261,-0.000394104) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.153647,0.0060395) , 
0.324615, 1, 17, 0, 0.203172,0.21101) , 
0.0617857, 0, 15, 0, 0.604566,-0.11611) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742081,-0.000125339) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388389,1.59902e-05) , 
1.09533, 1, 17, 0, 0.406802,0.0784447) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.546951,0.000434682) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0592634,0.0011414) , 
0.0342298, 1, 12, 0, 0.0732534,0.33747) , 
0.0927645, 0, 15, 0, 0.346986,0.124896) , 
0.981111, 0, 7, 0, 0.474344,0.00573252)    );
  // itree = 237
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660289,-0.000124269) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.223013,0.000128039) , 
0.226795, 0, 2, 0, 0.645238,-0.141143) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.771825,-0.000237274) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168666,0.000443119) , 
2.70179, 0, 7, 0, 0.254987,0.192466) , 
0.117449, 0, 15, 0, 0.562677,-0.0705647) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.507164,-6.04509e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.274662,0.000231644) , 
0.441243, 1, 8, 0, 0.339511,0.125558) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.173101,0.000759962) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0715625,0.000435075) , 
1.34623, 1, 10, 0, 0.112469,0.335306) , 
0.544967, 1, 16, 0, 0.288525,0.172661) , 
0.309541, 1, 16, 0, 0.454465,0.0254396)    );
  // itree = 238
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755769,-0.000170258) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.255305,-6.32702e-05) , 
0.103663, 0, 12, 0, 0.743863,-0.233943) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.814669,-0.000175124) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.500178,-3.71347e-05) , 
2.24389, 0, 11, 0, 0.545143,-0.0441651) , 
1.22804, 0, 7, 0, 0.632694,-0.127776) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.476342,7.51293e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.112412,0.000631877) , 
0.618811, 1, 4, 0, 0.4055,0.044881) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.696905,-0.000232567) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0988308,0.0009125) , 
2.69114, 0, 11, 0, 0.124743,0.312294) , 
0.467727, 0, 7, 0, 0.329657,0.11712) , 
0.659385, 0, 14, 0, 0.508735,-0.0276005)    );
  // itree = 239
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.793106,-0.000224179) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.615894,-8.67311e-05) , 
1.93879, 0, 7, 0, 0.654795,-0.153461) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.792338,-0.000242524) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159943,0.00302452) , 
0.609871, 1, 17, 0, 0.310465,0.128007) , 
0.0891881, 0, 15, 0, 0.606135,-0.113685) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655273,-8.90852e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.206918,0.000268265) , 
0.599272, 0, 14, 0, 0.493785,-0.0240265) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.309932,0.000220498) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0464027,0.00087651) , 
0.0920038, 0, 15, 0, 0.259047,0.20147) , 
0.824082, 0, 7, 0, 0.348267,0.115762) , 
0.309515, 1, 16, 0, 0.504656,-0.0233903)    );
  // itree = 240
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.833621,-0.000119966) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.645651,-0.000137534) , 
1.04591, 1, 11, 0, 0.788394,-0.277161) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.644868,-0.000182522) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.364612,2.89246e-05) , 
0.735837, 0, 7, 0, 0.546459,-0.0411163) , 
0.535986, 0, 2, 0, 0.677165,-0.16864) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.563004,3.92828e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.346509,0.000163571) , 
0.487646, 1, 13, 0, 0.404245,0.0538383) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.415705,0.000384781) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0698375,0.000521352) , 
2.54288, 0, 10, 0, 0.112506,0.324137) , 
0.277099, 1, 0, 0, 0.368186,0.0872466) , 
0.697055, 0, 14, 0, 0.524454,-0.0421693)    );
  // itree = 241
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.892582,-0.000208048) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.701054,-0.000161975) , 
0.244124, 1, 8, 0, 0.744578,-0.233314) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694811,-8.58838e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.453798,-3.35553e-05) , 
1.31682, 1, 17, 0, 0.546767,-0.0437857) , 
1.23334, 0, 7, 0, 0.635351,-0.128661) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.951661,-0.00028294) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0623251,0.00159731) , 
-0.463598, 0, 4, 0, 0.828839,-0.362537) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.374791,8.79433e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152725,0.000483094) , 
0.117404, 0, 15, 0, 0.268444,0.178954) , 
-2.10363, 1, 3, 0, 0.283661,0.16425) , 
0.671644, 0, 14, 0, 0.490334,-0.00788095)    );
  // itree = 242
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.768635,-0.000135473) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.574669,-0.000105185) , 
0.407097, 0, 2, 0, 0.716954,-0.207109) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728805,-0.000131843) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.352766,1.93262e-05) , 
0.818488, 0, 14, 0, 0.491592,0.00816771) , 
0.306857, 1, 16, 0, 0.664998,-0.157479) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.568466,-5.80621e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0930797,0.000390691) , 
0.0710197, 1, 6, 0, 0.518319,-0.0585367) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.50585,-1.01158e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221981,0.000614764) , 
2.09432, 0, 10, 0, 0.305335,0.141563) , 
1.38939, 0, 7, 0, 0.353513,0.0963005) , 
0.675791, 0, 14, 0, 0.530274,-0.047714)    );
  // itree = 243
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.734886,-0.000130633) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.568501,-9.8925e-05) , 
1.23142, 1, 8, 0, 0.692375,-0.183614) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745031,-0.000153945) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.377383,3.18439e-05) , 
1.21713, 0, 4, 0, 0.460017,0.0373171) , 
0.315696, 1, 16, 0, 0.642962,-0.136631) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.61606,-0.000122546) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0898964,0.000444053) , 
0.0840391, 1, 0, 0, 0.526258,-0.0657073) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.453689,4.86522e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180974,0.000539746) , 
2.09442, 0, 10, 0, 0.25788,0.18696) , 
1.59918, 0, 7, 0, 0.303116,0.144372) , 
0.671644, 0, 14, 0, 0.501848,-0.0199508)    );
  // itree = 244
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767145,-0.00020898) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.328484,-0.000155973) , 
0.584471, 0, 13, 0, 0.747396,-0.236196) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.591725,-9.19862e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.32221,0.000179887) , 
0.350417, 0, 2, 0, 0.535562,-0.0316859) , 
0.115345, 1, 16, 0, 0.598847,-0.0927833) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.920895,-0.000217564) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0328223,0.0158757) , 
0.202164, 0, 15, 0, 0.76176,-0.305547) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.352183,0.000219885) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0901091,0.000250659) , 
0.175341, 1, 0, 0, 0.283966,0.163574) , 
0.233886, 0, 6, 0, 0.306096,0.141846) , 
0.671902, 0, 14, 0, 0.467153,0.0127645)    );
  // itree = 245
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.708707,-0.000126502) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363605,0.000128464) , 
0.105977, 1, 0, 0, 0.673444,-0.165405) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.863065,-0.000534226) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.315014,0.000153628) , 
1.91769, 0, 7, 0, 0.396847,0.101649) , 
0.317748, 0, 2, 0, 0.633286,-0.126632) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.625592,-5.76543e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.346507,8.54974e-05) , 
0.677567, 1, 8, 0, 0.484686,-0.0296464) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.387778,0.000139192) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138587,0.000710284) , 
0.701308, 0, 7, 0, 0.278915,0.167583) , 
2.09446, 0, 10, 0, 0.33531,0.113528) , 
0.673093, 0, 14, 0, 0.502623,-0.0213218)    );
  // itree = 246
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694458,-0.000119401) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.44364,2.8782e-05) , 
0.136513, 0, 15, 0, 0.656547,-0.152907) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.968129,-0.000248813) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.353275,6.95664e-05) , 
0.706634, 0, 16, 0, 0.403867,0.0919722) , 
0.357682, 0, 2, 0, 0.610474,-0.108257) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660889,-6.06275e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.123524,0.00149492) , 
0.0903618, 0, 15, 0, 0.517661,-0.067388) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.320646,0.0002627) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.120839,0.000547266) , 
-0.37146, 1, 3, 0, 0.212382,0.224288) , 
1.05903, 1, 17, 0, 0.286074,0.15388) , 
0.637994, 0, 14, 0, 0.499742,-0.0187772)    );
  // itree = 247
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72271,-0.000118683) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.475357,-0.000125083) , 
0.413615, 0, 2, 0, 0.668255,-0.161534) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65659,-0.000192333) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.27357,0.000277069) , 
0.118221, 1, 16, 0, 0.408097,0.053984) , 
0.144066, 0, 15, 0, 0.581281,-0.0894838) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704989,-0.000120461) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.32265,0.000137283) , 
1.49177, 1, 18, 0, 0.578076,-0.111188) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.484012,3.57408e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.243154,0.000384514) , 
0.948576, 0, 7, 0, 0.314054,0.146178) , 
2.39352, 0, 10, 0, 0.354292,0.106954) , 
0.309515, 1, 16, 0, 0.488215,-0.00894371)    );
  // itree = 248
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.732234,-0.000120804) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.422244,1.11118e-05) , 
0.136056, 0, 15, 0, 0.696568,-0.189062) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.606916,-0.00012345) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.268906,0.000264007) , 
0.260663, 1, 16, 0, 0.497481,0.00149886) , 
0.36506, 0, 2, 0, 0.65214,-0.146537) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.859426,-0.000179881) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0687053,-0.000183911) , 
0.490091, 0, 17, 0, 0.796315,-0.316924) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.441671,0.000139854) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226648,0.00046247) , 
1.81723, 0, 17, 0, 0.312432,0.131649) , 
0.629926, 1, 17, 0, 0.34502,0.101439) , 
0.659385, 0, 14, 0, 0.529622,-0.0476131)    );
  // itree = 249
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76876,-0.000159653) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.556986,-0.000277601) , 
0.310714, 0, 1, 0, 0.730532,-0.218906) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.605522,-8.08723e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.280438,0.000264724) , 
2.23998, 1, 18, 0, 0.562936,-0.059358) , 
1.23337, 0, 7, 0, 0.632668,-0.125742) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.478431,4.04491e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0900771,0.000451405) , 
0.230916, 1, 0, 0, 0.417137,0.0498132) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.40738,0.000136819) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.097469,0.00115748) , 
0.240875, 1, 8, 0, 0.142382,0.26643) , 
0.0904962, 0, 15, 0, 0.336682,0.113244) , 
0.678179, 0, 14, 0, 0.497114,-0.016292)    );
  // itree = 250
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.777582,-0.000207921) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.606777,-7.73484e-05) , 
0.116308, 1, 16, 0, 0.648907,-0.142563) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.740907,-0.000238499) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.13992,0.000882587) , 
0.0718205, 1, 16, 0, 0.30226,0.172607) , 
0.109716, 0, 15, 0, 0.622629,-0.118671) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.641354,-7.91681e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.321611,0.000262116) , 
0.299437, 1, 10, 0, 0.36263,0.0810445) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.451581,0.000155835) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.107932,0.000616908) , 
1.79396, 0, 11, 0, 0.177238,0.258485) , 
1.64238, 1, 18, 0, 0.285476,0.154889) , 
0.645681, 0, 14, 0, 0.501494,-0.0203841)    );
  // itree = 251
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.784414,-0.000112942) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.595795,-0.000125949) , 
0.549412, 0, 2, 0, 0.709787,-0.202331) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.771043,-0.000246475) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34159,6.08793e-05) , 
0.074081, 1, 16, 0, 0.437352,0.0334758) , 
0.170126, 0, 15, 0, 0.603774,-0.110571) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.859517,-0.000206438) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0838666,0.00810305) , 
0.0256106, 1, 0, 0, 0.706854,-0.245819) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.417975,4.62199e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.21377,0.00031558) , 
0.649395, 1, 8, 0, 0.299352,0.161308) , 
2.72773, 0, 8, 0, 0.323249,0.137433) , 
0.309515, 1, 16, 0, 0.494953,-0.0143652)    );
  // itree = 252
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.801299,-0.000212005) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.42188,-0.000155696) , 
1.88299, 0, 7, 0, 0.762136,-0.254207) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702335,-0.000124991) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.497625,-3.02928e-05) , 
0.243715, 1, 8, 0, 0.542703,-0.0448013) , 
1.71925, 0, 7, 0, 0.595486,-0.0951721) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612216,-5.50612e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0432823,0.00197227) , 
0.521599, 0, 2, 0, 0.514368,-0.0678639) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.407255,0.000140845) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.195714,0.000522276) , 
0.314369, 1, 16, 0, 0.280719,0.155888) , 
1.34646, 1, 9, 0, 0.322281,0.116087) , 
0.624085, 0, 14, 0, 0.505216,-0.0253696)    );
  // itree = 253
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735588,-0.000108724) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.528548,-8.71288e-05) , 
0.188186, 0, 15, 0, 0.678564,-0.174535) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.644756,-0.000192282) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.291816,0.000137012) , 
0.870215, 0, 14, 0, 0.413164,0.0848035) , 
0.297595, 0, 1, 0, 0.617593,-0.114957) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714556,-0.000210962) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271985,0.00162421) , 
1.44597, 0, 8, 0, 0.576586,-0.122364) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.453058,2.95529e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.177181,0.00041629) , 
2.39355, 0, 10, 0, 0.223515,0.212918) , 
1.87017, 0, 7, 0, 0.264125,0.174354) , 
0.636907, 0, 14, 0, 0.49923,-0.0180779)    );
  // itree = 254
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.822617,-0.000214505) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.296129,-6.45845e-05) , 
0.0144194, 1, 0, 0, 0.798911,-0.28518) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.626154,-0.000102046) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.303102,0.000299019) , 
0.311787, 0, 2, 0, 0.574588,-0.0681206) , 
0.118583, 1, 16, 0, 0.656274,-0.147162) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.825157,-0.000157464) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.383259,4.51069e-06) , 
0.101655, 0, 15, 0, 0.683374,-0.206564) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.559449,2.89727e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.246391,0.000268234) , 
-1.36199, 1, 4, 0, 0.286064,0.163003) , 
1.85243, 0, 7, 0, 0.346115,0.107145) , 
0.695771, 0, 14, 0, 0.503385,-0.0218045)    );
  // itree = 255
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722092,-0.000117693) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.417353,-2.55717e-05) , 
0.131088, 0, 15, 0, 0.691859,-0.18287) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.635457,-0.000163006) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.244253,0.000263696) , 
0.823548, 0, 14, 0, 0.487164,0.0152401) , 
0.409553, 0, 2, 0, 0.629506,-0.122523) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.829375,-0.000204661) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.110875,0.0062211) , 
2.21244, 0, 7, 0, 0.768383,-0.291679) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.570835,-4.63206e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271869,0.00028876) , 
2.28982, 0, 17, 0, 0.306044,0.140927) , 
0.622946, 1, 17, 0, 0.335109,0.113732) , 
0.673093, 0, 14, 0, 0.499247,-0.01799)    );
  // itree = 256
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.865819,-0.000220517) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.673117,-0.000174535) , 
0.18031, 0, 15, 0, 0.80097,-0.288783) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.61606,-7.4453e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245432,0.000693156) , 
0.114544, 0, 15, 0, 0.587819,-0.0880483) , 
1.71925, 0, 7, 0, 0.642222,-0.139282) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.593234,8.70447e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317661,0.000126109) , 
2.11561, 1, 10, 0, 0.428055,0.0162531) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.820319,-0.000181322) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.141118,0.000459078) , 
2.3522, 0, 5, 0, 0.167853,0.265056) , 
1.49541, 0, 11, 0, 0.255477,0.18127) , 
0.636907, 0, 14, 0, 0.520206,-0.0381502)    );
  // itree = 257
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.969109,-0.00018407) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.308613,-0.000152192) , 
0.00615117, 1, 0, 0, 0.938546,-0.427152) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.802613,-0.000271553) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.572623,-0.000174818) , 
0.37158, 0, 3, 0, 0.710504,-0.205227) , 
0.864184, 0, 2, 0, 0.790702,-0.283274) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.627599,-0.000131233) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.454899,-1.55399e-05) , 
1.27702, 0, 7, 0, 0.500834,-0.00919779) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679322,-1.05229e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.126738,0.000622448) , 
0.758085, 1, 17, 0, 0.205285,0.227706) , 
0.116223, 0, 15, 0, 0.418854,0.0565153) , 
0.0888313, 1, 16, 0, 0.475715,0.00455627)    );
  // itree = 258
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.83061,-0.000221593) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.636402,-9.34992e-05) , 
0.820449, 0, 14, 0, 0.677385,-0.16992) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.625386,-0.000183447) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.312524,0.000417816) , 
0.877702, 0, 14, 0, 0.417483,0.0804433) , 
0.350417, 0, 2, 0, 0.629391,-0.123688) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.748945,-0.000125577) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0770829,0.000473528) , 
0.374693, 0, 1, 0, 0.651824,-0.204043) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.430114,0.000166625) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.208935,0.000354724) , 
0.312726, 1, 16, 0, 0.304271,0.139938) , 
2.62971, 0, 8, 0, 0.341056,0.103531) , 
0.659385, 0, 14, 0, 0.509893,-0.0295187)    );
  // itree = 259
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76892,-0.000197506) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.580257,-6.42925e-05) , 
0.0162189, 1, 0, 0, 0.711231,-0.202044) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.636635,-0.000115518) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.269159,0.000158112) , 
2.84255, 0, 9, 0, 0.390318,0.0650901) , 
0.116474, 0, 15, 0, 0.645424,-0.147265) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.477554,-1.96153e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.15088,0.000137247) , 
0.161902, 0, 7, 0, 0.448136,0.0338918) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.451277,0.000130747) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0863879,0.00117283) , 
2.53641, 0, 18, 0, 0.151638,0.257036) , 
0.0909608, 0, 15, 0, 0.39142,0.0765761) , 
0.210185, 1, 16, 0, 0.494067,-0.0138818)    );
  // itree = 260
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.811151,-0.000161859) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.423644,-0.000143157) , 
0.878281, 1, 13, 0, 0.785469,-0.272219) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647142,-0.000146124) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.463507,-4.59213e-05) , 
0.780451, 0, 14, 0, 0.567288,-0.0614763) , 
1.05365, 1, 17, 0, 0.63718,-0.128986) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.559009,-6.42925e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259664,0.000188769) , 
0.117464, 0, 15, 0, 0.422658,0.0360565) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.475341,5.29836e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.173296,0.000382262) , 
2.99198, 0, 9, 0, 0.208896,0.235952) , 
0.926211, 0, 7, 0, 0.305054,0.146032) , 
0.697055, 0, 14, 0, 0.472875,0.00706733)    );
  // itree = 261
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755025,-0.000221082) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.315781,-9.04514e-05) , 
0.0597714, 1, 0, 0, 0.732057,-0.220812) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.559663,-7.41437e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.214643,0.000687449) , 
0.114313, 0, 15, 0, 0.530017,-0.0302867) , 
1.71693, 0, 7, 0, 0.577198,-0.0747788) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67809,-0.000212198) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184862,0.00219873) , 
2.09289, 1, 18, 0, 0.577253,-0.129225) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.348893,0.000267224) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.111856,0.000607583) , 
0.747993, 0, 11, 0, 0.290391,0.146834) , 
0.139873, 1, 16, 0, 0.318008,0.120257) , 
0.63667, 0, 14, 0, 0.482118,-0.00323232)    );
  // itree = 262
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.73162,-0.000165312) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.15021,-4.17924e-05) , 
0.7684, 1, 1, 0, 0.72297,-0.213611) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.545284,-7.00274e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180471,0.000694256) , 
0.141303, 0, 15, 0, 0.497851,0.000220524) , 
1.23337, 0, 7, 0, 0.596094,-0.0930967) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.882012,-0.000176274) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0604336,0.0186299) , 
0.994057, 1, 8, 0, 0.684246,-0.235131) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.803135,-0.000321942) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.255861,0.000335241) , 
-2.10453, 1, 4, 0, 0.276142,0.161511) , 
0.149875, 1, 11, 0, 0.316177,0.122601) , 
0.637994, 0, 14, 0, 0.494019,-0.0144402)    );
  // itree = 263
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.685598,-0.000118294) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.42069,-8.44632e-05) , 
-0.866652, 0, 5, 0, 0.64908,-0.141872) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.800407,-0.000198516) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.17177,1.29045e-06) , 
0.0116314, 1, 7, 0, 0.285296,0.211323) , 
0.244163, 0, 7, 0, 0.617645,-0.111352) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.531724,-7.38735e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.21966,0.000525218) , 
0.575772, 0, 14, 0, 0.412538,0.0412845) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.410493,0.000152455) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.106255,0.000599822) , 
0.317554, 1, 16, 0, 0.213268,0.22732) , 
0.93507, 0, 7, 0, 0.299542,0.146776) , 
0.671902, 0, 14, 0, 0.478787,0.00132565)    );
  // itree = 264
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761793,-0.000155473) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.419553,-0.000281175) , 
0.749251, 0, 18, 0, 0.736142,-0.222413) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.588798,-8.59768e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.286034,0.000400809) , 
1.21218, 1, 8, 0, 0.532329,-0.0291257) , 
1.23337, 0, 7, 0, 0.623187,-0.115292) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.981206,-0.000238191) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.370211,0.00163348) , 
-0.463598, 0, 4, 0, 0.92416,-0.437776) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738285,-9.15133e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.264251,0.000240823) , 
0.242955, 0, 6, 0, 0.28618,0.156913) , 
-2.10474, 1, 3, 0, 0.318806,0.1265) , 
0.675948, 0, 14, 0, 0.484833,-0.00538702)    );
  // itree = 265
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755302,-0.000135269) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.373654,1.63474e-05) , 
0.106645, 1, 0, 0, 0.723701,-0.2118) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.754986,-0.000245617) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340057,0.000110248) , 
0.0719471, 1, 16, 0, 0.440256,0.0603149) , 
0.350333, 0, 2, 0, 0.667725,-0.158061) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.845405,-0.000165697) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.436658,6.57054e-05) , 
1.97794, 1, 10, 0, 0.538196,-0.0819938) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.51887,-1.13648e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.291631,0.000283875) , 
2.09269, 0, 10, 0, 0.327635,0.120793) , 
1.34638, 1, 9, 0, 0.36245,0.0872639) , 
0.694671, 0, 14, 0, 0.518417,-0.0380744)    );
  // itree = 266
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.716898,-0.000133235) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.550458,-9.8241e-05) , 
0.97046, 1, 8, 0, 0.662092,-0.153629) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639329,-0.000954466) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202932,0.000469238) , 
1.37518, 0, 7, 0, 0.275325,0.219224) , 
0.230559, 0, 2, 0, 0.640201,-0.132526) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.638002,-0.000131575) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.360877,0.000170742) , 
1.85751, 0, 7, 0, 0.410028,0.0436578) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.50849,9.27739e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.117275,0.000467223) , 
0.819337, 0, 1, 0, 0.146363,0.294169) , 
0.445803, 0, 7, 0, 0.340478,0.109738) , 
0.695491, 0, 14, 0, 0.487991,-0.00949543)    );
  // itree = 267
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7708,-0.000172081) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225694,0.000123724) , 
0.691985, 0, 14, 0, 0.754041,-0.240823) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.629452,-9.46391e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.399485,0.000212159) , 
0.976413, 1, 8, 0, 0.56464,-0.0609925) , 
1.22641, 0, 7, 0, 0.650582,-0.142592) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.872377,-0.000251671) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0902741,0.000455845) , 
0.778113, 1, 13, 0, 0.779605,-0.312367) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.472736,2.20302e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253278,0.000300417) , 
1.05641, 1, 17, 0, 0.300643,0.142765) , 
2.54266, 0, 11, 0, 0.335069,0.110052) , 
0.677134, 0, 14, 0, 0.511997,-0.031622)    );
  // itree = 268
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764395,-0.000116636) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.601518,-0.00021611) , 
0.635093, 0, 2, 0, 0.704447,-0.203385) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.583172,-0.000164829) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.19205,0.0022735) , 
2.16079, 0, 7, 0, 0.340316,0.0975564) , 
0.0861801, 0, 15, 0, 0.649357,-0.157854) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.778919,-0.000150922) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.2928,2.60075e-06) , 
0.124448, 1, 5, 0, 0.675774,-0.202737) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556067,-6.96097e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.254261,0.000149507) , 
0.736985, 0, 14, 0, 0.35624,0.114702) , 
2.54313, 0, 10, 0, 0.398164,0.0730527) , 
1.22639, 0, 7, 0, 0.491151,-0.0124251)    );
  // itree = 269
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746899,-0.000149645) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.385247,-0.000235118) , 
0.749251, 0, 18, 0, 0.717175,-0.208559) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.550042,-5.90899e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.264233,0.000372447) , 
2.24062, 1, 18, 0, 0.503882,-0.00733271) , 
1.22804, 0, 7, 0, 0.59459,-0.0929092) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745202,-0.000171413) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0775073,0.00493256) , 
0.26045, 1, 16, 0, 0.586961,-0.134755) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719527,-0.00012825) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.196576,0.000343547) , 
2.69201, 0, 11, 0, 0.221615,0.211526) , 
-1.36187, 1, 4, 0, 0.275951,0.160026) , 
0.622998, 0, 14, 0, 0.495172,-0.0139912)    );
  // itree = 270
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.794009,-0.000125319) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.543516,-7.03197e-05) , 
0.553377, 0, 13, 0, 0.766985,-0.254629) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661899,-0.000175308) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.418554,1.65956e-05) , 
0.723563, 0, 7, 0, 0.570268,-0.0641533) , 
0.535986, 0, 2, 0, 0.66162,-0.152606) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.882404,-0.000209971) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.4042,5.27177e-05) , 
0.647904, 0, 14, 0, 0.675868,-0.198935) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.404003,0.000107808) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.207871,0.000253189) , 
0.371431, 0, 5, 0, 0.297782,0.152239) , 
1.04727, 1, 9, 0, 0.352535,0.101384) , 
0.708187, 0, 14, 0, 0.497226,-0.0175163)    );
  // itree = 271
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.659355,-0.000114828) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152424,0.00206549) , 
0.552163, 1, 16, 0, 0.64608,-0.14092) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575687,-0.000185064) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.266719,0.000230784) , 
1.16173, 1, 17, 0, 0.354464,0.139931) , 
0.357682, 0, 2, 0, 0.593265,-0.0900548) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.416719,6.76128e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.219598,0.000624165) , 
0.956327, 1, 8, 0, 0.320503,0.118147) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.215911,0.0087741) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0696561,0.000497301) , 
0.282664, 0, 12, 0, 0.0906905,0.338608) , 
0.476208, 1, 16, 0, 0.26006,0.176131) , 
0.642489, 0, 14, 0, 0.472677,0.00627835)    );
  // itree = 272
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.757968,-0.000131151) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.480691,-0.000100156) , 
0.674932, 0, 13, 0, 0.702865,-0.19076) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.593357,-0.000149993) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.337994,0.000250946) , 
0.808274, 0, 14, 0, 0.507255,-0.00485385) , 
0.396787, 0, 2, 0, 0.641528,-0.132466) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.8611,-0.0002062) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292016,-2.26476e-05) , 
0.183633, 1, 16, 0, 0.79947,-0.313432) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.504991,9.01155e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.296956,0.000298476) , 
2.09438, 0, 10, 0, 0.353129,0.0964923) , 
0.614972, 1, 17, 0, 0.379229,0.0725218) , 
0.697055, 0, 14, 0, 0.504801,-0.0256131)    );
  // itree = 273
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764202,-0.000124788) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0976518,0.000504344) , 
0.225663, 0, 7, 0, 0.733518,-0.242623) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.651325,-0.000182909) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.418002,1.34517e-05) , 
1.72668, 0, 7, 0, 0.474383,0.00590787) , 
0.244973, 1, 8, 0, 0.527538,-0.0450715) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.570828,8.75249e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128015,0.00369681) , 
0.624834, 0, 13, 0, 0.436007,0.0474194) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.419275,0.000903241) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0640197,0.000251404) , 
2.00235, 0, 17, 0, 0.103364,0.330931) , 
0.280143, 0, 15, 0, 0.204003,0.245157) , 
0.484621, 1, 16, 0, 0.480371,-0.00276063)    );
  // itree = 274
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.892171,-0.000245892) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.681068,-0.000141672) , 
0.622122, 1, 17, 0, 0.734635,-0.225632) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.800786,-0.000175216) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.469045,-2.89694e-05) , 
2.54287, 0, 10, 0, 0.514363,-0.0155996) , 
1.23334, 0, 7, 0, 0.60857,-0.105428) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.59597,6.1024e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.139226,0.000433058) , 
0.0406071, 0, 6, 0, 0.434797,0.00619803) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.321386,0.000201511) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134956,0.000534574) , 
0.392178, 1, 16, 0, 0.229598,0.204415) , 
-0.866884, 1, 3, 0, 0.274739,0.160809) , 
0.640408, 0, 14, 0, 0.49175,-0.0122611)    );
  // itree = 275
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.846001,-0.00024708) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.471395,-0.000180056) , 
0.981235, 0, 7, 0, 0.802529,-0.290865) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683219,-0.000151587) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.491737,-3.68594e-05) , 
0.785895, 0, 14, 0, 0.565947,-0.0647838) , 
0.0770639, 1, 16, 0, 0.606732,-0.103759) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76296,-0.000167579) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.287382,0.000188502) , 
0.374366, 0, 4, 0, 0.594705,-0.140688) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.852626,-0.000159092) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.235124,0.000382998) , 
-2.10485, 1, 3, 0, 0.251054,0.183373) , 
1.94451, 0, 11, 0, 0.301205,0.136081) , 
0.640408, 0, 14, 0, 0.495172,-0.0161838)    );
  // itree = 276
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702348,-0.000119153) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.162669,0.000439642) , 
0.23319, 0, 2, 0, 0.680427,-0.170808) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.550186,-5.31038e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.243541,0.000319436) , 
0.360272, 1, 16, 0, 0.408548,0.0573415) , 
0.672111, 0, 14, 0, 0.603196,-0.105999) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.448377,0.000138543) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.117798,0.000971429) , 
0.0800922, 0, 15, 0, 0.319663,0.12048) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.214841,0.000144845) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0598355,0.00038929) , 
1.6469, 1, 9, 0, 0.0968127,0.322795) , 
0.652126, 0, 13, 0, 0.210809,0.219303) , 
0.116474, 0, 15, 0, 0.510093,-0.0288134)    );
  // itree = 277
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.773609,-0.000218305) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.402418,-9.83093e-05) , 
0.0126992, 1, 0, 0, 0.736657,-0.225417) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.581348,-7.12086e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.437995,-1.8765e-05) , 
2.24406, 0, 9, 0, 0.52565,-0.0267152) , 
0.11876, 1, 16, 0, 0.585594,-0.0831641) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.809518,-0.000448681) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236438,0.00492451) , 
0.018245, 1, 0, 0, 0.598195,-0.148444) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.294679,0.000160135) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.095995,0.000944744) , 
0.091738, 0, 15, 0, 0.219117,0.21401) , 
2.16979, 0, 7, 0, 0.241602,0.192511) , 
0.636914, 0, 14, 0, 0.466367,0.0123848)    );
  // itree = 278
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.778147,-0.000142555) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.588904,-0.000150048) , 
-0.371556, 1, 4, 0, 0.694161,-0.193079) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.781865,-0.000166101) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.419358,2.05189e-05) , 
2.24391, 0, 11, 0, 0.465985,0.0189455) , 
1.21171, 0, 7, 0, 0.549296,-0.0584678) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817335,-0.000523477) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.3197,0.000146845) , 
2.10487, 0, 3, 0, 0.367106,0.0688646) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706001,0.000289746) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.106105,0.000823089) , 
0.89961, 0, 1, 0, 0.129864,0.273541) , 
1.48018, 0, 7, 0, 0.198316,0.214486) , 
0.0896043, 0, 15, 0, 0.491564,-0.0135702)    );
  // itree = 279
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.734944,-0.000115943) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.586053,-9.29821e-05) , 
0.618942, 0, 3, 0, 0.641246,-0.134788) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.715651,-0.000254487) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159001,0.000295097) , 
0.036163, 1, 16, 0, 0.189877,0.27828) , 
0.110602, 0, 15, 0, 0.607455,-0.103864) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.614908,-8.45366e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0867452,0.00565028) , 
0.0929793, 0, 15, 0, 0.458504,-0.0155842) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.370242,0.000130119) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.149015,0.000552953) , 
1.94515, 1, 9, 0, 0.233737,0.199365) , 
-1.1141, 1, 4, 0, 0.27678,0.158203) , 
0.635919, 0, 14, 0, 0.497692,-0.0168754)    );
  // itree = 280
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.733198,-0.000104932) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.490288,-0.000105745) , 
-0.371539, 0, 5, 0, 0.671975,-0.16411) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.544497,-0.00015502) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22785,0.000141043) , 
0.732672, 0, 7, 0, 0.444071,0.0607916) , 
1.19679, 1, 11, 0, 0.613577,-0.106482) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.538162,1.54091e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.190297,0.000298089) , 
0.194494, 1, 12, 0, 0.461291,-0.0126106) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.360955,0.000150844) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0920135,0.000431322) , 
0.0923662, 1, 0, 0, 0.24448,0.193625) , 
1.49588, 0, 11, 0, 0.316004,0.125589) , 
0.670124, 0, 14, 0, 0.484809,-0.00605762)    );
  // itree = 281
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.819887,-0.000133163) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.652921,-0.000125289) , 
0.29477, 0, 12, 0, 0.724893,-0.212591) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.770344,-0.0001886) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.473012,3.74307e-05) , 
2.99179, 0, 9, 0, 0.519158,-0.0155734) , 
0.29624, 0, 1, 0, 0.663096,-0.153412) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.503015,5.04682e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.241714,0.00035172) , 
0.486844, 1, 16, 0, 0.450097,0.00240691) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.426521,3.37861e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.130667,0.000812955) , 
1.05355, 0, 7, 0, 0.2214,0.229313) , 
0.517122, 0, 2, 0, 0.402914,0.0492201) , 
0.705722, 0, 14, 0, 0.523204,-0.0444631)    );
  // itree = 282
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730636,-0.000137005) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.487445,-0.00010677) , 
0.309666, 0, 1, 0, 0.661164,-0.150029) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.570533,-0.000143384) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.307991,3.02916e-05) , 
0.416069, 1, 8, 0, 0.396786,0.102211) , 
0.276253, 1, 16, 0, 0.587132,-0.0793959) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.631117,-1.71022e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233149,0.000224588) , 
-0.124006, 0, 5, 0, 0.481412,-0.0304656) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.491591,1.25948e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.223077,0.000263471) , 
2.54313, 0, 10, 0, 0.256634,0.183562) , 
-0.86602, 1, 3, 0, 0.307895,0.134753) , 
0.677618, 0, 14, 0, 0.454096,0.0226302)    );
  // itree = 283
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744721,-0.000134857) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.518606,-7.83555e-05) , 
0.357681, 0, 2, 0, 0.696581,-0.184478) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.593845,-0.000109128) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.272641,0.000158099) , 
0.789552, 0, 14, 0, 0.428929,0.0709363) , 
0.315374, 1, 16, 0, 0.643333,-0.133665) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.829031,-0.000107246) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.409092,0.00021503) , 
0.517184, 0, 16, 0, 0.473567,-0.01631) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.525246,-3.92312e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198047,0.000194624) , 
-1.36198, 1, 4, 0, 0.252569,0.191487) , 
0.866425, 0, 3, 0, 0.304217,0.142924) , 
0.695491, 0, 14, 0, 0.478841,0.000497392)    );
  // itree = 284
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.849471,-0.000247917) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.560005,-0.000197746) , 
-0.371327, 0, 3, 0, 0.78681,-0.274262) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.56969,-8.24009e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.371866,4.27468e-05) , 
0.985011, 1, 8, 0, 0.493984,-0.0033567) , 
1.91009, 0, 7, 0, 0.533558,-0.0399681) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.93262,-0.000216776) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.126814,-0.00010237) , 
0.122802, 0, 4, 0, 0.772879,-0.286438) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556829,1.97103e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.162815,0.000463037) , 
0.111276, 0, 15, 0, 0.20309,0.22278) , 
-1.85639, 1, 3, 0, 0.2437,0.186488) , 
0.116474, 0, 15, 0, 0.454307,0.021948)    );
  // itree = 285
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.833317,-0.000235819) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.666487,-0.000141339) , 
2.36097, 0, 7, 0, 0.708708,-0.196592) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.613624,-8.66762e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.389429,0.000142241) , 
0.985008, 1, 8, 0, 0.547102,-0.0455425) , 
1.23334, 0, 7, 0, 0.612075,-0.106271) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.579142,-3.73232e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186535,0.000489166) , 
0.0900618, 0, 15, 0, 0.454755,-0.00424275) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.29034,0.00019005) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118172,0.000745821) , 
0.360923, 1, 16, 0, 0.186109,0.247438) , 
0.926226, 0, 7, 0, 0.308171,0.133084) , 
0.66057, 0, 14, 0, 0.487138,-0.00787043)    );
  // itree = 286
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72137,-0.000120413) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.488603,2.89892e-05) , 
0.265192, 0, 1, 0, 0.674768,-0.167403) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.444169,-5.321e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145224,0.000248468) , 
0.414151, 0, 15, 0, 0.248913,0.244807) , 
0.122945, 1, 0, 0, 0.645346,-0.138924) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.523253,5.16534e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.136561,0.000148729) , 
1.20826, 0, 17, 0, 0.450408,-0.000731893) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.423129,9.00276e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.139498,0.000555138) , 
0.598596, 1, 10, 0, 0.223318,0.211241) , 
2.09446, 0, 10, 0, 0.285565,0.153138) , 
0.658369, 0, 14, 0, 0.509742,-0.0288446)    );
  // itree = 287
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.856368,-0.000205151) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.643099,-0.000200155) , 
0.203707, 0, 15, 0, 0.767108,-0.254485) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727339,-0.000121555) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.460035,-2.88849e-05) , 
1.13167, 1, 17, 0, 0.537899,-0.037177) , 
1.71925, 0, 7, 0, 0.597007,-0.0932162) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.809217,-0.0001629) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.166141,0.00843825) , 
0.565001, 1, 2, 0, 0.666518,-0.228681) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.826556,-0.000125374) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225324,0.000365932) , 
0.250192, 0, 6, 0, 0.2549,0.178951) , 
2.64871, 0, 8, 0, 0.299258,0.135023) , 
0.638, 0, 14, 0, 0.489182,-0.0105631)    );
  // itree = 288
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.811375,-0.000141506) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.421699,5.225e-06) , 
0.39387, 1, 15, 0, 0.774956,-0.261289) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.641528,-0.00012339) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.39612,-2.83839e-05) , 
0.976675, 1, 8, 0, 0.563727,-0.0578489) , 
0.387058, 0, 1, 0, 0.673644,-0.163713) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.483695,-2.76809e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.311562,0.000249621) , 
0.943065, 0, 7, 0, 0.38796,0.0705473) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76489,-0.000279085) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0411429,0.00172478) , 
2.10338, 0, 5, 0, 0.0956277,0.307453) , 
0.493781, 0, 14, 0, 0.342713,0.107215) , 
0.697055, 0, 14, 0, 0.510948,-0.0305161)    );
  // itree = 289
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72859,-0.000135847) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.4374,5.26297e-06) , 
0.106645, 1, 0, 0, 0.698528,-0.186209) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.56509,-7.93949e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125279,0.000416101) , 
0.324417, 1, 16, 0, 0.480477,0.0204622) , 
0.350417, 0, 2, 0, 0.651138,-0.141293) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.559462,-3.1292e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265899,0.00010443) , 
0.786255, 1, 2, 0, 0.477167,-0.0204351) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.544131,-3.58856e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.190489,0.000436955) , 
1.3464, 1, 9, 0, 0.254348,0.187538) , 
0.943029, 0, 7, 0, 0.352882,0.0955687) , 
0.697055, 0, 14, 0, 0.502107,-0.0229391)    );
  // itree = 290
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718191,-0.000129008) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.219527,-2.06137e-05) , 
2.99201, 1, 9, 0, 0.701085,-0.188578) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653376,-0.000184983) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322373,0.00018739) , 
0.868629, 0, 14, 0, 0.473182,0.0300316) , 
0.295902, 0, 1, 0, 0.634088,-0.124313) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.604871,-6.6895e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.352803,4.29669e-05) , 
-0.866951, 1, 4, 0, 0.437736,0.0219993) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.673469,-4.94041e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192553,0.000222545) , 
0.149911, 1, 10, 0, 0.216244,0.225316) , 
0.0461831, 1, 0, 0, 0.302592,0.146054) , 
0.708187, 0, 14, 0, 0.460506,0.0172602)    );
  // itree = 291
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.757918,-0.000127552) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.520998,7.9144e-05) , 
0.315883, 0, 2, 0, 0.717741,-0.207269) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.641134,-0.000185808) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340617,-1.16247e-05) , 
0.147587, 1, 16, 0, 0.487116,0.0217693) , 
-0.618926, 0, 3, 0, 0.677568,-0.167373) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.514926,-9.93158e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.254052,0.000536083) , 
0.116291, 0, 15, 0, 0.40568,0.0444911) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.3908,-4.43418e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134367,0.000409172) , 
0.178846, 1, 16, 0, 0.177397,0.262407) , 
-0.371451, 0, 5, 0, 0.333644,0.113256) , 
0.695771, 0, 14, 0, 0.514294,-0.0341478)    );
  // itree = 292
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746993,-0.000125936) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.58195,-7.48631e-05) , 
1.21326, 1, 17, 0, 0.643719,-0.142471) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.824976,-0.000156941) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.376612,0.000107125) , 
0.238138, 0, 6, 0, 0.418055,0.0511228) , 
0.138549, 1, 0, 0, 0.605264,-0.109481) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.919749,-0.00023586) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.500485,-1.7137e-05) , 
-1.85651, 1, 3, 0, 0.618741,-0.151597) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.27294,0.000328771) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0957944,0.000894166) , 
2.09024, 0, 18, 0, 0.16097,0.257759) , 
1.71941, 0, 7, 0, 0.293024,0.139671) , 
0.116222, 0, 15, 0, 0.526293,-0.0464661)    );
  // itree = 293
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.806935,-0.000179182) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.625075,-0.0001124) , 
0.244333, 1, 8, 0, 0.670092,-0.158357) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.62703,-0.000143146) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.305674,0.000191774) , 
0.834387, 0, 14, 0, 0.496284,0.00754381) , 
0.29624, 0, 1, 0, 0.616742,-0.107434) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.547458,-5.39255e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199273,0.000420731) , 
0.118166, 0, 15, 0, 0.397899,0.0580458) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.750358,-0.000157564) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152521,0.000347794) , 
2.86804, 0, 8, 0, 0.185634,0.250919) , 
0.355438, 1, 16, 0, 0.301433,0.145698) , 
0.695771, 0, 14, 0, 0.459262,0.018992)    );
  // itree = 294
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701413,-0.000124829) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.431752,8.64997e-05) , 
0.11931, 1, 0, 0, 0.670497,-0.161789) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.526593,4.80113e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.216889,5.53559e-05) , 
0.34195, 0, 12, 0, 0.456712,0.0411619) , 
0.357687, 0, 2, 0, 0.625403,-0.11898) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.737191,-0.000236525) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0826829,0.000669384) , 
1.10762, 1, 8, 0, 0.593781,-0.139733) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.462725,1.3997e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.214805,0.000301262) , 
0.299249, 1, 10, 0, 0.244006,0.191698) , 
0.598412, 1, 9, 0, 0.263524,0.173204) , 
0.659385, 0, 14, 0, 0.487557,-0.00768258)    );
  // itree = 295
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735803,-0.000122508) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.499587,-2.34004e-05) , 
0.316424, 1, 16, 0, 0.68813,-0.179372) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.553141,-0.000120141) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.33093,0.000176933) , 
0.767189, 0, 14, 0, 0.489575,0.0121689) , 
0.443202, 0, 2, 0, 0.620643,-0.114269) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.952976,-0.000243454) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.375525,-4.12414e-05) , 
0.554591, 0, 16, 0, 0.70814,-0.250196) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.433469,0.000135024) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221699,0.000308993) , 
0.748015, 1, 10, 0, 0.28467,0.150686) , 
2.54244, 0, 11, 0, 0.309871,0.126829) , 
0.6583, 0, 14, 0, 0.496074,-0.0176277)    );
  // itree = 296
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.923982,-0.000183475) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.055767,0.00411797) , 
0.72152, 0, 7, 0, 0.908913,-0.399869) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730639,-0.000295383) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378211,0.000339163) , 
0.074254, 1, 16, 0, 0.688444,-0.180128) , 
0.771764, 0, 2, 0, 0.786983,-0.278342) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.609776,-8.55961e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.353585,0.000156972) , 
2.23924, 1, 18, 0, 0.568814,-0.0741486) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730227,-0.000150858) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.214808,0.000387082) , 
0.598984, 1, 9, 0, 0.256421,0.180547) , 
0.145729, 0, 15, 0, 0.456528,0.0173992) , 
0.0865503, 1, 16, 0, 0.504016,-0.0251008)    );
  // itree = 297
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702816,-0.000124559) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.380165,-6.55642e-05) , 
0.591217, 0, 13, 0, 0.666357,-0.160901) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.620056,-9.20409e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.243504,0.000379738) , 
-1.36201, 1, 4, 0, 0.338154,0.106407) , 
0.118164, 0, 15, 0, 0.593096,-0.101233) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.85578,-0.000158013) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.149047,0.00251249) , 
0.757368, 0, 13, 0, 0.613216,-0.127246) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.484295,-2.09392e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201689,0.00020374) , 
1.3464, 1, 9, 0, 0.251695,0.200691) , 
0.468876, 0, 15, 0, 0.295515,0.160942) , 
0.309515, 1, 16, 0, 0.479431,-0.00109138)    );
  // itree = 298
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.772148,-0.000167028) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.52913,-0.000154102) , 
0.131088, 0, 15, 0, 0.733318,-0.218694) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.591316,-8.33352e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.310834,0.000416483) , 
1.2205, 1, 8, 0, 0.536312,-0.0336288) , 
1.23334, 0, 7, 0, 0.622915,-0.114982) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.950291,-0.000230397) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0358031,0.0102267) , 
0.915818, 0, 5, 0, 0.802745,-0.352994) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.491944,-6.54914e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265659,0.000302658) , 
0.03622, 1, 0, 0, 0.331767,0.109288) , 
0.244948, 0, 6, 0, 0.3518,0.0896255) , 
0.673088, 0, 14, 0, 0.500503,-0.0225997)    );
  // itree = 299
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679109,-0.000121298) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.397194,-4.67325e-05) , 
0.383754, 1, 16, 0, 0.641262,-0.132466) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.460078,-1.47993e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.193473,0.000215902) , 
1.3485, 0, 18, 0, 0.37211,0.125301) , 
0.357687, 0, 2, 0, 0.586824,-0.0803315) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.83356,-0.000110091) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.319774,0.000194181) , 
2.46489, 1, 10, 0, 0.538194,-0.085982) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.378488,0.000164328) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.123019,0.000351853) , 
0.144304, 0, 15, 0, 0.224104,0.210175) , 
2.3935, 0, 10, 0, 0.283664,0.154016) , 
0.659385, 0, 14, 0, 0.46311,0.0153016)    );
  // itree = 300
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.649484,-0.000121425) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202588,0.000108262) , 
0.220051, 0, 2, 0, 0.633149,-0.12552) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.407218,2.97214e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.179837,0.000349139) , 
-0.371395, 1, 4, 0, 0.288686,0.146422) , 
0.646663, 0, 14, 0, 0.555619,-0.0643127) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.768207,-0.000133902) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26357,4.72824e-05) , 
1.31049, 1, 17, 0, 0.527869,-0.0753852) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.408986,4.44683e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.156905,0.000274703) , 
0.0454795, 1, 0, 0, 0.221957,0.230235) , 
2.39359, 0, 10, 0, 0.270172,0.182065) , 
0.309674, 1, 16, 0, 0.444257,0.0318069)    );
  // itree = 301
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767163,-0.000139565) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.572835,-6.65566e-06) , 
1.04718, 1, 11, 0, 0.700677,-0.193201) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.708745,-0.000193103) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.448172,-1.32335e-05) , 
1.71925, 0, 7, 0, 0.527215,-0.0222396) , 
0.738804, 1, 8, 0, 0.619035,-0.112736) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664817,-0.00010277) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.300762,0.00052832) , 
0.0878825, 0, 15, 0, 0.530762,-0.080093) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.362772,0.000164294) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157253,0.000573983) , 
0.973675, 1, 8, 0, 0.271355,0.163899) , 
1.5822, 0, 7, 0, 0.315928,0.121974) , 
0.658369, 0, 14, 0, 0.495965,-0.0174367)    );
  // itree = 302
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.740896,-0.000138029) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.216585,-7.09815e-05) , 
0.432125, 1, 15, 0, 0.724282,-0.210654) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.555165,-0.000109219) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.246435,0.000596484) , 
0.786905, 0, 14, 0, 0.48245,0.0211026) , 
0.29624, 0, 1, 0, 0.65603,-0.145245) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645474,-9.49759e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.364188,0.000192448) , 
0.172892, 0, 15, 0, 0.463498,-0.00488819) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.590358,-7.9812e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194612,0.000347762) , 
0.233886, 0, 6, 0, 0.216609,0.220275) , 
0.356328, 1, 16, 0, 0.362313,0.0873929) , 
0.706903, 0, 14, 0, 0.500979,-0.0224376)    );
  // itree = 303
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.759548,-0.000199392) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.084368,0.00737545) , 
0.0535482, 1, 6, 0, 0.750645,-0.23646) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.873152,-0.000339463) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.321161,0.000361381) , 
0.132663, 1, 2, 0, 0.414115,0.0865188) , 
0.220051, 0, 2, 0, 0.712352,-0.199709) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.606483,-0.000116052) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.241211,0.000294942) , 
0.0879474, 0, 15, 0, 0.531814,-0.051074) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.435237,1.68044e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.223261,0.000323356) , 
0.974918, 1, 8, 0, 0.346089,0.114332) , 
1.20048, 0, 7, 0, 0.407297,0.0598198) , 
0.80651, 0, 14, 0, 0.474826,0.00236861)    );
  // itree = 304
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.909924,-8.20522e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.706192,-0.00017599) , 
0.442442, 0, 15, 0, 0.731095,-0.220093) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.715562,-0.000119964) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.406666,-1.84488e-06) , 
0.783026, 0, 14, 0, 0.553854,-0.0536523) , 
1.21173, 0, 7, 0, 0.629693,-0.12487) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.444214,5.18039e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183778,0.00107338) , 
0.0921708, 0, 15, 0, 0.352448,0.0824124) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.882719,-0.000753242) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.124796,0.000831979) , 
-2.35214, 1, 4, 0, 0.149946,0.273761) , 
-0.619181, 0, 5, 0, 0.297893,0.133962) , 
0.637994, 0, 14, 0, 0.518003,-0.037742)    );
  // itree = 305
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704843,-0.000119231) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.495189,-3.00366e-05) , 
0.316124, 1, 16, 0, 0.657061,-0.151254) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.590935,-0.0001589) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.309988,0.00018287) , 
0.822766, 0, 14, 0, 0.461187,0.0379886) , 
0.409588, 0, 2, 0, 0.602109,-0.0981624) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.816815,-0.000205914) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.230176,0.000459774) , 
0.661584, 0, 1, 0, 0.58403,-0.138111) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.449672,0.000150681) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211515,0.000408817) , 
-0.866001, 1, 3, 0, 0.264015,0.166278) , 
1.85243, 0, 7, 0, 0.298166,0.133794) , 
0.642261, 0, 14, 0, 0.489666,-0.0123504)    );
  // itree = 306
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.783104,-0.000208913) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238997,0.00586605) , 
0.0601501, 0, 15, 0, 0.763103,-0.258408) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.662543,-0.000635078) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.150325,0.00123628) , 
2.63581, 0, 18, 0, 0.241846,0.169851) , 
0.570745, 0, 14, 0, 0.725276,-0.227329) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.53176,-7.51843e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.261854,0.00022036) , 
0.637084, 0, 14, 0, 0.465732,0.024977) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.851455,-0.000346609) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.122159,0.000568627) , 
3.65102, 0, 8, 0, 0.139864,0.278329) , 
0.117052, 0, 15, 0, 0.382153,0.0899567) , 
1.71925, 0, 7, 0, 0.462408,0.0157453)    );
  // itree = 307
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704756,-0.000135174) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.527926,-4.21516e-05) , 
0.706307, 0, 7, 0, 0.638831,-0.131048) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.763358,-0.000223728) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.296295,0.00064255) , 
0.0780575, 1, 16, 0, 0.421756,0.0584566) , 
0.138522, 0, 15, 0, 0.60139,-0.0983624) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.872655,-0.000271031) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0600817,0.000772203) , 
0.906925, 1, 8, 0, 0.70477,-0.251061) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.549405,-7.36289e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.228704,0.000384051) , 
1.85243, 0, 7, 0, 0.263035,0.165918) , 
0.598412, 1, 9, 0, 0.290235,0.140243) , 
0.637994, 0, 14, 0, 0.489706,-0.012719)    );
  // itree = 308
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.810827,-0.000152589) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.619274,-0.000119594) , 
0.917241, 1, 17, 0, 0.671487,-0.160266) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.527621,-0.000150194) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.189382,0.000502204) , 
0.879866, 0, 14, 0, 0.344276,0.153563) , 
0.304001, 0, 2, 0, 0.623139,-0.113895) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.885984,-0.000191127) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.488217,-0.000116018) , 
0.116564, 0, 15, 0, 0.730932,-0.249057) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.360375,0.000189781) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.103351,0.000230013) , 
0.077962, 1, 6, 0, 0.311124,0.137026) , 
2.10387, 0, 7, 0, 0.352545,0.0989322) , 
0.706618, 0, 14, 0, 0.474349,0.00313135)    );
  // itree = 309
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.787732,-0.000142283) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.582957,-0.000228822) , 
0.543911, 0, 2, 0, 0.729534,-0.222266) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.869857,-0.000411418) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.329319,0.00028321) , 
0.320844, 1, 18, 0, 0.386863,0.0453907) , 
0.619573, 0, 14, 0, 0.664097,-0.171153) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67325,-0.000139825) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.384382,1.95711e-05) , 
0.134603, 1, 16, 0, 0.428807,0.053578) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.490601,0.000168397) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0484494,0.000778533) , 
2.8341, 0, 18, 0, 0.073353,0.324053) , 
0.0918313, 0, 15, 0, 0.367265,0.100407) , 
1.21979, 0, 7, 0, 0.485945,-0.00816869)    );
  // itree = 310
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.697182,-0.000112113) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.545793,-0.000106353) , 
0.123779, 1, 4, 0, 0.642582,-0.138856) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660531,-3.92121e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.348616,0.000226064) , 
0.695947, 0, 3, 0, 0.437171,0.0398437) , 
0.391241, 1, 16, 0, 0.589819,-0.0929547) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.555344,-6.94032e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.307798,0.000289768) , 
0.968628, 0, 7, 0, 0.437161,0.021399) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.611178,-0.000176097) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.111114,0.0037884) , 
0.081244, 1, 16, 0, 0.155654,0.238448) , 
0.0722685, 0, 15, 0, 0.361572,0.0796798) , 
0.143261, 0, 15, 0, 0.505125,-0.0288962)    );
  // itree = 311
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.906482,-0.000132613) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.675426,-0.000341449) , 
0.589484, 0, 2, 0, 0.844582,-0.327218) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.638968,-0.000107681) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.299049,0.0001743) , 
0.105844, 1, 0, 0, 0.6099,-0.102004) , 
0.91184, 1, 17, 0, 0.672655,-0.162228) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.462781,1.99641e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211815,0.000384441) , 
0.521937, 0, 2, 0, 0.414869,0.0490646) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.610744,-0.000117419) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160952,0.000923318) , 
0.356253, 0, 12, 0, 0.194002,0.206633) , 
0.0904962, 0, 15, 0, 0.349784,0.0954973) , 
0.697055, 0, 14, 0, 0.517731,-0.038563)    );
  // itree = 312
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.901042,-0.000183124) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251226,-0.000120812) , 
-1.36185, 0, 4, 0, 0.885062,-0.374415) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72213,-0.000324564) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.261532,-8.532e-05) , 
0.207298, 0, 1, 0, 0.660732,-0.14984) , 
0.635116, 0, 2, 0, 0.792719,-0.281971) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.580593,-8.79041e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.404523,1.09639e-06) , 
1.79171, 1, 18, 0, 0.522411,-0.0284128) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.315331,0.000270856) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0582267,0.000649879) , 
0.485098, 1, 16, 0, 0.267888,0.16369) , 
0.14413, 0, 15, 0, 0.424966,0.045134) , 
0.0888313, 1, 16, 0, 0.480471,-0.0042354)    );
  // itree = 313
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.77875,-0.000126153) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.504191,-4.85075e-05) , 
0.702768, 0, 14, 0, 0.700817,-0.193165) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.56042,-8.72307e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.142614,0.00144978) , 
0.122945, 1, 0, 0, 0.534477,-0.0330838) , 
0.543895, 0, 2, 0, 0.620641,-0.116006) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.591811,5.83712e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0979164,0.00890753) , 
0.206121, 1, 12, 0, 0.521774,-0.0798493) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.501665,0.000115501) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.200355,0.000391767) , 
0.298845, 1, 10, 0, 0.24404,0.18339) , 
1.64537, 0, 11, 0, 0.315999,0.115186) , 
0.642489, 0, 14, 0, 0.509668,-0.0317886)    );
  // itree = 314
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.684616,-0.000111341) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236797,-9.04814e-05) , 
2.9919, 1, 9, 0, 0.665819,-0.163565) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721298,-6.57952e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318287,0.000149741) , 
2.24359, 0, 10, 0, 0.432604,0.039607) , 
0.31021, 1, 16, 0, 0.577095,-0.0862702) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.898192,-0.000140786) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212551,0.000992284) , 
2.09327, 0, 10, 0, 0.674728,-0.235766) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.406074,0.000276288) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0956193,0.001511) , 
1.19802, 1, 9, 0, 0.139835,0.259206) , 
0.0847777, 0, 15, 0, 0.23135,0.174522) , 
0.0886516, 0, 15, 0, 0.522896,-0.0453882)    );
  // itree = 315
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.684401,-0.00011211) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.304872,-5.79447e-05) , 
-1.60944, 0, 5, 0, 0.669331,-0.163795) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.809107,-0.000241547) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.316888,0.000438356) , 
2.71347, 0, 7, 0, 0.381883,0.0588356) , 
0.116084, 0, 15, 0, 0.602584,-0.112099) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.885598,-0.000210901) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0386444,0.0394349) , 
0.950472, 0, 7, 0, 0.787613,-0.33461) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.572109,1.49586e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233899,0.000241182) , 
0.449037, 1, 18, 0, 0.264904,0.186626) , 
2.81066, 0, 8, 0, 0.294776,0.156838) , 
0.347296, 1, 16, 0, 0.507,-0.0285856)    );
  // itree = 316
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.750251,-0.000125347) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163356,-0.000121556) , 
0.162039, 0, 12, 0, 0.724699,-0.210602) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.609446,-0.000125104) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212054,0.000786262) , 
0.773567, 0, 14, 0, 0.541687,-0.0361703) , 
0.308627, 0, 1, 0, 0.662242,-0.151073) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.59097,-6.34253e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.100754,0.000366527) , 
0.0830184, 1, 6, 0, 0.546524,-0.086764) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.413805,9.18867e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187173,0.00032992) , 
1.74049, 0, 17, 0, 0.305035,0.139978) , 
1.05312, 1, 17, 0, 0.361034,0.0873977) , 
0.706898, 0, 14, 0, 0.503768,-0.0256064)    );
  // itree = 317
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731843,-0.000131402) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.228141,2.78905e-05) , 
0.51664, 0, 13, 0, 0.715764,-0.203063) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.624374,-5.45216e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322224,7.68904e-05) , 
0.541419, 0, 7, 0, 0.503497,-0.00542023) , 
0.306732, 1, 16, 0, 0.666292,-0.156999) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.652704,-9.14588e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227762,0.00140239) , 
0.0889667, 0, 15, 0, 0.533691,-0.079283) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.671949,-0.000142365) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229816,0.000303027) , 
0.598413, 1, 9, 0, 0.260922,0.174006) , 
1.05903, 1, 17, 0, 0.323046,0.116318) , 
0.671261, 0, 14, 0, 0.526557,-0.045732)    );
  // itree = 318
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707543,-0.000101413) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.426747,0.00016154) , 
0.114496, 0, 15, 0, 0.674278,-0.17545) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.617222,-0.000137713) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.329085,0.000204466) , 
0.735858, 0, 7, 0, 0.497309,-0.000240564) , 
0.443213, 0, 2, 0, 0.623479,-0.125157) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.504319,5.06221e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.156125,0.000913201) , 
0.501543, 0, 14, 0, 0.410695,0.0193259) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.528707,8.07134e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143772,0.000569992) , 
2.99211, 0, 9, 0, 0.195818,0.224555) , 
-0.123444, 1, 3, 0, 0.309493,0.115983) , 
0.601377, 0, 14, 0, 0.542237,-0.0627632)    );
  // itree = 319
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731557,-0.000113997) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.510675,-6.22879e-05) , 
0.312791, 0, 1, 0, 0.671714,-0.162112) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.862808,-0.00575693) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202817,0.000130496) , 
0.861176, 0, 14, 0, 0.247413,0.221735) , 
0.108288, 0, 15, 0, 0.644831,-0.137792) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.55296,-4.24411e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.242156,0.000685988) , 
0.0883516, 0, 15, 0, 0.448636,-0.00616185) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714824,-0.000128052) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171143,0.000494241) , 
2.54144, 0, 11, 0, 0.203323,0.224552) , 
0.913828, 0, 7, 0, 0.316733,0.117891) , 
0.658743, 0, 14, 0, 0.516195,-0.0375474)    );
  // itree = 320
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.765026,-0.000109022) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.469405,-0.000112015) , 
0.157291, 0, 15, 0, 0.722729,-0.212576) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703417,-0.000196653) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.400596,-2.89788e-05) , 
2.24393, 0, 10, 0, 0.469679,0.0331675) , 
0.536008, 0, 2, 0, 0.614054,-0.107038) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.807227,-0.00017686) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.443702,7.9204e-05) , 
2.86892, 0, 8, 0, 0.493692,-0.0482797) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.340242,0.000175034) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.149152,0.000731599) , 
0.35949, 1, 16, 0, 0.225585,0.20231) , 
0.926226, 0, 7, 0, 0.349048,0.0869141) , 
0.66057, 0, 14, 0, 0.501934,-0.0249801)    );
  // itree = 321
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730599,-0.000135084) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224449,0.000141024) , 
0.110562, 1, 0, 0, 0.6917,-0.18171) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.643582,-0.000206834) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388661,-3.08463e-07) , 
1.70777, 0, 7, 0, 0.4743,0.0335892) , 
0.976728, 1, 8, 0, 0.622091,-0.112774) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.886005,-0.000174142) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.383755,-0.000212774) , 
0.610256, 0, 14, 0, 0.770108,-0.29136) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.440148,1.62359e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26093,0.000279867) , 
2.09445, 0, 10, 0, 0.306199,0.134094) , 
0.61278, 1, 17, 0, 0.330427,0.111874) , 
0.695075, 0, 14, 0, 0.473579,0.0016141)    );
  // itree = 322
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721317,-0.000122678) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.405563,-1.44061e-05) , 
0.132103, 0, 15, 0, 0.691745,-0.181033) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661309,-0.000151699) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.311605,0.000208323) , 
1.20989, 1, 17, 0, 0.434838,0.0640366) , 
0.357687, 0, 2, 0, 0.638874,-0.130598) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.955097,-0.000256562) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0424231,0.0143738) , 
-0.844219, 1, 3, 0, 0.73848,-0.288101) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666653,-0.000167228) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.240931,0.000229287) , 
2.54299, 0, 11, 0, 0.263042,0.17278) , 
0.220808, 1, 13, 0, 0.284011,0.152453) , 
0.671902, 0, 14, 0, 0.49004,-0.0118834)    );
  // itree = 323
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745651,-0.00010912) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.556761,-3.18518e-05) , 
0.454951, 0, 2, 0, 0.69264,-0.184664) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738777,-0.000190445) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.402679,-7.34084e-06) , 
1.17541, 1, 9, 0, 0.531989,-0.0265452) , 
2.24401, 0, 9, 0, 0.635799,-0.128719) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.783881,-0.000174173) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0986189,0.000337309) , 
0.235607, 1, 16, 0, 0.684297,-0.223119) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.385074,0.000130218) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22623,0.000443934) , 
0.876583, 0, 7, 0, 0.29072,0.140535) , 
0.759036, 1, 17, 0, 0.326024,0.107915) , 
0.658743, 0, 14, 0, 0.512295,-0.0343754)    );
  // itree = 324
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.802788,-0.000203836) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.60501,-0.000242591) , 
1.4992, 0, 18, 0, 0.742052,-0.242135) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.869321,-0.000229088) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.27719,3.93715e-05) , 
0.378392, 0, 15, 0, 0.395288,0.0772651) , 
0.528005, 0, 13, 0, 0.68398,-0.188646) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.571269,-7.13305e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.406455,3.48959e-05) , 
-0.371399, 0, 5, 0, 0.521181,-0.0283131) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.370019,0.000353961) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.133587,0.000349488) , 
0.635107, 1, 2, 0, 0.270339,0.160126) , 
0.143499, 0, 15, 0, 0.427731,0.0418893) , 
1.72669, 0, 7, 0, 0.477313,-0.00271712)    );
  // itree = 325
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.70466,-0.000131113) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.474439,5.06635e-06) , 
0.711262, 0, 7, 0, 0.62697,-0.123084) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.518492,-0.000117861) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.126038,0.00115341) , 
1.4802, 0, 7, 0, 0.305086,0.147886) , 
0.114103, 0, 15, 0, 0.590437,-0.0923295) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.873576,-0.00013486) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.305816,0.000221713) , 
0.0196264, 1, 6, 0, 0.392015,0.0335404) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.525631,7.13413e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.14943,0.000420942) , 
0.149648, 1, 10, 0, 0.179748,0.239799) , 
0.47636, 1, 13, 0, 0.258317,0.163454) , 
0.601912, 0, 14, 0, 0.50341,-0.0253055)    );
  // itree = 326
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.693811,-0.000129294) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.440269,2.19097e-05) , 
0.350411, 0, 2, 0, 0.639562,-0.131099) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.382775,-4.66557e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.121263,0.000174089) , 
-0.122359, 0, 3, 0, 0.282045,0.220987) , 
0.40322, 1, 15, 0, 0.613033,-0.104973) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.469813,3.29356e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180593,0.000394302) , 
0.0896798, 0, 15, 0, 0.381294,0.0595205) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.524109,-3.41781e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.115823,0.000692133) , 
1.04763, 1, 9, 0, 0.161735,0.26678) , 
0.46759, 0, 7, 0, 0.317419,0.119818) , 
0.671908, 0, 14, 0, 0.481617,-0.0050417)    );
  // itree = 327
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.821721,-0.000111689) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.58891,-0.000129588) , 
0.819075, 0, 2, 0, 0.647427,-0.138556) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.646762,-0.000107014) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.343266,7.46521e-05) , 
0.975468, 0, 7, 0, 0.4397,0.0515756) , 
0.276186, 1, 16, 0, 0.578744,-0.0756905) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.484093,1.84859e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0331974,0.00179476) , 
0.478255, 0, 2, 0, 0.440997,-0.00462285) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.922926,-0.000270439) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.193599,0.000515164) , 
0.796642, 0, 16, 0, 0.21175,0.210839) , 
2.09446, 0, 10, 0, 0.278008,0.148566) , 
0.641403, 0, 14, 0, 0.467074,0.00758121)    );
  // itree = 328
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687571,-0.000137546) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.479534,-4.96579e-05) , 
0.0284143, 1, 6, 0, 0.637366,-0.129062) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.855634,-0.000569915) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.241183,0.000126392) , 
2.10469, 0, 3, 0, 0.258459,0.235939) , 
0.311803, 0, 2, 0, 0.590615,-0.084026) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.532615,1.3396e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128002,0.000919407) , 
0.488356, 1, 16, 0, 0.449048,-0.00926812) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.466972,8.03128e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.188163,0.000448073) , 
1.34657, 1, 9, 0, 0.237926,0.191569) , 
0.722379, 1, 8, 0, 0.328551,0.105358) , 
0.658743, 0, 14, 0, 0.479488,-0.00371899)    );
  // itree = 329
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701807,-0.000133132) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335908,1.7597e-05) , 
0.108998, 0, 15, 0, 0.668711,-0.158062) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722833,-0.000102181) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.379548,-1.03072e-05) , 
0.520823, 1, 13, 0, 0.453519,0.0415456) , 
0.276016, 1, 16, 0, 0.600203,-0.0945153) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.894735,-0.000221708) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.39365,0.000263635) , 
0.250192, 0, 6, 0, 0.440107,0.0163845) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.266342,0.000181531) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0585303,0.00200006) , 
0.426502, 0, 7, 0, 0.213061,0.203577) , 
0.170414, 0, 15, 0, 0.278787,0.149387) , 
0.646505, 0, 14, 0, 0.482498,-0.00519666)    );
  // itree = 330
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776402,-0.000119208) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.583792,-9.87115e-05) , 
1.04717, 1, 11, 0, 0.719546,-0.208697) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.819375,-0.000228906) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.422061,-5.56145e-05) , 
2.24393, 0, 11, 0, 0.491996,0.0172305) , 
-0.619269, 0, 3, 0, 0.679187,-0.168625) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.836053,-0.000164994) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.43414,-5.02138e-05) , 
0.100272, 0, 15, 0, 0.712038,-0.234778) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.559754,-1.90816e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.291284,0.000346759) , 
2.09442, 0, 10, 0, 0.367533,0.0768413) , 
1.88602, 0, 7, 0, 0.41567,0.0332994) , 
0.705798, 0, 14, 0, 0.536853,-0.0595596)    );
  // itree = 331
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.708753,-0.00014896) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.550953,-6.32948e-05) , 
0.249754, 1, 16, 0, 0.642015,-0.133935) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.774132,-0.000243861) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257646,0.000340944) , 
0.071645, 1, 16, 0, 0.395846,0.0851748) , 
0.135775, 0, 15, 0, 0.602585,-0.0988391) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.881388,-0.000214321) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.363265,0.000314555) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.166776,0.000290677) , 
0.121299, 1, 0, 0, 0.280019,0.145833) , 
0.796309, 0, 16, 0, 0.291162,0.135052) , 
0.638, 0, 14, 0, 0.493722,-0.0170784)    );
  // itree = 332
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.756803,-0.000135799) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340556,-8.4782e-05) , 
0.326443, 1, 16, 0, 0.720938,-0.207442) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.650982,-0.000146171) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.451719,-4.43795e-05) , 
0.7857, 0, 14, 0, 0.566024,-0.058035) , 
1.33673, 1, 17, 0, 0.638211,-0.127656) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.55397,-6.1126e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.193865,0.000379111) , 
0.558313, 0, 14, 0, 0.46563,-0.00662533) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.631981,-8.94708e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.206595,0.000367767) , 
2.09395, 0, 11, 0, 0.254733,0.18275) , 
0.916145, 0, 7, 0, 0.352165,0.0952611) , 
0.706208, 0, 14, 0, 0.485249,-0.00845232)    );
  // itree = 333
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.754707,-0.000162102) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.543683,-8.16718e-05) , 
0.0200375, 1, 0, 0, 0.699718,-0.1851) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767128,-0.000172175) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.395143,1.97721e-06) , 
0.193841, 1, 8, 0, 0.483789,0.0174448) , 
0.305564, 1, 16, 0, 0.65379,-0.142019) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7268,-0.000136763) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.352686,8.03156e-05) , 
0.252649, 0, 15, 0, 0.430336,0.0262523) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.4037,8.2971e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.178303,0.00041131) , 
1.94462, 1, 9, 0, 0.261271,0.175621) , 
0.308389, 1, 16, 0, 0.337088,0.108637) , 
0.708187, 0, 14, 0, 0.487699,-0.0105652)    );
  // itree = 334
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731596,-0.000142715) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233482,-1.21219e-05) , 
0.407112, 1, 15, 0, 0.717624,-0.20473) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.61423,-0.000112102) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.31203,-4.83e-05) , 
0.97225, 1, 8, 0, 0.54731,-0.0399716) , 
0.0111591, 1, 6, 0, 0.650296,-0.139598) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.75293,-0.000123178) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.382996,0.0002291) , 
2.54341, 0, 9, 0, 0.581014,-0.120563) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.480174,3.00818e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265391,0.000123502) , 
0.439441, 1, 13, 0, 0.317739,0.127367) , 
1.11472, 0, 3, 0, 0.364612,0.0832264) , 
0.711778, 0, 14, 0, 0.494621,-0.0181767)    );
  // itree = 335
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679039,-0.000131584) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.32349,1.42505e-06) , 
0.107428, 0, 15, 0, 0.652487,-0.141487) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.520464,-6.16646e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.278195,7.82186e-05) , 
1.47074, 1, 17, 0, 0.397089,0.0988658) , 
0.304942, 1, 16, 0, 0.588036,-0.0808331) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.923538,-0.000161211) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.445165,-3.80521e-05) , 
2.09476, 0, 10, 0, 0.733669,-0.289073) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676924,-0.000160146) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.206047,0.000312791) , 
2.104, 0, 7, 0, 0.244573,0.18544) , 
2.86877, 0, 8, 0, 0.289601,0.141754) , 
0.659385, 0, 14, 0, 0.464412,0.0113718)    );
  // itree = 336
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.713068,-0.000124741) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.310777,0.000252507) , 
-1.36195, 0, 5, 0, 0.69299,-0.180134) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.560671,2.16404e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318373,0.000177963) , 
1.51221, 1, 17, 0, 0.45511,0.0107083) , 
0.690726, 0, 14, 0, 0.61996,-0.121545) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682906,-0.000253359) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.313675,-7.15132e-05) , 
0.0117189, 1, 6, 0, 0.571526,-0.0921716) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.351286,0.000213863) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.131022,0.000375833) , 
0.748029, 1, 10, 0, 0.200253,0.224215) , 
0.132002, 1, 16, 0, 0.275875,0.159773) , 
0.143039, 0, 15, 0, 0.506192,-0.0285306)    );
  // itree = 337
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.743777,-0.000132274) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.419563,5.93454e-06) , 
0.110562, 1, 0, 0, 0.709383,-0.195773) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.784984,-0.000558312) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.367585,4.71119e-05) , 
1.9371, 0, 7, 0, 0.419854,0.081406) , 
0.29624, 0, 1, 0, 0.634727,-0.124301) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.614535,-6.72993e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.189707,0.000753878) , 
0.0888828, 0, 15, 0, 0.51144,-0.0545623) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.321209,0.000268706) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125381,0.000370399) , 
0.35282, 0, 7, 0, 0.247671,0.187242) , 
0.926211, 0, 7, 0, 0.371365,0.073848) , 
0.695771, 0, 14, 0, 0.498643,-0.0219138)    );
  // itree = 338
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706938,-0.000119785) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252594,8.03696e-05) , 
0.107748, 0, 15, 0, 0.682893,-0.172272) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.662191,-0.000184203) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.333596,0.000449568) , 
0.877315, 0, 14, 0, 0.451113,0.048555) , 
0.357687, 0, 2, 0, 0.636749,-0.128309) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.872999,-0.000156353) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.333036,0.000181459) , 
0.254725, 0, 12, 0, 0.395481,0.0345438) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.54225,-0.000199045) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.181326,0.000407166) , 
0.124222, 1, 16, 0, 0.211163,0.216815) , 
0.47766, 1, 13, 0, 0.272601,0.156059) , 
0.659126, 0, 14, 0, 0.498048,-0.019995)    );
  // itree = 339
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709407,-0.000119601) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.497675,-4.71354e-05) , 
0.313713, 0, 1, 0, 0.639695,-0.131387) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.434352,-6.05082e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0780984,0.00234516) , 
0.292246, 0, 15, 0, 0.305886,0.189702) , 
0.11931, 1, 0, 0, 0.610853,-0.103644) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.942993,-0.000251833) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.2455,-5.84049e-05) , 
0.870864, 0, 2, 0, 0.672431,-0.215472) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.360348,5.35235e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.15372,0.000494275) , 
0.926297, 0, 7, 0, 0.242841,0.185521) , 
2.54245, 0, 11, 0, 0.268767,0.161321) , 
0.659126, 0, 14, 0, 0.47617,0.000676055)    );
  // itree = 340
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.680328,-0.000114348) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.443373,4.38178e-05) , 
0.136883, 0, 15, 0, 0.641971,-0.137974) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741468,-0.00026665) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.20093,0.000161677) , 
0.139966, 1, 2, 0, 0.253096,0.239656) , 
0.270276, 0, 2, 0, 0.613325,-0.110157) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.961743,-0.000288421) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.438599,-2.69159e-05) , 
0.540843, 0, 9, 0, 0.750645,-0.293953) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.452496,0.000330978) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.215603,0.000328735) , 
2.89941, 0, 9, 0, 0.258312,0.165292) , 
0.598653, 1, 9, 0, 0.298162,0.12812) , 
0.637994, 0, 14, 0, 0.503064,-0.026795)    );
  // itree = 341
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.857819,-0.000121803) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.375085,0.00165912) , 
0.866668, 1, 4, 0, 0.827755,-0.310781) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692591,-0.000154907) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.515566,-5.03597e-05) , 
0.986705, 0, 7, 0, 0.602865,-0.0933976) , 
0.72157, 0, 2, 0, 0.668215,-0.156566) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.669482,-7.41596e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238978,0.000339031) , 
1.95487, 1, 9, 0, 0.494083,-0.0487776) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.392202,0.00014356) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198214,0.000234824) , 
2.54321, 0, 9, 0, 0.290191,0.149786) , 
0.446691, 1, 13, 0, 0.34567,0.0957567) , 
0.694671, 0, 14, 0, 0.512937,-0.0350941)    );
  // itree = 342
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712884,-0.0001107) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34046,3.15592e-05) , 
0.111069, 0, 15, 0, 0.686072,-0.179464) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.550933,-9.10385e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167604,0.000439247) , 
0.688132, 0, 14, 0, 0.506667,-0.00441377) , 
0.548447, 0, 2, 0, 0.600943,-0.0964017) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.657919,-6.86988e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.313422,0.000343391) , 
0.00521489, 1, 6, 0, 0.371199,0.0586913) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622883,-1.24697e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.13035,0.000319599) , 
2.31374, 0, 17, 0, 0.159642,0.257892) , 
0.138549, 1, 0, 0, 0.292258,0.133022) , 
0.637994, 0, 14, 0, 0.491349,-0.0149483)    );
  // itree = 343
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760136,-0.000129435) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.562548,-0.000120991) , 
-0.61902, 0, 3, 0, 0.724134,-0.208962) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.839713,-0.000539274) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.331426,8.27221e-05) , 
1.96223, 0, 7, 0, 0.393032,0.108686) , 
0.350417, 0, 2, 0, 0.655608,-0.14322) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.970971,-0.00024892) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0188477,0.0111769) , 
0.915818, 0, 5, 0, 0.737678,-0.29896) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.423623,-1.26101e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194079,0.000338085) , 
0.943065, 0, 7, 0, 0.294112,0.148744) , 
0.23541, 0, 6, 0, 0.3118,0.130891) , 
0.706898, 0, 14, 0, 0.478463,-0.00198629)    );
  // itree = 344
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744405,-0.00013296) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.609979,-8.63615e-05) , 
0.738822, 1, 8, 0, 0.681297,-0.170488) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.557438,-0.000148872) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.273313,0.000462372) , 
0.883662, 0, 14, 0, 0.378328,0.118446) , 
0.304019, 0, 2, 0, 0.644058,-0.134974) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.83922,-0.000308082) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.115221,0.00520005) , 
1.4277, 1, 17, 0, 0.71694,-0.268504) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.412718,1.76152e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224908,0.000425065) , 
0.926288, 0, 7, 0, 0.305639,0.128478) , 
2.10459, 0, 5, 0, 0.330193,0.104778) , 
0.673093, 0, 14, 0, 0.508307,-0.0312776)    );
  // itree = 345
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.766855,-0.000207426) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0359789,0.00144531) , 
0.567832, 0, 14, 0, 0.751881,-0.242785) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735309,-0.000314788) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292418,9.61974e-05) , 
1.60975, 0, 3, 0, 0.406817,0.0284191) , 
0.0874951, 0, 15, 0, 0.693433,-0.196847) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.584703,-7.87157e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.27509,0.000278947) , 
0.632003, 0, 14, 0, 0.531951,-0.0376821) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.43092,0.000173259) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.178419,0.000401388) , 
-0.86612, 1, 3, 0, 0.239588,0.18597) , 
0.144304, 0, 15, 0, 0.426779,0.0427725) , 
1.70905, 0, 7, 0, 0.481511,-0.00641087)    );
  // itree = 346
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.798204,-0.000116172) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.583289,-7.48901e-05) , 
1.04716, 1, 11, 0, 0.738003,-0.225228) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.617927,-0.000139181) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.33115,-5.20966e-05) , 
1.79201, 1, 18, 0, 0.541073,-0.0305849) , 
1.66719, 1, 17, 0, 0.676627,-0.164565) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.847664,-0.000201398) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.418662,4.95894e-05) , 
0.664674, 0, 14, 0, 0.594366,-0.13071) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.316552,0.000108331) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125436,0.000594091) , 
0.488143, 1, 16, 0, 0.272623,0.169542) , 
1.34657, 1, 9, 0, 0.331863,0.114259) , 
0.708182, 0, 14, 0, 0.501375,-0.0228318)    );
  // itree = 347
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.641879,-9.82759e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167514,0.000376396) , 
0.314847, 1, 0, 0, 0.622892,-0.12542) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.489395,-8.12175e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.16314,0.000379888) , 
0.399777, 1, 16, 0, 0.407276,0.0851372) , 
-0.619122, 0, 5, 0, 0.574833,-0.0784886) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.821377,-0.000238198) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.384902,0.000111347) , 
2.70984, 0, 7, 0, 0.421066,0.0235992) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.68336,-0.000245295) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.090405,0.00106349) , 
2.84067, 0, 11, 0, 0.109786,0.303584) , 
0.490768, 0, 7, 0, 0.346776,0.0904203) , 
0.144066, 0, 15, 0, 0.488148,-0.014286)    );
  // itree = 348
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.782032,-0.000122071) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.146556,-0.000141912) , 
0.271435, 1, 0, 0, 0.772282,-0.257234) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.59722,-0.000104478) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.31281,-1.56751e-05) , 
0.152931, 0, 15, 0, 0.550918,-0.0440925) , 
0.353619, 0, 1, 0, 0.684338,-0.172556) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.862731,-0.00013176) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.346793,-0.000107893) , 
0.062277, 0, 6, 0, 0.650438,-0.184344) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.713541,-0.00010518) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.254174,0.000190419) , 
0.242955, 0, 6, 0, 0.26939,0.167501) , 
0.758586, 1, 17, 0, 0.30569,0.133982) , 
0.697055, 0, 14, 0, 0.511446,-0.0325895)    );
  // itree = 349
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.799467,-0.000111404) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.624204,-0.000126137) , 
0.636099, 0, 2, 0, 0.700934,-0.189994) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742565,-0.000127761) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.417854,5.44317e-05) , 
0.825498, 0, 14, 0, 0.514031,-0.0171631) , 
0.315571, 1, 16, 0, 0.655016,-0.147533) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.55096,3.12368e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.264009,0.000165964) , 
-0.370453, 1, 3, 0, 0.417865,0.0206165) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.443779,-1.43302e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.107934,0.00112688) , 
2.09379, 0, 10, 0, 0.213453,0.209164) , 
0.358666, 1, 16, 0, 0.321503,0.109499) , 
0.66057, 0, 14, 0, 0.525838,-0.0479782)    );
  // itree = 350
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.778833,-0.000117835) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.462079,-7.47577e-05) , 
1.19566, 1, 11, 0, 0.72568,-0.212462) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.723274,-0.000202641) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.428971,4.85514e-05) , 
0.867126, 0, 14, 0, 0.535773,-0.0307389) , 
0.443187, 0, 2, 0, 0.659948,-0.149562) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.797983,-0.000227471) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.120381,0.0193346) , 
0.531746, 0, 2, 0, 0.746265,-0.282014) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.470812,3.80028e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224682,0.000257446) , 
2.39357, 0, 10, 0, 0.263249,0.168203) , 
0.0950256, 1, 16, 0, 0.296247,0.137446) , 
0.675636, 0, 14, 0, 0.509735,-0.0310246)    );
  // itree = 351
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.899311,-0.000277309) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.109979,-0.000143839) , 
0.126128, 0, 12, 0, 0.874162,-0.354981) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663326,-0.000105633) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.506419,-5.45394e-05) , 
0.734756, 1, 8, 0, 0.585319,-0.0818924) , 
0.610869, 1, 17, 0, 0.610224,-0.10544) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.658216,-2.11522e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128201,0.000824069) , 
0.170779, 1, 12, 0, 0.564984,-0.125969) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.352678,0.000218339) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.08322,0.000523238) , 
0.445553, 1, 16, 0, 0.268689,0.154397) , 
2.54314, 0, 10, 0, 0.309328,0.115943) , 
0.642489, 0, 14, 0, 0.500493,-0.0247057)    );
  // itree = 352
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69551,-0.000104112) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.523966,-9.08801e-05) , 
0.541201, 0, 2, 0, 0.629847,-0.129757) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71002,-0.000239689) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194375,0.00218681) , 
0.615988, 1, 17, 0, 0.28506,0.131214) , 
0.0891881, 0, 15, 0, 0.57931,-0.0915051) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.649876,-7.04187e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201172,0.000178281) , 
0.580247, 1, 1, 0, 0.540084,-0.0863032) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.407971,3.63016e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0889492,0.00110488) , 
0.632439, 0, 14, 0, 0.247288,0.199764) , 
2.09404, 0, 10, 0, 0.327502,0.121393) , 
0.351159, 1, 16, 0, 0.497914,-0.0226865)    );
  // itree = 353
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714203,-0.000136716) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.4127,-6.83888e-05) , 
-1.11428, 0, 5, 0, 0.687054,-0.177632) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.55302,-1.62267e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.324348,-2.2797e-05) , 
-0.370999, 1, 4, 0, 0.423011,0.0722076) , 
0.736821, 0, 7, 0, 0.600615,-0.0958434) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.493807,2.74035e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.195497,0.000881466) , 
1.79676, 1, 18, 0, 0.400206,0.0472948) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.262889,0.000487868) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0600943,0.000827794) , 
1.63662, 0, 7, 0, 0.0927634,0.288856) , 
0.0898455, 0, 15, 0, 0.30078,0.125415) , 
0.640472, 0, 14, 0, 0.4926,-0.0161351)    );
  // itree = 354
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.782228,-0.000210109) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306532,-0.000132589) , 
0.277483, 1, 15, 0, 0.759446,-0.2514) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558451,-7.92329e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212172,0.00150314) , 
0.0904962, 0, 15, 0, 0.50196,-0.0209511) , 
0.0986722, 1, 16, 0, 0.568376,-0.0803931) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664253,-6.93486e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209912,0.000106547) , 
0.500785, 0, 16, 0, 0.497674,-0.0447013) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.333513,7.32329e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0661968,0.000402878) , 
0.172637, 0, 15, 0, 0.198378,0.244681) , 
1.3464, 1, 9, 0, 0.249924,0.194842) , 
0.344087, 1, 16, 0, 0.466637,0.00753918)    );
  // itree = 355
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71997,-0.000108994) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.523721,-5.97808e-05) , 
0.443206, 0, 2, 0, 0.66054,-0.152507) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.636962,-0.000186805) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128208,0.000650638) , 
0.897969, 1, 17, 0, 0.302592,0.164375) , 
0.110676, 0, 15, 0, 0.631656,-0.126937) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.590301,1.12073e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.290066,0.000174642) , 
0.357349, 1, 13, 0, 0.353387,0.0760164) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.618193,-6.54782e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.147016,0.000403229) , 
2.69095, 0, 11, 0, 0.161042,0.255262) , 
0.935264, 0, 7, 0, 0.241816,0.179989) , 
0.636907, 0, 14, 0, 0.505855,-0.0278923)    );
  // itree = 356
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.888939,-0.000187782) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.656811,-0.00020766) , 
0.5418, 0, 1, 0, 0.737643,-0.223776) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.611108,-7.6983e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259111,0.000420658) , 
0.141737, 0, 15, 0, 0.556731,-0.0591106) , 
0.120138, 1, 16, 0, 0.60287,-0.101106) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.964072,-0.000311197) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.33957,0.000130119) , 
0.30107, 1, 10, 0, 0.643292,-0.19405) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.353162,8.13872e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.136027,0.000458481) , 
1.49535, 0, 11, 0, 0.204481,0.212881) , 
0.764143, 1, 17, 0, 0.245753,0.174606) , 
0.624085, 0, 14, 0, 0.494536,-0.0174665)    );
  // itree = 357
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.754079,-0.000123344) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530327,-0.000121004) , 
-0.618948, 0, 3, 0, 0.713928,-0.199254) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.671286,-0.00017357) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.416021,2.65728e-05) , 
0.413967, 0, 12, 0, 0.507404,-0.0039153) , 
0.30581, 0, 1, 0, 0.651015,-0.139748) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.775985,-0.000202372) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.36101,-8.15476e-05) , 
0.0240387, 1, 0, 0, 0.604762,-0.137976) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.535956,-1.8667e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.19972,0.000229915) , 
0.495273, 0, 15, 0, 0.220552,0.211843) , 
1.82762, 0, 7, 0, 0.274015,0.163166) , 
0.694671, 0, 14, 0, 0.477106,-1.47297e-05)    );
  // itree = 358
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.723565,-0.000121187) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.565271,-0.000104019) , 
0.486029, 0, 8, 0, 0.695705,-0.188387) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.448537,-9.70765e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164101,0.00102596) , 
1.48041, 0, 7, 0, 0.299246,0.13453) , 
0.11583, 0, 15, 0, 0.61723,-0.124469) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.678887,-9.39335e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.349348,0.000120657) , 
2.3935, 0, 10, 0, 0.399841,0.0699492) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.568671,-0.000173649) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0840001,0.000353927) , 
2.82567, 0, 18, 0, 0.104412,0.299898) , 
0.562014, 0, 14, 0, 0.308416,0.141111) , 
0.30858, 1, 16, 0, 0.50223,-0.0255695)    );
  // itree = 359
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.807795,-0.000224741) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.631666,-9.00384e-05) , 
1.90015, 0, 7, 0, 0.687521,-0.182811) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.555392,-7.18144e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.337346,0.000313202) , 
0.976371, 1, 8, 0, 0.477148,0.00789119) , 
0.944449, 0, 7, 0, 0.578689,-0.0841557) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.806798,-0.000266659) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.293686,0.000214181) , 
0.107993, 1, 16, 0, 0.651433,-0.183436) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.416064,0.0001081) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.193436,0.000839836) , 
2.09433, 0, 10, 0, 0.25002,0.163518) , 
2.2106, 0, 7, 0, 0.298966,0.121212) , 
0.115897, 0, 15, 0, 0.502674,-0.0283463)    );
  // itree = 360
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760191,-0.000133187) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.590895,-0.000104786) , 
0.86233, 0, 2, 0, 0.623213,-0.121481) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.611742,-7.83216e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.358831,0.00018998) , 
0.975468, 0, 7, 0, 0.42738,0.0410073) , 
0.309876, 1, 16, 0, 0.54416,-0.0558884) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.58172,-9.36921e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.181926,0.000808118) , 
0.0855246, 0, 15, 0, 0.448118,-0.0186044) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.394063,-1.87213e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0699704,0.00386279) , 
1.72699, 0, 7, 0, 0.14326,0.247478) , 
0.081814, 0, 15, 0, 0.205691,0.192988) , 
0.0896043, 0, 15, 0, 0.488623,-0.0150522)    );
  // itree = 361
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69149,-0.000110676) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.532746,-8.20489e-05) , 
0.457855, 0, 2, 0, 0.645789,-0.143255) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731551,-9.52826e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26878,0.000384388) , 
0.806626, 0, 1, 0, 0.319305,0.109531) , 
0.117079, 0, 15, 0, 0.568824,-0.0836633) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.77045,-0.000150745) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221491,0.000286252) , 
1.19403, 1, 18, 0, 0.55923,-0.0996446) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.445924,3.13846e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118727,0.000424815) , 
0.701191, 0, 14, 0, 0.209954,0.233704) , 
2.39319, 0, 10, 0, 0.269525,0.176849) , 
0.397804, 1, 16, 0, 0.496425,-0.0206467)    );
  // itree = 362
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707362,-0.000131056) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.480797,-5.21842e-05) , 
0.301001, 0, 1, 0, 0.641289,-0.127185) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.48169,-0.000109292) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180451,6.96079e-05) , 
0.98061, 0, 4, 0, 0.267476,0.228844) , 
0.383284, 1, 16, 0, 0.598651,-0.0865753) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.589435,-0.000112324) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.385644,0.000140461) , 
0.884321, 0, 7, 0, 0.4667,0.00654649) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.561629,1.13293e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184156,0.000254488) , 
2.70877, 0, 8, 0, 0.216923,0.206889) , 
0.17361, 0, 15, 0, 0.310363,0.131943) , 
0.708182, 0, 14, 0, 0.440867,0.0330224)    );
  // itree = 363
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706025,-0.000128271) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.278561,2.8735e-05) , 
0.543431, 0, 13, 0, 0.68427,-0.171818) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.608889,-4.39255e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.281913,-9.51246e-06) , 
2.39363, 0, 9, 0, 0.467504,0.0281669) , 
0.305761, 1, 16, 0, 0.629595,-0.121376) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.49888,1.5222e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191264,0.000224795) , 
0.401453, 1, 16, 0, 0.388526,0.0445443) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.353209,0.000175197) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.105504,0.000441815) , 
0.0438044, 1, 0, 0, 0.196185,0.225936) , 
0.722452, 1, 8, 0, 0.275275,0.151348) , 
0.659126, 0, 14, 0, 0.494063,-0.0170556)    );
  // itree = 364
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.849752,-0.000153058) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.625466,-0.000106212) , 
0.908759, 0, 2, 0, 0.65656,-0.146749) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.498722,-5.7191e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.214902,0.00101833) , 
2.09337, 1, 18, 0, 0.440625,0.0495683) , 
0.315374, 1, 16, 0, 0.602022,-0.0971663) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.759053,-6.21494e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.268087,0.00168639) , 
0.468744, 1, 8, 0, 0.487816,-0.0504966) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.620329,-8.89085e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.205588,0.000286574) , 
0.236077, 0, 6, 0, 0.223259,0.195851) , 
2.09218, 0, 17, 0, 0.277742,0.145118) , 
0.643027, 0, 14, 0, 0.48508,-0.00979384)    );
  // itree = 365
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776646,-0.000117504) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.45671,-2.30337e-06) , 
0.547709, 0, 13, 0, 0.738339,-0.224472) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653289,-0.000113496) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.424824,1.13026e-05) , 
0.976368, 1, 8, 0, 0.579242,-0.0720989) , 
0.536008, 0, 2, 0, 0.659008,-0.148493) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764853,-0.000194999) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.214944,-6.27704e-05) , 
0.533882, 0, 13, 0, 0.637149,-0.181129) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.360173,0.00015268) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0644912,0.000751216) , 
0.0900273, 0, 15, 0, 0.274683,0.155234) , 
1.85242, 0, 7, 0, 0.3232,0.110211) , 
0.677906, 0, 14, 0, 0.513963,-0.0367516)    );
  // itree = 366
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.899972,-0.000298685) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259543,-9.4907e-05) , 
0.628825, 1, 1, 0, 0.869887,-0.34984) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.598281,-9.82836e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.29762,0.000483685) , 
0.111486, 0, 15, 0, 0.574316,-0.0684206) , 
0.615633, 1, 17, 0, 0.601893,-0.0946768) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.826924,-0.000203775) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0360461,-4.03472e-05) , 
0.204954, 1, 16, 0, 0.745928,-0.276742) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.538228,0.000218609) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.260794,0.000276746) , 
2.99198, 0, 9, 0, 0.29393,0.131577) , 
0.629126, 1, 17, 0, 0.320697,0.107396) , 
0.66057, 0, 14, 0, 0.482545,-0.00891089)    );
  // itree = 367
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.805807,-0.000132883) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.601537,-8.79267e-05) , 
0.908774, 0, 2, 0, 0.635842,-0.138293) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.573115,-0.000194346) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.115053,0.0021029) , 
2.22028, 0, 7, 0, 0.197571,0.204601) , 
0.088705, 0, 15, 0, 0.57896,-0.0937899) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.826811,-0.000133275) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.377032,3.62731e-05) , 
2.14435, 1, 10, 0, 0.486916,-0.0345138) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.440484,-3.26276e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.116221,0.00072699) , 
0.705213, 0, 14, 0, 0.202513,0.238811) , 
2.09442, 0, 10, 0, 0.282653,0.161792) , 
0.397804, 1, 16, 0, 0.508741,-0.0332224)    );
  // itree = 368
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746214,-0.000114789) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.433493,-1.59328e-05) , 
0.11931, 1, 0, 0, 0.711576,-0.200025) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.598424,-0.000152694) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.401207,4.72572e-05) , 
0.720726, 0, 7, 0, 0.519668,-0.014191) , 
0.536, 0, 2, 0, 0.621388,-0.112691) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.388289,8.17283e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.102084,0.000356289) , 
0.575264, 1, 16, 0, 0.355668,0.0737831) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.510089,-7.4894e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152701,0.00078688) , 
2.64891, 0, 8, 0, 0.190286,0.22887) , 
1.79155, 1, 18, 0, 0.294234,0.131393) , 
0.66057, 0, 14, 0, 0.491298,-0.0156336)    );
  // itree = 369
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.758115,-0.000168685) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.418,-2.94076e-05) , 
0.690589, 0, 14, 0, 0.732095,-0.215879) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.606702,-8.51169e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378222,0.000139975) , 
0.985053, 1, 8, 0, 0.537693,-0.034638) , 
1.22641, 0, 7, 0, 0.621598,-0.112863) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.872768,-0.000257883) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.277155,-0.00010264) , 
1.38719, 0, 8, 0, 0.749091,-0.28758) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701722,-0.000129461) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.248431,0.000296834) , 
0.598477, 1, 9, 0, 0.278137,0.147115) , 
0.628431, 1, 17, 0, 0.304901,0.122412) , 
0.659385, 0, 14, 0, 0.49465,-0.0185529)    );
  // itree = 370
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.847639,-0.000110644) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.643197,-0.000121941) , 
0.728382, 0, 2, 0, 0.708705,-0.197524) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.827846,-0.00028622) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.466969,-4.32318e-05) , 
2.45277, 0, 7, 0, 0.527569,-0.0197337) , 
0.976413, 1, 8, 0, 0.646379,-0.13635) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.829091,-0.000145731) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.460422,-5.45531e-05) , 
0.697815, 0, 1, 0, 0.626951,-0.171986) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.499104,2.71664e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.275569,0.000308197) , 
1.34677, 1, 9, 0, 0.311989,0.11718) , 
1.63634, 0, 7, 0, 0.370734,0.063246) , 
0.677618, 0, 14, 0, 0.521002,-0.0455632)    );
  // itree = 371
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655441,-0.000116352) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.15783,0.000408491) , 
0.231977, 0, 2, 0, 0.635506,-0.123728) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.452304,-8.41373e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0744169,0.00086201) , 
0.0296197, 1, 0, 0, 0.337493,0.142646) , 
0.132299, 0, 15, 0, 0.598307,-0.0904784) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672244,-0.000126605) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.355453,0.00020052) , 
0.781797, 1, 17, 0, 0.396452,0.0341834) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.669398,-0.000256345) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0684623,0.000548901) , 
2.83731, 0, 11, 0, 0.0875394,0.324664) , 
0.485928, 1, 16, 0, 0.325547,0.100858) , 
0.659385, 0, 14, 0, 0.484393,-0.0105697)    );
  // itree = 372
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.766517,-0.000126485) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.537795,-0.000119238) , 
-0.618198, 0, 3, 0, 0.725671,-0.210321) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.748549,-0.000435643) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.466319,5.5633e-05) , 
1.71696, 0, 7, 0, 0.512465,-0.00746691) , 
0.295627, 0, 1, 0, 0.664039,-0.151681) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.581688,-9.3272e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.299561,0.000116123) , 
0.0347469, 1, 6, 0, 0.479041,-0.0256297) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.386099,0.000149508) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0722728,0.000676858) , 
0.119379, 0, 15, 0, 0.267477,0.16771) , 
0.916181, 0, 7, 0, 0.363312,0.0801305) , 
0.706898, 0, 14, 0, 0.506369,-0.0301434)    );
  // itree = 373
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.786616,-0.000183976) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.244248,-5.26668e-05) , 
0.0705629, 1, 0, 0, 0.755983,-0.240156) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.570539,-8.39169e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0936325,5.18384e-05) , 
0.689319, 0, 14, 0, 0.547282,-0.0397208) , 
1.20144, 1, 17, 0, 0.630048,-0.119209) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.535205,4.54554e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.240223,0.000119718) , 
0.371372, 1, 3, 0, 0.449477,-0.00681116) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.696955,-0.000195073) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180613,0.000269729) , 
0.599265, 1, 9, 0, 0.206826,0.215818) , 
0.0461831, 1, 0, 0, 0.292277,0.137418) , 
0.674551, 0, 14, 0, 0.486956,-0.0104928)    );
  // itree = 374
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738113,-0.000155935) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.559957,-0.000119662) , 
-0.371286, 0, 3, 0, 0.688161,-0.172498) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.651867,-0.000102981) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.428672,-3.28434e-05) , 
-0.866062, 1, 4, 0, 0.482329,0.0212465) , 
0.740038, 0, 7, 0, 0.618746,-0.107159) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.796217,-0.000151303) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.417553,-0.000249168) , 
0.156685, 1, 12, 0, 0.704818,-0.232707) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.396993,0.000115105) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.207094,0.000261223) , 
0.721316, 1, 8, 0, 0.286441,0.146168) , 
2.08401, 0, 7, 0, 0.324026,0.112131) , 
0.695771, 0, 14, 0, 0.468795,0.00441404)    );
  // itree = 375
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.641444,-0.000119949) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.307493,0.000107654) , 
0.257611, 0, 2, 0, 0.617108,-0.114214) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.766531,-0.000112957) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292452,0.000419142) , 
0.954211, 0, 2, 0, 0.357501,0.0737346) , 
0.116799, 0, 15, 0, 0.557804,-0.07128) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.869883,-0.000189443) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0674823,0.000380991) , 
0.553052, 0, 14, 0, 0.684712,-0.241241) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.395032,7.11678e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.135137,0.000512781) , 
0.171621, 0, 15, 0, 0.258043,0.183997) , 
0.448954, 1, 11, 0, 0.30602,0.136181) , 
0.0904555, 1, 0, 0, 0.481265,-0.00821509)    );
  // itree = 376
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.754532,-0.000210801) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.437283,-0.000135808) , 
0.11417, 1, 16, 0, 0.718043,-0.201293) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664744,-0.000921042) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.280339,-5.50306e-05) , 
0.79957, 0, 14, 0, 0.352004,0.104059) , 
0.11664, 0, 15, 0, 0.654644,-0.148405) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.559689,-3.9104e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.237837,4.85199e-05) , 
0.617096, 0, 13, 0, 0.468938,-0.00227812) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.450568,-5.26609e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.261242,9.60264e-05) , 
1.19681, 1, 9, 0, 0.284973,0.171681) , 
1.49417, 1, 17, 0, 0.380897,0.0809741) , 
0.13294, 1, 16, 0, 0.439597,0.0317879)    );
  // itree = 377
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.826935,-0.000237896) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.280474,-0.000112) , 
0.418905, 0, 13, 0, 0.804981,-0.292257) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.55993,-0.000872422) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0623401,-5.63246e-05) , 
-1.60191, 1, 5, 0, 0.154743,0.249515) , 
0.585037, 0, 14, 0, 0.774286,-0.266682) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.62223,-9.09019e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.421631,1.53975e-05) , 
0.729921, 1, 8, 0, 0.515459,-0.0401149) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674697,-8.19672e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.287061,0.000118409) , 
0.768271, 0, 1, 0, 0.32721,0.129092) , 
0.528572, 0, 7, 0, 0.455474,0.0138022) , 
2.22002, 0, 7, 0, 0.487581,-0.0144445)    );
  // itree = 378
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.86886,-0.000236315) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.644053,-0.000188938) , 
-0.371222, 0, 3, 0, 0.815692,-0.297103) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.619729,-8.30314e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192906,0.000662092) , 
0.113576, 0, 15, 0, 0.590703,-0.0876888) , 
1.97335, 0, 7, 0, 0.633457,-0.127483) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729296,-0.000180624) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.17258,0.00819154) , 
0.565119, 1, 2, 0, 0.56189,-0.134789) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.473141,6.09831e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191016,0.000400111) , 
2.3935, 0, 10, 0, 0.244258,0.175993) , 
2.64875, 0, 8, 0, 0.270703,0.150118) , 
0.642489, 0, 14, 0, 0.511191,-0.0339182)    );
  // itree = 379
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.905283,-0.000210238) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.742413,-0.000155842) , 
1.11293, 0, 3, 0, 0.80166,-0.284487) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.827939,-0.000286793) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.546199,-0.000105961) , 
0.0730099, 1, 16, 0, 0.628466,-0.116175) , 
0.29117, 1, 12, 0, 0.699046,-0.184765) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.587219,-8.84341e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.376302,0.000133497) , 
0.315316, 1, 16, 0, 0.486952,-0.0048126) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.352612,0.000152502) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.133657,0.000601945) , 
2.09452, 1, 9, 0, 0.229909,0.180299) , 
0.116474, 0, 15, 0, 0.398912,0.05859) , 
0.768543, 0, 14, 0, 0.492746,-0.0174924)    );
  // itree = 380
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709677,-0.00014105) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.323561,-0.000138169) , 
0.270272, 0, 2, 0, 0.693258,-0.18641) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.571394,-7.94809e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.282377,0.000735905) , 
0.13836, 0, 15, 0, 0.525219,-0.0272961) , 
1.19111, 1, 17, 0, 0.584879,-0.0837878) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.493555,-5.32316e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.114087,0.00174451) , 
0.0908668, 0, 15, 0, 0.348648,0.076283) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.36145,-3.43223e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0837218,0.00141683) , 
2.09435, 0, 10, 0, 0.162701,0.247869) , 
0.356164, 1, 16, 0, 0.249538,0.167739) , 
0.62241, 0, 14, 0, 0.480641,-0.0056026)    );
  // itree = 381
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722462,-0.000130005) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.469629,-8.05357e-06) , 
0.265534, 0, 1, 0, 0.670848,-0.156769) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679689,-6.73921e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.395862,7.26651e-05) , 
0.103452, 1, 12, 0, 0.462431,-0.0170251) , 
0.710081, 0, 14, 0, 0.567094,-0.0872022) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.806338,-0.0001612) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.188829,0.000223364) , 
1.20916, 1, 18, 0, 0.601159,-0.139185) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.35771,0.000194307) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0755715,0.000457266) , 
0.227014, 0, 15, 0, 0.189639,0.247859) , 
2.39359, 0, 10, 0, 0.266932,0.175163) , 
0.441948, 1, 16, 0, 0.512573,-0.0395464)    );
  // itree = 382
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666939,-0.000142332) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245698,-0.000121712) , 
0.90896, 1, 2, 0, 0.652059,-0.142058) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.509046,-3.80341e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259891,0.00027038) , 
2.08945, 1, 18, 0, 0.456939,0.019054) , 
0.266116, 1, 16, 0, 0.55965,-0.0657547) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.522731,-3.50707e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.121118,0.000822397) , 
0.594426, 0, 2, 0, 0.408416,0.0118885) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.399063,0.000211007) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.142009,0.000671509) , 
-1.36192, 1, 5, 0, 0.194647,0.21109) , 
0.489838, 1, 8, 0, 0.258615,0.151481) , 
0.11583, 0, 15, 0, 0.481596,-0.00942877)    );
  // itree = 383
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.788976,-0.00015698) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.591908,-0.000179093) , 
0.179381, 0, 15, 0, 0.731996,-0.213884) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612255,-9.19535e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.278188,0.000277984) , 
0.985053, 1, 8, 0, 0.525584,-0.0209633) , 
1.23334, 0, 7, 0, 0.616328,-0.105776) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.63881,-9.71883e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34358,0.000141092) , 
0.685109, 0, 1, 0, 0.413891,0.0233206) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.452814,6.316e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127056,0.000455358) , 
1.88256, 0, 17, 0, 0.21901,0.199091) , 
0.357597, 1, 16, 0, 0.32306,0.105245) , 
0.674933, 0, 14, 0, 0.48491,-0.0112143)    );
  // itree = 384
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.796692,-0.000210702) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.479334,-0.000119741) , 
0.106803, 0, 15, 0, 0.754465,-0.239309) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.585808,-7.56617e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.3241,0.000231932) , 
2.24062, 1, 18, 0, 0.545187,-0.045946) , 
1.71925, 0, 7, 0, 0.593612,-0.0906885) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.969192,-0.000266192) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0266464,0.0132576) , 
-0.8541, 1, 3, 0, 0.799236,-0.355386) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.320871,0.000219354) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.109298,0.000491319) , 
0.477472, 1, 16, 0, 0.263076,0.153582) , 
0.220367, 1, 13, 0, 0.29375,0.124464) , 
0.636914, 0, 14, 0, 0.486311,-0.0136994)    );
  // itree = 385
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731457,-0.000179681) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530114,-4.94339e-05) , 
0.0165099, 1, 0, 0, 0.649233,-0.143517) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575275,-3.81573e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.352611,4.42565e-05) , 
0.677038, 1, 8, 0, 0.45182,0.0180092) , 
0.265878, 1, 16, 0, 0.554618,-0.0661019) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.984253,-0.000519302) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.376411,-5.50105e-05) , 
2.99278, 0, 9, 0, 0.775138,-0.313452) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647697,-0.000288595) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127809,0.000630958) , 
0.32195, 1, 14, 0, 0.139998,0.249792) , 
2.10477, 0, 3, 0, 0.170222,0.22299) , 
0.0886516, 0, 15, 0, 0.497615,-0.0232316)    );
  // itree = 386
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74786,-0.00011302) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.580349,-0.000107346) , 
-0.123795, 0, 5, 0, 0.691922,-0.179339) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718679,-0.00024353) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.33898,7.35325e-05) , 
0.115342, 1, 16, 0, 0.476118,0.0280881) , 
0.40708, 0, 2, 0, 0.630206,-0.120018) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.619924,-0.000150313) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0647594,7.92917e-05) , 
0.29535, 1, 16, 0, 0.495664,-0.0553367) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.376935,-5.19519e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209325,0.000404093) , 
2.09448, 0, 10, 0, 0.251713,0.173362) , 
-1.36164, 1, 4, 0, 0.28293,0.144096) , 
0.671902, 0, 14, 0, 0.486513,-0.0107354)    );
  // itree = 387
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.792427,-0.00020763) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.632032,-8.55613e-05) , 
0.119584, 1, 16, 0, 0.688027,-0.178992) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.643283,-0.000115403) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184897,0.00038974) , 
0.0105936, 1, 0, 0, 0.34552,0.0899246) , 
0.115759, 0, 15, 0, 0.614876,-0.121558) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.920438,-0.000125535) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220384,0.000751412) , 
0.97876, 1, 5, 0, 0.645694,-0.195891) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.644608,-0.00013267) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226463,0.000183154) , 
0.839412, 0, 14, 0, 0.258685,0.187115) , 
0.451267, 1, 18, 0, 0.306041,0.140249) , 
0.308606, 1, 16, 0, 0.500469,-0.0245729)    );
  // itree = 388
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.770931,-0.00017968) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.294262,0.000120615) , 
0.387115, 1, 15, 0, 0.753905,-0.236167) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.572595,-9.94006e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.296529,-5.46681e-07) , 
-0.123519, 1, 4, 0, 0.449303,0.0548633) , 
0.736852, 0, 7, 0, 0.674206,-0.160019) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.699653,-0.000192397) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.400923,3.43119e-05) , 
0.109146, 1, 16, 0, 0.44524,0.0145273) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.368946,0.000172261) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0989259,0.000222564) , 
0.277608, 0, 4, 0, 0.225282,0.201594) , 
0.136298, 1, 0, 0, 0.381396,0.0688244) , 
0.743276, 0, 14, 0, 0.489863,-0.0159476)    );
  // itree = 389
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744292,-0.000119327) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.458351,1.09809e-06) , 
0.548679, 0, 13, 0, 0.717297,-0.201915) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.567689,-0.000112376) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236305,0.000328128) , 
0.781585, 0, 14, 0, 0.475859,0.0280212) , 
0.305472, 0, 1, 0, 0.651268,-0.139031) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.594036,-6.16179e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0882661,0.00914087) , 
0.214942, 1, 0, 0, 0.550517,-0.107793) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.502853,-2.09942e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.244437,0.000460052) , 
2.09438, 0, 10, 0, 0.316737,0.11034) , 
1.0558, 1, 17, 0, 0.369639,0.0609782) , 
0.677906, 0, 14, 0, 0.521996,-0.0472235)    );
  // itree = 390
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707033,-0.000115458) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.455508,-7.80976e-05) , 
0.157958, 0, 15, 0, 0.66206,-0.150893) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.904927,-0.000299471) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335512,1.82765e-05) , 
0.135833, 1, 2, 0, 0.370087,0.127099) , 
0.363227, 0, 2, 0, 0.604699,-0.0962786) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.804516,-0.000110636) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.410756,8.05165e-05) , 
2.14435, 1, 10, 0, 0.502978,-0.0685022) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.831241,-0.000187176) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238638,0.000465934) , 
0.629926, 1, 17, 0, 0.276134,0.146344) , 
2.09438, 0, 10, 0, 0.33911,0.0866994) , 
0.66057, 0, 14, 0, 0.493465,-0.0196441)    );
  // itree = 391
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.638735,-0.000109137) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.284484,0.000519194) , 
0.551871, 1, 16, 0, 0.623637,-0.114842) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767763,-0.000195615) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.334468,0.000223547) , 
2.41374, 0, 7, 0, 0.421723,0.0537899) , 
0.136726, 0, 15, 0, 0.589986,-0.0867374) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.462076,8.30451e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.266371,0.00035071) , 
0.740043, 0, 2, 0, 0.368525,0.0546587) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.766033,-0.000206451) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0792283,0.000629898) , 
2.54223, 0, 11, 0, 0.118775,0.288753) , 
0.481477, 1, 16, 0, 0.303346,0.115752) , 
0.63667, 0, 14, 0, 0.487129,-0.0140768)    );
  // itree = 392
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700795,-0.000100638) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.342087,8.79714e-05) , 
0.110851, 0, 15, 0, 0.673692,-0.168422) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.55724,-0.000117533) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.189397,0.000300153) , 
0.493372, 0, 7, 0, 0.479671,0.0220552) , 
2.09439, 0, 9, 0, 0.620943,-0.116636) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.708489,-8.47182e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.248024,0.00118136) , 
2.82809, 1, 10, 0, 0.608199,-0.170628) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.283639,0.000271114) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0699649,0.000310867) , 
0.138549, 1, 0, 0, 0.200817,0.21212) , 
2.54309, 0, 10, 0, 0.273779,0.14357) , 
0.636325, 0, 14, 0, 0.505711,-0.0302678)    );
  // itree = 393
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.81114,-0.000196602) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.637333,-0.000178829) , 
0.357268, 0, 1, 0, 0.747435,-0.231963) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.545833,-4.53579e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292474,0.000216021) , 
0.135763, 0, 15, 0, 0.495449,-0.0153454) , 
0.133404, 1, 16, 0, 0.55728,-0.0684983) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67157,-0.000237462) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.237891,0.000383229) , 
1.94374, 0, 11, 0, 0.299713,0.0981175) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.272649,-9.38478e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0566798,0.00103213) , 
0.916249, 1, 17, 0, 0.0869886,0.300245) , 
1.71443, 0, 8, 0, 0.153548,0.237) , 
0.0893172, 0, 15, 0, 0.497705,-0.0234185)    );
  // itree = 394
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.868994,-0.000218949) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.585138,-7.33742e-05) , 
2.54307, 0, 11, 0, 0.605503,-0.114467) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.603279,-0.000114796) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.248418,9.14204e-05) , 
0.960197, 0, 7, 0, 0.430415,0.0539507) , 
1.79309, 1, 18, 0, 0.547119,-0.0583076) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.836491,-0.000215253) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.298519,0.0003505) , 
0.710229, 0, 14, 0, 0.498816,-0.0556977) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.353621,0.00136524) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0446227,0.000758016) , 
1.71932, 0, 7, 0, 0.0827519,0.299744) , 
0.910532, 1, 17, 0, 0.169756,0.225417) , 
0.0895322, 0, 15, 0, 0.485503,-0.0119807)    );
  // itree = 395
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.777977,-0.000179568) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.350552,0.000130484) , 
0.3863, 1, 15, 0, 0.759652,-0.241315) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.582664,-8.73094e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.325809,1.66516e-05) , 
0.798782, 0, 14, 0, 0.501113,0.00383452) , 
0.736852, 0, 7, 0, 0.689248,-0.174557) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.646499,-9.6329e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.417761,6.17388e-05) , 
0.649435, 0, 2, 0, 0.542166,-0.0456186) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.412054,0.000303028) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.207251,0.000270896) , 
0.371074, 0, 4, 0, 0.295434,0.124428) , 
0.649689, 0, 14, 0, 0.400331,0.0521335) , 
0.743276, 0, 14, 0, 0.507454,-0.031917)    );
  // itree = 396
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.685223,-0.000105861) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.313275,0.000103963) , 
0.110458, 0, 15, 0, 0.657867,-0.151349) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.690372,-0.000311072) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.299244,0.000126982) , 
1.9371, 0, 7, 0, 0.376509,0.121143) , 
-1.11429, 0, 5, 0, 0.62887,-0.123266) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.869298,-0.00036733) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.648876,-0.000147181) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271287,0.00028952) , 
-1.85683, 1, 4, 0, 0.290957,0.125976) , 
0.306951, 1, 14, 0, 0.303027,0.113096) , 
0.636907, 0, 14, 0, 0.519617,-0.0440153)    );
  // itree = 397
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745492,-0.000138573) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.474011,-5.85529e-05) , 
0.0994776, 1, 0, 0, 0.713253,-0.196107) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634304,-0.000179221) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.387396,0.000189112) , 
0.86862, 0, 14, 0, 0.484253,0.0207838) , 
0.29624, 0, 1, 0, 0.644756,-0.131232) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.843717,-0.000257408) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.456583,-9.48299e-05) , 
0.0211866, 1, 0, 0, 0.725693,-0.248876) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.759582,-0.000111105) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.281682,0.000184658) , 
0.242955, 0, 6, 0, 0.298506,0.136884) , 
2.10387, 0, 7, 0, 0.340638,0.0988373) , 
0.708187, 0, 14, 0, 0.481328,-0.0075971)    );
  // itree = 398
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.698879,-0.000115645) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.498508,-4.13061e-05) , 
0.355547, 1, 16, 0, 0.659228,-0.145406) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.604515,-0.00020832) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.20135,0.000425177) , 
0.915754, 1, 17, 0, 0.343017,0.139183) , 
0.131046, 0, 15, 0, 0.627164,-0.116548) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.635351,-6.32201e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.261754,0.000790043) , 
0.314907, 0, 16, 0, 0.547125,-0.104555) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.516654,-2.90553e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.254317,0.0002777) , 
-1.11419, 1, 4, 0, 0.306406,0.119785) , 
2.39357, 0, 10, 0, 0.349301,0.0798087) , 
0.671902, 0, 14, 0, 0.50523,-0.0303813)    );
  // itree = 399
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.873462,-0.000106935) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.639744,-0.000135367) , 
0.466562, 0, 15, 0, 0.657122,-0.157904) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.460706,-2.20954e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0802821,0.00246767) , 
0.689587, 1, 8, 0, 0.239796,0.17025) , 
0.572957, 0, 14, 0, 0.602226,-0.114738) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628877,-7.94005e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226054,0.000418933) , 
0.954753, 1, 8, 0, 0.501994,-0.031191) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.410927,0.000130769) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225587,0.000106337) , 
0.137216, 1, 12, 0, 0.264817,0.186267) , 
0.654055, 0, 7, 0, 0.351957,0.106372) , 
0.981117, 0, 7, 0, 0.473523,-0.00103041)    );
  // itree = 400
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735403,-0.000133998) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.579,-8.76718e-05) , 
0.729039, 1, 8, 0, 0.651742,-0.143282) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.567508,-6.75552e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.21158,0.000289436) , 
2.24425, 0, 9, 0, 0.449713,0.0443175) , 
0.493339, 0, 7, 0, 0.605149,-0.100017) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.36522,0.000141419) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0924903,0.000533453) , 
0.26078, 1, 12, 0, 0.319798,0.100351) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.526992,0.00431328) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0894378,0.000506784) , 
0.908548, 0, 1, 0, 0.0984095,0.304695) , 
0.476698, 1, 16, 0, 0.258554,0.15688) , 
0.637994, 0, 14, 0, 0.486215,-0.0118631)    );
  // itree = 401
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.743486,-0.000195892) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.580667,-7.20948e-05) , 
0.142337, 1, 16, 0, 0.651446,-0.159672) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.510474,-5.55404e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.123254,0.00106786) , 
0.661816, 0, 14, 0, 0.394904,0.0815487) , 
0.740062, 0, 7, 0, 0.572669,-0.0855997) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760706,-0.000188562) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.115786,0.000345022) , 
0.543702, 0, 14, 0, 0.583326,-0.147555) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.796284,-0.000231318) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194856,0.000163622) , 
2.49656, 0, 11, 0, 0.220235,0.217911) , 
0.44825, 1, 11, 0, 0.257475,0.180428) , 
0.0891404, 1, 0, 0, 0.483203,-0.0100888)    );
  // itree = 402
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.789664,-0.000124203) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.586723,-0.000131615) , 
1.04719, 1, 11, 0, 0.727383,-0.210305) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64803,-0.000141041) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.385617,-3.85102e-05) , 
0.789133, 0, 14, 0, 0.546338,-0.0357676) , 
1.36136, 1, 17, 0, 0.634452,-0.120715) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.690679,-0.000139579) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.173892,0.000177761) , 
0.419729, 0, 1, 0, 0.583781,-0.133374) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.420889,4.93551e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.193545,0.000237864) , 
0.0923662, 1, 0, 0, 0.323291,0.11507) , 
1.34641, 1, 9, 0, 0.36824,0.0721994) , 
0.710214, 0, 14, 0, 0.486073,-0.01319)    );
  // itree = 403
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679442,-0.000121293) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.423336,-5.8648e-05) , 
0.268492, 0, 1, 0, 0.644056,-0.136142) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.643151,-0.000108357) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.371097,0.000139206) , 
0.788077, 0, 14, 0, 0.423986,0.0501549) , 
0.31055, 1, 16, 0, 0.560462,-0.065377) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.747233,-0.000112646) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0205068,0.0161516) , 
0.46578, 0, 7, 0, 0.676103,-0.256476) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738576,-0.000214043) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194215,0.000343471) , 
2.6926, 0, 11, 0, 0.223779,0.187124) , 
0.812131, 0, 1, 0, 0.266113,0.145606) , 
0.118453, 0, 15, 0, 0.481148,-0.00852658)    );
  // itree = 404
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.816204,-0.000197718) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.565187,-0.000206238) , 
1.19627, 1, 11, 0, 0.761699,-0.246451) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.563026,-6.80636e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.16037,0.000742703) , 
0.115433, 0, 15, 0, 0.529997,-0.0313907) , 
1.71927, 0, 7, 0, 0.587965,-0.0851949) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.868342,-0.000287814) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.104496,0.000655724) , 
0.9068, 1, 8, 0, 0.724063,-0.275317) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.863315,-0.000323786) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175262,0.000303531) , 
0.318306, 1, 14, 0, 0.187759,0.221511) , 
0.598411, 1, 9, 0, 0.227851,0.18437) , 
0.624085, 0, 14, 0, 0.476267,-0.00158313)    );
  // itree = 405
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705871,-0.000121523) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.549875,-9.83847e-05) , 
1.04718, 1, 10, 0, 0.633421,-0.129047) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.600313,-0.000225033) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172575,0.00165629) , 
0.0887928, 1, 16, 0, 0.261535,0.143673) , 
0.0895322, 0, 15, 0, 0.582194,-0.0914795) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.608724,-7.96986e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.189155,0.00132505) , 
0.122084, 0, 15, 0, 0.498371,-0.0411912) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.474064,3.62506e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145923,0.000256045) , 
1.64634, 1, 9, 0, 0.237576,0.201891) , 
-0.778152, 1, 4, 0, 0.315313,0.129434) , 
0.309515, 1, 16, 0, 0.477729,-0.00500776)    );
  // itree = 406
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.716461,-0.000110764) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.537674,-9.14636e-05) , 
0.985053, 1, 8, 0, 0.654872,-0.148221) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.535747,-0.000119883) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.27142,0.000133312) , 
0.968571, 0, 7, 0, 0.378094,0.113785) , 
0.357687, 0, 2, 0, 0.60441,-0.100452) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.507466,-3.61515e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.137892,0.00173705) , 
0.0904428, 0, 15, 0, 0.378192,0.0465734) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.358124,-7.17655e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.101201,0.00062669) , 
2.39297, 0, 10, 0, 0.143139,0.261042) , 
0.357508, 1, 16, 0, 0.261185,0.153333) , 
0.636907, 0, 14, 0, 0.487832,-0.0142524)    );
  // itree = 407
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647668,-0.000103971) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.40088,-2.82755e-05) , 
2.24044, 1, 18, 0, 0.608657,-0.113182) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.737781,-0.000244048) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.144614,0.00198861) , 
0.611366, 1, 17, 0, 0.243743,0.15917) , 
0.088705, 0, 15, 0, 0.556521,-0.0742709) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.836393,-0.00019536) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233721,0.000185393) , 
0.327808, 0, 2, 0, 0.664801,-0.16027) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.539405,3.90197e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174972,0.000354966) , 
0.597059, 1, 18, 0, 0.24039,0.192381) , 
0.802705, 0, 14, 0, 0.292841,0.148798) , 
0.397804, 1, 16, 0, 0.490543,-0.0184545)    );
  // itree = 408
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.75292,-0.000170215) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.574435,-6.7752e-05) , 
0.0159244, 1, 0, 0, 0.66218,-0.156807) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688333,-0.00016472) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335998,0.000185958) , 
1.23831, 0, 4, 0, 0.382032,0.0832094) , 
0.391241, 1, 16, 0, 0.596027,-0.100131) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.763374,-0.000214844) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.424795,-0.000256142) , 
0.450752, 0, 1, 0, 0.614654,-0.146836) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.296043,0.000249396) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.13985,0.000629311) , 
2.08988, 0, 18, 0, 0.195086,0.206821) , 
0.0881708, 1, 16, 0, 0.236266,0.172111) , 
0.116222, 0, 15, 0, 0.508832,-0.0341484)    );
  // itree = 409
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.759501,-0.000111651) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.425297,0.000118135) , 
0.552573, 0, 13, 0, 0.717082,-0.20285) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670805,-0.000163719) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.400288,3.02827e-06) , 
0.796216, 0, 14, 0, 0.557939,-0.0496095) , 
0.636668, 0, 2, 0, 0.618019,-0.107461) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.529302,1.36142e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317817,0.000219182) , 
0.171477, 1, 12, 0, 0.42787,0.00652999) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.570419,-0.000181214) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.136009,0.000648234) , 
1.87025, 0, 7, 0, 0.195704,0.224216) , 
1.79283, 1, 18, 0, 0.34639,0.0829278) , 
0.677618, 0, 14, 0, 0.493479,-0.0201693)    );
  // itree = 410
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741748,-0.000148489) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.52804,-0.000104953) , 
0.268945, 0, 1, 0, 0.702756,-0.185166) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.579827,-8.45773e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.231258,0.000605016) , 
0.976425, 1, 8, 0, 0.50363,0.00178696) , 
0.736966, 0, 7, 0, 0.636607,-0.123061) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.713391,-0.000178962) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.115344,-1.85422e-06) , 
0.0724265, 1, 0, 0, 0.61946,-0.155055) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.432463,9.9537e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.188859,0.000364081) , 
1.34718, 1, 18, 0, 0.313877,0.118286) , 
1.65027, 0, 7, 0, 0.367376,0.0704314) , 
0.706898, 0, 14, 0, 0.488644,-0.0167226)    );
  // itree = 411
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.693886,-0.000137746) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.517407,-3.63212e-05) , 
0.727026, 0, 7, 0, 0.626784,-0.116783) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.463078,-3.54498e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158829,0.000352841) , 
2.54316, 0, 9, 0, 0.304796,0.15151) , 
0.112292, 0, 15, 0, 0.597855,-0.0926777) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.520707,-2.29137e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0887645,0.00439909) , 
0.194912, 1, 12, 0, 0.44645,-0.0218689) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.319274,0.00026255) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.09757,0.000500961) , 
2.54799, 0, 9, 0, 0.216181,0.193338) , 
1.4958, 0, 11, 0, 0.291984,0.122494) , 
0.636907, 0, 14, 0, 0.488804,-0.0159636)    );
  // itree = 412
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721257,-0.000113649) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.443895,-8.85111e-05) , 
2.23951, 1, 18, 0, 0.691351,-0.177314) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.785068,-0.000431172) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.395002,5.82174e-05) , 
1.71696, 0, 7, 0, 0.464118,0.0400456) , 
0.29624, 0, 1, 0, 0.631713,-0.120268) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.486143,-2.94207e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.275635,0.000145866) , 
2.09461, 0, 10, 0, 0.339505,0.0876458) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.370838,0.000217167) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.104234,0.00060514) , 
1.82396, 0, 17, 0, 0.118994,0.291492) , 
0.445821, 0, 7, 0, 0.277348,0.145106) , 
0.674551, 0, 14, 0, 0.482083,-0.00821391)    );
  // itree = 413
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.733518,-0.000132926) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388728,1.79726e-06) , 
-1.1141, 0, 5, 0, 0.704488,-0.188729) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.932358,-0.000130758) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.375945,-3.71783e-05) , 
0.673146, 0, 1, 0, 0.432748,0.0707677) , 
0.491226, 0, 7, 0, 0.651879,-0.138491) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.590611,-7.61546e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229281,0.000404032) , 
0.571785, 0, 14, 0, 0.484416,-0.0366983) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.378758,0.000161338) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.135398,0.000382095) , 
0.618654, 0, 5, 0, 0.237562,0.185761) , 
0.926263, 0, 7, 0, 0.352628,0.0820664) , 
0.695491, 0, 14, 0, 0.501532,-0.0276802)    );
  // itree = 414
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.697316,-0.000134281) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.356317,2.26328e-05) , 
-1.3619, 0, 5, 0, 0.676809,-0.170392) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.807987,-0.000832831) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.25174,0.000380025) , 
0.407305, 0, 12, 0, 0.294312,0.114753) , 
0.0891881, 0, 15, 0, 0.630064,-0.135544) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.609496,-7.35584e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0855251,0.00157053) , 
0.133996, 0, 12, 0, 0.531528,-0.0678969) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.421719,7.33849e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.207879,0.000141457) , 
-0.230334, 1, 3, 0, 0.309794,0.133079) , 
0.971575, 0, 7, 0, 0.380166,0.0692947) , 
0.265443, 1, 16, 0, 0.508155,-0.0356165)    );
  // itree = 415
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.814301,-0.000122545) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174015,-4.52756e-05) , 
0.683793, 1, 1, 0, 0.798728,-0.278255) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.625221,-0.000127632) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.423455,-3.48014e-05) , 
0.123802, 0, 3, 0, 0.532989,-0.0237303) , 
0.545173, 0, 2, 0, 0.671642,-0.156532) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.798966,-0.000166827) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.36619,-5.6867e-05) , 
0.101655, 0, 15, 0, 0.651388,-0.183976) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.532606,-1.33779e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.28483,0.000344752) , 
2.09437, 0, 10, 0, 0.351454,0.0830857) , 
1.85249, 0, 7, 0, 0.389823,0.048922) , 
0.706618, 0, 14, 0, 0.52352,-0.048547)    );
  // itree = 416
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663735,-0.00010675) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.405168,2.01958e-05) , 
-1.11429, 0, 5, 0, 0.636566,-0.129825) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.506294,-5.61195e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.208622,0.000610368) , 
0.119717, 1, 0, 0, 0.414853,0.0672473) , 
0.370949, 1, 16, 0, 0.596591,-0.0942922) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767803,-0.000252274) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.00057911,0.0200819) , 
0.0660912, 0, 15, 0, 0.688438,-0.245277) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74736,-0.000199693) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.228823,0.000295962) , 
2.3522, 0, 5, 0, 0.243058,0.166421) , 
0.598413, 1, 9, 0, 0.2724,0.139297) , 
0.621564, 0, 14, 0, 0.494708,-0.020882)    );
  // itree = 417
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.752819,-0.000207693) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.547766,-7.45357e-05) , 
0.114591, 1, 16, 0, 0.602954,-0.10014) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.539626,-3.9494e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.193135,0.00021672) , 
0.866499, 0, 5, 0, 0.319821,0.140029) , 
0.397196, 1, 16, 0, 0.53657,-0.0438292) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729169,-0.000101534) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.35193,0.000185745) , 
0.419905, 0, 16, 0, 0.421689,0.0112802) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.905514,-0.000450538) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0825963,0.000545704) , 
3.64933, 0, 8, 0, 0.0947994,0.294878) , 
0.0449691, 1, 0, 0, 0.235532,0.172784) , 
0.115897, 0, 15, 0, 0.458238,0.0125348)    );
  // itree = 418
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761547,-0.000148098) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.555981,-8.69149e-05) , 
0.293415, 1, 15, 0, 0.697677,-0.179914) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.638498,-0.000180805) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363224,0.000111272) , 
0.86862, 0, 14, 0, 0.470189,0.0357497) , 
0.305196, 0, 1, 0, 0.624721,-0.11075) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744763,-0.000150048) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.39293,-0.000131031) , 
0.136087, 1, 12, 0, 0.619823,-0.153052) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.348122,0.000144557) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.14915,0.00036456) , 
0.348547, 0, 7, 0, 0.300064,0.133654) , 
1.82992, 0, 7, 0, 0.343344,0.0948482) , 
0.708182, 0, 14, 0, 0.471196,0.00142843)    );
  // itree = 419
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.832128,-0.000172233) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.64456,-0.000225051) , 
0.545165, 0, 2, 0, 0.746546,-0.225728) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.599285,-9.38441e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253059,0.000425177) , 
0.319789, 0, 2, 0, 0.538531,-0.0303001) , 
0.153619, 1, 16, 0, 0.632257,-0.118354) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.940105,-0.000191151) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.394579,6.18735e-05) , 
0.606782, 1, 17, 0, 0.434465,0.0268226) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.39689,-2.35862e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113093,0.000414565) , 
2.67741, 0, 8, 0, 0.136985,0.254863) , 
0.117052, 0, 15, 0, 0.3101,0.122158) , 
0.697055, 0, 14, 0, 0.470639,0.00230419)    );
  // itree = 420
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.826376,-0.000220996) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.624734,-0.000166377) , 
-0.371407, 0, 3, 0, 0.772479,-0.25974) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.897181,-0.000432462) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225069,0.000251951) , 
2.33203, 0, 3, 0, 0.29284,0.113568) , 
0.602176, 0, 14, 0, 0.721208,-0.219835) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.527494,-2.62221e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125293,0.000665847) , 
0.318357, 1, 0, 0, 0.49922,-0.0299499) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.38486,0.000137743) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129875,0.00060504) , 
0.275606, 1, 16, 0, 0.253719,0.197071) , 
2.38967, 1, 18, 0, 0.467048,-0.000199518) , 
1.70907, 0, 7, 0, 0.518503,-0.0446649)    );
  // itree = 421
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.70151,-0.000115366) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.47738,-1.24318e-05) , 
0.299674, 0, 1, 0, 0.641694,-0.134822) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.618527,-0.000180055) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199188,0.000105825) , 
1.19917, 1, 9, 0, 0.243971,0.240647) , 
0.122945, 1, 0, 0, 0.608209,-0.103211) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.533829,4.12309e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.151894,0.001473) , 
1.94484, 1, 18, 0, 0.430858,-0.00511667) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.292894,0.000208936) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118884,0.000357281) , 
0.742161, 0, 2, 0, 0.204096,0.204623) , 
0.270974, 1, 16, 0, 0.277999,0.136267) , 
0.637994, 0, 14, 0, 0.497252,-0.0227418)    );
  // itree = 422
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.798381,-0.000154628) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.497392,-7.67144e-05) , 
0.0266802, 1, 6, 0, 0.734267,-0.219319) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653879,-0.000123818) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317222,4.25676e-05) , 
0.976732, 0, 7, 0, 0.540201,-0.027619) , 
0.73476, 1, 8, 0, 0.650481,-0.136554) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.892124,-0.000178622) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.338638,-8.02467e-05) , 
0.0884971, 0, 15, 0, 0.777268,-0.291685) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.777056,-8.60503e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.286784,0.000195422) , 
0.236077, 0, 6, 0, 0.306537,0.121738) , 
2.22901, 0, 7, 0, 0.346751,0.0864196) , 
0.694671, 0, 14, 0, 0.500236,-0.0262568)    );
  // itree = 423
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.781928,-0.000142867) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.612792,-0.000101698) , 
0.732895, 1, 8, 0, 0.713878,-0.196655) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.485487,-5.19061e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.195253,0.000422319) , 
0.233155, 0, 2, 0, 0.384167,0.116129) , 
0.311808, 0, 2, 0, 0.661951,-0.147393) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.894561,-0.000122976) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.406908,1.83137e-05) , 
2.1442, 1, 10, 0, 0.562622,-0.118048) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.462959,6.20923e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154226,0.000520091) , 
0.382521, 1, 16, 0, 0.359733,0.0756028) , 
2.09432, 0, 10, 0, 0.414455,0.0233724) , 
0.708187, 0, 14, 0, 0.525418,-0.0531893)    );
  // itree = 424
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703994,-0.000126951) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.462518,-5.02695e-05) , 
0.39426, 1, 16, 0, 0.676261,-0.160462) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.924191,-0.000540886) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.24805,0.000159462) , 
1.96223, 0, 7, 0, 0.387457,0.113012) , 
0.304007, 0, 2, 0, 0.635039,-0.121428) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.723392,-0.000141078) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388732,0.00010397) , 
0.620227, 0, 14, 0, 0.581008,-0.1265) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.494849,1.19561e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.247151,0.000262951) , 
2.24393, 0, 10, 0, 0.299654,0.13001) , 
1.63636, 0, 7, 0, 0.34752,0.0863704) , 
0.695491, 0, 14, 0, 0.490961,-0.0172982)    );
  // itree = 425
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.766325,-0.000147298) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.575698,-8.5264e-05) , 
1.19304, 1, 17, 0, 0.646388,-0.135213) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76448,-0.000250885) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226318,0.000472232) , 
0.0732658, 1, 16, 0, 0.383144,0.0935818) , 
0.135721, 0, 15, 0, 0.606004,-0.100113) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.592216,-5.50171e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.286313,0.000310254) , 
0.479042, 1, 13, 0, 0.460841,-0.0362472) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.356379,0.000367299) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0717104,0.000452827) , 
0.0899562, 1, 0, 0, 0.222204,0.187801) , 
2.09432, 0, 10, 0, 0.290954,0.123254) , 
0.643347, 0, 14, 0, 0.49135,-0.0188251)    );
  // itree = 426
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741754,-0.000103346) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.446653,3.46984e-05) , 
0.571581, 0, 13, 0, 0.670884,-0.17834) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.641439,-0.000157005) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.383131,3.6435e-05) , 
0.814854, 0, 14, 0, 0.501071,-0.000360124) , 
0.536003, 0, 2, 0, 0.609712,-0.114226) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.422539,-1.85932e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.214385,0.000551862) , 
-0.123985, 1, 5, 0, 0.329436,0.0906741) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.800717,-0.000230125) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0499972,0.000945963) , 
2.84007, 0, 11, 0, 0.0904272,0.295069) , 
0.737031, 0, 7, 0, 0.237495,0.1693) , 
0.116222, 0, 15, 0, 0.523214,-0.0483385)    );
  // itree = 427
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.778301,-0.000127976) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.341888,5.13916e-05) , 
-1.36198, 0, 5, 0, 0.761501,-0.242742) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.577862,-0.000120577) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306026,0.000167316) , 
0.82689, 0, 14, 0, 0.471411,0.0333876) , 
0.29624, 0, 1, 0, 0.689368,-0.174081) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745602,-0.000135434) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.405631,3.27044e-05) , 
0.644431, 0, 14, 0, 0.526777,-0.0794175) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.417008,2.69987e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.18185,0.000547726) , 
0.33635, 1, 16, 0, 0.307593,0.124171) , 
2.09435, 0, 10, 0, 0.368145,0.0679268) , 
0.706903, 0, 14, 0, 0.526319,-0.0512401)    );
  // itree = 428
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730902,-0.000209435) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.580513,-8.80154e-05) , 
0.114929, 1, 16, 0, 0.626581,-0.123826) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575257,1.61082e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.297882,5.71396e-06) , 
0.879495, 0, 13, 0, 0.37162,0.114918) , 
0.732449, 0, 7, 0, 0.539233,-0.0420333) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.547046,-4.58029e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0803631,0.0100335) , 
0.392041, 1, 16, 0, 0.420555,-0.0107658) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.284336,8.33553e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0997075,0.000538191) , 
0.68094, 1, 8, 0, 0.176375,0.2304) , 
0.598599, 1, 10, 0, 0.231241,0.176211) , 
0.610187, 0, 14, 0, 0.448268,0.0224248)    );
  // itree = 429
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.819137,-0.000154435) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.35561,-0.000137103) , 
-1.11379, 0, 5, 0, 0.792719,-0.274947) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674317,-0.000107148) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.417399,9.10972e-06) , 
0.276231, 1, 16, 0, 0.592045,-0.0806196) , 
1.19008, 1, 17, 0, 0.676354,-0.162263) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.906571,-0.000277583) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.477673,1.67383e-05) , 
0.514713, 1, 13, 0, 0.638765,-0.193226) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.440892,5.2516e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.181139,0.00043118) , 
0.117648, 0, 15, 0, 0.330368,0.100912) , 
1.19681, 1, 9, 0, 0.379327,0.0542159) , 
0.695491, 0, 14, 0, 0.531135,-0.0564243)    );
  // itree = 430
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.774621,-0.000113405) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.603021,-0.000152644) , 
1.49872, 1, 18, 0, 0.703254,-0.187166) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741629,-0.000200854) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.477126,-6.11985e-05) , 
1.71927, 0, 7, 0, 0.536923,-0.0260708) , 
1.35767, 1, 17, 0, 0.615116,-0.101803) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.646174,-0.000107045) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0866291,0.000160977) , 
0.172486, 1, 15, 0, 0.586225,-0.141844) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.54937,-4.88338e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225454,0.000217929) , 
0.253313, 0, 15, 0, 0.298048,0.131012) , 
1.19699, 1, 9, 0, 0.34129,0.0900694) , 
0.697055, 0, 14, 0, 0.471409,-0.00110616)    );
  // itree = 431
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.75546,-0.000210043) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.53912,-5.35432e-05) , 
1.69637, 0, 7, 0, 0.582028,-0.0861408) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.929071,-0.000277981) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187128,9.35233e-05) , 
0.79941, 0, 0, 0, 0.258467,0.195124) , 
0.0809851, 1, 6, 0, 0.552493,-0.0604666) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.462726,7.21874e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164883,0.000202001) , 
1.19807, 0, 18, 0, 0.378962,0.0530441) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.724912,-0.000298176) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.105852,0.00165234) , 
0.321636, 1, 14, 0, 0.122983,0.247683) , 
0.0745355, 0, 15, 0, 0.273913,0.13292) , 
0.115897, 0, 15, 0, 0.477765,-0.00859119)    );
  // itree = 432
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.797177,-0.000213388) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.567551,-8.50722e-05) , 
0.0834692, 1, 16, 0, 0.606391,-0.109506) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.518876,-4.22699e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.290081,3.77703e-05) , 
0.34388, 0, 7, 0, 0.42328,0.0486969) , 
0.72216, 0, 7, 0, 0.530343,-0.0438028) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.918494,-0.000221979) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26323,0.000337748) , 
2.69549, 0, 9, 0, 0.779939,-0.292944) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.333725,0.000609006) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0924481,0.000749087) , 
2.54316, 0, 10, 0, 0.124015,0.253885) , 
0.47079, 1, 17, 0, 0.164505,0.220129) , 
0.088705, 0, 15, 0, 0.470816,-0.000857358)    );
  // itree = 433
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735235,-0.000138312) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.47419,3.85883e-05) , 
1.19682, 1, 11, 0, 0.665376,-0.154226) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689129,-0.000188936) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.443471,-1.1936e-05) , 
1.71929, 0, 7, 0, 0.517545,-0.0115525) , 
0.738804, 1, 8, 0, 0.594469,-0.0857923) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.837539,-8.47339e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.216218,0.00020697) , 
0.153527, 0, 0, 0, 0.627198,-0.201523) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.42574,6.80979e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168059,0.000335891) , 
0.171556, 0, 15, 0, 0.249342,0.166773) , 
1.34657, 1, 9, 0, 0.329758,0.0883913) , 
0.66057, 0, 14, 0, 0.48134,-0.0113518)    );
  // itree = 434
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718046,-0.000146423) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.415328,-6.71063e-05) , 
0.109581, 0, 15, 0, 0.686034,-0.173736) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575964,-4.93949e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34237,-6.85869e-06) , 
0.124161, 1, 4, 0, 0.496308,-0.000516448) , 
0.986676, 0, 7, 0, 0.59463,-0.0902844) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.577082,-7.2588e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.218651,0.000532354) , 
0.533546, 1, 14, 0, 0.435098,-0.0109114) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.263091,0.00019468) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0696741,0.000599796) , 
0.445204, 1, 16, 0, 0.199263,0.206864) , 
1.496, 1, 9, 0, 0.250181,0.159845) , 
0.638, 0, 14, 0, 0.473912,-0.00262202)    );
  // itree = 435
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.828959,-0.000205197) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.61188,-0.0002065) , 
0.976675, 0, 8, 0, 0.780884,-0.265549) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.582638,-6.73377e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318068,0.000372536) , 
2.24062, 1, 18, 0, 0.540609,-0.0511918) , 
1.69638, 0, 7, 0, 0.587349,-0.0928899) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.79888,-0.000300817) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154316,0.00528134) , 
0.0280124, 1, 0, 0, 0.72216,-0.243304) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.684404,-2.0787e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.177733,0.000462509) , 
0.224382, 1, 13, 0, 0.203126,0.198197) , 
0.618641, 1, 17, 0, 0.252815,0.15593) , 
0.116222, 0, 15, 0, 0.504755,-0.0314583)    );
  // itree = 436
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735642,-0.000145878) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.487848,-4.89774e-05) , 
0.357687, 0, 2, 0, 0.686713,-0.182318) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.56884,-9.00459e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.346484,1.04342e-05) , 
1.25931, 0, 7, 0, 0.460313,0.011944) , 
0.013823, 1, 6, 0, 0.588312,-0.0978856) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.574424,-7.87305e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.130888,0.000404171) , 
0.589552, 1, 1, 0, 0.500548,-0.044615) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.57181,-9.53163e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212492,0.000282591) , 
2.39355, 0, 11, 0, 0.231416,0.207064) , 
0.441243, 1, 8, 0, 0.313677,0.130137) , 
0.308582, 1, 16, 0, 0.480854,-0.00866533)    );
  // itree = 437
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.79943,-0.000122192) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.532643,-4.05354e-05) , 
0.699969, 0, 14, 0, 0.724885,-0.214924) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.611459,-0.000143529) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.383385,0.000118127) , 
0.771692, 0, 14, 0, 0.522989,-0.020708) , 
0.545166, 0, 2, 0, 0.634366,-0.127848) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.517062,-2.22568e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.109139,0.000447695) , 
0.896969, 0, 18, 0, 0.451254,-0.0229715) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.566959,-0.000142473) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.16049,0.00051527) , 
0.776592, 1, 17, 0, 0.193893,0.210559) , 
2.09461, 0, 10, 0, 0.268367,0.142981) , 
0.637994, 0, 14, 0, 0.515512,-0.0398993)    );
  // itree = 438
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.778243,-0.000200171) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.357311,0.000156628) , 
0.226794, 0, 2, 0, 0.761966,-0.241475) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.794196,-0.000311912) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.345708,0.000221975) , 
0.61224, 1, 17, 0, 0.50216,-0.0460511) , 
0.11664, 0, 15, 0, 0.711746,-0.2037) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.606064,-8.45828e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.331981,0.000157347) , 
0.397826, 1, 16, 0, 0.529219,-0.0371271) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.439488,-3.893e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204887,0.000291396) , 
2.09433, 0, 10, 0, 0.263014,0.161936) , 
0.172999, 0, 15, 0, 0.404239,0.0563311) , 
0.132973, 1, 16, 0, 0.476998,-0.00519452)    );
  // itree = 439
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666481,-0.000111932) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.372164,8.39205e-05) , 
0.120632, 1, 0, 0, 0.634319,-0.127528) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.891137,-0.000496142) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.218154,0.00024828) , 
1.92204, 0, 7, 0, 0.295933,0.196453) , 
0.270272, 0, 2, 0, 0.60638,-0.100778) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.551307,-0.00012539) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0322418,0.0202755) , 
0.435533, 0, 2, 0, 0.482817,-0.0537601) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.51484,0.000134593) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.15388,0.000312005) , 
0.150181, 1, 10, 0, 0.17917,0.225799) , 
1.94425, 0, 11, 0, 0.222422,0.185978) , 
0.638, 0, 14, 0, 0.480592,-0.00683398)    );
  // itree = 440
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700435,-0.000116298) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.375026,5.44462e-05) , 
0.120632, 1, 0, 0, 0.667137,-0.15837) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.602928,-0.000150869) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191972,0.00160646) , 
0.87365, 0, 14, 0, 0.381028,0.114271) , 
0.311804, 0, 2, 0, 0.6314,-0.124315) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.490675,2.13706e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0780917,5.17404e-05) , 
0.589693, 1, 14, 0, 0.425273,5.64016e-05) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.483481,-0.000100029) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.142825,0.000515889) , 
1.74159, 0, 7, 0, 0.185877,0.219019) , 
2.09438, 0, 10, 0, 0.252951,0.15767) , 
0.643027, 0, 14, 0, 0.503968,-0.029364)    );
  // itree = 441
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683757,-0.000116782) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.415774,6.22672e-06) , 
0.134075, 0, 15, 0, 0.646719,-0.13457) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.894707,-0.000243448) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.362074,3.57242e-05) , 
0.510472, 0, 15, 0, 0.407488,0.0823941) , 
0.394334, 1, 16, 0, 0.613493,-0.104436) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.905585,-0.000181494) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.329507,-0.00016982) , 
2.54446, 0, 9, 0, 0.793885,-0.326769) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.613118,-9.53676e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252655,0.0002802) , 
2.67741, 0, 8, 0, 0.284744,0.129941) , 
0.647771, 1, 17, 0, 0.319238,0.0989994) , 
0.659385, 0, 14, 0, 0.493769,-0.0216644)    );
  // itree = 442
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.888364,-0.000168703) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.677609,-5.85657e-05) , 
0.117329, 1, 16, 0, 0.762955,-0.248314) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761572,-0.000189093) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.538165,-7.54046e-05) , 
2.24397, 0, 10, 0, 0.585541,-0.0777581) , 
0.724698, 0, 2, 0, 0.637213,-0.127433) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663235,-9.79164e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.350911,0.000121781) , 
0.299305, 1, 10, 0, 0.395411,0.0283115) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769403,-0.000122639) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174714,0.000568128) , 
2.84157, 0, 11, 0, 0.196014,0.213193) , 
1.79081, 1, 18, 0, 0.323843,0.0946702) , 
0.659126, 0, 14, 0, 0.513846,-0.0399956)    );
  // itree = 443
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.878212,-0.000114116) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.646272,-0.000133264) , 
0.44357, 0, 15, 0, 0.68258,-0.177283) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.516813,-5.35339e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.189221,0.000626912) , 
2.23833, 1, 18, 0, 0.465453,0.017799) , 
0.944459, 0, 7, 0, 0.571614,-0.0775834) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.825574,-0.000305042) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.148851,0.00637534) , 
0.155841, 1, 16, 0, 0.754333,-0.274627) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.54765,-4.79836e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.178915,0.000490138) , 
0.812517, 0, 1, 0, 0.205121,0.193744) , 
0.612152, 1, 17, 0, 0.25894,0.147847) , 
0.116223, 0, 15, 0, 0.488526,-0.0176792)    );
  // itree = 444
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.811326,-0.000120009) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.630755,-0.000117005) , 
0.37144, 0, 3, 0, 0.727903,-0.209492) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676211,-0.000173433) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.390425,3.82815e-05) , 
0.846693, 0, 14, 0, 0.526804,-0.0191705) , 
0.452685, 0, 2, 0, 0.653182,-0.138775) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.610352,-8.12958e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.366505,5.45027e-05) , 
1.79409, 0, 9, 0, 0.460088,-0.0195486) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.346338,0.000125208) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.124215,0.000388213) , 
1.04702, 1, 11, 0, 0.272792,0.153679) , 
2.09434, 0, 10, 0, 0.321281,0.108833) , 
0.694595, 0, 14, 0, 0.493965,-0.0199947)    );
  // itree = 445
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.743078,-0.000149099) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.514964,-3.85031e-05) , 
0.691461, 0, 14, 0, 0.659379,-0.164468) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.41258,-0.00220325) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.03653,0.000499146) , 
0.0958599, 1, 16, 0, 0.0435015,0.331023) , 
0.508379, 0, 14, 0, 0.629988,-0.140822) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.673271,-0.000137704) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.412642,8.51604e-05) , 
0.363683, 0, 2, 0, 0.573366,-0.0643368) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.561297,-8.35769e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.246243,0.000158436) , 
2.54309, 0, 10, 0, 0.2798,0.153687) , 
0.734922, 0, 14, 0, 0.377697,0.0809814) , 
0.986685, 0, 7, 0, 0.500409,-0.0269021)    );
  // itree = 446
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.869169,-0.000114871) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.626965,-0.000141267) , 
0.451108, 0, 15, 0, 0.668099,-0.158254) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.56748,-8.03475e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.278856,0.000407027) , 
0.976416, 1, 8, 0, 0.469905,0.0168644) , 
0.969354, 0, 7, 0, 0.5602,-0.0629172) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.562528,-0.000133894) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238823,0.000332876) , 
0.0197884, 1, 0, 0, 0.450614,-0.00272701) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.469322,-9.02295e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0687598,0.000515062) , 
1.49748, 1, 9, 0, 0.165135,0.231854) , 
0.0461831, 1, 0, 0, 0.292686,0.127044) , 
0.142612, 0, 15, 0, 0.462269,0.0066234)    );
  // itree = 447
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.778724,-0.00016184) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.506383,-0.000136104) , 
0.63738, 0, 13, 0, 0.724893,-0.208976) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.782033,-0.000109655) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292149,0.00016465) , 
0.243817, 1, 8, 0, 0.423919,0.000430722) , 
0.643027, 0, 14, 0, 0.645514,-0.153747) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683637,-0.000143667) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.403861,-4.66648e-06) , 
0.135619, 1, 16, 0, 0.450111,0.0352937) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.29161,0.000511472) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0700154,0.000473432) , 
0.747978, 1, 10, 0, 0.13644,0.253213) , 
0.119808, 0, 15, 0, 0.363564,0.0954208) , 
1.22806, 0, 7, 0, 0.472472,-0.00082387)    );
  // itree = 448
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.716321,-0.000127636) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.501411,-6.48066e-05) , 
0.266237, 0, 1, 0, 0.678391,-0.164205) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.812991,-0.000162742) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.427663,-4.06947e-06) , 
2.54288, 0, 10, 0, 0.480887,0.013277) , 
0.276186, 1, 16, 0, 0.612826,-0.105286) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.886403,-0.0003606) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.057051,-5.42916e-06) , 
0.683056, 1, 8, 0, 0.689574,-0.247056) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.305261,0.000200317) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.089646,0.00060266) , 
0.485611, 1, 16, 0, 0.251035,0.15631) , 
0.598652, 1, 9, 0, 0.280782,0.128949) , 
0.644006, 0, 14, 0, 0.493102,-0.0208287)    );
  // itree = 449
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.811068,-0.000123311) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.506679,1.21436e-05) , 
0.56654, 0, 13, 0, 0.703467,-0.221084) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.619398,-0.000111433) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.339734,0.000302786) , 
0.142652, 0, 15, 0, 0.533485,-0.0443435) , 
0.538177, 0, 1, 0, 0.593476,-0.106719) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.921473,-0.000165142) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184009,-2.48441e-05) , 
-0.645833, 1, 4, 0, 0.753793,-0.26472) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.514915,-1.4469e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.2249,0.000291494) , 
0.0461831, 1, 0, 0, 0.298473,0.138234) , 
2.24393, 0, 11, 0, 0.34807,0.0943403) , 
0.353659, 1, 16, 0, 0.514481,-0.0419994)    );
  // itree = 450
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74215,-0.000130861) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.440508,1.45561e-05) , 
0.106777, 1, 0, 0, 0.713796,-0.195444) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688579,-0.000175603) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.360322,0.000444691) , 
0.874346, 0, 14, 0, 0.504579,-0.0023634) , 
0.357667, 0, 2, 0, 0.663926,-0.149421) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.849202,-0.000188305) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.33677,-0.000133737) , 
-0.12332, 0, 5, 0, 0.75272,-0.269917) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.443826,0.000125788) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.248163,0.000222694) , 
2.09449, 1, 9, 0, 0.337966,0.0870869) , 
2.21756, 0, 7, 0, 0.370895,0.0587433) , 
0.694595, 0, 14, 0, 0.519244,-0.0466411)    );
  // itree = 451
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.862685,-0.000220987) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.698464,-0.000202404) , 
0.404622, 0, 1, 0, 0.786591,-0.273567) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746385,-0.000153503) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159962,3.1407e-05) , 
0.198081, 0, 15, 0, 0.513823,-0.0152317) , 
0.0153273, 1, 0, 0, 0.751048,-0.239904) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764661,-0.000160581) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378641,0.000100139) , 
0.281294, 0, 1, 0, 0.650621,-0.137718) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.471578,1.91936e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.278795,0.000103805) , 
-0.37154, 1, 4, 0, 0.362496,0.083759) , 
0.771629, 0, 14, 0, 0.427144,0.0340648) , 
0.132002, 1, 16, 0, 0.508395,-0.0346601)    );
  // itree = 452
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.696151,-0.000116325) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.44029,4.75221e-05) , 
0.357678, 0, 2, 0, 0.642184,-0.133402) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.432782,0.000105105) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.148699,0.000511051) , 
0.329834, 1, 16, 0, 0.345382,0.0713184) , 
0.64439, 0, 14, 0, 0.562225,-0.0782503) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74739,-0.000216743) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.530972,-5.95099e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.130497,0.000212412) , 
0.752118, 0, 14, 0, 0.165753,0.258788) , 
0.795502, 0, 16, 0, 0.178091,0.246453) , 
0.138549, 1, 0, 0, 0.492329,-0.019168)    );
  // itree = 453
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.895224,-0.000258561) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.6441,-0.000108323) , 
1.60948, 0, 3, 0, 0.682114,-0.173234) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.526427,-5.21352e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174236,0.000566142) , 
1.21233, 1, 8, 0, 0.444378,0.0356799) , 
0.708337, 0, 7, 0, 0.590838,-0.0930235) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741163,-0.000166523) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363497,-0.000124344) , 
0.0956677, 1, 12, 0, 0.502172,-0.0447349) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.439538,-1.90382e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191954,0.000411254) , 
2.39356, 0, 10, 0, 0.230431,0.181415) , 
1.70914, 0, 7, 0, 0.286249,0.134962) , 
0.14413, 0, 15, 0, 0.48316,-0.012426)    );
  // itree = 454
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.79365,-0.000123536) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.573731,-0.000116396) , 
1.64865, 1, 18, 0, 0.729278,-0.209497) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761669,-0.000424847) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.417851,-3.76823e-05) , 
1.71927, 0, 7, 0, 0.490943,0.0174671) , 
0.340987, 0, 1, 0, 0.635693,-0.120377) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.644885,-4.75592e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.390691,4.94454e-05) , 
0.0998168, 1, 12, 0, 0.454558,-0.0103826) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.495929,1.68235e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.185849,0.000305198) , 
0.361742, 0, 15, 0, 0.242824,0.179056) , 
0.701291, 0, 7, 0, 0.365799,0.06903) , 
0.706618, 0, 14, 0, 0.489667,-0.0178982)    );
  // itree = 455
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.685138,-0.000121912) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.185787,0.000163316) , 
0.231965, 0, 2, 0, 0.669532,-0.160111) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.541443,-4.05173e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256837,0.00031506) , 
0.488235, 1, 8, 0, 0.342438,0.0786029) , 
0.116084, 0, 15, 0, 0.597871,-0.107812) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661041,-9.74612e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.367127,0.000196145) , 
2.09406, 0, 10, 0, 0.461002,-0.0160754) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.549589,-1.64695e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204903,0.000267445) , 
0.360685, 0, 15, 0, 0.291028,0.150054) , 
1.7749, 0, 17, 0, 0.351336,0.09111) , 
0.30858, 1, 16, 0, 0.500753,-0.0294508)    );
  // itree = 456
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.902295,-0.000149405) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.621147,-0.000102151) , 
0.0956203, 0, 6, 0, 0.6372,-0.127271) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.80518,-0.000183387) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.354564,2.97653e-05) , 
0.496607, 0, 15, 0, 0.42389,0.062908) , 
0.354951, 1, 16, 0, 0.594042,-0.0887928) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.869761,-0.000421711) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198262,0.00417778) , 
0.0207099, 1, 6, 0, 0.69519,-0.243061) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.360982,0.000106874) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168615,0.000444654) , 
1.79517, 0, 10, 0, 0.247446,0.161914) , 
0.615169, 1, 17, 0, 0.269184,0.142252) , 
0.643347, 0, 14, 0, 0.476238,-0.00500809)    );
  // itree = 457
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.787231,-0.000125745) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.478208,0.000109633) , 
0.419273, 1, 16, 0, 0.76813,-0.247313) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.59217,-0.00019425) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.379558,-5.79207e-06) , 
0.147377, 1, 16, 0, 0.46149,0.0457083) , 
0.449444, 0, 2, 0, 0.662051,-0.145945) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.930534,-0.000198954) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.425636,-1.0574e-05) , 
1.96508, 1, 10, 0, 0.513885,-0.0660635) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660669,-7.32019e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.272406,0.000136792) , 
2.10474, 0, 5, 0, 0.294702,0.134381) , 
1.79506, 0, 11, 0, 0.331601,0.100637) , 
0.709825, 0, 14, 0, 0.488198,-0.0162157)    );
  // itree = 458
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700438,-0.000145782) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.333961,0.000852657) , 
0.0886529, 0, 15, 0, 0.64562,-0.15642) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672432,-0.000250509) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.341513,-7.95839e-05) , 
0.828228, 0, 13, 0, 0.43195,0.0450947) , 
1.79606, 1, 18, 0, 0.579674,-0.0942257) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.606544,-9.71963e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.393429,-5.35268e-05) , 
0.372962, 1, 4, 0, 0.551442,-0.0429889) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.567168,7.68252e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.24629,0.000106303) , 
0.77412, 0, 1, 0, 0.283062,0.150574) , 
0.738889, 0, 14, 0, 0.368649,0.0888458) , 
1.21069, 0, 7, 0, 0.443102,0.0242554)    );
  // itree = 459
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.793314,-0.000106699) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.58055,-0.000138657) , 
-0.370823, 0, 3, 0, 0.743278,-0.224658) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.758223,-0.000214416) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.509733,-7.82733e-05) , 
0.877743, 0, 14, 0, 0.569434,-0.0587382) , 
0.58708, 0, 2, 0, 0.639466,-0.125579) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.784997,-0.000237437) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388417,0.00019088) , 
0.344096, 0, 12, 0, 0.503035,-0.0697603) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.75351,-0.000118706) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26415,0.000158769) , 
0.242955, 0, 6, 0, 0.28583,0.140575) , 
0.598471, 1, 10, 0, 0.337038,0.0909869) , 
0.697055, 0, 14, 0, 0.487571,-0.0168081)    );
  // itree = 460
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.798589,-0.000142691) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.498506,1.95237e-05) , 
0.977295, 1, 8, 0, 0.714526,-0.20327) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661406,-0.00012699) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.396821,-4.75951e-06) , 
0.976763, 0, 7, 0, 0.546446,-0.0374429) , 
0.747998, 1, 11, 0, 0.629106,-0.118995) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.9002,-0.000258087) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292841,-0.000152065) , 
1.11169, 0, 5, 0, 0.691333,-0.24222) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.354933,0.000132012) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.114105,0.000688053) , 
0.0912836, 0, 15, 0, 0.273853,0.14004) , 
0.615205, 1, 17, 0, 0.291634,0.123759) , 
0.66057, 0, 14, 0, 0.496213,-0.0234006)    );
  // itree = 461
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.667965,-0.0001141) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187139,0.00660346) , 
0.55243, 1, 16, 0, 0.655077,-0.142655) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.57539,-7.5743e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.311636,8.22549e-05) , 
0.723593, 0, 7, 0, 0.463041,0.0380222) , 
0.299065, 0, 1, 0, 0.601557,-0.0923007) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.439249,2.79423e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191713,0.000422609) , 
0.227953, 1, 12, 0, 0.373384,0.0465514) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.90211,-0.00107372) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.141912,0.000563209) , 
0.0504888, 1, 16, 0, 0.16901,0.237053) , 
1.7916, 1, 18, 0, 0.300404,0.114578) , 
0.66057, 0, 14, 0, 0.476963,-0.00671055)    );
  // itree = 462
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.867561,-0.000198596) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.66904,-0.000131602) , 
0.415294, 0, 16, 0, 0.691706,-0.184506) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.608671,-7.2862e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.28555,0.000229186) , 
0.707705, 0, 14, 0, 0.51381,-0.0173295) , 
0.982427, 0, 7, 0, 0.604541,-0.102594) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.540232,-1.00304e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.070538,0.00619409) , 
0.887486, 1, 2, 0, 0.455268,-0.0437542) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.463642,-4.95944e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.106372,0.000433803) , 
1.59923, 0, 7, 0, 0.160197,0.24212) , 
0.477906, 1, 13, 0, 0.275452,0.130457) , 
0.622762, 0, 14, 0, 0.50244,-0.0302886)    );
  // itree = 463
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714354,-0.000116269) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.466501,1.80448e-05) , 
0.135243, 0, 15, 0, 0.680419,-0.170194) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.780263,-0.000233915) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.334555,0.000151738) , 
0.071982, 1, 16, 0, 0.437604,0.0616905) , 
0.350411, 0, 2, 0, 0.635842,-0.127624) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.812119,-0.000174103) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.341968,0.000253067) , 
0.448814, 1, 10, 0, 0.499281,-0.0757885) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.321639,0.000258998) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.121702,0.000328672) , 
0.695648, 0, 2, 0, 0.237008,0.168124) , 
-1.11416, 1, 4, 0, 0.288716,0.120036) , 
0.643027, 0, 14, 0, 0.517257,-0.0430184)    );
  // itree = 464
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.861724,-0.000180079) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.670407,-0.000134818) , 
0.243887, 1, 8, 0, 0.711215,-0.204507) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.86697,-0.00105718) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.230782,0.000256243) , 
0.405032, 0, 12, 0, 0.262692,0.138088) , 
0.0869044, 0, 15, 0, 0.648487,-0.156594) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.613258,-9.76203e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.32107,0.000161617) , 
0.976534, 1, 8, 0, 0.542452,-0.0337544) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677818,-5.50455e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.208682,0.000206677) , 
0.526107, 0, 15, 0, 0.230733,0.189207) , 
0.702336, 0, 14, 0, 0.366592,0.0920318) , 
1.22804, 0, 7, 0, 0.475265,-0.00381548)    );
  // itree = 465
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749636,-0.000135433) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.590635,-9.9524e-05) , 
0.619116, 0, 3, 0, 0.652469,-0.138429) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.624788,0.000120426) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.210807,2.4368e-06) , 
1.68631, 0, 17, 0, 0.28446,0.211736) , 
0.243969, 0, 7, 0, 0.622658,-0.110062) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.811668,-0.000247251) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.358651,-2.26623e-05) , 
0.0211957, 1, 0, 0, 0.654389,-0.189481) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.434602,-4.17641e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.214113,0.000333367) , 
2.09407, 0, 10, 0, 0.274688,0.144119) , 
2.10387, 0, 7, 0, 0.306059,0.116556) , 
0.680445, 0, 14, 0, 0.478273,-0.00671318)    );
  // itree = 466
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727994,-0.000139365) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.405534,-5.85351e-05) , 
0.577856, 0, 13, 0, 0.691373,-0.17949) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.579947,-5.94524e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.325081,0.000160177) , 
0.449418, 0, 2, 0, 0.477446,0.0162884) , 
0.740038, 0, 7, 0, 0.618472,-0.112773) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687308,-0.000103657) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.263166,0.000272324) , 
-0.954278, 1, 4, 0, 0.529648,-0.102415) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682107,-0.000104783) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226547,0.000358105) , 
0.233886, 0, 6, 0, 0.250207,0.154249) , 
1.06112, 1, 17, 0, 0.312178,0.0973296) , 
0.636319, 0, 14, 0, 0.510263,-0.0385474)    );
  // itree = 467
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742404,-9.18634e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.287038,-0.000166671) , 
-1.11428, 0, 4, 0, 0.711634,-0.200081) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.592551,-0.000115454) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.281461,0.000114711) , 
0.0321193, 1, 6, 0, 0.550102,-0.0415731) , 
0.632959, 0, 2, 0, 0.613884,-0.104161) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.47619,1.13687e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249771,0.000303003) , 
0.477093, 0, 1, 0, 0.390243,0.0306049) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.59706,-0.000122991) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.17026,0.000741836) , 
2.81052, 0, 8, 0, 0.208884,0.196915) , 
1.79226, 1, 18, 0, 0.324606,0.0907951) , 
0.66057, 0, 14, 0, 0.494904,-0.0239754)    );
  // itree = 468
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.784956,-0.000143867) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.497197,-0.000111649) , 
1.49591, 1, 10, 0, 0.716388,-0.208446) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.563599,-7.96547e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251474,0.00070728) , 
0.138666, 0, 15, 0, 0.513726,-0.0158045) , 
1.1987, 1, 17, 0, 0.590576,-0.0888548) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.838395,-0.000277336) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.13593,0.000337188) , 
0.759107, 1, 13, 0, 0.742481,-0.293182) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.338792,0.000145205) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127712,0.00039507) , 
0.722379, 1, 8, 0, 0.217665,0.183983) , 
0.5984, 1, 9, 0, 0.26055,0.144991) , 
0.622998, 0, 14, 0, 0.485996,-0.0147525)    );
  // itree = 469
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.78883,-0.000197464) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.634963,-8.43738e-05) , 
0.103845, 1, 16, 0, 0.677432,-0.170981) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.799669,-0.000226684) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183396,0.00122381) , 
0.0593666, 1, 16, 0, 0.273551,0.134922) , 
0.0914033, 0, 15, 0, 0.623421,-0.130072) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.979339,-0.000224485) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0172204,0.0176143) , 
0.152776, 0, 12, 0, 0.834158,-0.391037) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.458974,3.11614e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180386,0.000274475) , 
0.654112, 0, 14, 0, 0.297707,0.143749) , 
0.231493, 1, 13, 0, 0.336176,0.1054) , 
0.309515, 1, 16, 0, 0.515596,-0.0416817)    );
  // itree = 470
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.800717,-0.000230507) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129715,0.0116554) , 
0.334372, 1, 15, 0, 0.791245,-0.286497) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.246793,0.0206227) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0248465,0.0134133) , 
0.602471, 1, 10, 0, 0.0591409,0.373665) , 
0.260084, 1, 16, 0, 0.778099,-0.274642) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.538369,-6.50864e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.291309,0.000133742) , 
2.24077, 1, 18, 0, 0.494791,-0.0122306) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769284,-0.000235587) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.149603,0.000799009) , 
0.330377, 1, 14, 0, 0.172338,0.20132) , 
0.0909793, 0, 15, 0, 0.438487,0.0250577) , 
2.17213, 0, 7, 0, 0.477403,-0.00928512)    );
  // itree = 471
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.678644,-0.000103926) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.310705,0.000183148) , 
0.115647, 0, 15, 0, 0.645817,-0.140458) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682447,-0.000247789) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317195,0.000100753) , 
0.0739423, 1, 16, 0, 0.390566,0.103581) , 
0.252067, 0, 1, 0, 0.608886,-0.105149) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.560462,-4.22344e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0497639,0.000233834) , 
-0.370726, 0, 3, 0, 0.453412,-0.0363426) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.489237,4.44889e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.142096,0.000495727) , 
-1.11447, 1, 3, 0, 0.194585,0.204078) , 
2.09434, 0, 10, 0, 0.270777,0.133304) , 
0.624085, 0, 14, 0, 0.504516,-0.0315411)    );
  // itree = 472
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.82938,-0.000219019) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.273683,-0.000219796) , 
0.637275, 0, 14, 0, 0.809188,-0.284996) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.754582,-0.000167901) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.528402,-3.20975e-05) , 
1.0472, 1, 9, 0, 0.562658,-0.0722483) , 
1.89671, 0, 7, 0, 0.598801,-0.103439) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.830625,-0.000241774) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.432525,1.68215e-05) , 
2.71361, 0, 7, 0, 0.568652,-0.111931) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.552525,6.43969e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.116117,0.000465733) , 
0.808234, 0, 1, 0, 0.15425,0.236859) , 
1.72675, 0, 7, 0, 0.255315,0.151795) , 
0.117482, 0, 15, 0, 0.513372,-0.0399592)    );
  // itree = 473
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.667561,-0.000111184) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.452455,2.80267e-05) , 
0.260348, 0, 1, 0, 0.622446,-0.112254) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.863905,-0.0002246) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.189244,8.53731e-06) , 
1.74576, 0, 8, 0, 0.30747,0.186504) , 
0.0528104, 1, 6, 0, 0.597591,-0.0886794) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.513266,-3.93132e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.289833,0.000164289) , 
0.748029, 1, 10, 0, 0.367613,0.0502095) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.929326,-0.000350422) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.121815,0.000361834) , 
0.449908, 0, 12, 0, 0.139567,0.262751) , 
0.390252, 1, 16, 0, 0.274788,0.136724) , 
0.658743, 0, 14, 0, 0.468483,0.00147239)    );
  // itree = 474
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.777816,-0.000194057) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.546179,-0.000206074) , 
1.79516, 1, 10, 0, 0.735181,-0.2217) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.580344,-7.08899e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.35284,9.29023e-05) , 
0.985011, 1, 8, 0, 0.497633,-0.0179544) , 
1.68501, 0, 7, 0, 0.544237,-0.0579268) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.595959,-0.000106358) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.15539,0.000283931) , 
0.0701288, 0, 15, 0, 0.411006,-0.000115767) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575767,-0.000141699) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0808153,0.00117583) , 
2.83879, 0, 18, 0, 0.102989,0.264288) , 
0.0173735, 1, 6, 0, 0.207236,0.174802) , 
0.0896043, 0, 15, 0, 0.489025,-0.0197978)    );
  // itree = 475
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.87652,-0.000243845) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204824,0.0172626) , 
0.0993998, 0, 12, 0, 0.856722,-0.333781) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.787399,-0.000201883) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.551277,-6.57002e-05) , 
2.24392, 0, 11, 0, 0.578457,-0.0741776) , 
0.615696, 1, 17, 0, 0.601569,-0.095739) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.52734,-7.64275e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.267847,0.000237825) , 
-0.371434, 1, 4, 0, 0.397075,0.0218366) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.649491,-0.000176175) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174064,0.000396399) , 
2.39263, 0, 11, 0, 0.205196,0.196828) , 
0.315304, 1, 16, 0, 0.284891,0.124147) , 
0.638, 0, 14, 0, 0.493537,-0.0207272)    );
  // itree = 476
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.806044,-0.000118805) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.319796,0.000112299) , 
0.394814, 1, 16, 0, 0.778971,-0.257845) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.785313,-0.000271803) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.476873,-4.88894e-05) , 
0.0770639, 1, 16, 0, 0.543521,-0.033474) , 
0.489582, 0, 2, 0, 0.683745,-0.167099) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731076,-0.00022084) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.413511,8.90856e-05) , 
0.830309, 0, 13, 0, 0.471088,-0.0379367) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.812452,-0.00022278) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238843,0.000168576) , 
-1.85602, 1, 3, 0, 0.25967,0.16212) , 
-0.866751, 1, 4, 0, 0.314369,0.11036) , 
0.695075, 0, 14, 0, 0.512936,-0.038795)    );
  // itree = 477
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.762854,-0.00012036) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.573005,-8.65953e-05) , 
0.452704, 0, 2, 0, 0.696405,-0.177926) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.527809,-1.81961e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.235598,0.00040782) , 
0.653389, 0, 2, 0, 0.432489,0.00262137) , 
0.686779, 0, 14, 0, 0.601878,-0.113259) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705014,-0.000148839) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.277384,0.000240021) , 
0.659311, 1, 2, 0, 0.52494,-0.0780059) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.85259,-0.000207367) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.2085,0.000317059) , 
0.790893, 0, 16, 0, 0.226803,0.205418) , 
0.948588, 0, 7, 0, 0.308326,0.127918) , 
0.353661, 1, 16, 0, 0.510499,-0.0381832)    );
  // itree = 478
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.773553,-0.000137728) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.600717,-9.73588e-05) , 
0.732925, 1, 8, 0, 0.702838,-0.184087) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.584527,-0.000120507) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187745,0.000138789) , 
0.735858, 0, 7, 0, 0.434566,0.0693752) , 
0.263353, 0, 1, 0, 0.647878,-0.132161) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.898595,-0.00020588) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.445675,-1.90103e-05) , 
0.664623, 0, 14, 0, 0.65406,-0.187491) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.388887,8.72895e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.254838,0.000210445) , 
0.740497, 0, 2, 0, 0.318329,0.108019) , 
1.04741, 1, 9, 0, 0.361444,0.0700684) , 
0.708182, 0, 14, 0, 0.494479,-0.0238574)    );
  // itree = 479
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.829038,-0.000215667) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227259,0.00745521) , 
0.247084, 0, 7, 0, 0.801538,-0.291865) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65122,-0.000108825) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.46788,-4.09618e-05) , 
2.39487, 0, 9, 0, 0.576444,-0.0708335) , 
2.2439, 0, 11, 0, 0.602142,-0.0960683) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.587535,-6.8257e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279428,0.000767838) , 
0.370846, 1, 5, 0, 0.500663,-0.0739805) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703455,-0.000147079) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.20202,0.00036132) , 
0.220303, 1, 13, 0, 0.219894,0.182073) , 
1.05903, 1, 17, 0, 0.283004,0.124518) , 
0.637994, 0, 14, 0, 0.490897,-0.0191765)    );
  // itree = 480
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.836764,-0.000156362) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.624178,-0.000247797) , 
0.352616, 0, 1, 0, 0.784706,-0.259954) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575937,-8.01536e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171721,0.000136955) , 
0.257517, 0, 2, 0, 0.530806,-0.0232909) , 
1.22804, 0, 7, 0, 0.658433,-0.142253) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.805684,-0.000127555) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.404094,3.94121e-05) , 
2.14435, 1, 10, 0, 0.487276,-0.0534545) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.405944,1.65004e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175049,0.000428402) , 
0.913828, 0, 7, 0, 0.278473,0.144801) , 
2.09445, 0, 10, 0, 0.332548,0.0934582) , 
0.695771, 0, 14, 0, 0.499475,-0.0272793)    );
  // itree = 481
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719312,-0.000114121) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.336692,0.000136768) , 
0.110086, 0, 15, 0, 0.693672,-0.181403) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.646606,-0.000164492) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340254,0.00035709) , 
0.87189, 0, 14, 0, 0.457048,0.0394803) , 
0.357687, 0, 2, 0, 0.648725,-0.139445) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.94369,-0.000231977) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0150798,0.0142348) , 
0.203007, 0, 15, 0, 0.780402,-0.361322) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.410239,8.49222e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168107,0.000447033) , 
0.32776, 1, 16, 0, 0.280598,0.12562) , 
0.242955, 0, 6, 0, 0.304697,0.102141) , 
0.641941, 0, 14, 0, 0.531755,-0.0573057)    );
  // itree = 482
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76823,-0.000133426) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.552448,-0.00011175) , 
1.1968, 1, 11, 0, 0.716381,-0.195791) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.867896,-0.00019337) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.442933,-2.63023e-05) , 
0.115064, 0, 6, 0, 0.507495,-0.00559487) , 
0.30554, 1, 16, 0, 0.67042,-0.153942) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.44801,3.98601e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.190429,0.000551751) , 
0.429316, 0, 2, 0, 0.413886,0.0225161) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.423005,0.000755381) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0704667,0.000437362) , 
1.9399, 0, 11, 0, 0.0949392,0.301652) , 
0.272877, 1, 0, 0, 0.374867,0.0566651) , 
0.706898, 0, 14, 0, 0.515252,-0.043371)    );
  // itree = 483
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.794011,-0.000124108) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.601603,-9.56271e-05) , 
1.64239, 1, 18, 0, 0.733585,-0.214123) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.79945,-0.00052962) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.449547,-6.2589e-05) , 
1.93877, 0, 7, 0, 0.499938,0.00934249) , 
0.318954, 1, 12, 0, 0.658371,-0.142187) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686503,-0.000139104) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0850415,0.000503807) , 
0.437141, 0, 2, 0, 0.623311,-0.182249) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.347114,0.000100996) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0856928,0.000411333) , 
0.227398, 1, 0, 0, 0.299461,0.124546) , 
1.94471, 0, 11, 0, 0.348317,0.0782624) , 
0.695771, 0, 14, 0, 0.505654,-0.0336045)    );
  // itree = 484
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727021,-0.000125963) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.438312,6.05773e-05) , 
0.106645, 1, 0, 0, 0.699905,-0.181963) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.588968,-0.000154793) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.181822,0.000569286) , 
0.142687, 1, 16, 0, 0.355506,0.143767) , 
0.270272, 0, 2, 0, 0.667977,-0.151766) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.896186,-0.00020775) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.332947,-0.00017104) , 
2.05654, 0, 7, 0, 0.741955,-0.27168) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.37645,0.000137329) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.153124,0.000198306) , 
0.0809851, 1, 6, 0, 0.331839,0.0901719) , 
0.0927532, 1, 16, 0, 0.358918,0.0662796) , 
0.693844, 0, 14, 0, 0.517143,-0.0453503)    );
  // itree = 485
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.6278,-0.000118592) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.464064,-3.55638e-05) , 
0.979673, 1, 8, 0, 0.552651,-0.0590278) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.950481,-0.000455131) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.136422,0.000912191) , 
0.323904, 1, 17, 0, 0.168099,0.217739) , 
0.559236, 0, 14, 0, 0.52023,-0.0356937) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.931606,-0.000222902) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0229704,0.00854964) , 
0.580671, 0, 5, 0, 0.755195,-0.333526) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674588,-0.00019232) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.208229,0.000128815) , 
0.299001, 1, 11, 0, 0.240644,0.188863) , 
0.245097, 0, 6, 0, 0.268807,0.160271) , 
0.090959, 1, 0, 0, 0.444929,0.0229972)    );
  // itree = 486
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706265,-0.000131219) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.431401,6.78881e-05) , 
0.272274, 0, 2, 0, 0.67863,-0.168692) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700714,-8.29772e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.290461,0.000195615) , 
0.48051, 1, 13, 0, 0.381245,0.0484539) , 
0.116084, 0, 15, 0, 0.623551,-0.128474) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.50157,-4.16829e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.205886,0.000115429) , 
0.568193, 0, 2, 0, 0.42402,0.0305814) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.904399,-0.000257192) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.155454,0.000275628) , 
2.83529, 0, 11, 0, 0.183387,0.23675) , 
0.396779, 1, 16, 0, 0.323847,0.116407) , 
0.0461831, 1, 0, 0, 0.494588,-0.0231015)    );
  // itree = 487
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755515,-0.000207544) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.550628,-7.66192e-05) , 
0.113334, 1, 16, 0, 0.605776,-0.100962) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.842621,-0.000189006) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.313432,0.000187952) , 
0.242955, 0, 6, 0, 0.354608,0.106462) , 
0.391531, 1, 16, 0, 0.543145,-0.0492389) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.805741,-0.000492352) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.387296,-9.23878e-05) , 
2.52647, 0, 18, 0, 0.519827,-0.0639787) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.224178,0.000368927) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0499047,0.00042091) , 
0.326088, 1, 16, 0, 0.136644,0.250768) , 
1.9735, 0, 7, 0, 0.201493,0.197501) , 
0.116474, 0, 15, 0, 0.456405,0.0134042)    );
  // itree = 488
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.775111,-0.00013641) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.50003,-0.000141672) , 
1.94484, 0, 9, 0, 0.727674,-0.21032) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.866054,-0.000148113) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.529279,-6.66556e-05) , 
0.95359, 0, 2, 0, 0.555375,-0.0494526) , 
1.20926, 1, 17, 0, 0.621731,-0.111406) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.425606,4.71732e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0968092,0.00221463) , 
0.0629757, 0, 15, 0, 0.372503,0.0468037) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639032,-0.000126994) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.120013,0.000697762) , 
0.242955, 0, 6, 0, 0.173645,0.226022) , 
0.476208, 1, 16, 0, 0.319671,0.0944177) , 
0.66057, 0, 14, 0, 0.498893,-0.0277044)    );
  // itree = 489
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.879513,-0.000155085) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.701839,-0.000239857) , 
0.543001, 0, 1, 0, 0.787852,-0.282891) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664315,-0.000277088) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.288887,-4.90325e-05) , 
1.79628, 0, 11, 0, 0.475912,0.00837519) , 
1.49592, 1, 10, 0, 0.705398,-0.205901) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.552238,-6.60932e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317969,0.000363569) , 
2.23951, 1, 18, 0, 0.51353,-0.0289609) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.563781,2.09916e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157107,0.000485754) , 
0.913903, 1, 17, 0, 0.201105,0.190566) , 
0.117404, 0, 15, 0, 0.431619,0.0285946) , 
1.71925, 0, 7, 0, 0.487059,-0.0188906)    );
  // itree = 490
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.808821,-0.000212221) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.200113,0.00719636) , 
0.103402, 1, 0, 0, 0.79054,-0.269037) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558018,-5.32307e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.170353,3.55799e-05) , 
0.161556, 0, 7, 0, 0.526196,-0.0394142) , 
1.69637, 0, 7, 0, 0.579058,-0.0853328) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653114,-7.79573e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.102963,0.000991428) , 
0.0813147, 0, 15, 0, 0.469675,-0.0522132) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.545964,-0.000176204) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143091,0.000882518) , 
2.21052, 0, 7, 0, 0.194037,0.202991) , 
0.486885, 1, 8, 0, 0.279579,0.123789) , 
0.116152, 0, 15, 0, 0.501436,-0.0311302)    );
  // itree = 491
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728141,-0.000134326) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.495963,-0.000216819) , 
0.312871, 0, 1, 0, 0.696926,-0.197135) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.841499,-0.000197256) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249605,0.000425225) , 
0.229829, 1, 13, 0, 0.323709,0.0687493) , 
0.554164, 0, 14, 0, 0.661338,-0.171782) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.563725,-5.85375e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.284618,0.000479957) , 
2.23993, 1, 18, 0, 0.518861,-0.0332237) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.293557,0.000101926) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0886273,0.000988366) , 
1.94558, 1, 9, 0, 0.158248,0.227237) , 
0.119089, 0, 15, 0, 0.428998,0.0316822) , 
1.22803, 0, 7, 0, 0.514941,-0.0435798)    );
  // itree = 492
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.750257,-0.000179212) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.541866,-7.03161e-05) , 
0.0165077, 1, 0, 0, 0.674023,-0.160778) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.508236,-2.19307e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.139796,0.00113693) , 
0.138433, 0, 15, 0, 0.477081,-0.00445646) , 
0.266116, 1, 16, 0, 0.58098,-0.086926) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.824793,-0.000199951) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.026828,0.00239892) , 
-0.378683, 1, 3, 0, 0.632805,-0.217432) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.562913,-0.000176712) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.18561,0.000431104) , 
0.759688, 1, 17, 0, 0.23079,0.169971) , 
0.812882, 0, 1, 0, 0.264161,0.137812) , 
0.116474, 0, 15, 0, 0.498479,-0.0284032)    );
  // itree = 493
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.726553,-0.000144253) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.417325,-8.76337e-05) , 
0.317692, 0, 2, 0, 0.690626,-0.169397) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.5031,-6.69161e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.155897,3.74573e-05) , 
1.19594, 0, 18, 0, 0.421887,0.082798) , 
0.736906, 0, 7, 0, 0.609222,-0.0930035) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.713793,-0.000217447) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.429204,-1.38756e-05) , 
0.121031, 1, 12, 0, 0.562002,-0.11393) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.359553,7.8564e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.135052,0.000268734) , 
0.399445, 1, 16, 0, 0.278706,0.149314) , 
1.94471, 0, 11, 0, 0.317932,0.112865) , 
0.708187, 0, 14, 0, 0.44906,0.0201905)    );
  // itree = 494
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709181,-0.000102466) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165221,0.000548977) , 
0.533623, 1, 16, 0, 0.695655,-0.182568) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.554941,-0.000116689) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26852,5.36824e-05) , 
0.0343994, 1, 0, 0, 0.493497,0.0109635) , 
0.319174, 1, 12, 0, 0.637449,-0.126846) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.528923,-2.47759e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.313683,0.000180432) , 
2.09438, 0, 10, 0, 0.373917,0.0422402) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.862536,-0.000278356) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127914,0.000531966) , 
2.8418, 0, 11, 0, 0.160219,0.235764) , 
0.47589, 1, 16, 0, 0.318247,0.0926543) , 
0.659126, 0, 14, 0, 0.512277,-0.0407713)    );
  // itree = 495
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.708439,-0.000144246) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.346386,4.01316e-05) , 
0.703175, 0, 14, 0, 0.673729,-0.154686) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.605038,-6.2433e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.302165,1.36116e-06) , 
-0.121243, 1, 4, 0, 0.481821,0.0198528) , 
0.740062, 0, 7, 0, 0.608474,-0.0953375) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.869485,-0.000344586) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.535714,-8.35021e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.27373,0.000174678) , 
2.5732, 0, 8, 0, 0.299868,0.115289) , 
0.312132, 1, 14, 0, 0.309678,0.104669) , 
0.673093, 0, 14, 0, 0.477316,-0.00754388)    );
  // itree = 496
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661741,-0.000103443) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.502548,-7.07205e-05) , 
0.371404, 1, 4, 0, 0.619979,-0.120331) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.445412,3.72226e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184741,0.000613325) , 
1.78841, 1, 18, 0, 0.358991,0.0917332) , 
0.398208, 1, 16, 0, 0.55844,-0.0703277) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.86731,-0.000204436) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245694,0.00132672) , 
0.0817872, 0, 15, 0, 0.544244,-0.139999) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.430938,-9.11659e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0895308,0.000895932) , 
0.122475, 1, 16, 0, 0.137199,0.236624) , 
2.6941, 0, 8, 0, 0.18375,0.193552) , 
0.0896043, 0, 15, 0, 0.499748,-0.0289935)    );
  // itree = 497
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.881831,-0.000154771) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.166302,-9.53751e-05) , 
1.785, 1, 18, 0, 0.812611,-0.298) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.607631,-0.000103961) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.329224,6.94531e-05) , 
0.705998, 0, 14, 0, 0.574728,-0.0621352) , 
0.907177, 0, 2, 0, 0.600603,-0.0877905) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749056,-0.000198229) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.277551,0.000167772) , 
0.424407, 1, 1, 0, 0.554121,-0.0885892) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.394994,3.65718e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174955,0.00028676) , 
1.94452, 0, 10, 0, 0.246642,0.16315) , 
0.361104, 0, 15, 0, 0.282095,0.134124) , 
0.676433, 0, 14, 0, 0.456593,0.0125456)    );
  // itree = 498
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.726462,-0.000130819) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.396732,1.99319e-06) , 
0.106645, 1, 0, 0, 0.696414,-0.176379) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.593638,-0.000139476) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225442,0.000219285) , 
0.183606, 1, 16, 0, 0.421656,0.0817457) , 
0.357672, 0, 2, 0, 0.635976,-0.1196) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.624179,-0.000159253) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.120486,0.000226787) , 
0.264022, 1, 16, 0, 0.564944,-0.107288) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.600903,0.000114562) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.262832,0.000187296) , 
0.82001, 0, 1, 0, 0.287716,0.131855) , 
1.88602, 0, 7, 0, 0.318075,0.105667) , 
0.697055, 0, 14, 0, 0.476317,-0.00646456)    );
  // itree = 499
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.656251,-0.000115604) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.352275,-2.98898e-05) , 
0.0416627, 1, 6, 0, 0.628178,-0.115188) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.457566,-0.000126679) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168452,-1.18175e-05) , 
0.77832, 0, 14, 0, 0.218426,0.284172) , 
0.403468, 1, 15, 0, 0.599313,-0.0870555) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.857548,-0.00026099) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.329626,9.77354e-05) , 
0.224674, 0, 15, 0, 0.528044,-0.0908876) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736166,-0.000173808) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.248769,0.00023779) , 
0.615169, 1, 17, 0, 0.264558,0.147249) , 
-1.36168, 1, 4, 0, 0.300202,0.115034) , 
0.671908, 0, 14, 0, 0.467052,0.00230415)    );
  // itree = 500
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.698446,-0.000113968) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335878,0.000259655) , 
0.0889957, 0, 15, 0, 0.660498,-0.162888) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.471659,-6.15969e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164693,0.000137895) , 
0.321613, 1, 13, 0, 0.258083,0.185336) , 
0.526453, 0, 13, 0, 0.621431,-0.129082) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.646086,-0.000124815) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157879,0.000188788) , 
0.298622, 1, 3, 0, 0.549818,-0.107212) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.576121,-6.01761e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.203646,0.000259216) , 
0.768925, 0, 14, 0, 0.266786,0.16879) , 
2.39359, 0, 10, 0, 0.311279,0.125402) , 
0.309515, 1, 16, 0, 0.507445,-0.0355548)    );
  // itree = 501
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.792708,-0.000119081) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.554991,-0.000120005) , 
0.151126, 0, 15, 0, 0.765987,-0.244353) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.724856,-0.000150061) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.415641,5.79348e-06) , 
1.30483, 1, 17, 0, 0.561978,-0.052173) , 
0.455008, 0, 2, 0, 0.689683,-0.172474) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.895089,-0.000214204) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.467671,1.53657e-05) , 
-2.10367, 1, 3, 0, 0.503939,-0.0579164) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.465804,-3.47326e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157099,0.000359684) , 
2.09432, 0, 10, 0, 0.244767,0.171522) , 
1.17878, 0, 7, 0, 0.330811,0.0953491) , 
0.697055, 0, 14, 0, 0.522184,-0.0474707)    );
  // itree = 502
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655509,-0.000113198) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.394935,-1.79396e-05) , 
-1.3619, 0, 5, 0, 0.636612,-0.131341) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.578579,-0.000206611) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165881,0.00268499) , 
2.22045, 0, 7, 0, 0.261693,0.13633) , 
0.0890491, 0, 15, 0, 0.586712,-0.0957151) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666091,-0.000115213) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.368711,-1.59446e-06) , 
0.902262, 0, 7, 0, 0.475444,-0.0214766) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.39662,2.67858e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165646,0.000337557) , 
0.360445, 0, 15, 0, 0.222264,0.208909) , 
0.441337, 1, 8, 0, 0.296674,0.141198) , 
0.30858, 1, 16, 0, 0.473868,-0.00354089)    );
  // itree = 503
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71185,-0.000125547) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.411108,0.000130228) , 
0.604875, 0, 14, 0, 0.670223,-0.168893) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.611755,-0.000250696) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.144263,0.000397062) , 
1.60963, 0, 3, 0, 0.20273,0.1854) , 
0.0882706, 0, 15, 0, 0.608818,-0.122357) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682342,-5.27016e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.362412,-1.70865e-05) , 
0.104697, 1, 8, 0, 0.434669,0.0284388) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.629103,-7.74927e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.178013,0.000220225) , 
2.39341, 0, 11, 0, 0.210141,0.224776) , 
0.732349, 1, 8, 0, 0.319562,0.129093) , 
0.740007, 0, 7, 0, 0.501228,-0.0288287)    );
  // itree = 504
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702454,-0.00011116) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.444443,-1.69336e-05) , 
-1.11424, 0, 5, 0, 0.676575,-0.166015) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.861517,-0.000175684) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.398814,8.05091e-05) , 
0.236077, 0, 6, 0, 0.422794,0.0393595) , 
0.353236, 1, 16, 0, 0.602334,-0.105935) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.725834,-0.000272965) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.288922,0.000247497) , 
0.0161998, 1, 0, 0, 0.605414,-0.142714) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.37855,7.83779e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164095,0.000761608) , 
2.09412, 0, 10, 0, 0.217493,0.173474) , 
2.22015, 0, 7, 0, 0.258934,0.139696) , 
0.116155, 0, 15, 0, 0.518403,-0.0458996)    );
  // itree = 505
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764667,-0.000135056) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.585504,-0.000105494) , 
1.06516, 1, 17, 0, 0.650973,-0.140174) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.5105,-2.13936e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.242382,0.00151108) , 
2.08945, 1, 18, 0, 0.451292,0.0153538) , 
0.309615, 1, 16, 0, 0.572404,-0.0789782) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.863224,-0.000159068) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.422514,-5.82723e-05) , 
0.954665, 0, 2, 0, 0.536578,-0.0877792) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.488414,0.000136751) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.147053,0.000609007) , 
0.340788, 0, 12, 0, 0.200224,0.186307) , 
1.70912, 0, 7, 0, 0.276318,0.124299) , 
0.116084, 0, 15, 0, 0.493411,-0.0247456)    );
  // itree = 506
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.790944,-0.000129674) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.625268,-0.000110595) , 
1.33725, 1, 17, 0, 0.708789,-0.189816) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.671361,-0.000160603) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.250627,0.000259709) , 
0.891653, 0, 14, 0, 0.417046,0.0842057) , 
0.304019, 0, 2, 0, 0.668689,-0.152151) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.534102,-1.8106e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.350238,9.08978e-05) , 
0.598434, 1, 10, 0, 0.393802,0.0416778) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694336,-0.000339141) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0706773,0.00120865) , 
0.313092, 1, 14, 0, 0.0956783,0.264874) , 
0.493781, 0, 14, 0, 0.348384,0.0756805) , 
0.697055, 0, 14, 0, 0.514164,-0.0422381)    );
  // itree = 507
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.617235,-8.68066e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22724,0.000596607) , 
0.498726, 0, 14, 0, 0.599933,-0.115665) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.914154,-0.00750854) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0958798,0.00210346) , 
0.454961, 0, 12, 0, 0.103735,0.252499) , 
0.0614996, 0, 15, 0, 0.570063,-0.0935028) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.586881,-6.92861e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125009,0.00121084) , 
2.3871, 1, 18, 0, 0.522823,-0.0466032) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.684334,-6.21662e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192342,0.000155213) , 
1.41254, 0, 3, 0, 0.214815,0.210189) , 
0.0449691, 1, 0, 0, 0.359356,0.0896824) , 
0.491214, 0, 7, 0, 0.51438,-0.0450926)    );
  // itree = 508
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.680195,-0.000107421) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.445447,-1.66097e-05) , 
0.136883, 0, 15, 0, 0.642138,-0.135591) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.572814,-5.38166e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363517,-1.92885e-05) , 
1.64283, 0, 18, 0, 0.48007,0.0197809) , 
0.443213, 0, 2, 0, 0.587563,-0.0832708) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.884888,-0.000126493) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.351477,0.000117481) , 
2.14435, 1, 10, 0, 0.530296,-0.114641) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.405889,0.000127642) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.14825,0.000549246) , 
1.16889, 0, 7, 0, 0.226116,0.171461) , 
2.09443, 0, 10, 0, 0.323216,0.0801324) , 
0.636325, 0, 14, 0, 0.490957,-0.0235547)    );
  // itree = 509
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701548,-0.00010558) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.515727,-5.88796e-05) , 
0.457977, 0, 2, 0, 0.649475,-0.146527) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.801872,-0.000460231) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.193011,0.000609409) , 
2.10482, 0, 3, 0, 0.248877,0.138271) , 
0.088705, 0, 15, 0, 0.59743,-0.109526) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.681812,-0.000120392) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.197453,0.00018268) , 
0.59621, 0, 14, 0, 0.513973,-0.0634387) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.684352,-0.000136761) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245653,0.000323138) , 
0.242955, 0, 6, 0, 0.266736,0.163643) , 
0.865799, 0, 7, 0, 0.345943,0.0908936) , 
0.351159, 1, 16, 0, 0.516177,-0.0447729)    );
  // itree = 510
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738592,-8.69071e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.55093,-0.000100959) , 
0.491113, 0, 1, 0, 0.638139,-0.156572) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.816644,-0.000116314) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.15778,0.000296913) , 
0.831171, 0, 14, 0, 0.303661,0.131467) , 
0.482651, 1, 16, 0, 0.592767,-0.117499) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.587814,-0.000100304) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34442,8.79407e-05) , 
0.336718, 1, 16, 0, 0.503959,-0.0149958) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.505341,-0.000112298) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128618,0.00118581) , 
2.82665, 0, 8, 0, 0.171942,0.217829) , 
0.115669, 0, 15, 0, 0.41216,0.0493781) , 
0.732839, 1, 8, 0, 0.498052,-0.0299844)    );
  // itree = 511
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.698172,-0.000143254) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.467259,-5.92589e-05) , 
0.443213, 0, 2, 0, 0.627546,-0.128246) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.483526,-1.62898e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26986,4.94712e-05) , 
1.12737, 1, 8, 0, 0.412893,0.043837) , 
0.0226771, 1, 0, 0, 0.508167,-0.0325427) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.982791,-0.000264739) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.356033,0.00100006) , 
0.702876, 0, 16, 0, 0.660456,-0.171786) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.698683,-0.000188021) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.112943,0.000308459) , 
2.54083, 0, 11, 0, 0.140204,0.27221) , 
0.399821, 0, 12, 0, 0.179686,0.238515) , 
0.486108, 1, 16, 0, 0.460724,0.00660679)    );
  // itree = 512
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.871435,-0.000179258) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.656663,-0.000116669) , 
0.59838, 1, 10, 0, 0.740758,-0.227871) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575676,-0.000180771) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180572,0.000241348) , 
0.199541, 1, 16, 0, 0.41644,0.0102691) , 
0.117053, 0, 15, 0, 0.657197,-0.166514) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.596518,-6.77843e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.275981,0.000595409) , 
0.116038, 0, 15, 0, 0.521957,-0.0555802) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.537573,-5.97002e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.30133,4.96029e-05) , 
0.106625, 1, 12, 0, 0.338157,0.111092) , 
-0.123801, 0, 5, 0, 0.450989,0.00877444) , 
1.0538, 1, 17, 0, 0.50232,-0.0348601)    );
  // itree = 513
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.809339,-0.000205481) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.102485,3.4522e-05) , 
0.102338, 1, 0, 0, 0.788767,-0.271943) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.493695,-0.000189118) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.170425,0.000542958) , 
0.612247, 0, 13, 0, 0.327122,0.0861016) , 
0.0865603, 0, 15, 0, 0.725424,-0.222815) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.557293,-5.60947e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127948,0.000644318) , 
0.323282, 1, 0, 0, 0.535563,-0.0465014) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.380341,0.000327604) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113877,0.00052326) , 
1.37226, 1, 17, 0, 0.230581,0.15754) , 
0.117052, 0, 15, 0, 0.457985,0.00540056) , 
1.72669, 0, 7, 0, 0.511354,-0.0401414)    );
  // itree = 514
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749078,-0.000131879) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.50245,-0.000105309) , 
1.34632, 1, 10, 0, 0.670524,-0.169924) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.715469,-0.000869405) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165628,0.000245683) , 
0.365434, 0, 12, 0, 0.222251,0.168135) , 
0.0882706, 0, 15, 0, 0.60602,-0.121279) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71654,-0.000141871) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221954,0.000370382) , 
0.0543254, 1, 6, 0, 0.632429,-0.168878) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.433795,-7.02478e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.218313,0.000215445) , 
0.894926, 1, 11, 0, 0.334849,0.117598) , 
2.3935, 0, 10, 0, 0.382857,0.071382) , 
0.969354, 0, 7, 0, 0.490076,-0.0211827)    );
  // itree = 515
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701252,-0.000119714) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.326285,-5.06022e-05) , 
0.317766, 0, 2, 0, 0.665614,-0.154341) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.543158,-0.000117987) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.266438,0.000490348) , 
0.598658, 1, 10, 0, 0.35231,0.0642058) , 
0.11583, 0, 15, 0, 0.593114,-0.103768) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.638658,-0.000101149) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.139173,0.000113293) , 
0.115519, 1, 8, 0, 0.507224,-0.0518891) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.665779,-0.000146621) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225528,0.000209527) , 
2.74203, 0, 8, 0, 0.253073,0.17829) , 
0.220625, 1, 8, 0, 0.296304,0.139137) , 
0.308647, 1, 16, 0, 0.480895,-0.0119301)    );
  // itree = 516
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719284,-0.000131422) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.538705,-4.66991e-05) , 
0.979718, 1, 8, 0, 0.645003,-0.137032) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653618,-9.27834e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279041,3.99427e-05) , 
1.23596, 0, 8, 0, 0.409351,0.08216) , 
0.0327394, 1, 6, 0, 0.602933,-0.0979006) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701263,-0.000138352) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0992297,0.00190334) , 
0.667758, 1, 13, 0, 0.556988,-0.141369) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.371278,0.000147263) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171883,0.000324721) , 
0.312726, 1, 16, 0, 0.248904,0.151863) , 
2.40796, 0, 8, 0, 0.289667,0.113065) , 
0.63667, 0, 14, 0, 0.491769,-0.0230382)    );
  // itree = 517
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722291,-0.00011218) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.398468,1.74178e-05) , 
0.120632, 1, 0, 0, 0.68752,-0.176088) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.573614,-0.000117347) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.312811,0.000162925) , 
0.773223, 0, 14, 0, 0.486762,0.0135359) , 
0.449444, 0, 2, 0, 0.621393,-0.113628) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728901,-0.00017017) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0642557,0.0107151) , 
0.932784, 1, 2, 0, 0.538462,-0.13675) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.841916,-0.000229076) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220981,0.000259904) , 
0.79045, 0, 16, 0, 0.234308,0.166887) , 
0.819337, 0, 1, 0, 0.25912,0.142116) , 
0.642024, 0, 14, 0, 0.497429,-0.0261164)    );
  // itree = 518
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.801839,-0.000117761) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.607154,-0.000126327) , 
-0.12381, 0, 5, 0, 0.741197,-0.219339) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.591659,-8.31476e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.258825,0.000393799) , 
0.306729, 1, 16, 0, 0.51585,-0.0101845) , 
0.29624, 0, 1, 0, 0.681202,-0.163654) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.937985,-0.000161182) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.533379,-0.000163828) , 
0.19077, 0, 15, 0, 0.663641,-0.197388) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.420638,6.2383e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.242377,0.000256311) , 
1.79523, 0, 10, 0, 0.311651,0.108202) , 
2.12182, 0, 7, 0, 0.340277,0.083349) , 
0.697055, 0, 14, 0, 0.520254,-0.0470462)    );
  // itree = 519
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663164,-0.000116115) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.398728,0.000104975) , 
0.112698, 1, 0, 0, 0.630056,-0.118721) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.747662,-0.000737694) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.30863,9.85685e-05) , 
1.93711, 0, 7, 0, 0.354502,0.143166) , 
0.250555, 0, 1, 0, 0.58652,-0.0773444) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.73385,-0.000144546) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.235579,0.000558799) , 
0.57479, 0, 14, 0, 0.605494,-0.16358) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.422895,-3.30696e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.196691,0.000471309) , 
2.09435, 0, 10, 0, 0.25653,0.147685) , 
1.63636, 0, 7, 0, 0.320156,0.0909331) , 
0.66057, 0, 14, 0, 0.472974,-0.00561106)    );
  // itree = 520
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688722,-0.000146497) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.547502,-5.18023e-05) , 
0.740149, 0, 7, 0, 0.637265,-0.121427) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.868937,-0.000539025) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.237121,0.000113892) , 
0.756258, 1, 17, 0, 0.379598,0.129802) , 
-1.11435, 0, 5, 0, 0.610836,-0.0956583) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.553532,-5.46917e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.136027,0.000331313) , 
0.532695, 0, 14, 0, 0.481138,-0.0453919) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.418528,0.000171127) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160347,0.00026878) , 
0.299262, 1, 11, 0, 0.195279,0.213537) , 
0.935054, 0, 7, 0, 0.326755,0.0944467) , 
0.695491, 0, 14, 0, 0.462712,0.00346518)    );
  // itree = 521
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687586,-0.000117568) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.455866,-4.57706e-05) , 
0.357681, 0, 2, 0, 0.639752,-0.122477) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.871497,-0.000383476) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.357427,5.0941e-05) , 
3.50487, 0, 8, 0, 0.391143,0.0316029) , 
0.676721, 0, 14, 0, 0.553742,-0.0691708) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.68749,-0.000148942) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0896959,0.00772612) , 
0.55619, 1, 1, 0, 0.56721,-0.115711) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.66212,-0.000115067) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.200626,0.000280155) , 
0.804857, 0, 14, 0, 0.260886,0.169766) , 
1.0841, 0, 7, 0, 0.329175,0.106124) , 
0.344675, 1, 16, 0, 0.474383,-0.00722368)    );
  // itree = 522
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683869,-0.000106155) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129556,0.00553121) , 
0.536112, 1, 16, 0, 0.666876,-0.157459) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.629373,-0.000172443) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.427583,4.10754e-05) , 
1.23514, 1, 17, 0, 0.493683,0.00548426) , 
0.452698, 0, 2, 0, 0.607507,-0.101603) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.625557,-8.27788e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.272268,0.000191549) , 
0.618014, 1, 2, 0, 0.351262,0.0542029) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.480468,-0.000153491) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0954521,0.00156673) , 
2.64875, 0, 8, 0, 0.143018,0.246417) , 
0.462315, 0, 1, 0, 0.276519,0.123192) , 
0.636319, 0, 14, 0, 0.496158,-0.0259783)    );
  // itree = 523
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.763476,-0.000120224) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.25393,-7.52105e-05) , 
2.99188, 1, 9, 0, 0.746286,-0.223957) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.564388,-7.97699e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180526,5.34167e-05) , 
0.0925242, 1, 0, 0, 0.537623,-0.0294554) , 
0.452697, 0, 2, 0, 0.668751,-0.151683) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686642,-0.000120017) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.188576,0.00616453) , 
0.619048, 1, 5, 0, 0.591975,-0.151025) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.458451,-1.61362e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.262149,0.00020784) , 
2.09438, 0, 10, 0, 0.31584,0.101872) , 
0.32486, 0, 12, 0, 0.356105,0.0649961) , 
0.697055, 0, 14, 0, 0.512736,-0.0435576)    );
  // itree = 524
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647613,-7.27455e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.101019,0.00105625) , 
0.572696, 1, 16, 0, 0.625936,-0.150097) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.483864,-6.76303e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0823891,0.00081145) , 
0.57566, 0, 14, 0, 0.400079,0.0631342) , 
-0.371429, 0, 5, 0, 0.563876,-0.0915067) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.726527,-0.000212592) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.310509,-4.17686e-05) , 
1.46356, 1, 17, 0, 0.422205,0.0568364) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634783,-0.00176029) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0863441,0.000377982) , 
1.83598, 0, 17, 0, 0.0926638,0.318298) , 
0.226905, 0, 15, 0, 0.234859,0.205479) , 
0.24562, 0, 7, 0, 0.527368,-0.0585531)    );
  // itree = 525
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.697661,-0.000113307) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.16162,0.00701458) , 
0.535398, 1, 16, 0, 0.682775,-0.169465) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663108,-0.000165004) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.396309,0.000155052) , 
0.863853, 0, 14, 0, 0.496814,0.00598022) , 
0.296399, 0, 1, 0, 0.633978,-0.123428) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670577,-9.07483e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.351933,0.000122172) , 
0.598606, 1, 10, 0, 0.452579,-0.0304082) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.524798,-1.96464e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127516,0.000436571) , 
1.34674, 1, 9, 0, 0.198102,0.19904) , 
0.35644, 1, 16, 0, 0.337851,0.0730356) , 
0.66057, 0, 14, 0, 0.513529,-0.0435167)    );
  // itree = 526
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.743475,-0.000140693) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192159,-3.5741e-05) , 
0.7684, 1, 1, 0, 0.73684,-0.222016) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.630524,-7.81674e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.316454,0.000107435) , 
0.315904, 1, 16, 0, 0.515747,-0.0164925) , 
0.981101, 0, 7, 0, 0.638155,-0.130281) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.830957,-0.000192991) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.338915,0.000485775) , 
0.0883524, 1, 12, 0, 0.529217,-0.110239) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.492239,-4.99595e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192294,0.000319633) , 
1.94451, 0, 11, 0, 0.233269,0.163084) , 
-1.1141, 1, 4, 0, 0.293144,0.107786) , 
0.637994, 0, 14, 0, 0.524885,-0.052121)    );
  // itree = 527
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.836111,-0.000237427) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.579834,-8.754e-05) , 
0.614281, 1, 17, 0, 0.600245,-0.0924916) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.629235,0.000219198) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.230468,-3.64335e-05) , 
0.234783, 1, 8, 0, 0.344949,0.144381) , 
0.245608, 0, 7, 0, 0.573472,-0.0676508) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.429235,5.85563e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165701,0.000535452) , 
1.79599, 1, 18, 0, 0.339222,0.0707601) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.381015,0.000137887) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0851155,0.000382382) , 
0.200767, 1, 8, 0, 0.125103,0.262749) , 
0.400154, 1, 16, 0, 0.254716,0.146532) , 
0.642489, 0, 14, 0, 0.456632,0.0108579)    );
  // itree = 528
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.681869,-0.000110657) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.372861,0.000216348) , 
0.257618, 0, 2, 0, 0.661088,-0.147381) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.565673,-0.000104381) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.135639,0.00279594) , 
0.977139, 0, 7, 0, 0.430371,0.0400323) , 
0.137823, 0, 15, 0, 0.621834,-0.115496) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.538394,5.34589e-07) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128391,3.3836e-05) , 
0.872287, 1, 2, 0, 0.46249,-0.0447122) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.439476,-1.26195e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.17306,0.000406732) , 
1.34636, 1, 9, 0, 0.218743,0.17601) , 
1.05903, 1, 17, 0, 0.270895,0.128785) , 
0.637994, 0, 14, 0, 0.504319,-0.0336958)    );
  // itree = 529
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728865,-0.000103191) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.546057,-0.000100131) , 
1.19679, 1, 11, 0, 0.679654,-0.173701) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.619098,-4.59325e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.308214,0.000222635) , 
-0.804272, 1, 4, 0, 0.409582,0.049507) , 
0.398399, 1, 16, 0, 0.62035,-0.124688) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718966,-0.000125328) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.362211,0.000112848) , 
-1.11462, 1, 4, 0, 0.456672,-0.0267716) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.434714,-9.74365e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0961301,0.00338241) , 
0.122475, 1, 16, 0, 0.144865,0.217161) , 
0.0795843, 0, 15, 0, 0.315788,0.0834444) , 
0.115713, 0, 15, 0, 0.544805,-0.0730612)    );
  // itree = 530
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.684393,-0.00012483) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.432866,-8.96407e-05) , 
0.153062, 0, 15, 0, 0.647775,-0.129483) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.551788,-4.40705e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.263903,0.000163438) , 
-0.370995, 1, 3, 0, 0.391543,0.107421) , 
0.311803, 0, 2, 0, 0.603368,-0.0884256) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.54299,1.03034e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.133342,0.000591897) , 
0.0892637, 0, 15, 0, 0.456473,-0.0243562) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.651234,-0.000140767) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.223519,0.000205771) , 
2.36111, 0, 17, 0, 0.274013,0.140506) , 
0.371431, 0, 5, 0, 0.357647,0.0649382) , 
0.697055, 0, 14, 0, 0.470528,-0.00551519)    );
  // itree = 531
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.73657,-0.00014698) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.410806,-5.66023e-05) , 
0.570016, 0, 13, 0, 0.694822,-0.185925) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615219,-6.30017e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.349431,0.000285187) , 
0.969795, 1, 8, 0, 0.527173,-0.0344944) , 
0.986676, 0, 7, 0, 0.612329,-0.111413) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.883895,-0.000353153) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.336496,8.67973e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0890466,0.000700527) , 
0.0905465, 0, 15, 0, 0.238314,0.154537) , 
0.312429, 1, 14, 0, 0.249798,0.142537) , 
0.607801, 0, 14, 0, 0.518517,-0.0456981)    );
  // itree = 532
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.783797,-0.000117958) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.50465,-7.69252e-05) , 
1.64539, 1, 10, 0, 0.744523,-0.221207) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695724,-0.000188569) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.434495,-2.3351e-05) , 
0.853546, 0, 14, 0, 0.543504,-0.0321361) , 
0.489611, 0, 2, 0, 0.653348,-0.135452) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.572752,-4.13111e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322079,0.000212178) , 
0.35022, 1, 16, 0, 0.47298,-0.0404354) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.397858,8.52093e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.188285,0.000198259) , 
1.47751, 0, 8, 0, 0.2698,0.147587) , 
1.5054, 1, 17, 0, 0.379566,0.0460098) , 
0.706898, 0, 14, 0, 0.506819,-0.0383329)    );
  // itree = 533
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722362,-0.000124171) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.489727,2.04805e-05) , 
0.681874, 0, 14, 0, 0.653849,-0.151262) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.805451,-0.000244821) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.278707,0.000208972) , 
2.72511, 0, 7, 0, 0.334434,0.0718704) , 
0.115669, 0, 15, 0, 0.575642,-0.0966296) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.517337,-6.69954e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.155915,0.000260141) , 
0.303992, 0, 2, 0, 0.456655,0.0367133) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.426934,0.000278423) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0964511,0.000561815) , 
2.55275, 0, 8, 0, 0.116154,0.273416) , 
0.654112, 0, 14, 0, 0.302153,0.144117) , 
0.49335, 0, 7, 0, 0.507585,-0.0367205)    );
  // itree = 534
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.818535,-0.000221304) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.055125,0.0274475) , 
0.585401, 0, 14, 0, 0.809541,-0.286853) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.592604,-6.03191e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.344238,1.04674e-05) , 
0.177507, 0, 12, 0, 0.550813,-0.0608409) , 
1.8889, 0, 7, 0, 0.587799,-0.0931498) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.844243,-0.000294406) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191022,-3.90942e-07) , 
0.0154835, 1, 6, 0, 0.701405,-0.233638) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622036,-0.000187896) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186,0.000495333) , 
-1.85667, 1, 3, 0, 0.208369,0.17851) , 
0.619207, 1, 17, 0, 0.247302,0.145964) , 
0.115759, 0, 15, 0, 0.503956,-0.0342709)    );
  // itree = 535
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742516,-0.000102502) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.58155,-0.000109525) , 
0.590655, 0, 2, 0, 0.668013,-0.158559) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.843153,-0.00044248) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.356516,0.000226027) , 
3.66186, 0, 8, 0, 0.380643,0.0353173) , 
0.116155, 0, 15, 0, 0.600297,-0.112874) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.649086,-0.000149129) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.20702,0.000147499) , 
0.59468, 0, 14, 0, 0.487113,-0.0393816) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.269596,0.000199753) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0596875,0.000402846) , 
0.0753687, 1, 6, 0, 0.211287,0.213126) , 
0.950727, 0, 7, 0, 0.28814,0.142769) , 
0.352592, 1, 16, 0, 0.507207,-0.0366367)    );
  // itree = 536
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.768599,-0.000134044) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.47132,-0.000156145) , 
0.419728, 0, 3, 0, 0.729583,-0.216659) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639986,-8.60998e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.464428,-3.15244e-05) , 
0.747975, 1, 11, 0, 0.546597,-0.0483635) , 
1.06516, 1, 17, 0, 0.597402,-0.0950902) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647598,-7.12389e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.298943,0.000250186) , 
1.19604, 1, 18, 0, 0.477447,-0.0653867) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.44659,-0.00010517) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.155753,0.00041136) , 
1.68027, 0, 7, 0, 0.191432,0.19815) , 
1.49573, 0, 11, 0, 0.294506,0.103177) , 
0.62241, 0, 14, 0, 0.502149,-0.0327401)    );
  // itree = 537
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672029,-0.000111348) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157489,0.00169551) , 
0.552163, 1, 16, 0, 0.65712,-0.142811) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.654529,-0.000176145) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292371,0.000127722) , 
1.17953, 1, 17, 0, 0.410244,0.090467) , 
0.364173, 0, 2, 0, 0.605301,-0.093846) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.432331,-4.12409e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0631672,0.000263543) , 
0.527094, 0, 14, 0, 0.343751,0.0739083) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.52368,9.42834e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.142474,0.000409509) , 
0.149647, 1, 10, 0, 0.16804,0.226918) , 
0.926226, 0, 7, 0, 0.240406,0.163901) , 
0.659385, 0, 14, 0, 0.461913,0.00743743)    );
  // itree = 538
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.858238,-0.000198096) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.608596,-0.000240426) , 
-0.866785, 0, 4, 0, 0.813182,-0.290282) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.61867,-7.75125e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171639,0.000686414) , 
0.114544, 0, 15, 0, 0.584337,-0.0804516) , 
1.96486, 0, 7, 0, 0.628014,-0.1205) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.485344,4.17713e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236487,0.000216322) , 
-0.123506, 1, 3, 0, 0.371393,0.0336812) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.802073,-0.00026379) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.101637,0.000799293) , 
0.792438, 0, 16, 0, 0.125819,0.258492) , 
0.467545, 0, 7, 0, 0.298978,0.0999737) , 
0.63667, 0, 14, 0, 0.51786,-0.0466898)    );
  // itree = 539
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731794,-0.000200331) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.532611,-4.91829e-05) , 
0.113316, 1, 16, 0, 0.579947,-0.0904699) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.521384,-0.00117696) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0650377,0.00214576) , 
0.778855, 0, 14, 0, 0.0817665,0.270046) , 
0.061902, 0, 15, 0, 0.549681,-0.068567) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71796,-0.00016516) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0419057,0.000232902) , 
0.598023, 0, 14, 0, 0.473907,-0.0392024) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682547,-0.000114197) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175534,0.000381475) , 
0.236077, 0, 6, 0, 0.205449,0.21764) , 
0.949853, 0, 7, 0, 0.267833,0.157955) , 
0.394988, 1, 16, 0, 0.479759,-0.0123704)    );
  // itree = 540
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.693149,-0.000114041) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.40435,-6.70746e-06) , 
0.554763, 0, 13, 0, 0.661015,-0.147455) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.602567,-0.000145209) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.244796,0.000226562) , 
0.186331, 1, 16, 0, 0.433608,0.0684013) , 
0.361452, 0, 2, 0, 0.611479,-0.100434) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.883872,-0.000153726) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.242374,-5.5986e-05) , 
0.409845, 0, 16, 0, 0.641247,-0.232388) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.715543,-0.000190334) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.264696,0.000232419) , 
0.0944228, 1, 16, 0, 0.289926,0.115305) , 
2.67741, 0, 8, 0, 0.324985,0.0806077) , 
0.659385, 0, 14, 0, 0.49273,-0.025394)    );
  // itree = 541
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.757903,-0.000203162) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.394972,0.000201828) , 
0.248839, 1, 16, 0, 0.72682,-0.22384) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666749,-0.000420624) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0716362,0.000165409) , 
0.797326, 0, 14, 0, 0.107825,0.332942) , 
0.360452, 0, 13, 0, 0.705704,-0.204846) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709472,-9.4072e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.476775,-2.80771e-05) , 
1.06996, 1, 17, 0, 0.522997,-0.035953) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.358946,0.000144624) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0969848,0.00140458) , 
0.730278, 1, 8, 0, 0.215946,0.166585) , 
0.116247, 0, 15, 0, 0.443838,0.0162619) , 
1.71695, 0, 7, 0, 0.49613,-0.0278912)    );
  // itree = 542
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.847462,-0.000114909) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.624352,-0.000126915) , 
0.678837, 0, 2, 0, 0.708908,-0.186683) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.70813,-0.000121969) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363267,6.10454e-05) , 
0.225285, 0, 15, 0, 0.447857,-0.00331) , 
0.709667, 0, 14, 0, 0.608411,-0.116089) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.786886,-0.00022434) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0805982,0.0229026) , 
2.2308, 1, 18, 0, 0.716436,-0.25907) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.465696,-2.82311e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249878,0.00024478) , 
0.950661, 0, 7, 0, 0.312125,0.119207) , 
2.3934, 0, 11, 0, 0.342076,0.0911845) , 
0.309515, 1, 16, 0, 0.505505,-0.0360035)    );
  // itree = 543
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.775619,-0.000117981) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0414735,-4.44296e-05) , 
0.298433, 1, 0, 0, 0.766218,-0.243003) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.613919,-0.000142807) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.351146,8.4228e-05) , 
0.772318, 0, 14, 0, 0.551802,-0.0398757) , 
0.536008, 0, 2, 0, 0.65676,-0.139307) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688621,-0.000154001) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204203,0.000262059) , 
0.0883777, 0, 15, 0, 0.56012,-0.100343) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.460112,-2.62346e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249051,0.000329433) , 
2.09434, 0, 10, 0, 0.302646,0.117268) , 
1.65027, 0, 7, 0, 0.34625,0.0804139) , 
0.705803, 0, 14, 0, 0.494755,-0.02467)    );
  // itree = 544
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731731,-0.000124337) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.274332,-4.0169e-05) , 
0.105844, 1, 0, 0, 0.6905,-0.167991) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.635081,-0.000177549) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.406828,8.47155e-05) , 
0.866883, 0, 14, 0, 0.491502,0.0149748) , 
0.308627, 0, 1, 0, 0.620414,-0.103551) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706839,-0.000151201) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0887521,3.12957e-05) , 
0.428254, 0, 7, 0, 0.631374,-0.183617) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.597523,-8.56983e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.280067,0.00015336) , 
2.70877, 0, 8, 0, 0.305946,0.113164) , 
1.04741, 1, 9, 0, 0.346559,0.076127) , 
0.706903, 0, 14, 0, 0.468621,-0.003959)    );
  // itree = 545
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714401,-0.000125782) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.247794,5.16333e-05) , 
0.476454, 0, 13, 0, 0.700122,-0.178371) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.85905,-0.000484255) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.446212,2.14948e-05) , 
2.17924, 0, 7, 0, 0.49292,0.0139997) , 
0.29624, 0, 1, 0, 0.637775,-0.120486) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735815,-0.00013693) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.400405,1.5397e-05) , 
0.644462, 0, 14, 0, 0.521572,-0.0817029) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.403532,1.701e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.177078,0.000503214) , 
0.338044, 1, 16, 0, 0.297563,0.123115) , 
2.09437, 0, 10, 0, 0.359264,0.0667006) , 
0.706903, 0, 14, 0, 0.487286,-0.0193426)    );
  // itree = 546
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776548,-0.000150941) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.54577,-3.0784e-05) , 
0.897051, 1, 11, 0, 0.684231,-0.170534) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.650263,-0.000101681) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.414803,-3.70943e-05) , 
0.404329, 0, 1, 0, 0.533418,-0.0270471) , 
0.738757, 1, 8, 0, 0.610056,-0.0999623) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722239,-0.000117236) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.263076,0.00147538) , 
0.371437, 0, 5, 0, 0.555745,-0.105268) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.312854,7.06657e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0899115,0.00121102) , 
0.467735, 0, 7, 0, 0.24795,0.146993) , 
0.22529, 0, 15, 0, 0.309841,0.0962684) , 
0.658743, 0, 14, 0, 0.487746,-0.0200162)    );
  // itree = 547
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.781808,-0.000171177) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.424089,-9.76336e-05) , 
0.559507, 0, 13, 0, 0.752541,-0.224133) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.603122,-5.95194e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.304111,-6.82369e-05) , 
0.590981, 1, 2, 0, 0.558819,-0.0513226) , 
1.23337, 0, 7, 0, 0.644874,-0.128088) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.513534,-1.8167e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.295402,0.000181807) , 
0.144936, 0, 15, 0, 0.389757,0.0376141) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.499781,-0.000131068) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.109365,0.000509849) , 
0.242781, 0, 6, 0, 0.147638,0.242059) , 
0.227398, 1, 0, 0, 0.347508,0.0732887) , 
0.695771, 0, 14, 0, 0.494873,-0.026507)    );
  // itree = 548
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707653,-0.000143927) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.526129,-5.94645e-05) , 
1.2117, 0, 7, 0, 0.61234,-0.113711) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.486326,4.90591e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134112,0.000863032) , 
0.0774308, 0, 15, 0, 0.24001,0.138867) , 
0.0890491, 0, 15, 0, 0.559972,-0.0781863) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682272,-7.37685e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.348197,0.000143372) , 
0.652214, 0, 7, 0, 0.497822,-0.00762098) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.599626,-0.000104441) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.115124,0.000367058) , 
0.233886, 0, 6, 0, 0.152746,0.237017) , 
0.654112, 0, 14, 0, 0.291905,0.138362) , 
0.390647, 1, 16, 0, 0.489531,-0.0212833)    );
  // itree = 549
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729723,-0.00012162) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.435355,0.000103653) , 
0.11931, 1, 0, 0, 0.701119,-0.182933) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.957233,-0.000210439) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.357932,7.75892e-05) , 
0.706638, 0, 16, 0, 0.400075,0.0993148) , 
0.357687, 0, 2, 0, 0.645066,-0.130379) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.603673,-5.24963e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.081852,0.000309453) , 
0.567115, 0, 2, 0, 0.519629,-0.0890657) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.339987,0.000105538) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159,0.000545911) , 
0.463124, 0, 7, 0, 0.283105,0.121164) , 
2.2437, 0, 10, 0, 0.335554,0.0745454) , 
0.671644, 0, 14, 0, 0.51263,-0.0426946)    );
  // itree = 550
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.860248,-0.000243434) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.693905,-0.000152458) , 
0.0867854, 1, 16, 0, 0.77441,-0.251939) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.616723,-8.40906e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.397934,1.61579e-05) , 
0.97485, 1, 8, 0, 0.541934,-0.0404699) , 
1.70909, 0, 7, 0, 0.600374,-0.0936294) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.506002,-9.46309e-07) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.103766,0.00264049) , 
0.0898002, 0, 15, 0, 0.386468,0.0193907) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.794431,-0.000272266) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180672,0.000313944) , 
0.790587, 0, 16, 0, 0.192106,0.199045) , 
-0.370669, 1, 4, 0, 0.275465,0.121994) , 
0.636677, 0, 14, 0, 0.488797,-0.0195822)    );
  // itree = 551
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.857684,-0.00019362) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.642969,-0.000178908) , 
0.399592, 0, 1, 0, 0.764647,-0.2423) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.611296,-7.5642e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198222,0.000526322) , 
0.139617, 0, 15, 0, 0.555891,-0.0545912) , 
0.124074, 1, 16, 0, 0.616897,-0.109447) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.477761,-7.21639e-07) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0703195,0.000799271) , 
0.493703, 0, 14, 0, 0.393911,0.0124763) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.369709,0.000118644) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129428,0.000663059) , 
0.286087, 1, 16, 0, 0.220916,0.16952) , 
1.79517, 0, 10, 0, 0.291364,0.105568) , 
0.635983, 0, 14, 0, 0.505578,-0.0359204)    );
  // itree = 552
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.791607,-0.000170603) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.571307,-0.000111101) , 
0.24441, 1, 8, 0, 0.616081,-0.108787) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.646984,-6.43864e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.333822,4.53775e-06) , 
0.448772, 1, 10, 0, 0.412604,0.0750765) , 
0.736831, 0, 7, 0, 0.542949,-0.0427041) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.994852,-0.00025626) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0584426,0.0450008) , 
2.84282, 0, 9, 0, 0.912078,-0.462353) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.428093,6.89909e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.18756,0.000262184) , 
-0.98362, 1, 3, 0, 0.231434,0.159226) , 
-2.10368, 1, 3, 0, 0.256575,0.136267) , 
0.624085, 0, 14, 0, 0.446402,0.0176332)    );
  // itree = 553
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.657125,-0.000144891) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.434451,-3.02853e-05) , 
0.0787331, 1, 0, 0, 0.619977,-0.121008) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.475089,3.47736e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118491,0.000651962) , 
-1.11346, 1, 5, 0, 0.219949,0.161861) , 
0.57423, 0, 14, 0, 0.556485,-0.0761113) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575641,-6.4463e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.346771,9.4352e-06) , 
0.724687, 0, 2, 0, 0.444688,0.00984561) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.364034,0.000119734) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0943109,0.00123952) , 
0.228059, 0, 15, 0, 0.214282,0.212448) , 
0.967077, 1, 8, 0, 0.356213,0.0876443) , 
0.727016, 0, 7, 0, 0.474676,-0.00921895)    );
  // itree = 554
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719899,-0.000112056) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.505567,-8.17141e-05) , 
0.452693, 0, 2, 0, 0.667043,-0.161132) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702356,-0.000232411) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167397,0.00148231) , 
0.0888669, 1, 16, 0, 0.303407,0.0926793) , 
0.0895322, 0, 15, 0, 0.619335,-0.127833) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.737187,-0.000100868) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259364,0.000266896) , 
0.577429, 0, 7, 0, 0.603895,-0.1574) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.361861,0.000107185) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184179,0.000197992) , 
2.69377, 0, 9, 0, 0.242133,0.185613) , 
2.24396, 0, 10, 0, 0.328691,0.103541) , 
0.309582, 1, 16, 0, 0.509988,-0.0407843)    );
  // itree = 555
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.825927,-0.000211447) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.633587,-8.49167e-05) , 
0.0815484, 1, 16, 0, 0.667955,-0.168003) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769638,-0.000164337) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.197088,0.000476136) , 
0.0844961, 0, 15, 0, 0.302946,0.0824697) , 
0.0883546, 0, 15, 0, 0.615613,-0.132085) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.582782,-4.90994e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318441,-3.91255e-06) , 
-0.121828, 1, 3, 0, 0.468963,0.0153439) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.886994,-0.000231232) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0886246,0.000473892) , 
0.202446, 1, 13, 0, 0.127339,0.255473) , 
0.146898, 0, 15, 0, 0.352851,0.0969596) , 
0.740018, 0, 7, 0, 0.517395,-0.0464703)    );
  // itree = 556
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.715068,-0.000123809) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.275798,-7.02744e-06) , 
0.596616, 0, 13, 0, 0.692186,-0.175716) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.737633,-0.000267836) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.462353,-4.89717e-05) , 
1.79514, 0, 11, 0, 0.521587,-0.00764121) , 
0.976719, 1, 8, 0, 0.637042,-0.121388) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634102,-7.67926e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.331995,0.000123125) , 
0.171075, 0, 15, 0, 0.43778,-0.00152666) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.375291,9.45727e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160399,0.000312753) , 
0.441243, 1, 8, 0, 0.219451,0.181413) , 
0.356714, 1, 16, 0, 0.34225,0.0785187) , 
0.695771, 0, 14, 0, 0.487728,-0.0201342)    );
  // itree = 557
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.740946,-0.000126468) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.562304,-6.69094e-05) , 
0.29624, 0, 1, 0, 0.689594,-0.169748) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.90377,-0.000271495) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.205969,9.86683e-05) , 
0.120405, 0, 6, 0, 0.262687,0.234982) , 
0.246682, 0, 7, 0, 0.659005,-0.140748) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.680787,-0.000171334) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.061251,0.000293251) , 
0.598804, 0, 18, 0, 0.618473,-0.172955) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.427658,-1.22312e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.19869,0.000213203) , 
0.916145, 0, 7, 0, 0.303823,0.117243) , 
1.04721, 1, 9, 0, 0.342433,0.0816334) , 
0.710214, 0, 14, 0, 0.490656,-0.0224882)    );
  // itree = 558
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.832812,-0.000248681) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.33232,0.00155968) , 
0.0195431, 1, 0, 0, 0.822419,-0.30839) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727138,-0.000197345) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.284352,0.00116722) , 
0.17263, 0, 15, 0, 0.462699,0.000977482) , 
0.0241424, 1, 0, 0, 0.750612,-0.246635) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.551285,-6.16043e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143015,0.000839629) , 
0.0893172, 0, 15, 0, 0.49351,-0.0276469) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.397166,-5.82472e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.132173,0.00119505) , 
0.83703, 0, 7, 0, 0.264545,0.174039) , 
2.23871, 1, 18, 0, 0.452572,0.00841357) , 
1.95319, 0, 7, 0, 0.498058,-0.0305107)    );
  // itree = 559
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694653,-0.000112563) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.420556,2.14768e-05) , 
0.136201, 0, 15, 0, 0.65572,-0.146399) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769016,-0.0005173) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306035,9.76438e-05) , 
1.92953, 0, 7, 0, 0.360235,0.136263) , 
0.350397, 0, 2, 0, 0.606814,-0.0996157) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.86755,-0.000370928) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0553948,-2.9381e-05) , 
0.689553, 1, 8, 0, 0.665614,-0.235999) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.650424,-0.000118782) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.219931,0.000286482) , 
0.22439, 1, 13, 0, 0.240084,0.154299) , 
0.598413, 1, 9, 0, 0.266111,0.130426) , 
0.638, 0, 14, 0, 0.492692,-0.0225608)    );
  // itree = 560
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.648936,-0.000108827) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.319473,2.43156e-05) , 
0.278295, 0, 2, 0, 0.62661,-0.120705) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714582,-0.000183304) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.331786,0.00019245) , 
1.25518, 0, 4, 0, 0.380339,0.0752666) , 
0.398399, 1, 16, 0, 0.567659,-0.0737945) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719477,-0.000196269) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.286381,0.000162941) , 
0.7492, 1, 10, 0, 0.462844,-0.0350115) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.407539,-2.00209e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.119848,0.000498699) , 
1.79491, 0, 11, 0, 0.168645,0.208607) , 
1.05464, 1, 17, 0, 0.250566,0.14077) , 
0.116474, 0, 15, 0, 0.486154,-0.0186431)    );
  // itree = 561
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.923185,-0.000169159) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.761803,-0.000223918) , 
0.107142, 1, 12, 0, 0.79873,-0.29028) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776018,-0.000186138) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.260047,9.85978e-05) , 
0.961402, 0, 2, 0, 0.41593,0.049438) , 
0.533983, 0, 13, 0, 0.743044,-0.240861) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691491,-0.000102889) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.459188,-4.1392e-05) , 
0.536008, 0, 2, 0, 0.558903,-0.0457888) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.459282,-2.63892e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220678,0.000323803) , 
2.09445, 0, 10, 0, 0.285113,0.129476) , 
0.701186, 0, 14, 0, 0.403038,0.053987) , 
1.72669, 0, 7, 0, 0.48295,-0.0153114)    );
  // itree = 562
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74966,-0.000118584) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.527827,-7.89951e-05) , 
0.455829, 0, 2, 0, 0.668312,-0.146401) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.540604,-3.8967e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234757,0.0001947) , 
1.79008, 1, 18, 0, 0.445543,0.00629492) , 
0.698403, 0, 14, 0, 0.581349,-0.0867925) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.518207,-7.06674e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.177858,8.10874e-05) , 
0.165968, 0, 12, 0, 0.415456,4.64669e-06) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.30689,7.64743e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0717306,0.00227647) , 
0.450523, 1, 13, 0, 0.132492,0.233112) , 
0.981187, 0, 7, 0, 0.273941,0.116586) , 
0.115897, 0, 15, 0, 0.501517,-0.0339766)    );
  // itree = 563
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.813626,-0.000215339) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.632962,-8.15715e-05) , 
1.8967, 0, 7, 0, 0.670866,-0.160535) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.632111,-0.000108646) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.323095,0.000170751) , 
0.922807, 0, 7, 0, 0.417006,0.0442322) , 
0.347942, 1, 16, 0, 0.5961,-0.100228) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.859882,-0.000262779) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204187,0.00763073) , 
0.107819, 1, 16, 0, 0.791715,-0.306891) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.369563,7.07676e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.105552,0.00212834) , 
0.0849188, 0, 15, 0, 0.226399,0.157278) , 
2.70179, 0, 7, 0, 0.273691,0.118448) , 
0.115669, 0, 15, 0, 0.514654,-0.044987)    );
  // itree = 564
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731177,-0.000194303) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.42025,-0.000115104) , 
0.484393, 0, 7, 0, 0.703059,-0.18303) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.552637,-5.65091e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.376357,2.78442e-05) , 
0.902951, 1, 8, 0, 0.472914,0.000113768) , 
0.133065, 1, 16, 0, 0.524928,-0.0412779) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.743371,-0.000538612) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253359,-8.30806e-05) , 
2.84235, 0, 9, 0, 0.455691,-0.0394708) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.340101,9.56365e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0848744,0.000992287) , 
0.245001, 1, 8, 0, 0.123262,0.232057) , 
0.759798, 1, 17, 0, 0.159568,0.202402) , 
0.0898002, 0, 15, 0, 0.464721,-0.00112194)    );
  // itree = 565
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.802443,-0.000119805) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.587989,-0.000118772) , 
1.63301, 1, 17, 0, 0.737664,-0.217123) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69307,-0.000209439) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.420135,0.000116373) , 
0.115342, 1, 16, 0, 0.51885,-0.0112769) , 
0.29624, 0, 1, 0, 0.678337,-0.161312) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.978593,-0.000219306) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.566307,-0.00010886) , 
0.9566, 0, 2, 0, 0.821364,-0.359214) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.536645,2.16482e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.274602,0.000139838) , 
1.11412, 0, 3, 0, 0.320086,0.0981277) , 
-1.85658, 1, 3, 0, 0.351754,0.0692359) , 
0.695771, 0, 14, 0, 0.52417,-0.0524795)    );
  // itree = 566
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.762389,-0.000135727) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.417331,-3.40302e-05) , 
0.102604, 1, 0, 0, 0.7263,-0.20269) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738952,-0.000425569) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.414072,6.21394e-05) , 
1.71695, 0, 7, 0, 0.469461,0.0364775) , 
0.295627, 0, 1, 0, 0.659043,-0.140061) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.945031,-0.00062158) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.215273,0.0186482) , 
0.523122, 1, 2, 0, 0.867631,-0.433352) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.42579,-3.37891e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256766,0.000194309) , 
2.0942, 0, 10, 0, 0.300168,0.114199) , 
3.69377, 0, 8, 0, 0.310895,0.103849) , 
0.697055, 0, 14, 0, 0.491464,-0.0226566)    );
  // itree = 567
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742558,-0.00011766) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.578239,-0.000103201) , 
-0.123775, 0, 5, 0, 0.68585,-0.180437) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.476739,1.46028e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.124871,-1.8405e-05) , 
0.168493, 0, 12, 0, 0.429308,0.0477521) , 
0.708369, 0, 7, 0, 0.592944,-0.0977986) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.929978,-0.000234558) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.434944,-3.52915e-05) , 
-2.10425, 1, 3, 0, 0.535469,-0.08998) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71371,-0.000360204) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.140294,0.000532557) , 
3.58759, 0, 8, 0, 0.14882,0.224055) , 
1.6819, 0, 7, 0, 0.244877,0.146038) , 
0.115592, 0, 15, 0, 0.507998,-0.0382905)    );
  // itree = 568
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738582,-0.000113972) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.409026,6.14263e-05) , 
0.394814, 1, 16, 0, 0.706547,-0.187658) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645513,-0.000145981) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.36907,0.000138066) , 
0.823491, 0, 14, 0, 0.521816,-0.0139916) , 
0.452697, 0, 2, 0, 0.640124,-0.125214) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.969893,-0.000246095) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0303758,0.00915956) , 
0.903367, 0, 5, 0, 0.77068,-0.358107) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.441767,-1.40508e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.255467,0.000184193) , 
1.49616, 1, 9, 0, 0.29116,0.114089) , 
0.242955, 0, 6, 0, 0.311713,0.0938497) , 
0.673088, 0, 14, 0, 0.500624,-0.0321613)    );
  // itree = 569
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.820771,-0.000241459) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.638684,-0.000113386) , 
1.19683, 1, 9, 0, 0.671009,-0.156037) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.578014,-5.15034e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.350568,1.35789e-05) , 
-0.123373, 1, 4, 0, 0.472874,0.0199559) , 
0.736852, 0, 7, 0, 0.600957,-0.0938131) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.734365,-0.000190088) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.107232,0.0066222) , 
0.565181, 1, 2, 0, 0.566241,-0.164697) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670361,-0.000110137) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.228313,0.000278461) , 
0.233886, 0, 6, 0, 0.246342,0.148325) , 
2.67741, 0, 8, 0, 0.272806,0.12243) , 
0.641941, 0, 14, 0, 0.483453,-0.0163808)    );
  // itree = 570
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.90753,-0.000151376) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.48942,-3.98144e-05) , 
0.675271, 0, 14, 0, 0.777598,-0.288398) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.600193,-0.000101888) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.218129,0.0007086) , 
0.0889957, 0, 15, 0, 0.547453,-0.0568632) , 
0.908231, 0, 2, 0, 0.590223,-0.0998922) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.763798,-0.000153444) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.395321,-4.91956e-05) , 
0.473861, 1, 13, 0, 0.584289,-0.156319) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.47541,-3.48862e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.16938,0.000341491) , 
0.419714, 1, 8, 0, 0.261106,0.167029) , 
2.39351, 0, 10, 0, 0.315823,0.112284) , 
0.30858, 1, 16, 0, 0.485417,-0.0188523)    );
  // itree = 571
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74474,-0.000126707) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.470696,-1.68493e-05) , 
0.106645, 1, 0, 0, 0.71888,-0.197407) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727514,-0.000179033) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.228977,0.000247123) , 
0.927236, 0, 13, 0, 0.396645,0.103237) , 
0.304019, 0, 2, 0, 0.672139,-0.153797) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.797597,-0.000111819) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.365707,7.32757e-05) , 
0.0967609, 0, 6, 0, 0.389955,0.0383983) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.523704,-0.000122683) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0930374,0.000514223) , 
0.240283, 0, 6, 0, 0.134371,0.254991) , 
0.224891, 1, 0, 0, 0.347386,0.074473) , 
0.706203, 0, 14, 0, 0.505294,-0.0365212)    );
  // itree = 572
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.83064,-0.000162662) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.622659,-0.000242446) , 
0.683898, 0, 2, 0, 0.76358,-0.258444) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.636057,-8.53436e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.230645,0.000637146) , 
0.118166, 0, 15, 0, 0.558001,-0.0704984) , 
1.70906, 0, 7, 0, 0.62916,-0.135555) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65706,-0.000151775) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.268021,0.000194837) , 
0.63222, 0, 14, 0, 0.469165,-0.0200907) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.392339,-3.90998e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160935,0.000320227) , 
2.09435, 0, 10, 0, 0.216951,0.203381) , 
1.08407, 0, 7, 0, 0.272549,0.154119) , 
0.308606, 1, 16, 0, 0.501932,-0.0322076)    );
  // itree = 573
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735899,-0.000122799) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.153192,0.000292808) , 
0.571096, 0, 14, 0, 0.711553,-0.206334) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.62345,-8.0872e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.365156,4.23978e-05) , 
0.985066, 1, 8, 0, 0.533158,-0.0441975) , 
1.21425, 1, 17, 0, 0.594372,-0.0998331) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72159,-0.000322999) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225782,0.011381) , 
0.457098, 0, 2, 0, 0.624676,-0.200872) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.313714,5.9813e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.114631,0.000372628) , 
0.748079, 1, 10, 0, 0.1791,0.203839) , 
2.39289, 0, 11, 0, 0.210333,0.17547) , 
0.116474, 0, 15, 0, 0.505377,-0.0360357)    );
  // itree = 574
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672716,-0.000104773) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.439651,-8.88459e-05) , 
-1.11436, 0, 3, 0, 0.648257,-0.141066) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.529004,-2.73127e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.156505,0.00066711) , 
0.669376, 0, 13, 0, 0.391432,0.0699434) , 
0.398399, 1, 16, 0, 0.589238,-0.0925757) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736849,-0.000157436) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.32176,-0.000109323) , 
0.544264, 0, 1, 0, 0.579627,-0.112048) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.506981,5.89554e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.140874,0.000297496) , 
0.870577, 0, 13, 0, 0.176649,0.218085) , 
1.717, 0, 7, 0, 0.275554,0.137058) , 
0.143499, 0, 15, 0, 0.481232,-0.0135093)    );
  // itree = 575
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.857746,-0.000225024) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256179,-0.000323033) , 
1.60912, 1, 4, 0, 0.83017,-0.304221) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.567596,-6.56242e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.375482,3.80577e-06) , 
-0.866697, 0, 5, 0, 0.534076,-0.0440498) , 
2.13379, 0, 7, 0, 0.563921,-0.0702739) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.951298,-0.00063622) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.440546,-0.000140938) , 
-1.60954, 1, 4, 0, 0.687129,-0.205016) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.836422,-0.000297473) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.169622,0.000337185) , 
0.326903, 1, 14, 0, 0.184705,0.19148) , 
0.776565, 0, 14, 0, 0.223028,0.161236) , 
0.11583, 0, 15, 0, 0.477747,-0.0117506)    );
  // itree = 576
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69238,-0.000120689) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.406047,0.000307422) , 
0.110562, 1, 0, 0, 0.662503,-0.146819) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64282,-0.00013074) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.264631,0.000369237) , 
1.21987, 0, 7, 0, 0.494075,0.0158957) , 
1.22459, 1, 8, 0, 0.618703,-0.104505) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.862298,-0.000260944) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.330549,6.92795e-05) , 
0.0182272, 1, 0, 0, 0.692185,-0.239828) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.445436,-1.4696e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192888,0.000231142) , 
2.39358, 0, 10, 0, 0.232544,0.170114) , 
2.10387, 0, 7, 0, 0.271076,0.135748) , 
0.676433, 0, 14, 0, 0.468378,-0.000611548)    );
  // itree = 577
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.789174,-0.000208652) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.240856,0.000923662) , 
0.570909, 0, 14, 0, 0.758902,-0.253659) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.48829,-0.000218567) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.106778,-9.66506e-05) , 
0.901279, 1, 10, 0, 0.174794,0.283874) , 
0.722244, 1, 1, 0, 0.733986,-0.23073) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.621447,-7.28978e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.329396,2.59987e-05) , 
0.0427469, 1, 6, 0, 0.58714,-0.0802459) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.539156,5.04789e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.232518,0.000270882) , 
0.299158, 1, 11, 0, 0.279509,0.116793) , 
0.656956, 0, 14, 0, 0.456427,0.00347635) , 
1.71926, 0, 7, 0, 0.517033,-0.0476637)    );
  // itree = 578
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692253,-0.000114631) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.41502,1.92226e-05) , 
0.132238, 0, 15, 0, 0.659372,-0.143151) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720132,-8.92168e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199961,3.18092e-05) , 
0.523514, 0, 1, 0, 0.319833,0.176593) , 
0.244151, 0, 7, 0, 0.629651,-0.115163) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.782914,-0.000136325) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.401611,3.65838e-05) , 
2.14442, 1, 10, 0, 0.483826,-0.0591435) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.507645,-5.73828e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.182278,0.000327464) , 
0.498759, 1, 10, 0, 0.263706,0.139742) , 
2.0944, 0, 10, 0, 0.326163,0.08331) , 
0.673093, 0, 14, 0, 0.497522,-0.0287541)    );
  // itree = 579
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.88362,-0.00020272) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.625803,-0.00017992) , 
0.312211, 1, 12, 0, 0.804225,-0.272672) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.574734,-8.42735e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.385706,2.93005e-05) , 
1.79276, 1, 18, 0, 0.512764,-0.0249617) , 
0.0899332, 1, 16, 0, 0.556576,-0.0621971) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.820205,-0.000268529) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.137613,-0.000207109) , 
0.536989, 0, 13, 0, 0.736462,-0.256548) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.601895,-0.00015759) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.131681,0.000461123) , 
0.766587, 0, 14, 0, 0.163031,0.217487) , 
2.71348, 0, 7, 0, 0.20157,0.185628) , 
0.116155, 0, 15, 0, 0.466895,0.000408105)    );
  // itree = 580
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.725081,-0.000136478) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.403184,5.67384e-05) , 
0.0259865, 1, 0, 0, 0.672933,-0.177351) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558229,-0.000105129) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226255,0.000180402) , 
0.490585, 0, 7, 0, 0.479844,0.0154628) , 
0.443213, 0, 2, 0, 0.612204,-0.116709) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.529595,-4.29813e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0490326,0.000410372) , 
0.305371, 1, 0, 0, 0.462993,-0.0210077) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.447855,-5.1846e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.1582,0.000267467) , 
0.224297, 0, 15, 0, 0.25062,0.177171) , 
1.34644, 0, 11, 0, 0.344692,0.0893868) , 
0.0454795, 1, 0, 0, 0.492352,-0.0243725)    );
  // itree = 581
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.638506,-8.74546e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.486834,-1.20049e-05) , 
0.308635, 0, 1, 0, 0.599031,-0.103046) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.596041,-0.000260634) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.108243,0.00465721) , 
0.406858, 0, 12, 0, 0.169102,0.271179) , 
0.564117, 1, 16, 0, 0.582739,-0.0888652) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76555,-0.000192909) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0436663,0.000504311) , 
0.542689, 0, 14, 0, 0.518538,-0.128647) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.441975,-3.72343e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.1256,0.000290639) , 
1.34646, 1, 9, 0, 0.187295,0.192405) , 
0.299083, 1, 11, 0, 0.235937,0.14526) , 
0.585308, 0, 14, 0, 0.502521,-0.0347099)    );
  // itree = 582
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.855837,-0.000197842) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.406599,-0.000345514) , 
0.448796, 0, 10, 0, 0.841102,-0.310136) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760217,-0.000255775) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.46314,-4.48925e-05) , 
0.0991871, 1, 16, 0, 0.591163,-0.119695) , 
0.185573, 0, 15, 0, 0.72206,-0.219432) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612729,-7.19226e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378826,-3.42521e-05) , 
1.94282, 1, 18, 0, 0.554398,-0.0483608) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764322,-0.00011256) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184564,0.000258916) , 
0.236077, 0, 6, 0, 0.215316,0.177491) , 
0.655174, 0, 14, 0, 0.415453,0.0441862) , 
1.71929, 0, 7, 0, 0.482925,-0.0138256)    );
  // itree = 583
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677737,-0.000112646) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.438913,-1.61698e-05) , 
0.39488, 1, 16, 0, 0.639317,-0.124423) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741317,-0.000247257) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.241794,0.000450873) , 
0.0734538, 1, 16, 0, 0.369771,0.100244) , 
0.135618, 0, 15, 0, 0.599338,-0.0911005) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.583111,-8.79911e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.313114,0.000217988) , 
1.79401, 0, 9, 0, 0.427624,-0.0179438) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.375362,7.62541e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.137082,0.000589606) , 
1.24126, 1, 17, 0, 0.214958,0.172997) , 
2.09438, 0, 10, 0, 0.274016,0.119972) , 
0.643027, 0, 14, 0, 0.483337,-0.0158371)    );
  // itree = 584
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735973,-9.66612e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.601978,-0.000126311) , 
0.632967, 0, 2, 0, 0.673717,-0.157986) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74694,-0.000217208) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.316492,0.000144293) , 
0.0748378, 1, 16, 0, 0.419404,0.0813103) , 
0.357687, 0, 2, 0, 0.622318,-0.109622) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.859862,-0.000260299) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0914739,0.000661093) , 
1.94375, 1, 10, 0, 0.765654,-0.327816) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.410175,2.35851e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.213491,0.00030011) , 
1.94478, 0, 10, 0, 0.278692,0.119928) , 
-1.85609, 1, 3, 0, 0.30173,0.0987449) , 
0.66057, 0, 14, 0, 0.493206,-0.0257056)    );
  // itree = 585
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.748118,-0.000121031) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.27497,6.0658e-05) , 
0.420584, 1, 16, 0, 0.72113,-0.197813) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.549549,-0.000115654) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26692,0.000361442) , 
0.244352, 0, 2, 0, 0.498032,0.00961842) , 
0.443206, 0, 2, 0, 0.641394,-0.123676) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.754578,-0.000126597) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.32101,0.00120701) , 
0.364404, 0, 3, 0, 0.581269,-0.161096) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.466296,-3.01628e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.260711,0.000197695) , 
2.09438, 0, 10, 0, 0.319133,0.0956308) , 
2.99198, 0, 9, 0, 0.351969,0.0634726) , 
0.697055, 0, 14, 0, 0.495669,-0.0294475)    );
  // itree = 586
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.685206,-0.000118775) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.419729,-3.11502e-05) , 
0.0427469, 1, 6, 0, 0.647689,-0.132781) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.623928,-0.000120497) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270111,0.000432415) , 
0.848217, 0, 14, 0, 0.457853,0.0426768) , 
0.357678, 0, 2, 0, 0.606802,-0.0949902) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.530379,-2.84253e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227166,0.000605542) , 
0.124793, 1, 3, 0, 0.429054,-0.0223119) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.862021,-0.000601315) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204418,0.000264089) , 
3.65104, 0, 8, 0, 0.219715,0.172964) , 
1.34611, 0, 11, 0, 0.307198,0.0913578) , 
0.66057, 0, 14, 0, 0.48373,-0.0184417)    );
  // itree = 587
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674803,-0.00011331) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.441245,4.59993e-05) , 
0.311808, 0, 2, 0, 0.641352,-0.125612) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712345,-0.000120725) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.323676,4.65013e-05) , 
0.485647, 0, 15, 0, 0.380346,0.104628) , 
0.394442, 1, 16, 0, 0.604519,-0.0931209) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72982,-0.000204691) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.053467,3.33474e-05) , 
0.755346, 0, 18, 0, 0.651319,-0.21992) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.420106,5.94254e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234004,0.000235331) , 
0.748443, 1, 10, 0, 0.289421,0.109285) , 
2.39309, 0, 11, 0, 0.312192,0.0885716) , 
0.659385, 0, 14, 0, 0.483816,-0.0180992)    );
  // itree = 588
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749508,-0.000160513) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.605605,-0.000102732) , 
1.11405, 0, 4, 0, 0.644195,-0.156299) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.0193324,0.0156485) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0138943,0.0167255) , 
0.0765247, 0, 15, 0, 0.0154174,0.325545) , 
0.469419, 0, 14, 0, 0.628182,-0.144027) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.465578,-1.83442e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.203187,0.000170027) , 
0.311796, 0, 2, 0, 0.440295,0.0135446) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.413694,0.000571812) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0724544,0.00101781) , 
0.280051, 0, 15, 0, 0.205659,0.226309) , 
2.24062, 1, 18, 0, 0.396522,0.053237) , 
0.986685, 0, 7, 0, 0.50877,-0.0423449)    );
  // itree = 589
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.770765,-0.000116722) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.472101,-0.000158112) , 
0.866577, 1, 4, 0, 0.739182,-0.216241) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.807397,-0.00023824) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.42788,2.54103e-05) , 
0.0730132, 1, 16, 0, 0.52669,-0.0162533) , 
0.30581, 0, 1, 0, 0.673666,-0.154581) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64045,-0.000100699) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.384547,8.48589e-06) , 
0.240118, 0, 12, 0, 0.487437,-0.0500366) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.43276,5.88027e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187697,0.000347289) , 
0.22784, 0, 15, 0, 0.25518,0.152357) , 
0.943114, 0, 7, 0, 0.359151,0.0617548) , 
0.706203, 0, 14, 0, 0.511487,-0.0430275)    );
  // itree = 590
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674785,-0.000111449) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.487435,-1.78778e-05) , 
0.296649, 0, 1, 0, 0.61996,-0.109988) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666521,-1.27876e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191748,9.45422e-05) , 
0.148585, 0, 6, 0, 0.269031,0.210669) , 
0.120632, 1, 0, 0, 0.58757,-0.0803922) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.951807,-0.000319055) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292114,0.000100333) , 
0.300926, 1, 10, 0, 0.594595,-0.171555) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.383811,-1.30211e-08) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157943,0.00044796) , 
2.09435, 0, 10, 0, 0.220013,0.166068) , 
0.766533, 1, 17, 0, 0.250455,0.13863) , 
0.636914, 0, 14, 0, 0.470991,-0.00465148)    );
  // itree = 591
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.796264,-0.000202668) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.456729,-0.000140662) , 
0.0869044, 0, 15, 0, 0.747951,-0.240491) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.349324,-0.000192942) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.043465,0.00574287) , 
0.0724273, 1, 0, 0, 0.181329,0.240635) , 
0.249652, 1, 16, 0, 0.705161,-0.204157) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.580277,-5.46999e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.248451,-3.92151e-05) , 
-0.865829, 0, 3, 0, 0.550077,-0.0850423) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615156,-5.05254e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.304331,7.29073e-05) , 
0.362845, 0, 15, 0, 0.382152,0.0703945) , 
0.492556, 1, 8, 0, 0.436946,0.0196754) , 
1.72668, 0, 7, 0, 0.489853,-0.0244771)    );
  // itree = 592
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.872582,-0.000139801) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.553969,-3.7947e-05) , 
0.697986, 0, 14, 0, 0.74348,-0.250123) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71319,-0.000718148) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.323783,-8.17827e-05) , 
2.02327, 0, 7, 0, 0.428599,0.0652677) , 
0.359956, 0, 1, 0, 0.697033,-0.2036) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.753614,-0.000169207) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.176094,-3.83235e-05) , 
-0.86859, 0, 3, 0, 0.694958,-0.237942) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.531973,-5.66819e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.219018,0.000355294) , 
0.640535, 0, 14, 0, 0.416069,0.0430679) , 
2.54316, 0, 10, 0, 0.451393,0.00747484) , 
1.0558, 1, 17, 0, 0.519093,-0.0506985)    );
  // itree = 593
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.656937,-0.000104566) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.364669,0.000109016) , 
0.119003, 0, 15, 0, 0.579065,-0.102413) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.46112,-3.97721e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180706,0.000476907) , 
0.233149, 0, 2, 0, 0.423646,0.0593627) , 
0.449433, 0, 2, 0, 0.532421,-0.0538616) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.970985,-0.000240198) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0449069,-8.79995e-05) , 
-0.936095, 1, 4, 0, 0.790439,-0.351065) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.451046,4.78147e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.106837,0.00022733) , 
0.252631, 0, 15, 0, 0.214579,0.198603) , 
0.29979, 1, 10, 0, 0.246356,0.168271) , 
0.134934, 1, 0, 0, 0.472523,-0.00734979)    );
  // itree = 594
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695921,-0.000113222) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.440768,-2.35102e-05) , 
0.135478, 0, 15, 0, 0.654889,-0.138598) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.50716,-8.50225e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.260862,0.000239674) , 
1.62088, 0, 7, 0, 0.331476,0.0732335) , 
0.649545, 0, 14, 0, 0.573704,-0.0854232) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.619453,-0.000136042) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.31977,8.60544e-05) , 
1.25288, 1, 17, 0, 0.395625,0.0820813) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.554761,-0.00014379) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0856126,0.000331105) , 
0.242955, 0, 6, 0, 0.110702,0.266243) , 
0.628815, 0, 14, 0, 0.241011,0.182017) , 
0.353661, 1, 16, 0, 0.475604,-0.00656415)    );
  // itree = 595
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749162,-0.000119785) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.426207,-0.000117202) , 
-1.11392, 0, 3, 0, 0.725903,-0.202317) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655152,-0.000161156) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234536,0.00016934) , 
0.144467, 1, 16, 0, 0.43553,0.0674478) , 
0.350403, 0, 2, 0, 0.667747,-0.148289) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.8641,-0.000157325) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.463777,-1.84449e-05) , 
2.80393, 0, 8, 0, 0.517477,-0.0901962) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.627,-0.000136609) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.295315,0.000298824) , 
1.82763, 0, 7, 0, 0.336935,0.0774598) , 
2.09436, 0, 10, 0, 0.384644,0.0331567) , 
0.695491, 0, 14, 0, 0.527602,-0.0584678)    );
  // itree = 596
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720246,-0.000115026) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199266,2.47072e-05) , 
0.689253, 0, 14, 0, 0.69565,-0.174952) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.58052,-0.000120145) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.287479,0.000148649) , 
0.763902, 0, 14, 0, 0.506389,-0.000692966) , 
0.342058, 0, 1, 0, 0.624715,-0.109639) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674649,-0.000162727) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.377964,0.000160904) , 
1.64534, 0, 11, 0, 0.45307,-0.0387648) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.62854,-2.76142e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187344,0.000208194) , 
0.448836, 1, 10, 0, 0.266899,0.136798) , 
1.46045, 0, 8, 0, 0.340621,0.0672769) , 
0.675418, 0, 14, 0, 0.497135,-0.0301907)    );
  // itree = 597
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.785253,-0.000126263) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.278791,-0.00012065) , 
0.709277, 0, 14, 0, 0.75856,-0.231646) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.656035,-0.000140653) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.429199,-5.1872e-05) , 
0.822148, 0, 14, 0, 0.546455,-0.0332627) , 
0.398611, 0, 1, 0, 0.65036,-0.130447) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.94958,-0.000227165) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0207477,0.0153548) , 
0.360873, 0, 13, 0, 0.787644,-0.374346) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.451356,8.81806e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.284739,0.000125741) , 
0.897749, 1, 10, 0, 0.343368,0.073491) , 
0.242955, 0, 6, 0, 0.360372,0.0563513) , 
0.697055, 0, 14, 0, 0.501356,-0.0344646)    );
  // itree = 598
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.815679,-0.000217526) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.605476,-0.000106253) , 
1.97336, 0, 7, 0, 0.656696,-0.134007) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.530255,-0.000137677) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.130158,0.00177216) , 
0.866876, 0, 14, 0, 0.351897,0.148661) , 
0.304019, 0, 2, 0, 0.60945,-0.0901919) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.954179,-0.000622686) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0642277,0.00298785) , 
0.584401, 1, 14, 0, 0.833115,-0.399653) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.6763,-0.000219705) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.31294,0.000135619) , 
0.0926971, 1, 16, 0, 0.33402,0.0852626) , 
3.65103, 0, 8, 0, 0.34445,0.0751291) , 
0.706898, 0, 14, 0, 0.462544,0.00145582)    );
  // itree = 599
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.786211,-0.000120517) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.508243,-8.89424e-05) , 
1.19531, 1, 11, 0, 0.737283,-0.213333) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72427,-0.000201832) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.455558,2.30452e-05) , 
0.877749, 0, 14, 0, 0.533875,-0.0242051) , 
0.454203, 0, 2, 0, 0.660349,-0.1418) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.846475,-0.000202949) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.412589,-5.84885e-06) , 
0.466288, 0, 15, 0, 0.444211,-0.0123993) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.349672,0.000123037) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.100156,0.00055161) , 
0.119838, 0, 15, 0, 0.250097,0.157196) , 
0.943065, 0, 7, 0, 0.333533,0.084299) , 
0.697055, 0, 14, 0, 0.50041,-0.0311505)    );
  // itree = 600
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.937033,-7.50477e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.661863,-0.000126439) , 
0.461311, 0, 15, 0, 0.675346,-0.15264) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.485269,-6.30268e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.123541,0.000481602) , 
0.238057, 0, 1, 0, 0.427909,0.0702226) , 
0.315376, 1, 16, 0, 0.625173,-0.107449) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.649345,-0.000111166) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.354851,0.000104523) , 
0.355306, 1, 13, 0, 0.384679,0.0378009) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683503,-5.32468e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0771228,0.000204704) , 
-1.60053, 1, 5, 0, 0.119719,0.273152) , 
0.0809851, 1, 6, 0, 0.337467,0.0797371) , 
0.697055, 0, 14, 0, 0.477501,-0.0113712)    );
  // itree = 601
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.748105,-0.000166276) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.54584,-7.12869e-05) , 
0.969384, 0, 7, 0, 0.665647,-0.153026) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.481921,-0.000107254) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184245,0.000307203) , 
1.20726, 1, 17, 0, 0.312409,0.0984838) , 
0.115588, 0, 15, 0, 0.606611,-0.110992) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.58557,-8.02166e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129586,-6.8105e-05) , 
0.183018, 1, 12, 0, 0.494041,-0.0664887) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575579,-9.26697e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212049,0.000101153) , 
0.763916, 0, 14, 0, 0.268674,0.158753) , 
2.39368, 0, 10, 0, 0.301163,0.126283) , 
0.0461831, 1, 0, 0, 0.473592,-0.00766135)    );
  // itree = 602
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706289,-0.000109291) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.474356,-2.35564e-05) , 
0.330642, 1, 16, 0, 0.653797,-0.142491) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.476546,-7.18331e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175805,0.000204191) , 
0.245643, 0, 7, 0, 0.432513,0.0637679) , 
0.31206, 0, 1, 0, 0.594485,-0.0872063) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.908828,-0.00022503) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0852245,0.0127666) , 
0.696002, 1, 13, 0, 0.591994,-0.186803) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703806,-0.000313435) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249511,0.000227737) , 
3.13029, 0, 8, 0, 0.268145,0.124415) , 
0.149937, 1, 10, 0, 0.290111,0.103305) , 
0.636677, 0, 14, 0, 0.48859,-0.0209256)    );
  // itree = 603
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.699114,-0.000125057) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.429477,4.33529e-05) , 
0.311803, 0, 2, 0, 0.667757,-0.171294) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.805088,-0.000294697) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.450815,-6.3103e-05) , 
0.885035, 0, 14, 0, 0.504991,-0.0180086) , 
0.123799, 0, 3, 0, 0.594822,-0.102607) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.620664,-7.36735e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.311239,0.000201216) , 
1.34833, 1, 18, 0, 0.471887,-0.0368833) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.643165,-7.10864e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225217,9.55678e-05) , 
0.760163, 0, 14, 0, 0.305734,0.126514) , 
1.79489, 0, 10, 0, 0.374629,0.0587618) , 
0.0454795, 1, 0, 0, 0.490372,-0.0260608)    );
  // itree = 604
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.795589,-0.000143428) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.544077,-2.69893e-06) , 
1.19711, 1, 11, 0, 0.73755,-0.216834) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.624518,-0.000131087) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.353177,-2.51321e-06) , 
1.22076, 0, 7, 0, 0.49773,0.0180436) , 
0.73476, 1, 8, 0, 0.639361,-0.120668) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.831108,-0.000161791) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.133496,1.92203e-05) , 
0.0637947, 0, 15, 0, 0.744975,-0.263857) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709388,-0.000139058) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292881,0.00014991) , 
0.242955, 0, 6, 0, 0.306104,0.104906) , 
2.35756, 0, 7, 0, 0.333594,0.0818078) , 
0.697055, 0, 14, 0, 0.485762,-0.0189568)    );
  // itree = 605
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.84527,-0.000224844) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.634551,-0.000101895) , 
2.18112, 0, 7, 0, 0.674499,-0.164872) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.802537,-0.00022194) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184059,0.000916517) , 
2.71372, 0, 7, 0, 0.307027,0.0907807) , 
0.0896043, 0, 15, 0, 0.628118,-0.132604) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670727,-8.22408e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.298919,0.00036033) , 
0.289831, 0, 1, 0, 0.575313,-0.0679432) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.504352,5.31843e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.200055,0.000187938) , 
0.323389, 1, 13, 0, 0.234761,0.169756) , 
0.705213, 0, 14, 0, 0.348975,0.0900369) , 
0.263495, 1, 16, 0, 0.495421,-0.0267662)    );
  // itree = 606
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.851809,-0.000175992) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.605452,-0.000248626) , 
0.635116, 0, 2, 0, 0.74682,-0.22869) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.652373,-9.3986e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34166,6.24836e-05) , 
0.171046, 0, 15, 0, 0.523784,-0.046259) , 
0.0971132, 1, 16, 0, 0.574502,-0.0877439) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.842681,-0.00017694) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.176094,8.55777e-05) , 
-0.29606, 1, 3, 0, 0.685321,-0.220362) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.491447,5.78506e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251851,0.000182077) , 
0.299356, 1, 10, 0, 0.276336,0.145416) , 
2.24383, 0, 11, 0, 0.314288,0.111474) , 
0.338617, 1, 16, 0, 0.484623,-0.0189333)    );
  // itree = 607
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.732007,-0.000108324) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.457657,-4.93742e-05) , 
0.368607, 0, 2, 0, 0.692113,-0.181941) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.68061,-0.000111635) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.277511,0.000230484) , 
0.774801, 0, 14, 0, 0.389764,0.0734098) , 
0.399054, 1, 16, 0, 0.629005,-0.128643) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.690343,-0.000182217) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.189085,0.0026602) , 
0.277763, 1, 16, 0, 0.581757,-0.137806) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.515472,-5.0327e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.215495,0.000211949) , 
2.39356, 0, 10, 0, 0.269232,0.131157) , 
-1.36198, 1, 4, 0, 0.319926,0.0875288) , 
0.143039, 0, 15, 0, 0.524162,-0.0553146)    );
  // itree = 608
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.810418,-0.000120568) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.438554,-7.35383e-05) , 
0.587875, 0, 13, 0, 0.778394,-0.251406) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.693553,-0.000206129) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.455803,5.4171e-08) , 
2.24394, 0, 11, 0, 0.493489,0.0144239) , 
0.443194, 0, 2, 0, 0.685261,-0.164509) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.754841,-7.83008e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.386988,7.52993e-05) , 
0.520574, 1, 14, 0, 0.418492,0.0178476) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.412071,0.000250585) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0769815,0.000392074) , 
0.0256215, 1, 12, 0, 0.0888952,0.260702) , 
0.511303, 0, 14, 0, 0.35988,0.061034) , 
0.705803, 0, 14, 0, 0.520008,-0.0499608)    );
  // itree = 609
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691823,-0.0001227) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.315529,-2.55274e-05) , 
0.402946, 1, 15, 0, 0.661023,-0.141925) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714699,-0.00045826) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.319866,0.000108542) , 
1.68832, 0, 7, 0, 0.381146,0.118021) , 
0.350417, 0, 2, 0, 0.605646,-0.090492) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.942623,-0.000242694) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0333033,0.0019977) , 
0.943217, 1, 18, 0, 0.689327,-0.273958) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.32706,-5.35701e-07) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.161276,0.000316532) , 
0.89166, 0, 7, 0, 0.23383,0.166517) , 
0.220808, 1, 13, 0, 0.251703,0.149234) , 
0.673088, 0, 14, 0, 0.453947,0.0122536)    );
  // itree = 610
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.800936,-0.000195827) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.585022,-7.47577e-05) , 
0.796297, 0, 14, 0, 0.645342,-0.135231) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.654931,-0.000160482) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.351084,0.000355873) , 
0.871965, 0, 14, 0, 0.466543,0.0315025) , 
0.357687, 0, 2, 0, 0.607369,-0.0998205) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.913204,-0.000432271) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.196745,0.00367554) , 
0.0241646, 1, 0, 0, 0.764502,-0.315904) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.378664,0.000105371) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118928,0.000714749) , 
0.0912836, 0, 15, 0, 0.286177,0.105179) , 
0.615169, 1, 17, 0, 0.312394,0.0820991) , 
0.637994, 0, 14, 0, 0.499903,-0.0335427)    );
  // itree = 611
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.763478,-0.000193088) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.546835,-6.21066e-05) , 
1.69495, 0, 7, 0, 0.60608,-0.105026) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.697284,-0.000131779) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183135,0.000622338) , 
2.83537, 0, 18, 0, 0.25727,0.115529) , 
0.0884739, 0, 15, 0, 0.555262,-0.0728933) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717646,-0.000143086) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0538571,0.00109971) , 
0.622577, 0, 14, 0, 0.478753,-0.0433772) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.559396,-5.63693e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.161149,0.00019639) , 
0.242955, 0, 6, 0, 0.177785,0.236714) , 
2.84253, 0, 9, 0, 0.243961,0.175128) , 
0.397802, 1, 16, 0, 0.479388,-0.0124429)    );
  // itree = 612
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.739283,-0.000125518) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.502659,5.96174e-06) , 
1.1968, 1, 11, 0, 0.688367,-0.188166) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727481,-0.000235097) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.36348,7.77853e-05) , 
2.18104, 0, 7, 0, 0.431375,0.0376165) , 
0.985053, 1, 8, 0, 0.581842,-0.0945773) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676326,-0.000148199) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.320593,3.56013e-05) , 
0.541603, 1, 14, 0, 0.542263,-0.120406) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.452648,8.49713e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138961,0.000130825) , 
2.82859, 0, 9, 0, 0.188574,0.223144) , 
1.49922, 1, 9, 0, 0.269287,0.144745) , 
0.090959, 1, 0, 0, 0.495784,-0.0286832)    );
  // itree = 613
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.831715,-0.000110263) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.447716,-4.0804e-05) , 
0.592828, 0, 13, 0, 0.787106,-0.260453) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742653,-0.000198338) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.534442,-8.57377e-05) , 
2.24391, 0, 10, 0, 0.577443,-0.0631653) , 
0.635122, 0, 2, 0, 0.65718,-0.138196) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.974673,-0.000181999) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.511479,4.10817e-05) , 
0.230048, 0, 0, 0, 0.642273,-0.211035) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.362198,6.28504e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0914745,0.000507449) , 
0.227163, 1, 0, 0, 0.311002,0.100185) , 
0.449721, 1, 18, 0, 0.359876,0.0542685) , 
0.695771, 0, 14, 0, 0.508852,-0.042173)    );
  // itree = 614
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.797639,-0.000141854) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.516945,-5.5135e-05) , 
0.748241, 1, 10, 0, 0.649358,-0.161773) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.894758,-0.000167471) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.411396,-1.04935e-05) , 
0.10945, 0, 6, 0, 0.448572,0.0243655) , 
0.985008, 1, 8, 0, 0.571322,-0.0894295) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767374,-0.000188528) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.30622,5.53136e-05) , 
1.82225, 0, 17, 0, 0.501191,-0.0662741) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.364395,1.25402e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.108831,0.00034456) , 
0.0202463, 1, 6, 0, 0.189964,0.223804) , 
1.34726, 1, 9, 0, 0.244006,0.173434) , 
0.397802, 1, 16, 0, 0.495756,-0.0287435)    );
  // itree = 615
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664259,-0.000110177) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.430464,4.20877e-05) , 
0.397196, 1, 16, 0, 0.60959,-0.115717) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.752586,-0.000168148) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.288628,5.12487e-05) , 
1.85729, 0, 4, 0, 0.355437,0.126991) , 
2.24263, 1, 18, 0, 0.570295,-0.0781914) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.968293,-0.000183239) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.323692,-0.000576523) , 
0.865216, 0, 2, 0, 0.879276,-0.374447) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.881884,-0.000273057) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234069,0.000367416) , 
0.33023, 1, 14, 0, 0.252918,0.129957) , 
2.9434, 0, 7, 0, 0.299306,0.0926014) , 
0.11583, 0, 15, 0, 0.497859,-0.032538)    );
  // itree = 616
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717676,-0.000112919) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.487184,-1.37062e-05) , 
0.403559, 0, 2, 0, 0.660122,-0.144782) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645286,-0.000179774) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.321766,4.27325e-05) , 
1.23342, 0, 7, 0, 0.475668,0.0365027) , 
1.19675, 1, 11, 0, 0.609665,-0.0951918) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.868482,-0.000265577) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.379525,-1.14257e-05) , 
0.0162163, 1, 0, 0, 0.683835,-0.229001) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.377232,9.99517e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183611,0.00042338) , 
1.79429, 1, 18, 0, 0.307798,0.092721) , 
2.10388, 0, 7, 0, 0.339699,0.0654277) , 
0.677134, 0, 14, 0, 0.483288,-0.0200023)    );
  // itree = 617
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742452,-0.000124241) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.443585,-6.18441e-05) , 
0.54765, 0, 13, 0, 0.72277,-0.197489) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.675019,-0.000143618) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.347619,0.00037944) , 
0.86594, 0, 14, 0, 0.509079,-0.00478429) , 
0.350411, 0, 2, 0, 0.672492,-0.152149) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700263,-0.000228571) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.387726,8.48784e-05) , 
0.118635, 1, 16, 0, 0.430677,-0.00208743) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.32027,-5.78291e-07) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0739042,0.00071739) , 
2.09344, 0, 10, 0, 0.143495,0.243051) , 
0.487459, 1, 16, 0, 0.372136,0.0478831) , 
0.706203, 0, 14, 0, 0.517671,-0.0490403)    );
  // itree = 618
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720849,-0.000112125) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.353522,-2.82664e-05) , 
0.395938, 1, 15, 0, 0.680757,-0.168327) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744232,-0.000498992) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.418937,-2.63832e-06) , 
1.96222, 0, 7, 0, 0.452461,0.0468678) , 
0.454203, 0, 2, 0, 0.608653,-0.100361) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.917854,-0.000252885) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.320878,0.000166086) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.094693,0.000278835) , 
0.420069, 1, 16, 0, 0.238281,0.149111) , 
0.795984, 0, 16, 0, 0.257213,0.130937) , 
0.636907, 0, 14, 0, 0.490835,-0.0228195)    );
  // itree = 619
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744527,-0.000180028) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.393431,-8.91038e-05) , 
0.107305, 0, 15, 0, 0.714515,-0.188064) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645931,-8.05954e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.413273,-3.8199e-05) , 
0.747985, 1, 11, 0, 0.525989,-0.023054) , 
0.158157, 1, 16, 0, 0.600332,-0.0881238) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.89784,-0.000263703) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0887971,7.97083e-05) , 
0.0842537, 0, 0, 0, 0.711838,-0.274881) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.849228,-0.000553503) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.23344,0.000192356) , 
3.61187, 0, 8, 0, 0.246293,0.147868) , 
2.54245, 0, 11, 0, 0.270069,0.126278) , 
0.6583, 0, 14, 0, 0.467737,-0.00204548)    );
  // itree = 620
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.867161,-0.000172183) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.66666,-8.19789e-05) , 
0.12004, 1, 16, 0, 0.738702,-0.217979) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674123,-0.000171479) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.454427,-2.03822e-05) , 
0.832574, 0, 14, 0, 0.541393,-0.0333454) , 
0.545838, 0, 2, 0, 0.645908,-0.131147) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.865741,-0.000244303) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.351767,0.000133561) , 
0.225285, 0, 15, 0, 0.487857,-0.0646418) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.487306,-3.92903e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172746,0.000258112) , 
2.3935, 0, 10, 0, 0.229579,0.162713) , 
0.219983, 1, 16, 0, 0.294078,0.105937) , 
0.66057, 0, 14, 0, 0.510389,-0.0398259)    );
  // itree = 621
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.770847,-0.000126107) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.552719,-0.000104746) , 
0.164032, 0, 15, 0, 0.712557,-0.198191) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.772509,-6.92946e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.474492,1.32717e-05) , 
0.665687, 0, 7, 0, 0.528947,-0.0362929) , 
0.735826, 0, 7, 0, 0.648115,-0.141369) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670387,-5.9365e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270352,0.000130213) , 
0.56578, 0, 14, 0, 0.425891,-0.0309203) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.386786,2.9455e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0742859,0.000670147) , 
0.322789, 1, 16, 0, 0.219492,0.164227) , 
0.477039, 1, 13, 0, 0.293077,0.0946535) , 
0.622998, 0, 14, 0, 0.544037,-0.0721797)    );
  // itree = 622
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74764,-0.000134271) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306275,0.000529163) , 
0.547301, 0, 13, 0, 0.731594,-0.205203) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661317,-0.000131728) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.374499,-5.60073e-06) , 
0.451488, 1, 8, 0, 0.489222,0.0129056) , 
0.276018, 1, 16, 0, 0.670436,-0.150168) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.537374,-1.14361e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.316504,0.000268846) , 
0.956805, 1, 8, 0, 0.426568,-0.00253793) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.429446,-4.89725e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.144198,0.000302259) , 
2.09388, 0, 10, 0, 0.243022,0.159349) , 
0.608991, 0, 13, 0, 0.34945,0.0654801) , 
0.697055, 0, 14, 0, 0.509991,-0.0423759)    );
  // itree = 623
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700151,-9.46088e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.544133,-0.000108118) , 
0.632932, 0, 2, 0, 0.624198,-0.124632) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.31906,0.00015798) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.061311,0.00672641) , 
1.93124, 0, 7, 0, 0.136904,0.209569) , 
0.0619076, 0, 15, 0, 0.596759,-0.105814) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.901968,-0.000164695) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.412819,0.000309908) , 
0.293686, 1, 4, 0, 0.696573,-0.225663) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.43086,3.88539e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236943,0.000199017) , 
-0.563965, 1, 4, 0, 0.310201,0.1132) , 
1.13816, 0, 3, 0, 0.343667,0.0838497) , 
0.309517, 1, 16, 0, 0.496969,-0.0310326)    );
  // itree = 624
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760117,-0.000120998) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.400284,-7.19864e-05) , 
0.126087, 0, 15, 0, 0.737245,-0.212786) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.886397,-0.000505555) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.327482,0.00012902) , 
1.96222, 0, 7, 0, 0.402733,0.0995942) , 
0.317754, 0, 2, 0, 0.68591,-0.164847) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.627769,-8.99252e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.286973,0.000270663) , 
0.559855, 0, 14, 0, 0.548319,-0.103798) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.497303,-4.4555e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22526,0.000355751) , 
1.49605, 1, 9, 0, 0.283414,0.124059) , 
0.926211, 0, 7, 0, 0.41018,0.0150212) , 
0.708182, 0, 14, 0, 0.53833,-0.0685756)    );
  // itree = 625
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.791452,-0.000183664) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.582616,-6.23641e-05) , 
0.349674, 0, 2, 0, 0.719504,-0.196459) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.925891,-0.000218217) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.296616,-8.29483e-05) , 
0.653019, 0, 16, 0, 0.388845,0.124502) , 
-0.866664, 0, 5, 0, 0.684279,-0.162267) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.576958,-0.000122036) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.331484,-2.7265e-06) , 
0.0347469, 1, 6, 0, 0.496353,-0.0369274) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.464297,-4.49123e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.246964,0.000132453) , 
2.09431, 0, 10, 0, 0.297543,0.129766) , 
0.953465, 0, 7, 0, 0.386051,0.0555563) , 
0.779586, 0, 14, 0, 0.466902,-0.00349695)    );
  // itree = 626
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.813199,-0.000263544) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.228693,-0.000177273) , 
0.910249, 1, 2, 0, 0.797448,-0.28101) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.785139,-0.000197148) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165341,0.00102489) , 
0.170263, 0, 15, 0, 0.507684,-0.0363473) , 
0.0241424, 1, 0, 0, 0.72944,-0.223587) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.759165,-0.00018269) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.479861,-3.26706e-05) , 
0.243461, 1, 8, 0, 0.521234,-0.0397881) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.563171,-9.87414e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.304426,7.66171e-05) , 
0.599265, 1, 10, 0, 0.338619,0.093714) , 
0.0202463, 1, 6, 0, 0.426016,0.0298218) , 
1.97335, 0, 7, 0, 0.469452,-0.00645469)    );
  // itree = 627
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76602,-0.00013012) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.598959,-0.000105189) , 
1.19675, 1, 11, 0, 0.72436,-0.198021) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.633919,-9.81461e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.283317,1.04689e-05) , 
0.784545, 0, 14, 0, 0.482847,0.018135) , 
0.305602, 1, 16, 0, 0.67344,-0.152448) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.630071,-0.000103992) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.331851,0.000109379) , 
0.115941, 0, 15, 0, 0.502729,-0.0607735) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.359701,0.000112988) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125178,0.00134578) , 
0.56095, 0, 2, 0, 0.293201,0.114709) , 
0.943069, 0, 7, 0, 0.386909,0.0362278) , 
0.708187, 0, 14, 0, 0.524013,-0.0540531)    );
  // itree = 628
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.637493,-0.000115139) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.337744,-1.65475e-05) , 
-1.11429, 0, 5, 0, 0.607053,-0.0931201) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.585017,-0.000176018) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.260006,0.000257667) , 
2.67745, 0, 8, 0, 0.313813,0.0840707) , 
0.654535, 0, 14, 0, 0.529554,-0.046291) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.632184,-2.28188e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198779,-4.62755e-06) , 
0.779695, 1, 8, 0, 0.461949,-0.0273792) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.815681,-0.000255355) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160354,0.000175757) , 
0.802712, 0, 0, 0, 0.185059,0.222005) , 
0.998748, 0, 7, 0, 0.276668,0.139496) , 
0.0923662, 1, 0, 0, 0.453804,0.00936032)    );
  // itree = 629
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.821452,-0.000237111) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.636848,-8.51291e-05) , 
0.0769535, 1, 16, 0, 0.671231,-0.153655) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.698382,-0.00020671) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238863,3.60364e-06) , 
0.0117091, 1, 7, 0, 0.293702,0.200137) , 
0.24562, 0, 7, 0, 0.640755,-0.125095) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.673733,-7.46472e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236164,4.40452e-05) , 
0.184733, 0, 0, 0, 0.496107,-0.0813861) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.482634,6.7424e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.181358,0.000359129) , 
0.172666, 0, 15, 0, 0.284609,0.116697) , 
2.09438, 0, 10, 0, 0.345425,0.0597385) , 
0.670817, 0, 14, 0, 0.512459,-0.044801)    );
  // itree = 630
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661051,-9.48673e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.312836,3.54151e-05) , 
0.0962276, 1, 6, 0, 0.636634,-0.142435) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.787257,-0.000203264) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.273771,0.000224989) , 
0.117533, 1, 16, 0, 0.415001,0.0698139) , 
2.24077, 1, 18, 0, 0.60064,-0.107965) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.829589,-0.000264131) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.240398,0.00688823) , 
2.84243, 0, 9, 0, 0.612301,-0.194819) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.419122,1.75331e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157855,0.000511663) , 
2.09436, 0, 10, 0, 0.233241,0.145686) , 
0.340788, 0, 12, 0, 0.293537,0.0915225) , 
0.115897, 0, 15, 0, 0.52341,-0.0577978)    );
  // itree = 631
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.826178,-0.000173975) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.701465,-0.000211012) , 
0.545165, 0, 2, 0, 0.771179,-0.247459) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.782982,-0.0010976) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.24501,-6.53097e-05) , 
0.407373, 0, 12, 0, 0.299435,0.109301) , 
0.0883759, 0, 15, 0, 0.730578,-0.216753) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634562,-8.44992e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.367756,0.000117632) , 
0.702341, 0, 14, 0, 0.479898,-0.0239783) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729405,-0.000187767) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199359,0.000257744) , 
0.507358, 0, 0, 0, 0.228908,0.197034) , 
-1.11427, 0, 5, 0, 0.446248,0.00565238) , 
0.133026, 1, 16, 0, 0.513914,-0.0472766)    );
  // itree = 632
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.858946,-0.000104721) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.627476,-0.000101698) , 
0.149671, 1, 10, 0, 0.650362,-0.144311) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.848612,-0.000191775) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.255446,0.000380001) , 
2.96022, 0, 7, 0, 0.301422,0.0978176) , 
0.116474, 0, 15, 0, 0.568374,-0.0874189) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.867786,-0.000258998) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234185,-5.92644e-05) , 
0.748006, 1, 10, 0, 0.645445,-0.144174) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.3986,-4.09615e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171059,0.000564547) , 
2.09448, 0, 10, 0, 0.231077,0.174514) , 
0.791023, 0, 14, 0, 0.284895,0.133123) , 
0.397802, 1, 16, 0, 0.498969,-0.0334234)    );
  // itree = 633
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679738,-0.000116447) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.475151,-2.60948e-05) , 
0.315769, 1, 16, 0, 0.631354,-0.114462) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.85999,-0.00132307) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.169384,0.000472808) , 
2.04373, 0, 7, 0, 0.215274,0.273705) , 
0.227889, 0, 2, 0, 0.611622,-0.0960535) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558966,-5.56834e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257194,8.61661e-05) , 
0.861581, 0, 7, 0, 0.424118,-0.00719142) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.266845,0.000123012) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0949784,0.000352487) , 
1.06849, 1, 11, 0, 0.215072,0.179273) , 
1.4959, 0, 11, 0, 0.281162,0.120323) , 
0.673088, 0, 14, 0, 0.467461,-0.00166107)    );
  // itree = 634
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.762073,-0.000139536) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.497719,-0.000128798) , 
0.364136, 0, 2, 0, 0.71569,-0.187965) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.613844,-8.8049e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.314399,-3.76737e-05) , 
-0.370866, 1, 3, 0, 0.447383,0.0564848) , 
0.740038, 0, 7, 0, 0.63073,-0.11056) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.845507,-0.000235963) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.405116,-9.8142e-06) , 
0.903812, 1, 8, 0, 0.737744,-0.282873) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.561772,-5.6279e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.282635,0.000120583) , 
0.340576, 0, 12, 0, 0.313015,0.100942) , 
2.54308, 0, 11, 0, 0.337362,0.0789412) , 
0.706618, 0, 14, 0, 0.472934,-0.00863182)    );
  // itree = 635
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.790999,-0.000170702) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.56538,-8.21574e-05) , 
2.36284, 0, 17, 0, 0.600276,-0.100366) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.669529,-0.000250971) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.19337,0.00164607) , 
0.610887, 1, 17, 0, 0.256645,0.115149) , 
0.0885845, 0, 15, 0, 0.550882,-0.0693871) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677939,-0.000137954) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159738,0.000509969) , 
0.349084, 0, 2, 0, 0.540542,-0.0405501) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.423745,-1.17524e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0984212,0.000247826) , 
0.414661, 0, 15, 0, 0.158736,0.241561) , 
0.735746, 0, 14, 0, 0.23838,0.182713) , 
0.387813, 1, 16, 0, 0.469892,-0.00405084)    );
  // itree = 636
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.950008,-0.000172429) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.759887,-0.000235831) , 
0.863145, 0, 2, 0, 0.840124,-0.319812) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.711636,-0.000363609) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.248139,-8.8432e-05) , 
2.24422, 0, 10, 0, 0.39549,0.133915) , 
0.22477, 1, 15, 0, 0.798885,-0.277729) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.606309,-7.84926e-07) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.42638,-2.50472e-05) , 
0.184721, 0, 0, 0, 0.454175,0.00539725) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707989,-0.000155399) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0940116,0.000414296) , 
2.26682, 0, 17, 0, 0.140573,0.248533) , 
0.277099, 1, 0, 0, 0.426238,0.0270568) , 
0.0887157, 1, 16, 0, 0.484435,-0.0205427)    );
  // itree = 637
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741844,-0.00010437) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.493477,4.24739e-06) , 
0.137675, 0, 15, 0, 0.702394,-0.194597) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72383,-0.000234943) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.390516,4.35653e-05) , 
0.112258, 1, 16, 0, 0.492679,0.0090859) , 
0.449444, 0, 2, 0, 0.638578,-0.132616) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.550908,-8.46985e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26474,0.000348088) , 
1.94982, 1, 9, 0, 0.406847,-0.0177899) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.540092,-0.000217448) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157562,0.000410166) , 
0.598412, 1, 9, 0, 0.182072,0.199355) , 
0.480068, 1, 13, 0, 0.263317,0.120868) , 
0.622998, 0, 14, 0, 0.528737,-0.05842)    );
  // itree = 638
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.971246,-0.000152174) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.644161,-0.000102811) , 
0.191169, 0, 0, 0, 0.664221,-0.149624) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.585712,-0.000103701) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34226,6.67325e-05) , 
0.598706, 1, 11, 0, 0.426657,0.0557909) , 
0.329811, 1, 16, 0, 0.609124,-0.101983) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.465769,3.4139e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252018,0.00052499) , 
-0.37079, 0, 5, 0, 0.398349,-0.00242842) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.913674,-0.000572354) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.169091,0.000854253) , 
3.58599, 0, 8, 0, 0.211977,0.166193) , 
0.463179, 0, 1, 0, 0.330778,0.0587064) , 
0.638, 0, 14, 0, 0.508991,-0.044176)    );
  // itree = 639
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742533,-0.000170773) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.570984,-7.29821e-05) , 
0.785094, 0, 14, 0, 0.664989,-0.142688) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.640649,-0.000316166) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.213315,7.22735e-05) , 
0.305996, 0, 2, 0, 0.285551,0.210447) , 
0.203993, 0, 1, 0, 0.630902,-0.110964) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74928,-0.000160177) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388417,-9.80026e-05) , 
0.750202, 0, 2, 0, 0.64665,-0.181673) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.474841,-4.0338e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.247362,0.000283615) , 
2.09442, 0, 10, 0, 0.305406,0.108983) , 
1.83227, 0, 7, 0, 0.35371,0.06784) , 
0.708187, 0, 14, 0, 0.479034,-0.0130009)    );
  // itree = 640
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.732191,-0.00011557) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.557529,-9.96363e-05) , 
0.457855, 0, 2, 0, 0.68344,-0.170827) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.548025,-3.1558e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.208116,0.00039045) , 
0.734873, 1, 8, 0, 0.368511,0.0462858) , 
0.116474, 0, 15, 0, 0.614051,-0.122991) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.614102,-0.000130117) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0747796,0.000590296) , 
0.161709, 0, 12, 0, 0.485349,-0.0468555) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.411724,0.000126199) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.146194,0.000313411) , 
0.172997, 0, 15, 0, 0.285782,0.139806) , 
0.978929, 0, 7, 0, 0.339207,0.0898365) , 
0.308582, 1, 16, 0, 0.508069,-0.0409229)    );
  // itree = 641
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.734742,-0.000122242) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.486392,8.15697e-05) , 
0.318763, 0, 2, 0, 0.689569,-0.169229) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.81983,-0.000196375) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.390703,-6.52069e-05) , 
-2.03399, 1, 3, 0, 0.458864,0.058559) , 
-0.619044, 0, 3, 0, 0.647927,-0.128114) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704815,-8.99713e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.361259,8.22271e-05) , 
0.0956203, 0, 6, 0, 0.390017,0.0345467) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.289254,0.00110812) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0452947,0.000347844) , 
2.18435, 0, 18, 0, 0.0871908,0.292861) , 
0.277099, 1, 0, 0, 0.354354,0.0649673) , 
0.705722, 0, 14, 0, 0.491782,-0.0254183)    );
  // itree = 642
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.829581,-0.000169381) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.556285,6.65109e-05) , 
0.896766, 1, 11, 0, 0.748118,-0.235597) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615032,-0.000165709) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.329174,3.94638e-05) , 
0.0164934, 1, 0, 0, 0.526369,-0.0330495) , 
0.734756, 1, 8, 0, 0.649048,-0.145105) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.938205,-0.000248314) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0268405,0.0136831) , 
0.203007, 0, 15, 0, 0.765304,-0.35865) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.402883,5.99131e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172518,6.25839e-05) , 
0.772882, 1, 2, 0, 0.350211,0.0891149) , 
0.23541, 0, 6, 0, 0.366732,0.071294) , 
0.215058, 1, 16, 0, 0.485796,-0.0199704)    );
  // itree = 643
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.678769,-0.00012154) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.354681,-3.32225e-05) , 
0.401032, 1, 15, 0, 0.66344,-0.14784) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695337,-9.89456e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.367315,8.07026e-05) , 
0.199774, 1, 8, 0, 0.432388,0.0266422) , 
0.31021, 1, 16, 0, 0.578175,-0.0834512) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.9617,-0.000640624) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.427028,-0.000179128) , 
1.11438, 0, 5, 0, 0.806411,-0.322629) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.31637,6.91302e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.108886,0.00100307) , 
0.734756, 1, 8, 0, 0.197106,0.176189) , 
2.71341, 0, 7, 0, 0.241352,0.139966) , 
0.115759, 0, 15, 0, 0.495154,-0.028383)    );
  // itree = 644
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.820546,-0.000219834) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.612894,-8.98099e-05) , 
2.17933, 0, 7, 0, 0.645309,-0.13635) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.598302,-0.00018269) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.104559,0.00282381) , 
1.97455, 0, 7, 0, 0.281261,0.103525) , 
0.0891881, 0, 15, 0, 0.596048,-0.103891) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.603788,-8.32597e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0884822,0.000221939) , 
0.544959, 1, 16, 0, 0.522488,-0.0874583) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.881774,-0.000280132) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.255758,0.000231783) , 
0.757693, 0, 0, 0, 0.270417,0.145728) , 
0.441243, 1, 8, 0, 0.346621,0.0752331) , 
0.309515, 1, 16, 0, 0.4976,-0.0331914)    );
  // itree = 645
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728071,-0.000122926) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322868,-3.92054e-05) , 
0.129168, 0, 15, 0, 0.701716,-0.177033) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.86249,-0.000512208) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.360361,8.57084e-05) , 
1.92953, 0, 7, 0, 0.441352,0.0615295) , 
0.350403, 0, 2, 0, 0.645564,-0.125583) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.754594,-0.000235716) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.39054,-8.98453e-05) , 
0.0211882, 1, 0, 0, 0.60601,-0.153679) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.711059,-0.000144266) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251069,0.000159067) , 
0.242955, 0, 6, 0, 0.266094,0.140228) , 
2.12179, 0, 7, 0, 0.291322,0.118415) , 
0.697055, 0, 14, 0, 0.474194,-0.00754544)    );
  // itree = 646
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719225,-0.000138305) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.528265,-2.87962e-05) , 
0.0268057, 1, 0, 0, 0.62822,-0.143096) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.604998,-0.000142897) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.2464,0.000206517) , 
1.2319, 1, 17, 0, 0.400806,0.0920729) , 
0.357672, 0, 2, 0, 0.597991,-0.111836) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.850347,-0.00020057) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.262928,0.000309773) , 
0.35091, 0, 2, 0, 0.672,-0.1643) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.484573,2.88317e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.200538,0.00023634) , 
-0.986866, 1, 4, 0, 0.257187,0.153876) , 
0.804853, 0, 14, 0, 0.305914,0.116501) , 
0.353661, 1, 16, 0, 0.511379,-0.0441258)    );
  // itree = 647
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.752865,-0.000134897) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.57474,-0.000107605) , 
1.22143, 1, 8, 0, 0.710465,-0.183297) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.608947,-6.68863e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.195915,3.79157e-05) , 
0.406075, 0, 7, 0, 0.497869,0.00293032) , 
0.30554, 1, 16, 0, 0.665428,-0.143846) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.918879,-0.00017325) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.59223,-0.000285892) , 
0.685121, 0, 1, 0, 0.7285,-0.248493) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.422795,-3.28356e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.248286,0.000148219) , 
2.09435, 0, 10, 0, 0.291885,0.119733) , 
0.0926971, 1, 16, 0, 0.324317,0.0923802) , 
0.710494, 0, 14, 0, 0.488223,-0.0211283)    );
  // itree = 648
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634477,-9.33393e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.414624,8.05333e-05) , 
0.322318, 0, 2, 0, 0.608037,-0.110347) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.410296,0.00161269) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0533279,0.000591768) , 
0.701789, 0, 14, 0, 0.108193,0.311014) , 
0.318357, 1, 0, 0, 0.587265,-0.0928369) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.986226,-0.000224872) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165455,0.000185516) , 
0.953049, 0, 2, 0, 0.850619,-0.386825) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.492927,-0.000111701) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.176548,0.000331154) , 
2.69414, 0, 8, 0, 0.205654,0.169943) , 
-2.1041, 1, 3, 0, 0.240698,0.139691) , 
0.116474, 0, 15, 0, 0.503096,-0.0363638)    );
  // itree = 649
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701724,-0.000115132) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.44388,9.53976e-05) , 
0.11931, 1, 0, 0, 0.67196,-0.156484) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.53149,-4.75568e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.092236,0.0013065) , 
0.799738, 0, 14, 0, 0.413863,0.0828489) , 
0.317761, 0, 2, 0, 0.634252,-0.121517) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.524264,-6.17867e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.166106,0.000298806) , 
0.0895929, 0, 15, 0, 0.407849,0.00537956) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.296613,0.000103285) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.104325,0.000603864) , 
1.79517, 0, 10, 0, 0.178049,0.203426) , 
0.93514, 0, 7, 0, 0.277055,0.118101) , 
0.659385, 0, 14, 0, 0.498833,-0.0306743)    );
  // itree = 650
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.604802,-8.8765e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.179562,0.00138143) , 
0.0615443, 0, 15, 0, 0.57593,-0.097313) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.395752,0.000455918) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0936881,0.000466559) , 
-1.1018, 1, 5, 0, 0.156308,0.235897) , 
0.524357, 1, 16, 0, 0.552285,-0.0785367) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.751417,-9.99634e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257304,2.77959e-05) , 
0.393317, 0, 1, 0, 0.47702,0.0115732) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.805735,-0.000190576) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160631,0.000204751) , 
2.35204, 0, 5, 0, 0.18696,0.228023) , 
0.831245, 0, 13, 0, 0.273287,0.163603) , 
0.493339, 0, 7, 0, 0.48147,-0.0170774)    );
  // itree = 651
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72387,-0.000105724) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.474479,-1.64296e-05) , 
0.161751, 0, 15, 0, 0.670582,-0.160885) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.938882,-0.000248873) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.36396,-2.70964e-05) , 
0.474161, 1, 17, 0, 0.410034,0.0856683) , 
2.2425, 1, 18, 0, 0.63302,-0.125341) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.949034,-0.000235558) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0212792,0.00790625) , 
0.580289, 0, 5, 0, 0.742925,-0.343115) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.453192,1.67291e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.18923,0.000288117) , 
0.0358161, 1, 0, 0, 0.256788,0.130898) , 
0.242955, 0, 6, 0, 0.27567,0.112486) , 
0.637994, 0, 14, 0, 0.514944,-0.0467576)    );
  // itree = 652
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.806989,-0.000183101) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.515429,-0.000261575) , 
1.94482, 1, 10, 0, 0.774104,-0.254231) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.598609,-7.34868e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.374844,8.04603e-05) , 
0.985011, 1, 8, 0, 0.517613,-0.0366944) , 
1.68633, 0, 7, 0, 0.570013,-0.0811367) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.605979,-0.000247504) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118962,-2.86651e-05) , 
0.72922, 1, 2, 0, 0.438069,-0.0232785) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.656235,-0.000292645) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.131637,0.000708005) , 
0.331439, 1, 14, 0, 0.14406,0.2015) , 
0.91638, 1, 17, 0, 0.197005,0.161022) , 
0.0909772, 0, 15, 0, 0.509512,-0.0418594)    );
  // itree = 653
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695502,-9.95928e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.557756,-0.000106916) , 
2.244, 0, 9, 0, 0.646737,-0.141718) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.804327,-0.000195662) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.255514,0.000186627) , 
1.26347, 0, 4, 0, 0.354922,0.0980504) , 
0.397196, 1, 16, 0, 0.581123,-0.0878056) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.551257,-0.00010549) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.182449,0.000552201) , 
0.0800922, 0, 15, 0, 0.393503,0.0151242) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.772209,-0.000214669) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0829178,0.000616238) , 
2.84008, 0, 11, 0, 0.110772,0.244188) , 
0.981187, 0, 7, 0, 0.252569,0.129307) , 
0.116474, 0, 15, 0, 0.497395,-0.0324773)    );
  // itree = 654
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.812546,-0.000161418) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.320665,0.000551853) , 
0.977453, 1, 8, 0, 0.688936,-0.191753) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.601755,-0.000112857) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.319713,4.5057e-05) , 
0.171046, 0, 15, 0, 0.485319,-0.00126504) , 
0.598385, 1, 10, 0, 0.548513,-0.060384) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.880475,-0.00022076) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.323877,0.00170386) , 
0.432549, 0, 16, 0, 0.699327,-0.265142) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.357852,7.7621e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212965,0.00025496) , 
0.536003, 0, 2, 0, 0.310694,0.113421) , 
2.77557, 0, 8, 0, 0.329228,0.0953673) , 
0.30858, 1, 16, 0, 0.456569,0.00492054)    );
  // itree = 655
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.787687,-0.000137195) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.62404,-0.000102024) , 
0.866479, 0, 5, 0, 0.6788,-0.159686) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.590379,-5.93517e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.312216,0.000125229) , 
2.09445, 0, 10, 0, 0.402504,0.0120198) , 
0.677618, 0, 14, 0, 0.563526,-0.0880483) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.570699,-7.72365e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317476,5.61904e-05) , 
2.54295, 0, 9, 0, 0.418743,0.0606767) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.783993,-0.000272378) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.11394,0.000320961) , 
2.99088, 0, 10, 0, 0.149963,0.237801) , 
0.174206, 0, 15, 0, 0.298113,0.140172) , 
0.493339, 0, 7, 0, 0.496182,-0.0301414)    );
  // itree = 656
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.66654,-0.000101373) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.4055,6.25403e-05) , 
0.326157, 0, 2, 0, 0.636467,-0.12679) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67924,-6.84394e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340505,8.55566e-05) , 
0.292009, 0, 0, 0, 0.369243,0.0426296) , 
0.14376, 0, 15, 0, 0.543855,-0.0680741) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.797691,-0.000186254) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0980559,-3.22911e-05) , 
0.349696, 1, 8, 0, 0.43285,0.0193953) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.85339,-0.000844058) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0978423,0.000426948) , 
-2.34906, 1, 5, 0, 0.112118,0.281787) , 
-0.976321, 1, 4, 0, 0.171555,0.233162) , 
0.486108, 1, 16, 0, 0.494619,-0.0282363)    );
  // itree = 657
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.75129,-0.000111101) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.560553,-8.08346e-05) , 
0.454184, 0, 2, 0, 0.702249,-0.187756) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.549774,-1.69131e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.307856,9.29565e-05) , 
0.618897, 0, 5, 0, 0.410448,0.0472467) , 
0.336335, 1, 16, 0, 0.614685,-0.117236) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.865384,-0.000275946) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256373,-0.000178598) , 
0.544187, 0, 13, 0, 0.773728,-0.290545) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.282009,0.000160011) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0867863,0.000445444) , 
0.986931, 0, 7, 0, 0.174417,0.197486) , 
0.611366, 1, 17, 0, 0.240832,0.143403) , 
0.116799, 0, 15, 0, 0.527683,-0.056581)    );
  // itree = 658
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71242,-0.000140557) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.357624,-0.000152903) , 
2.54278, 1, 10, 0, 0.699052,-0.190705) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744514,-0.00017328) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221477,0.00104072) , 
0.708885, 0, 14, 0, 0.380929,0.019404) , 
0.086714, 0, 15, 0, 0.64651,-0.156003) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.594412,-9.08875e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.374838,2.55295e-05) , 
2.54319, 0, 9, 0, 0.468726,-0.0086795) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.413851,4.09011e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.170685,0.000508604) , 
1.64556, 0, 10, 0, 0.27393,0.152983) , 
0.976371, 1, 8, 0, 0.391742,0.0552103) , 
1.23335, 0, 7, 0, 0.487162,-0.0238968)    );
  // itree = 659
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722961,-0.000140964) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.531965,-6.18862e-05) , 
0.0212123, 1, 0, 0, 0.647824,-0.138554) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691658,-8.38212e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.355323,9.56813e-05) , 
1.0574, 1, 17, 0, 0.405585,0.0441296) , 
0.308021, 1, 16, 0, 0.554082,-0.0678588) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.836424,-0.000139116) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.100151,0.00544918) , 
0.0779572, 0, 15, 0, 0.560525,-0.175001) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.793926,-0.000417717) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0879098,0.000604537) , 
3.74375, 0, 8, 0, 0.105164,0.244816) , 
0.244921, 1, 8, 0, 0.193182,0.163669) , 
0.0890994, 0, 15, 0, 0.49716,-0.0313419)    );
  // itree = 660
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.656631,-0.000104575) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.428508,7.65171e-05) , 
0.317766, 0, 2, 0, 0.625894,-0.115936) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.504838,-0.00011162) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.112242,0.000782518) , 
1.48056, 0, 7, 0, 0.306926,0.130577) , 
0.113488, 0, 15, 0, 0.592782,-0.0903464) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.891044,-0.000175196) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.23394,0.00014406) , 
1.94212, 0, 10, 0, 0.642619,-0.249549) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.292084,9.9657e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0931302,0.000923944) , 
1.93487, 1, 18, 0, 0.22841,0.153124) , 
2.78453, 0, 8, 0, 0.257823,0.124529) , 
0.622998, 0, 14, 0, 0.488818,-0.0236532)    );
  // itree = 661
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.724229,-0.000110018) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.537691,-4.76281e-05) , 
0.45497, 0, 2, 0, 0.663397,-0.146232) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.673869,-0.000167112) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.314533,0.00017577) , 
0.771819, 0, 1, 0, 0.36945,0.0287033) , 
0.641672, 0, 14, 0, 0.592415,-0.103989) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.896368,-0.000235833) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271609,0.000139271) , 
0.027583, 0, 6, 0, 0.713807,-0.259571) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.356699,0.000108847) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171644,0.00018384) , 
1.08965, 1, 11, 0, 0.270452,0.148135) , 
2.54265, 0, 11, 0, 0.290702,0.129513) , 
0.351181, 1, 16, 0, 0.498938,-0.0316452)    );
  // itree = 662
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.783064,-0.00019095) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.590159,-7.58255e-05) , 
0.0999463, 1, 16, 0, 0.63812,-0.133887) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.680301,-0.000180137) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236674,0.000525566) , 
2.83753, 0, 18, 0, 0.287255,0.0836408) , 
0.0895322, 0, 15, 0, 0.589163,-0.103535) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.710807,-9.71932e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253897,0.000354403) , 
-0.0211698, 1, 3, 0, 0.563259,-0.12567) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.424742,5.27819e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.119286,0.00033449) , 
0.170691, 0, 15, 0, 0.279955,0.138561) , 
0.210145, 1, 8, 0, 0.326863,0.0948113) , 
0.347296, 1, 16, 0, 0.503103,-0.0384575)    );
  // itree = 663
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718945,-0.000127604) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.499786,-4.27356e-05) , 
0.0284143, 1, 6, 0, 0.6664,-0.150088) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.906803,-0.000247671) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.304585,8.08093e-05) , 
0.675705, 0, 16, 0, 0.354224,0.141823) , 
0.250555, 0, 1, 0, 0.620834,-0.107479) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.903079,-0.000209205) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0204511,-1.88309e-05) , 
0.674606, 1, 0, 0, 0.688074,-0.288518) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.372315,3.74777e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.196423,0.000392612) , 
0.913828, 0, 7, 0, 0.272662,0.12024) , 
0.242955, 0, 6, 0, 0.28617,0.106949) , 
0.66057, 0, 14, 0, 0.486931,-0.0216844)    );
  // itree = 664
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.782575,-0.00013931) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.372995,-7.9126e-05) , 
0.554166, 0, 13, 0, 0.76211,-0.235206) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71373,-8.83003e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.39864,2.50778e-05) , 
0.383241, 0, 1, 0, 0.531381,-0.023901) , 
0.740018, 0, 7, 0, 0.693617,-0.172479) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72376,-0.000112724) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.397097,1.30106e-05) , 
0.170102, 0, 15, 0, 0.519569,-0.0757394) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.684501,4.92761e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.232792,0.000160285) , 
0.817759, 0, 1, 0, 0.276864,0.127491) , 
1.14518, 0, 7, 0, 0.362666,0.0556441) , 
0.708182, 0, 14, 0, 0.526762,-0.0574668)    );
  // itree = 665
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.835585,-0.000186506) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.63306,-0.0001127) , 
0.244926, 1, 8, 0, 0.678156,-0.156412) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.500122,-6.00605e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227108,0.000218065) , 
0.321063, 0, 2, 0, 0.439751,0.0563745) , 
0.740038, 0, 7, 0, 0.598788,-0.0855727) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.945652,-0.000244497) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0259756,0.00820284) , 
0.464759, 0, 3, 0, 0.714595,-0.316235) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.510694,-5.62975e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.260731,0.000199086) , 
0.299245, 1, 10, 0, 0.29018,0.101953) , 
0.242955, 0, 6, 0, 0.306497,0.0858749) , 
0.659385, 0, 14, 0, 0.474837,-0.0128673)    );
  // itree = 666
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.654861,-9.82819e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.114184,-6.16565e-05) , 
0.366153, 0, 13, 0, 0.642832,-0.132588) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.614796,-0.000154307) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.389754,-5.21476e-06) , 
0.412597, 0, 12, 0, 0.442229,0.0565061) , 
0.452698, 0, 2, 0, 0.576185,-0.0697643) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.53639,1.20176e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221852,0.000276079) , 
0.554762, 1, 1, 0, 0.438317,-0.0450176) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.460084,4.02215e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.14454,0.000329319) , 
0.149841, 1, 10, 0, 0.170406,0.205076) , 
0.717268, 1, 8, 0, 0.286598,0.0966107) , 
0.636914, 0, 14, 0, 0.471639,-0.00970021)    );
  // itree = 667
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691303,-0.000117645) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.382114,-0.000128401) , 
0.899775, 0, 18, 0, 0.659663,-0.135097) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.907875,-0.000326749) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.332145,0.000105895) , 
0.131668, 1, 2, 0, 0.38578,0.11324) , 
0.304002, 0, 2, 0, 0.615458,-0.0950147) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.834634,-0.000227621) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0889802,7.8883e-06) , 
2.79974, 1, 11, 0, 0.721769,-0.264959) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.496794,-0.000127133) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251365,0.000192277) , 
1.65028, 0, 7, 0, 0.289408,0.123207) , 
2.54277, 0, 11, 0, 0.311459,0.10341) , 
0.706203, 0, 14, 0, 0.451837,0.0117829)    );
  // itree = 668
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755148,-0.000132889) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.419086,0.000293413) , 
-1.36144, 0, 5, 0, 0.737842,-0.233474) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.574763,-0.000208424) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0928895,0.0110376) , 
0.206244, 1, 16, 0, 0.393687,-0.000180007) , 
0.0904816, 0, 15, 0, 0.685508,-0.197998) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682723,-0.000138749) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.243568,0.000274864) , 
0.257606, 0, 2, 0, 0.632167,-0.112173) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.541552,-2.02765e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306258,7.55387e-05) , 
1.496, 1, 9, 0, 0.352159,0.0677017) , 
0.741596, 0, 14, 0, 0.449516,0.0051605) , 
1.05974, 1, 17, 0, 0.513683,-0.0500788)    );
  // itree = 669
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776273,-0.000122426) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.499763,-2.91711e-05) , 
0.594103, 0, 13, 0, 0.736441,-0.210859) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.637563,-0.000125233) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.44278,-2.50009e-05) , 
0.736861, 0, 7, 0, 0.557297,-0.0420097) , 
0.286553, 1, 12, 0, 0.647072,-0.126626) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.891107,-0.000161393) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.400681,-4.00173e-06) , 
0.250076, 0, 6, 0, 0.430942,-0.010195) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.513081,-8.47571e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167796,0.000213084) , 
0.307007, 0, 15, 0, 0.229723,0.179815) , 
1.49575, 0, 11, 0, 0.293256,0.119821) , 
0.706623, 0, 14, 0, 0.465249,2.10823e-05)    );
  // itree = 670
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729271,-0.000103727) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.611102,-0.000100013) , 
0.683748, 0, 2, 0, 0.657684,-0.146807) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.596478,-3.68987e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322039,8.9835e-05) , 
0.866681, 0, 5, 0, 0.421006,0.03516) , 
0.354304, 1, 16, 0, 0.589284,-0.0942194) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.75384,-0.000318757) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.381562,-6.37001e-05) , 
2.84258, 0, 9, 0, 0.5184,-0.0809815) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.339402,0.000252428) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.115297,0.000538784) , 
-1.11425, 1, 5, 0, 0.167084,0.194184) , 
1.71932, 0, 7, 0, 0.248525,0.130396) , 
0.115759, 0, 15, 0, 0.506013,-0.03933)    );
  // itree = 671
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.933222,-0.000169911) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.678715,-0.000190741) , 
0.86353, 0, 2, 0, 0.762831,-0.236783) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.591141,-6.98378e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279504,0.000304411) , 
0.319785, 0, 2, 0, 0.549538,-0.0476141) , 
0.124165, 1, 16, 0, 0.614469,-0.105201) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67525,-0.000252662) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.215658,0.000319055) , 
0.0317727, 1, 6, 0, 0.516017,-0.100729) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.420965,-1.52725e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.14654,0.0002679) , 
2.54309, 0, 10, 0, 0.179929,0.197605) , 
1.62093, 0, 7, 0, 0.235257,0.148493) , 
0.636907, 0, 14, 0, 0.490898,-0.0225319)    );
  // itree = 672
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660028,-0.000106497) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249439,0.000266429) , 
0.211223, 0, 2, 0, 0.646659,-0.129332) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.580615,-0.000123702) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194291,0.000504029) , 
1.20743, 1, 17, 0, 0.37123,0.0918637) , 
0.136091, 0, 15, 0, 0.605834,-0.096546) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.568195,-5.12162e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0866909,0.00412976) , 
0.194912, 1, 12, 0, 0.489822,-0.084359) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.444099,9.62758e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163971,0.000345059) , 
0.220491, 1, 16, 0, 0.22812,0.150625) , 
1.49564, 0, 11, 0, 0.317896,0.0700142) , 
0.641941, 0, 14, 0, 0.500812,-0.0357951)    );
  // itree = 673
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727755,-0.000116759) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.557281,-8.88917e-05) , 
1.33679, 1, 17, 0, 0.638808,-0.12589) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817821,-0.000709858) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239432,0.000159254) , 
0.7081, 1, 17, 0, 0.274616,0.215509) , 
0.311808, 0, 2, 0, 0.597314,-0.0869933) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.929552,-0.000209524) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0283937,-9.95337e-05) , 
0.693564, 1, 0, 0, 0.761108,-0.358401) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.605174,-0.000174885) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.19289,0.000238739) , 
-1.85695, 1, 4, 0, 0.214048,0.169806) , 
0.250192, 0, 6, 0, 0.232801,0.151699) , 
0.644389, 0, 14, 0, 0.467194,-0.0017869)    );
  // itree = 674
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.832388,-0.000112035) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.637098,-0.000115173) , 
0.493303, 0, 1, 0, 0.721351,-0.203408) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.561463,-8.41888e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.262232,0.000429594) , 
0.138948, 0, 15, 0, 0.514781,-0.0127512) , 
1.35003, 1, 17, 0, 0.614885,-0.105144) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.479591,-3.62306e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.272916,0.000227893) , 
0.525948, 1, 14, 0, 0.326017,0.0688955) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.787276,-0.000330693) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0437118,0.00128727) , 
2.10324, 0, 5, 0, 0.0997185,0.240012) , 
0.490928, 0, 14, 0, 0.275414,0.107159) , 
0.637994, 0, 14, 0, 0.498811,-0.0325516)    );
  // itree = 675
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.680014,-0.000113684) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.281727,-6.19999e-05) , 
0.245669, 0, 7, 0, 0.653442,-0.133132) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.517888,-0.00010736) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22085,0.000289741) , 
0.257306, 1, 16, 0, 0.412626,0.0871251) , 
0.364141, 0, 2, 0, 0.600408,-0.0846254) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.833791,-0.000204341) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.377076,8.02325e-05) , 
0.238082, 1, 13, 0, 0.413243,-0.00609558) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.432848,-6.64884e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157446,0.000320024) , 
-0.618732, 1, 4, 0, 0.231773,0.161467) , 
-0.371085, 1, 3, 0, 0.306266,0.0926826) , 
0.673088, 0, 14, 0, 0.46723,-0.00434621)    );
  // itree = 676
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.82514,-0.0001737) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.655459,-0.000128459) , 
0.300366, 0, 1, 0, 0.771812,-0.244199) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.912511,-0.00138921) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.206365,4.81273e-05) , 
2.20771, 0, 7, 0, 0.269678,0.231904) , 
0.194952, 0, 1, 0, 0.731294,-0.205783) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.773666,-0.000175055) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.314894,-5.84501e-05) , 
0.11518, 0, 15, 0, 0.666783,-0.164781) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.515306,4.13279e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292551,6.07047e-05) , 
0.437057, 1, 13, 0, 0.343957,0.0835599) , 
0.135205, 1, 16, 0, 0.398439,0.0416489) , 
0.776888, 0, 14, 0, 0.500538,-0.0342475)    );
  // itree = 677
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.675876,-0.000108905) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233304,0.000199542) , 
0.226803, 0, 2, 0, 0.662838,-0.151753) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.587964,-5.4016e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.311267,0.000186691) , 
-0.698767, 1, 4, 0, 0.411058,0.0436445) , 
0.354619, 1, 16, 0, 0.589996,-0.0952226) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.765954,-0.000128651) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234015,0.000232931) , 
1.86595, 0, 17, 0, 0.553269,-0.158894) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.513045,-8.49953e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159586,0.000552799) , 
1.70776, 0, 7, 0, 0.24519,0.131724) , 
0.240762, 1, 8, 0, 0.29687,0.0829732) , 
0.116867, 0, 15, 0, 0.513437,-0.0486817)    );
  // itree = 678
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.842303,-0.000143849) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.457104,-8.30489e-05) , 
1.85191, 0, 17, 0, 0.710399,-0.228417) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745916,-0.000203393) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.444087,-1.49975e-05) , 
1.97335, 0, 7, 0, 0.502342,-0.0279913) , 
0.246259, 1, 8, 0, 0.542327,-0.0665099) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.899793,-0.000255604) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.185821,0.00633412) , 
0.171806, 1, 15, 0, 0.646765,-0.149788) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.283895,3.7629e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0770976,0.000244361) , 
2.84237, 0, 9, 0, 0.112753,0.279984) , 
0.832203, 0, 14, 0, 0.159657,0.242235) , 
0.473737, 1, 16, 0, 0.487982,-0.0226629)    );
  // itree = 679
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645519,-0.000106313) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224086,0.000398902) , 
0.552281, 1, 16, 0, 0.630844,-0.113477) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.669698,-0.0001867) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.190577,0.000758375) , 
0.107213, 1, 16, 0, 0.379047,0.0904226) , 
0.136145, 0, 15, 0, 0.592285,-0.0822532) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.880781,-0.000297241) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163586,0.000602625) , 
0.918651, 1, 8, 0, 0.735837,-0.301733) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.389687,6.89584e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192049,0.000292609) , 
0.748052, 1, 10, 0, 0.250111,0.132714) , 
0.598653, 1, 9, 0, 0.288545,0.0983378) , 
0.643027, 0, 14, 0, 0.480767,-0.015949)    );
  // itree = 680
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689316,-0.000114874) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.544791,-7.99575e-05) , 
2.39358, 0, 9, 0, 0.627169,-0.126446) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.347321,-0.000128058) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0801786,0.00888437) , 
0.13301, 1, 16, 0, 0.161591,0.174877) , 
0.0637906, 0, 15, 0, 0.598551,-0.107924) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.498784,-1.12378e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.248436,0.000502138) , 
0.547787, 0, 2, 0, 0.428587,-0.00356449) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.792379,-0.000204869) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183207,0.000253927) , 
0.954515, 1, 18, 0, 0.20344,0.21079) , 
-0.371417, 0, 5, 0, 0.357087,0.0645083) , 
0.309582, 1, 16, 0, 0.503247,-0.0398666)    );
  // itree = 681
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.815999,-0.000223512) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.624907,-7.44673e-05) , 
0.0792738, 1, 16, 0, 0.655477,-0.144828) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.79198,-0.00180091) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.137393,0.000436473) , 
1.59232, 0, 7, 0, 0.214005,0.27344) , 
0.220048, 0, 2, 0, 0.640094,-0.130254) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.610254,-8.1463e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.130116,0.000315493) , 
-0.370939, 0, 5, 0, 0.502083,-0.0885017) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.34941,0.000146199) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.149401,0.000614646) , 
-0.371434, 1, 4, 0, 0.233653,0.143278) , 
2.09442, 0, 10, 0, 0.314749,0.073255) , 
0.636907, 0, 14, 0, 0.533004,-0.063267)    );
  // itree = 682
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745393,-0.000153398) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.557692,-3.90653e-05) , 
0.549782, 0, 13, 0, 0.711236,-0.200404) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.640599,-0.000250077) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175731,0.00149482) , 
0.609871, 1, 17, 0, 0.284564,0.103172) , 
0.0877569, 0, 15, 0, 0.650466,-0.157166) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.858243,-0.000115795) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530242,-6.19868e-05) , 
0.149665, 1, 10, 0, 0.574146,-0.0611483) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.383432,9.19161e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.210759,0.000269707) , 
0.123834, 0, 5, 0, 0.302291,0.102979) , 
0.702336, 0, 14, 0, 0.417277,0.0335584) , 
1.21981, 0, 7, 0, 0.505372,-0.0384944)    );
  // itree = 683
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.671903,-9.97091e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.372138,-0.000100243) , 
0.299208, 0, 11, 0, 0.651385,-0.144212) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.8363,-0.000388883) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201892,0.000505996) , 
3.66416, 0, 8, 0, 0.239441,0.126846) , 
0.0903757, 0, 15, 0, 0.597395,-0.108687) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612855,-6.54307e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225915,2.78256e-05) , 
0.643192, 1, 7, 0, 0.529263,-0.0885038) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.559503,-0.000128555) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.2182,0.000340353) , 
2.54309, 0, 10, 0, 0.260714,0.151938) , 
0.419653, 1, 8, 0, 0.341221,0.079858) , 
0.344089, 1, 16, 0, 0.512099,-0.0459094)    );
  // itree = 684
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664215,-0.000115032) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159037,0.0009076) , 
0.285421, 1, 0, 0, 0.651387,-0.142724) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.799448,-0.000100432) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.384815,1.08752e-05) , 
0.149771, 1, 10, 0, 0.427657,0.0460566) , 
0.716338, 0, 7, 0, 0.563515,-0.068579) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.49054,-8.6161e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238252,0.000101037) , 
2.09549, 0, 18, 0, 0.336931,0.0586077) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.411466,-0.000182693) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0614655,0.00105726) , 
2.54224, 0, 10, 0, 0.0985072,0.2515) , 
0.965581, 0, 7, 0, 0.218546,0.154385) , 
0.116222, 0, 15, 0, 0.477132,-0.0127471)    );
  // itree = 685
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.923805,-0.000113151) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.665752,-0.000137331) , 
0.449749, 0, 15, 0, 0.706623,-0.194117) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.629544,-7.03429e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.372376,8.07505e-05) , 
0.732277, 1, 8, 0, 0.519049,-0.0247957) , 
0.976598, 0, 7, 0, 0.617592,-0.113749) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634353,-5.81259e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233654,4.085e-05) , 
0.45103, 0, 16, 0, 0.465073,-0.0574311) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.308879,7.04978e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0765658,0.00109355) , 
0.377812, 1, 16, 0, 0.204802,0.167074) , 
2.09454, 0, 10, 0, 0.28251,0.100044) , 
0.622068, 0, 14, 0, 0.517855,-0.0501141)    );
  // itree = 686
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.822037,-0.000234616) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.477124,-0.000133257) , 
1.89114, 0, 7, 0, 0.794976,-0.278094) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.582449,-0.000132346) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.17105,0.000234555) , 
0.24861, 1, 16, 0, 0.490757,-0.0303974) , 
0.0255844, 1, 0, 0, 0.714585,-0.212639) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.654032,-0.000103927) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.367101,7.8834e-05) , 
0.0904555, 1, 0, 0, 0.545568,-0.0752545) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.389326,-2.00931e-07) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.232864,0.00030276) , 
1.34507, 1, 18, 0, 0.315714,0.121456) , 
0.73876, 1, 8, 0, 0.430172,0.0235022) , 
1.72668, 0, 7, 0, 0.487895,-0.024424)    );
  // itree = 687
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729086,-0.000110143) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.468902,-0.000108069) , 
0.889511, 0, 18, 0, 0.694174,-0.171508) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707078,-0.000361073) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.290506,0.000315583) , 
1.3621, 0, 3, 0, 0.337936,0.167936) , 
-1.36189, 0, 5, 0, 0.673724,-0.152022) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.451544,9.15383e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0899624,0.000809592) , 
0.107175, 1, 6, 0, 0.42153,-0.00645652) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.421982,-5.66297e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0745097,0.00142902) , 
0.200961, 0, 15, 0, 0.194648,0.199712) , 
0.456907, 0, 7, 0, 0.357466,0.051759) , 
0.697055, 0, 14, 0, 0.518715,-0.0521418)    );
  // itree = 688
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.812783,-0.0001136) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.627993,-0.000110953) , 
-0.123784, 1, 4, 0, 0.742658,-0.214875) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628878,-0.000161218) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.341397,3.54729e-05) , 
0.740047, 0, 7, 0, 0.520605,-0.00649984) , 
0.536, 0, 2, 0, 0.633976,-0.112887) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.849349,-0.000173472) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.444961,-1.56762e-05) , 
0.220966, 1, 13, 0, 0.47113,-0.0442381) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.328339,9.82517e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0968796,0.00129499) , 
0.560984, 0, 2, 0, 0.261115,0.135292) , 
0.913812, 0, 7, 0, 0.35711,0.0532314) , 
0.695491, 0, 14, 0, 0.492294,-0.0278784)    );
  // itree = 689
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712743,-0.000110469) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.338988,5.22798e-05) , 
0.56881, 0, 13, 0, 0.667453,-0.174763) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71703,-0.000192593) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.354806,6.6865e-05) , 
1.96486, 0, 7, 0, 0.459217,0.01121) , 
0.985008, 1, 8, 0, 0.588426,-0.104185) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.565447,-0.000114942) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.291423,0.00020062) , 
2.09351, 0, 10, 0, 0.377174,0.039055) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705567,-5.21513e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.146892,0.000535627) , 
0.876281, 0, 14, 0, 0.173147,0.233351) , 
0.516927, 0, 7, 0, 0.280842,0.130792) , 
0.396602, 1, 16, 0, 0.516463,-0.0492091)    );
  // itree = 690
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761424,-0.000182636) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.595064,-8.39643e-05) , 
0.785542, 0, 14, 0, 0.666789,-0.141463) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.614982,-0.000128743) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204829,0.000204592) , 
0.218012, 1, 16, 0, 0.471431,0.0341766) , 
0.363242, 0, 2, 0, 0.614453,-0.0944095) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.642456,-8.02287e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.347994,6.05509e-05) , 
0.299437, 1, 10, 0, 0.386035,0.0254) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.338341,-3.5686e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.141702,0.000354245) , 
0.904173, 0, 7, 0, 0.22912,0.168587) , 
1.4954, 1, 18, 0, 0.312301,0.0926835) , 
0.695771, 0, 14, 0, 0.460441,0.000955171)    );
  // itree = 691
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.801707,-0.000175532) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.633142,-0.000109921) , 
0.24382, 1, 8, 0, 0.664209,-0.158261) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.460011,-0.000135352) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.077335,0.000499984) , 
1.78562, 0, 7, 0, 0.252886,0.121484) , 
0.0887707, 0, 15, 0, 0.601771,-0.115797) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687784,-0.000149516) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152028,0.00017027) , 
0.257025, 0, 2, 0, 0.602888,-0.088544) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.443785,-4.75212e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.262979,0.000128167) , 
2.09435, 0, 10, 0, 0.305331,0.113893) , 
0.770301, 0, 14, 0, 0.380851,0.0625143) , 
0.986691, 0, 7, 0, 0.484024,-0.0207599)    );
  // itree = 692
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64881,-0.000103459) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.481517,-5.57484e-05) , 
0.985008, 1, 8, 0, 0.581768,-0.0924739) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.621201,-8.0419e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.336432,8.68756e-05) , 
1.34674, 1, 9, 0, 0.389349,0.0464023) , 
0.344149, 1, 16, 0, 0.519689,-0.0476688) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.932142,-0.00688215) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0374044,0.0297678) , 
0.804671, 0, 2, 0, 0.763137,-0.452376) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.366102,0.00485674) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.057453,0.000982052) , 
2.59585, 0, 8, 0, 0.0716735,0.262932) , 
0.0726751, 1, 16, 0, 0.0783189,0.256057) , 
0.497626, 0, 14, 0, 0.48496,-0.0237703)    );
  // itree = 693
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.875963,-0.000261178) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211219,0.0214012) , 
0.40797, 0, 13, 0, 0.85874,-0.336674) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72903,-0.00017194) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292859,0.000751572) , 
0.116547, 0, 15, 0, 0.669232,-0.154602) , 
2.42144, 0, 7, 0, 0.721577,-0.204893) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.8099,-0.000164476) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.519673,1.66674e-05) , 
0.289077, 0, 1, 0, 0.668992,-0.150243) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.388869,1.298e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.047505,0.00425148) , 
0.0638254, 0, 15, 0, 0.354067,0.0796761) , 
0.80737, 0, 14, 0, 0.402537,0.0442893) , 
0.133026, 1, 16, 0, 0.479667,-0.015952)    );
  // itree = 694
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.784047,-0.000113657) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530756,-3.69132e-05) , 
0.704869, 0, 14, 0, 0.693014,-0.181832) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.758555,-0.000177766) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.463454,-1.3894e-05) , 
1.04719, 1, 9, 0, 0.529884,-0.0327336) , 
0.536, 0, 2, 0, 0.619561,-0.114697) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703293,-6.57663e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.272044,0.000108133) , 
0.296948, 0, 16, 0, 0.34999,0.035843) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.355329,-0.000104236) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.1018,0.000390281) , 
2.39355, 0, 10, 0, 0.148007,0.220531) , 
0.311472, 1, 16, 0, 0.227015,0.148288) , 
0.624085, 0, 14, 0, 0.504969,-0.037926)    );
  // itree = 695
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.950148,-9.00743e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.656705,-0.0001501) , 
0.467951, 0, 15, 0, 0.699177,-0.180248) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.577173,-8.22611e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.302199,0.000489578) , 
0.135775, 0, 15, 0, 0.538085,-0.0344413) , 
1.20247, 1, 17, 0, 0.597721,-0.0884189) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.854735,-0.000272167) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.361412,0.000213272) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.18919,0.000207972) , 
0.609205, 1, 2, 0, 0.260601,0.121925) , 
0.808529, 0, 0, 0, 0.271869,0.110966) , 
0.642489, 0, 14, 0, 0.479746,-0.0162313)    );
  // itree = 696
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741732,-0.0001341) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.516844,-7.83491e-05) , 
0.0678587, 1, 0, 0, 0.699955,-0.172306) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730689,-0.000175535) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.280989,0.000185734) , 
0.877759, 0, 14, 0, 0.484874,0.0215577) , 
0.363242, 0, 2, 0, 0.646008,-0.123681) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.650951,-9.39118e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.155062,0.000275918) , 
0.117315, 0, 15, 0, 0.483263,-0.0600644) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.497389,-0.000100482) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227063,0.000151752) , 
1.19745, 1, 9, 0, 0.263346,0.137745) , 
-0.866524, 1, 4, 0, 0.322572,0.0844726) , 
0.697055, 0, 14, 0, 0.485606,-0.0204504)    );
  // itree = 697
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729089,-0.000106359) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.596635,-9.43178e-05) , 
0.548217, 0, 2, 0, 0.674935,-0.162638) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.799128,-0.000240037) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.281856,0.00029977) , 
2.70203, 0, 7, 0, 0.349905,0.0458331) , 
0.115759, 0, 15, 0, 0.603033,-0.116521) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.805696,-0.000181153) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.230467,0.0105354) , 
0.274418, 0, 2, 0, 0.706377,-0.20084) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.91132,-0.000287488) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257144,0.000200011) , 
0.803487, 0, 16, 0, 0.271751,0.13409) , 
0.802352, 0, 14, 0, 0.333583,0.0864419) , 
0.347296, 1, 16, 0, 0.517866,-0.0523695)    );
  // itree = 698
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.859212,-0.000174985) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.540603,-1.79617e-05) , 
0.0159501, 1, 0, 0, 0.816004,-0.301834) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.823992,-0.000199613) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.554469,-0.000208173) , 
0.91931, 0, 13, 0, 0.614251,-0.102936) , 
0.639202, 0, 2, 0, 0.722413,-0.209567) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.498722,-2.78455e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0538033,0.00399103) , 
0.0650505, 0, 15, 0, 0.46265,-0.0076989) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.527204,-0.000459456) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.07092,0.000610772) , 
0.908447, 0, 1, 0, 0.089127,0.284588) , 
0.323282, 1, 0, 0, 0.437621,0.0118864) , 
0.132973, 1, 16, 0, 0.503768,-0.0395495)    );
  // itree = 699
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.9795,-8.29131e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.490774,0.000281237) , 
0.867746, 0, 5, 0, 0.922131,-0.392946) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.658379,-0.000169826) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.343564,5.90954e-05) , 
0.239345, 1, 16, 0, 0.584359,-0.100261) , 
0.434121, 0, 15, 0, 0.629759,-0.139601) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575636,-8.16367e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.355486,0.000254401) , 
0.973265, 1, 8, 0, 0.493033,-0.0207341) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.895629,-0.000234988) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224485,0.000115501) , 
0.785113, 0, 0, 0, 0.253193,0.151651) , 
0.663286, 0, 13, 0, 0.408528,0.0400039) , 
1.2264, 0, 7, 0, 0.488555,-0.0249654)    );
  // itree = 700
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.774824,-0.000134151) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.641869,-0.000133607) , 
0.792916, 1, 13, 0, 0.7348,-0.206565) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.530487,-0.000120668) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251427,0.000414754) , 
0.231549, 1, 15, 0, 0.429994,0.0752198) , 
0.263635, 0, 1, 0, 0.662587,-0.139806) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.527087,-9.3512e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0742551,0.00050787) , 
0.516302, 0, 14, 0, 0.478373,-0.0306666) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.449891,-1.2175e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229581,0.00013746) , 
2.09409, 0, 10, 0, 0.282693,0.131267) , 
0.943029, 0, 7, 0, 0.367464,0.0611157) , 
0.741893, 0, 14, 0, 0.47385,-0.0113128)    );
  // itree = 701
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.922606,-0.000172945) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.753768,-0.000213344) , 
0.909778, 0, 2, 0, 0.808801,-0.294127) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.588298,-0.000372259) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.040306,0.000204785) , 
0.821011, 1, 2, 0, 0.460985,0.0153508) , 
2.24313, 1, 10, 0, 0.780064,-0.268557) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.765329,-0.000132478) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.307157,0.000608469) , 
0.954467, 1, 8, 0, 0.624066,-0.145597) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.567303,-0.00013301) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.353774,6.05594e-05) , 
1.94508, 0, 11, 0, 0.392105,0.0551754) , 
0.747998, 1, 10, 0, 0.476933,-0.0182471) , 
1.95164, 0, 7, 0, 0.526076,-0.0588264)    );
  // itree = 702
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736531,-0.000120482) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.467911,-6.39158e-05) , 
0.594341, 0, 13, 0, 0.712625,-0.186691) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.601078,-0.000147182) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227782,0.000275199) , 
0.890825, 0, 14, 0, 0.370468,0.128703) , 
0.304019, 0, 2, 0, 0.666894,-0.144537) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.897141,-0.000278699) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.258696,-3.84881e-05) , 
0.717853, 1, 8, 0, 0.716726,-0.27483) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.609946,-2.16011e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.339121,0.000114801) , 
3.02049, 0, 9, 0, 0.368419,0.0425924) , 
0.598492, 1, 9, 0, 0.387841,0.024893) , 
0.704971, 0, 14, 0, 0.520436,-0.0556133)    );
  // itree = 703
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.863262,-0.000171512) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.674518,-9.95269e-05) , 
0.244496, 1, 8, 0, 0.727203,-0.201057) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.536143,-6.41463e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.217728,9.16464e-05) , 
0.344527, 0, 12, 0, 0.485465,0.0227441) , 
0.305472, 0, 1, 0, 0.656277,-0.135393) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.610815,-6.19619e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.348723,-1.41813e-05) , 
2.09455, 0, 10, 0, 0.432082,-0.00953529) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.319269,0.000128577) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113084,0.000416979) , 
0.652154, 0, 2, 0, 0.233993,0.160185) , 
0.926263, 0, 7, 0, 0.320698,0.0858969) , 
0.694671, 0, 14, 0, 0.49421,-0.0285219)    );
  // itree = 704
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639406,-9.08183e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.347083,0.000102768) , 
-1.36185, 0, 5, 0, 0.618563,-0.120489) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.511645,-0.000317087) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0620203,0.000990526) , 
2.84366, 0, 9, 0, 0.0969775,0.310127) , 
0.323282, 1, 0, 0, 0.598345,-0.103797) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.757726,-0.000111762) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164838,0.000563626) , 
0.0810786, 0, 15, 0, 0.601845,-0.195815) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.351026,0.000142832) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145412,0.000464164) , 
2.0944, 0, 10, 0, 0.195864,0.171554) , 
0.244921, 1, 8, 0, 0.277488,0.0976934) , 
0.116155, 0, 15, 0, 0.518823,-0.0538591)    );
  // itree = 705
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.747821,-0.000168595) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530628,-4.9824e-05) , 
0.0162488, 1, 0, 0, 0.662468,-0.148525) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.52929,-4.27655e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.321591,0.000138865) , 
1.79338, 1, 18, 0, 0.458653,-0.000418333) , 
0.265475, 1, 16, 0, 0.565981,-0.078411) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.777685,-0.000159553) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.2722,0.000139072) , 
0.482801, 1, 13, 0, 0.357599,0.0261928) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.66196,-0.00229174) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0585869,0.000862152) , 
0.187903, 1, 2, 0, 0.0632175,0.263991) , 
0.0177492, 1, 6, 0, 0.165514,0.181356) , 
0.0890491, 0, 15, 0, 0.50617,-0.0396137)    );
  // itree = 706
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.800544,-0.000140411) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.41311,4.95353e-05) , 
1.22127, 1, 8, 0, 0.740599,-0.216311) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.804507,-0.000207451) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.497265,-5.94237e-05) , 
2.24444, 0, 11, 0, 0.574398,-0.0542716) , 
2.39366, 0, 9, 0, 0.671335,-0.148781) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.772647,-0.000175415) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.244922,0.000243673) , 
0.600568, 0, 14, 0, 0.667986,-0.196974) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.510121,-6.76866e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252083,0.00017892) , 
-1.36161, 1, 4, 0, 0.281178,0.122968) , 
1.85242, 0, 7, 0, 0.33567,0.0778954) , 
0.706203, 0, 14, 0, 0.499614,-0.0328174)    );
  // itree = 707
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730166,-0.000129576) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.549035,-7.15082e-05) , 
0.449437, 0, 2, 0, 0.656557,-0.133964) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.534471,-6.97712e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.274658,0.000149274) , 
1.2063, 1, 17, 0, 0.372913,0.0424282) , 
0.691998, 0, 14, 0, 0.557962,-0.0726498) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.648054,-0.00016497) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270625,-6.18062e-05) , 
0.118415, 1, 15, 0, 0.516362,-0.106814) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.515655,-0.000123904) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.15843,0.000129715) , 
2.97072, 0, 9, 0, 0.188464,0.213551) , 
1.34798, 1, 9, 0, 0.239374,0.16381) , 
0.0923662, 1, 0, 0, 0.470108,-0.00744366)    );
  // itree = 708
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.671695,-0.000108218) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.410822,2.8046e-05) , 
0.138948, 0, 15, 0, 0.629597,-0.119699) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.859139,-0.000321321) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.297076,0.000175343) , 
0.132723, 1, 2, 0, 0.340083,0.147818) , 
0.273306, 0, 2, 0, 0.605333,-0.097278) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.44832,2.25678e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0256712,0.00530575) , 
0.472555, 0, 14, 0, 0.395056,-0.00603551) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.356292,1.56437e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128917,0.000497358) , 
0.315551, 1, 16, 0, 0.217081,0.159406) , 
1.79625, 0, 17, 0, 0.285546,0.0957622) , 
0.638, 0, 14, 0, 0.494102,-0.0301328)    );
  // itree = 709
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.610744,-9.68302e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.325491,0.000350914) , 
0.226803, 0, 2, 0, 0.596266,-0.088802) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.649626,-0.000662246) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.161367,6.76282e-05) , 
0.218926, 0, 6, 0, 0.187105,0.275226) , 
0.23862, 1, 0, 0, 0.584109,-0.0779859) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.591686,-9.6027e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.216274,0.000919941) , 
0.0894442, 0, 15, 0, 0.467361,-0.0619468) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.395534,0.000265991) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.140622,0.000260043) , 
2.53791, 0, 18, 0, 0.18479,0.185732) , 
1.06112, 1, 17, 0, 0.249512,0.129002) , 
0.638, 0, 14, 0, 0.467812,-0.0060424)    );
  // itree = 710
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745093,-0.000122769) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.538123,-5.43844e-05) , 
0.277646, 1, 16, 0, 0.682277,-0.160362) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.8047,-0.000214504) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.228995,0.000194701) , 
2.46696, 0, 7, 0, 0.381125,0.0916757) , 
0.133159, 0, 15, 0, 0.64575,-0.129792) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.587961,-6.91336e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.151987,0.00115407) , 
0.852609, 1, 2, 0, 0.484283,-0.0860801) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72478,-0.000107267) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199242,0.000252993) , 
0.814274, 0, 1, 0, 0.236875,0.150986) , 
0.443972, 1, 13, 0, 0.308922,0.0819503) , 
0.66057, 0, 14, 0, 0.515543,-0.0479388)    );
  // itree = 711
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.805349,-0.000125304) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.580107,-8.29853e-05) , 
0.0938023, 1, 8, 0, 0.620415,-0.145992) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.54897,-0.000135197) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165165,0.00026494) , 
2.84271, 0, 9, 0, 0.241904,0.166704) , 
0.473835, 1, 16, 0, 0.56809,-0.102765) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.583136,-0.000100452) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.320037,2.52645e-05) , 
2.39366, 1, 9, 0, 0.486901,-0.0207979) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.347836,0.000292438) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164987,0.000624401) , 
0.219022, 0, 0, 0, 0.198832,0.211479) , 
0.735826, 0, 7, 0, 0.383991,0.0621806) , 
0.985008, 1, 8, 0, 0.492197,-0.0347678)    );
  // itree = 712
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.802677,-9.80977e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.656458,-0.000182844) , 
0.0303064, 0, 6, 0, 0.712627,-0.196523) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.954722,-0.000825354) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.323889,0.000124849) , 
0.378976, 0, 12, 0, 0.368322,0.0168873) , 
0.608437, 0, 14, 0, 0.650862,-0.158239) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.540661,-5.2659e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.142503,0.000506676) , 
0.225915, 1, 0, 0, 0.500153,-0.0172988) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.371776,-1.28764e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0794196,0.000802524) , 
2.09412, 0, 10, 0, 0.156461,0.196933) , 
0.119003, 0, 15, 0, 0.411549,0.0379302) , 
1.22803, 0, 7, 0, 0.502862,-0.0369204)    );
  // itree = 713
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.86654,-0.000167742) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.691146,-0.000259639) , 
0.771764, 0, 2, 0, 0.754142,-0.233712) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.871126,-0.000278549) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.19971,2.25776e-05) , 
0.870088, 0, 14, 0, 0.335028,0.147933) , 
0.0166424, 1, 0, 0, 0.71825,-0.201028) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.559857,-6.22673e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.324769,0.000212199) , 
2.24361, 1, 18, 0, 0.519426,-0.0356749) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.773899,-0.000811088) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201415,0.000360406) , 
0.411714, 0, 12, 0, 0.217217,0.142344) , 
0.116337, 0, 15, 0, 0.436881,0.0129493) , 
0.127302, 1, 16, 0, 0.497047,-0.0328065)    );
  // itree = 714
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746068,-0.000127029) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.588702,-0.000147573) , 
0.545165, 0, 2, 0, 0.686832,-0.164952) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.520827,-9.95528e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224926,0.00030438) , 
0.0328644, 1, 6, 0, 0.384331,0.0143336) , 
0.641941, 0, 14, 0, 0.596925,-0.111666) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575845,-8.06186e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306782,0.000147192) , 
0.355472, 1, 16, 0, 0.467564,0.0156641) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.418688,-9.06446e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0869334,0.000535287) , 
1.34725, 1, 9, 0, 0.145116,0.223353) , 
0.146939, 0, 15, 0, 0.353464,0.0891563) , 
0.976608, 0, 7, 0, 0.470164,-0.00710531)    );
  // itree = 715
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.748233,-0.000136134) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.499518,1.63679e-06) , 
0.985223, 1, 8, 0, 0.664407,-0.155275) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.606716,-9.17456e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317977,8.20052e-05) , 
0.310852, 1, 16, 0, 0.526157,-0.0200156) , 
0.897585, 1, 11, 0, 0.600135,-0.092394) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.619135,-0.000100344) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.23101,0.000278059) , 
0.739078, 0, 2, 0, 0.438506,-0.0458994) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.403089,2.58184e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138959,0.000388549) , 
0.220351, 1, 16, 0, 0.201188,0.170345) , 
1.94491, 1, 9, 0, 0.290519,0.0889463) , 
0.637994, 0, 14, 0, 0.490783,-0.0283473)    );
  // itree = 716
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.734427,-0.000123501) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.433426,1.15815e-05) , 
0.105844, 1, 0, 0, 0.700185,-0.17268) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.630527,-0.000134756) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.329952,5.92726e-05) , 
0.182314, 1, 16, 0, 0.495437,0.0125559) , 
0.305472, 0, 1, 0, 0.634979,-0.113688) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769593,-0.000176117) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317268,-0.00017598) , 
2.24404, 0, 9, 0, 0.675152,-0.212101) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.517218,8.66419e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.29428,0.000146568) , 
0.299177, 1, 11, 0, 0.327352,0.0742551) , 
2.10387, 0, 7, 0, 0.356538,0.0502252) , 
0.697055, 0, 14, 0, 0.493477,-0.0303881)    );
  // itree = 717
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683938,-0.000115563) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.506504,-2.76561e-05) , 
0.985013, 1, 8, 0, 0.609114,-0.112343) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.395416,8.56882e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0790162,7.87753e-05) , 
0.613064, 1, 1, 0, 0.317898,0.111796) , 
0.138549, 1, 0, 0, 0.561118,-0.0754023) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.973636,-0.000989688) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.338953,-5.47064e-05) , 
0.408142, 0, 12, 0, 0.406449,-0.00368494) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.243151,-8.8389e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0596272,0.00267338) , 
0.0852473, 0, 15, 0, 0.076135,0.250255) , 
1.717, 0, 7, 0, 0.149032,0.194213) , 
0.0890491, 0, 15, 0, 0.498867,-0.034673)    );
  // itree = 718
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720881,-0.000125085) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.496412,3.9345e-06) , 
0.350408, 0, 2, 0, 0.670601,-0.151909) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.726511,-0.000138816) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.277735,-9.73416e-06) , 
1.20275, 1, 9, 0, 0.350077,0.141829) , 
0.0819633, 1, 0, 0, 0.630052,-0.114749) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.620918,-6.27114e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.268146,1.85665e-05) , 
0.856435, 0, 7, 0, 0.472996,-0.0608175) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.879297,-0.00030091) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22524,0.000276958) , 
0.795746, 0, 0, 0, 0.240056,0.140505) , 
2.09438, 0, 10, 0, 0.305256,0.0841543) , 
0.66057, 0, 14, 0, 0.501896,-0.0362665)    );
  // itree = 719
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683806,-0.000110912) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.38445,-2.38585e-05) , 
0.539362, 0, 13, 0, 0.657241,-0.148835) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727306,-0.000896587) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.18318,0.000429587) , 
0.408448, 0, 12, 0, 0.214828,0.145303) , 
0.0895322, 0, 15, 0, 0.603404,-0.113042) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.878051,-0.000198055) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34281,0.000220247) , 
0.329801, 0, 2, 0, 0.684705,-0.180757) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.438636,4.95644e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.274178,0.000212541) , 
0.444217, 1, 13, 0, 0.310402,0.101777) , 
0.826246, 0, 14, 0, 0.346786,0.0743132) , 
0.309674, 1, 16, 0, 0.504105,-0.0405443)    );
  // itree = 720
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.95666,-8.31914e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.625068,-0.000213608) , 
0.271925, 0, 16, 0, 0.78933,-0.256577) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.652608,-9.6447e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.468206,-6.28499e-05) , 
2.54313, 0, 9, 0, 0.555944,-0.0429585) , 
0.911253, 1, 17, 0, 0.607665,-0.090299) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679428,-8.16117e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.323364,0.000116223) , 
0.159631, 1, 12, 0, 0.43744,-0.0379169) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.376599,3.57744e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163403,0.000226902) , 
1.79417, 0, 17, 0, 0.248022,0.144726) , 
0.748079, 1, 10, 0, 0.30401,0.0907406) , 
0.677618, 0, 14, 0, 0.468885,-0.00755771)    );
  // itree = 721
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.662644,-0.000106777) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187309,0.000240981) , 
0.2268, 0, 2, 0, 0.65011,-0.13954) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.496999,-3.56946e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180386,0.000828551) , 
1.35015, 1, 17, 0, 0.348126,0.0398646) , 
0.116474, 0, 15, 0, 0.578257,-0.0968533) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694609,-0.000154115) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.336762,0.00019074) , 
0.973442, 0, 7, 0, 0.438595,0.00266065) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558912,-0.000132895) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0995279,0.00038327) , 
0.238138, 0, 6, 0, 0.130937,0.254286) , 
0.138549, 1, 0, 0, 0.289027,0.124989) , 
0.394988, 1, 16, 0, 0.507181,-0.0423375)    );
  // itree = 722
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.795707,-0.00019409) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.121007,1.38937e-05) , 
0.561906, 0, 14, 0, 0.772928,-0.260347) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.889253,-0.000855148) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0998122,0.000132858) , 
0.361166, 0, 12, 0, 0.246959,0.172138) , 
0.261353, 1, 16, 0, 0.737331,-0.231077) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.820107,-0.000197384) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.505321,-3.51042e-05) , 
2.39356, 0, 11, 0, 0.53689,-0.0496417) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.643141,-5.74309e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.179043,0.000393007) , 
0.0372869, 1, 12, 0, 0.203584,0.155209) , 
0.117052, 0, 15, 0, 0.451839,0.00263095) , 
1.72671, 0, 7, 0, 0.512391,-0.0469384)    );
  // itree = 723
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.765483,-0.000120514) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.475006,-2.44515e-05) , 
0.382521, 1, 16, 0, 0.739131,-0.209804) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575817,-0.000108065) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.177598,0.000526524) , 
0.788411, 0, 14, 0, 0.489751,0.0187448) , 
0.305196, 0, 1, 0, 0.663555,-0.140541) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.926238,-0.000279081) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.538989,-0.000119209) , 
0.462015, 1, 13, 0, 0.60736,-0.167052) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.507945,-2.54995e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.301339,0.000145673) , 
1.04616, 1, 17, 0, 0.344263,0.0628046) , 
1.04741, 1, 9, 0, 0.375069,0.0358904) , 
0.708182, 0, 14, 0, 0.508973,-0.046002)    );
  // itree = 724
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.868046,-0.000225886) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.657076,-0.000162599) , 
0.897966, 1, 10, 0, 0.768223,-0.271705) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.800484,-0.000377654) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.374265,-0.000128358) , 
0.860453, 0, 14, 0, 0.473233,0.0110601) , 
0.371255, 1, 4, 0, 0.6923,-0.198929) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.528295,-4.15329e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143073,0.000459196) , 
0.572847, 1, 16, 0, 0.499559,-0.0423693) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.618365,3.52385e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224396,0.000144527) , 
0.408728, 0, 12, 0, 0.264796,0.165819) , 
-0.6191, 0, 5, 0, 0.443792,0.00708413) , 
1.72668, 0, 7, 0, 0.491369,-0.0323565)    );
  // itree = 725
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.763584,-0.000123112) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.382232,2.09313e-05) , 
0.106777, 1, 0, 0, 0.732543,-0.203957) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721979,-0.000194869) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.404657,0.000141045) , 
0.107119, 1, 16, 0, 0.509177,-0.00517365) , 
0.350403, 0, 2, 0, 0.683779,-0.160559) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.900795,-0.000235102) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0968004,0.036631) , 
0.576792, 0, 18, 0, 0.82776,-0.383326) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.499201,3.14135e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.314151,0.000105484) , 
0.299187, 1, 11, 0, 0.339116,0.0663064) , 
-2.10359, 1, 3, 0, 0.352049,0.0544063) , 
0.694595, 0, 14, 0, 0.528511,-0.0599434)    );
  // itree = 726
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.798614,-0.000144678) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.370411,-6.30275e-05) , 
0.556104, 0, 13, 0, 0.767226,-0.234147) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.605243,-8.77141e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.277097,0.000436681) , 
0.133083, 0, 15, 0, 0.57073,-0.0620689) , 
1.05497, 1, 17, 0, 0.630344,-0.114275) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694881,-0.000187592) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.328921,5.19897e-05) , 
0.813364, 0, 1, 0, 0.365507,0.0323283) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.473712,-0.000118421) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.116864,0.000326432) , 
0.337817, 0, 12, 0, 0.14756,0.221342) , 
0.356164, 1, 16, 0, 0.260417,0.123467) , 
0.659126, 0, 14, 0, 0.491499,-0.0250429)    );
  // itree = 727
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74846,-0.00011921) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.414125,-8.99257e-05) , 
0.375666, 1, 16, 0, 0.716462,-0.188723) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.758661,-0.000189073) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.441169,-5.69252e-06) , 
0.459176, 0, 12, 0, 0.487354,0.0208036) , 
0.30224, 0, 1, 0, 0.645722,-0.124029) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.497377,-2.77615e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.241135,0.000337683) , 
0.561009, 0, 2, 0, 0.436913,-0.0166996) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.596972,-0.0001138) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157023,0.000375843) , 
2.64925, 0, 8, 0, 0.21519,0.181841) , 
1.79076, 1, 18, 0, 0.360967,0.0513058) , 
0.706203, 0, 14, 0, 0.493169,-0.0300959)    );
  // itree = 728
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.897878,-0.000157245) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.633441,-0.000102197) , 
0.0941192, 0, 6, 0, 0.649645,-0.141521) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.561079,-0.00024937) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.146789,0.00210668) , 
0.634894, 1, 17, 0, 0.211732,0.151548) , 
0.088705, 0, 15, 0, 0.595832,-0.105507) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718255,-0.000149451) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.421987,2.97462e-05) , 
1.19672, 1, 18, 0, 0.566525,-0.138094) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.417745,0.000155343) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194439,0.000149233) , 
-0.282176, 1, 3, 0, 0.290396,0.129284) , 
2.39356, 0, 10, 0, 0.335143,0.0859555) , 
0.309515, 1, 16, 0, 0.496754,-0.0327396)    );
  // itree = 729
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.942136,-0.000245473) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.72827,-0.000238011) , 
1.11532, 0, 5, 0, 0.841338,-0.328648) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69955,-0.00018685) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.269529,0.000279827) , 
0.528005, 0, 13, 0, 0.63668,-0.139212) , 
0.614281, 1, 17, 0, 0.708309,-0.205513) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.592764,-7.19169e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.242663,9.63711e-07) , 
1.30983, 0, 18, 0, 0.527156,-0.0603225) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.454636,3.84234e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279107,0.000116113) , 
0.866664, 0, 5, 0, 0.339902,0.0980684) , 
0.738757, 1, 8, 0, 0.429455,0.022319) , 
1.71693, 0, 7, 0, 0.487356,-0.0249877)    );
  // itree = 730
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.988253,-6.34796e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.680353,-0.000185933) , 
0.459213, 0, 15, 0, 0.727828,-0.221756) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.847205,-0.0013529) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.108383,6.61337e-05) , 
0.317303, 0, 12, 0, 0.18859,0.221779) , 
0.330552, 1, 16, 0, 0.695955,-0.19554) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.716896,-0.000106885) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.466679,-7.07032e-05) , 
1.79492, 0, 9, 0, 0.539905,-0.0907269) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.487317,-5.84104e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.19758,0.000386325) , 
0.14413, 0, 15, 0, 0.381872,0.0692403) , 
2.09434, 0, 10, 0, 0.417059,0.0336225) , 
0.90688, 1, 17, 0, 0.466014,-0.00660271)    );
  // itree = 731
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.822544,-0.000221138) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.608047,-0.000124822) , 
0.762767, 1, 17, 0, 0.675533,-0.171846) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663028,-7.34528e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.326278,-1.76795e-05) , 
0.317582, 1, 13, 0, 0.410491,0.0352366) , 
0.579858, 0, 13, 0, 0.609242,-0.120052) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.523079,-4.96622e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238076,0.000339508) , 
-1.11423, 0, 5, 0, 0.48938,-0.0102742) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.511309,-2.24955e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0979761,0.000423825) , 
1.03081, 1, 17, 0, 0.134984,0.215241) , 
0.119666, 0, 15, 0, 0.398342,0.0476568) , 
1.22804, 0, 7, 0, 0.472095,-0.0109925)    );
  // itree = 732
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.890433,-0.000153176) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.119564,0.0114343) , 
0.409155, 1, 15, 0, 0.861308,-0.341813) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.640647,-9.0163e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.331176,2.69786e-05) , 
-1.11427, 0, 5, 0, 0.610677,-0.0963597) , 
0.907177, 0, 2, 0, 0.643155,-0.128166) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634301,-0.00016348) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0838603,0.000761437) , 
0.56749, 0, 14, 0, 0.464839,-0.0594066) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702241,-0.000157954) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.217911,0.000191952) , 
0.242955, 0, 6, 0, 0.236921,0.14643) , 
-1.1141, 1, 4, 0, 0.280087,0.107445) , 
0.657606, 0, 14, 0, 0.507604,-0.0402013)    );
  // itree = 733
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.827742,-0.000242104) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0161971,0.00165599) , 
0.0959542, 1, 0, 0, 0.805394,-0.295861) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.544797,-6.42915e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0911781,0.00241345) , 
0.0619076, 0, 15, 0, 0.515521,-0.0485301) , 
0.615633, 1, 17, 0, 0.540578,-0.0699094) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.99122,-0.000260108) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.354189,0.000315436) , 
0.208586, 1, 1, 0, 0.651159,-0.226748) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.506651,-1.15893e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.250628,8.98491e-05) , 
0.397152, 0, 7, 0, 0.314051,0.121091) , 
0.705527, 0, 16, 0, 0.340572,0.0937256) , 
0.490593, 0, 7, 0, 0.48595,-0.0252161)    );
  // itree = 734
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.711973,-0.000116202) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.360577,2.46108e-05) , 
-1.11424, 0, 5, 0, 0.683397,-0.156881) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.515357,-0.000143175) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.213553,0.000309583) , 
0.82278, 0, 14, 0, 0.322497,0.166866) , 
0.383286, 1, 16, 0, 0.644687,-0.122156) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.793054,-0.000161765) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.463465,-0.000139532) , 
0.642428, 0, 1, 0, 0.641551,-0.188001) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817721,-0.000173593) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.298626,0.000159878) , 
0.250076, 0, 6, 0, 0.318205,0.086487) , 
1.8323, 0, 7, 0, 0.36124,0.049955) , 
0.706618, 0, 14, 0, 0.492135,-0.0295257)    );
  // itree = 735
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683033,-0.000113872) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.328948,0.000276027) , 
-1.36185, 0, 5, 0, 0.661321,-0.139579) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.376574,0.000232133) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.147496,-3.00693e-05) , 
0.147417, 0, 0, 0, 0.196114,0.29438) , 
0.246705, 0, 7, 0, 0.626745,-0.107325) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.824689,-0.000289512) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0604566,0.000734669) , 
0.917574, 1, 8, 0, 0.635701,-0.21937) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.366997,1.93961e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.135276,0.000200838) , 
0.172148, 0, 15, 0, 0.208736,0.178917) , 
0.598653, 1, 9, 0, 0.232671,0.156589) , 
0.676721, 0, 14, 0, 0.459144,0.00491871)    );
  // itree = 736
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.90183,-0.000145431) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.645876,-0.000122596) , 
0.182255, 0, 0, 0, 0.676352,-0.186103) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.779157,-0.000348047) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0922816,-5.92975e-07) , 
1.05725, 1, 9, 0, 0.119586,0.270656) , 
0.0830184, 1, 6, 0, 0.649787,-0.16431) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703303,-0.000163493) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.30054,0.000206419) , 
0.265725, 0, 2, 0, 0.63781,-0.116995) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.572317,-5.13753e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.349384,5.59203e-05) , 
2.3935, 0, 10, 0, 0.380365,0.0489058) , 
0.775142, 0, 14, 0, 0.445104,0.00718702) , 
1.0538, 1, 17, 0, 0.495209,-0.0347943)    );
  // itree = 737
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.93815,-0.000162421) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.41997,-0.000183014) , 
0.57977, 0, 13, 0, 0.895578,-0.366572) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.77314,-0.000286775) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.467991,0.000166427) , 
0.224408, 1, 15, 0, 0.726861,-0.200603) , 
0.771919, 0, 2, 0, 0.78965,-0.262369) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.656475,-7.6827e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.439453,-3.06639e-05) , 
2.09445, 0, 9, 0, 0.590025,-0.0902955) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.381701,1.63654e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.133632,0.000398096) , 
0.419898, 0, 7, 0, 0.324556,0.0889474) , 
0.197799, 0, 15, 0, 0.452521,0.00254604) , 
0.0888869, 1, 16, 0, 0.50173,-0.0361221)    );
  // itree = 738
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.754198,-0.00018399) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.526874,-0.000144802) , 
0.267103, 0, 1, 0, 0.711108,-0.184905) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.538942,-5.1575e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.330242,0.000254713) , 
2.24128, 1, 18, 0, 0.502511,-0.0274028) , 
0.133371, 1, 16, 0, 0.548862,-0.0623999) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.85761,-0.000479127) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.00789656,0.0137349) , 
0.0433869, 0, 15, 0, 0.6344,-0.308271) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.379976,-0.00012591) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0891839,0.000385732) , 
0.364674, 0, 12, 0, 0.107112,0.22906) , 
0.331749, 1, 14, 0, 0.11963,0.216304) , 
0.0895322, 0, 15, 0, 0.486838,-0.0221273)    );
  // itree = 739
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705374,-0.000118589) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.305803,9.89885e-05) , 
-1.36189, 0, 5, 0, 0.68632,-0.160637) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.924806,-0.000740472) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.223848,0.000160101) , 
0.695552, 1, 17, 0, 0.308211,0.187779) , 
0.270272, 0, 2, 0, 0.650698,-0.127813) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.804385,-0.000218371) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.506761,-8.97556e-05) , 
0.112266, 1, 16, 0, 0.611961,-0.160133) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.372396,8.39183e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129659,0.000410912) , 
-0.371492, 0, 5, 0, 0.297499,0.10514) , 
1.65027, 0, 7, 0, 0.355113,0.056538) , 
0.706623, 0, 14, 0, 0.494363,-0.0303096)    );
  // itree = 740
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.684812,-9.58012e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.503165,1.7486e-05) , 
0.350413, 0, 2, 0, 0.659963,-0.158541) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.75515,-0.000225509) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.303118,0.000194617) , 
0.121033, 1, 16, 0, 0.422564,0.0642073) , 
2.23949, 1, 18, 0, 0.62299,-0.123849) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.965796,-0.000194215) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.592929,-0.000218273) , 
0.954482, 0, 2, 0, 0.732645,-0.229388) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.866642,-0.000318196) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.275301,0.000248759) , 
-1.96139, 1, 3, 0, 0.295098,0.0919316) , 
0.0882614, 1, 16, 0, 0.352086,0.0500813) , 
0.143039, 0, 15, 0, 0.526604,-0.0619662)    );
  // itree = 741
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.743476,-0.000195097) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.359269,-0.00013375) , 
0.62417, 1, 1, 0, 0.722314,-0.204979) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.821865,-0.000770229) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191188,-6.84436e-05) , 
1.89153, 0, 17, 0, 0.259545,0.223799) , 
0.491336, 0, 7, 0, 0.692806,-0.177639) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700392,-0.000157388) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.337762,0.000340718) , 
2.54552, 0, 10, 0, 0.620892,-0.151271) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.552171,-5.91097e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.309396,4.94907e-05) , 
0.362321, 0, 15, 0, 0.359645,0.0802596) , 
1.04741, 1, 9, 0, 0.390977,0.0524908) , 
0.132002, 1, 16, 0, 0.45968,0.000108937)    );
  // itree = 742
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.608978,-9.65156e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245886,8.59771e-05) , 
0.529078, 1, 16, 0, 0.573583,-0.0766353) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67076,-0.000199771) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270719,0.000218112) , 
0.117533, 1, 16, 0, 0.357954,0.120492) , 
2.24124, 1, 18, 0, 0.536611,-0.0428351) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.408238,-0.000110923) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186306,0.000328793) , 
0.598658, 1, 10, 0, 0.246446,0.13686) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.516754,-0.000239801) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0548725,0.000421533) , 
0.904579, 0, 1, 0, 0.0651645,0.270564) , 
0.344737, 1, 16, 0, 0.171172,0.192379) , 
0.116084, 0, 15, 0, 0.443793,0.016907)    );
  // itree = 743
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.765297,-0.000113576) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.436456,-6.98208e-05) , 
0.596437, 0, 13, 0, 0.730783,-0.20113) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.832002,-0.000211238) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.512108,-6.17872e-05) , 
0.67694, 1, 13, 0, 0.553296,-0.0422033) , 
0.324148, 1, 12, 0, 0.670282,-0.146955) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.754233,-0.000136472) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388945,-1.64503e-05) , 
2.14447, 1, 10, 0, 0.454848,-0.0407187) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.345724,7.38908e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.114283,0.000335733) , 
2.2486, 0, 9, 0, 0.278666,0.125502) , 
2.09436, 0, 10, 0, 0.323202,0.0834834) , 
0.708187, 0, 14, 0, 0.495383,-0.0308336)    );
  // itree = 744
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.934159,-0.000166653) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.705991,-0.000272507) , 
0.774875, 0, 2, 0, 0.820611,-0.294105) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.13786,0.000616685) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0594993,0.000415867) , 
0.365046, 0, 2, 0, 0.0958285,0.395056) , 
0.493488, 0, 7, 0, 0.794804,-0.269566) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.591015,-8.8255e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.394633,-1.60042e-05) , 
0.547304, 0, 7, 0, 0.523835,-0.0296202) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.434487,3.05984e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.206557,0.000202855) , 
1.79516, 0, 10, 0, 0.292975,0.106378) , 
0.171393, 0, 15, 0, 0.411536,0.0365342) , 
0.0885291, 1, 16, 0, 0.473764,-0.0131645)    );
  // itree = 745
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745078,-0.000132524) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.589068,-6.54969e-05) , 
0.986685, 0, 7, 0, 0.67812,-0.158889) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776323,-0.000740422) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.302313,9.17367e-05) , 
1.96223, 0, 7, 0, 0.353054,0.142605) , 
0.263123, 0, 1, 0, 0.626276,-0.110805) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.87618,-0.00020986) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204714,-5.36674e-05) , 
0.900264, 1, 10, 0, 0.611116,-0.176266) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.458331,4.48556e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.216298,0.000226651) , 
0.232047, 1, 8, 0, 0.250844,0.129665) , 
0.764143, 1, 17, 0, 0.282738,0.102582) , 
0.659385, 0, 14, 0, 0.494057,-0.0286774)    );
  // itree = 746
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720982,-0.000123056) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.486676,2.20864e-05) , 
0.106777, 1, 0, 0, 0.692708,-0.165097) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.837341,-0.000509925) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.454342,5.12462e-05) , 
1.96223, 0, 7, 0, 0.508845,0.0013836) , 
0.29624, 0, 1, 0, 0.636381,-0.114096) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.723188,-0.000127317) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.13479,0.000220239) , 
2.24513, 0, 9, 0, 0.575364,-0.108631) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.394539,-1.20785e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186508,0.000307601) , 
0.926297, 0, 7, 0, 0.28258,0.111797) , 
0.307817, 0, 15, 0, 0.329609,0.0763904) , 
0.695771, 0, 14, 0, 0.482736,-0.0186919)    );
  // itree = 747
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736618,-0.000115701) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.381441,-7.77684e-05) , 
0.12873, 0, 15, 0, 0.713676,-0.184345) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.543992,-5.40116e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.189464,0.000306901) , 
1.49564, 1, 10, 0, 0.465829,0.0379706) , 
0.265192, 0, 1, 0, 0.659748,-0.135972) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.597567,-8.33794e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.283994,8.9419e-05) , 
0.199028, 0, 15, 0, 0.375628,0.0491266) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76312,-0.000270346) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.147352,0.000201936) , 
0.799831, 0, 16, 0, 0.160933,0.219713) , 
0.400154, 1, 16, 0, 0.300925,0.108482) , 
0.708187, 0, 14, 0, 0.476137,-0.0108844)    );
  // itree = 748
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744714,-0.00012723) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.386128,-2.99878e-05) , 
0.102604, 1, 0, 0, 0.705279,-0.177983) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.697928,-0.000237909) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.430137,-3.3368e-05) , 
0.0770639, 1, 16, 0, 0.488802,0.0203416) , 
0.32776, 1, 12, 0, 0.640449,-0.118589) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.636458,-0.000150431) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129907,0.000161269) , 
0.521599, 0, 2, 0, 0.523659,-0.108342) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.488236,-2.06455e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.243864,0.00013532) , 
0.299137, 1, 10, 0, 0.275619,0.120662) , 
1.34677, 1, 9, 0, 0.317619,0.0818859) , 
0.695771, 0, 14, 0, 0.482387,-0.0204338)    );
  // itree = 749
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.782008,-0.000128382) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.619468,-7.47463e-05) , 
0.387425, 0, 1, 0, 0.696172,-0.172729) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.564218,-0.000122524) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.309428,6.38288e-05) , 
0.363247, 0, 2, 0, 0.494444,0.0233694) , 
0.123796, 1, 4, 0, 0.626094,-0.104607) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64861,-0.00016773) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0754162,0.000257442) , 
0.600755, 0, 18, 0, 0.593394,-0.155598) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.580485,-0.000101776) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.291084,0.000125402) , 
2.70877, 0, 8, 0, 0.316748,0.0894272) , 
1.94445, 0, 11, 0, 0.355515,0.0550909) , 
0.706903, 0, 14, 0, 0.477866,-0.0171212)    );
  // itree = 750
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.84817,-0.000218834) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.642851,-7.8439e-05) , 
1.71693, 0, 7, 0, 0.702683,-0.177583) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730767,-0.000206979) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.390705,-4.63893e-05) , 
2.24636, 0, 11, 0, 0.483411,0.0327991) , 
1.34635, 1, 10, 0, 0.638243,-0.115756) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.642605,-8.37358e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209427,6.92802e-05) , 
0.115815, 0, 15, 0, 0.462048,-0.0311695) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.35642,-4.96943e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.162188,0.000312928) , 
2.09437, 0, 10, 0, 0.209277,0.17882) , 
1.13258, 0, 7, 0, 0.297937,0.105166) , 
0.694257, 0, 14, 0, 0.473653,-0.00890631)    );
  // itree = 751
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.772228,-0.000211213) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.359321,-0.000252921) , 
-1.85708, 0, 4, 0, 0.753573,-0.242277) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.618048,-0.000107773) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.392694,4.61424e-05) , 
0.738849, 1, 8, 0, 0.495364,-0.0192269) , 
1.96223, 0, 7, 0, 0.546985,-0.0638187) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668372,-0.00010152) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.332939,3.7312e-05) , 
0.128027, 0, 6, 0, 0.436311,0.0369996) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.35543,4.84024e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0983353,0.000137086) , 
0.918777, 0, 2, 0, 0.14419,0.229886) , 
0.225788, 0, 15, 0, 0.242526,0.164955) , 
0.0904555, 1, 0, 0, 0.461282,0.000579236)    );
  // itree = 752
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.751976,-0.000200823) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.316542,-0.000130092) , 
0.337857, 1, 15, 0, 0.732446,-0.210445) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.946676,-0.000950772) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209589,0.000130178) , 
0.350725, 0, 12, 0, 0.278131,0.0857641) , 
0.598577, 0, 14, 0, 0.682341,-0.177777) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.550357,-3.11923e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363347,-3.04203e-05) , 
0.63613, 1, 2, 0, 0.488441,-0.0141057) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.427399,-5.28726e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0821522,0.00314638) , 
0.0820088, 0, 15, 0, 0.15658,0.171169) , 
0.0898002, 0, 15, 0, 0.43318,0.0167458) , 
1.71693, 0, 7, 0, 0.481849,-0.0212504)    );
  // itree = 753
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717438,-0.000118063) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.514026,-7.69641e-05) , 
0.15206, 0, 15, 0, 0.688253,-0.161533) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628491,-0.000145028) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.188518,0.00110482) , 
0.875993, 0, 14, 0, 0.417272,0.0808476) , 
0.311808, 0, 2, 0, 0.645927,-0.123674) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769091,-0.000177947) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.323011,-0.000130096) , 
0.957749, 0, 8, 0, 0.70488,-0.241934) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.486286,3.93443e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.25159,0.000159514) , 
1.6456, 1, 9, 0, 0.310551,0.0894138) , 
2.08397, 0, 7, 0, 0.348902,0.0571885) , 
0.695771, 0, 14, 0, 0.496023,-0.0323959)    );
  // itree = 754
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.839229,-0.000130246) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.646582,-0.000103164) , 
0.747944, 1, 10, 0, 0.744616,-0.211695) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.789303,-0.000237816) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.466818,-1.80392e-05) , 
0.0732308, 1, 16, 0, 0.541482,-0.0286878) , 
0.45421, 0, 2, 0, 0.665668,-0.14057) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.61173,-7.7905e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.413772,6.7056e-05) , 
1.43503, 0, 8, 0, 0.492736,-0.0776557) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.542724,-5.10769e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.240967,0.000194452) , 
0.251328, 0, 15, 0, 0.303606,0.1038) , 
1.79518, 0, 10, 0, 0.379243,0.0312326) , 
0.706203, 0, 14, 0, 0.513735,-0.0494377)    );
  // itree = 755
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.85953,-0.00020735) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.620032,-8.95443e-05) , 
1.19682, 1, 9, 0, 0.66669,-0.148246) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.555153,-8.5458e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257135,0.000314195) , 
0.412487, 0, 12, 0, 0.378654,0.114612) , 
0.304014, 0, 2, 0, 0.630802,-0.115495) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.762172,-0.000165176) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.30941,3.31501e-05) , 
-0.123843, 1, 4, 0, 0.646654,-0.212543) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.465716,-1.90901e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198183,0.000379377) , 
2.09434, 0, 10, 0, 0.274166,0.109293) , 
1.82768, 0, 7, 0, 0.322731,0.0673319) , 
0.66057, 0, 14, 0, 0.508029,-0.0426345)    );
  // itree = 756
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.890945,-0.000240766) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.62623,-0.000243139) , 
1.79433, 1, 10, 0, 0.851169,-0.326327) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.559078,-0.000477698) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0701645,-6.2183e-05) , 
0.307651, 1, 13, 0, 0.165597,0.194644) , 
0.572074, 0, 14, 0, 0.821792,-0.304002) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.66888,-0.000136642) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.480636,-5.56484e-05) , 
2.39353, 0, 10, 0, 0.508223,-0.0211314) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.354467,0.000192553) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.112591,0.000404489) , 
2.08942, 0, 18, 0, 0.208159,0.151335) , 
0.115897, 0, 15, 0, 0.428102,0.0249193) , 
0.615696, 1, 17, 0, 0.456626,0.00108818)    );
  // itree = 757
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.798994,-0.000155751) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.577675,-7.24772e-05) , 
2.84232, 0, 9, 0, 0.634708,-0.150118) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.80475,-0.000252814) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.438755,7.69638e-06) , 
0.615696, 1, 17, 0, 0.470098,-0.0168151) , 
0.73476, 1, 8, 0, 0.542814,-0.0757007) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.960287,-0.00024259) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0336707,0.016323) , 
1.58163, 0, 11, 0, 0.738461,-0.317466) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.658136,-0.000325261) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.115662,0.000340297) , 
0.025427, 1, 12, 0, 0.140803,0.233551) , 
2.22272, 0, 17, 0, 0.185394,0.19244) , 
0.272877, 1, 0, 0, 0.516253,-0.0557745)    );
  // itree = 758
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.698975,-0.00011171) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.422473,-2.41438e-05) , 
0.395297, 1, 15, 0, 0.667136,-0.152635) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76731,-0.000213715) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378907,0.000111224) , 
0.0732341, 1, 16, 0, 0.460306,0.034246) , 
0.350411, 0, 2, 0, 0.628651,-0.117862) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.870323,-0.000301434) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0504581,0.000556073) , 
0.906925, 1, 8, 0, 0.718683,-0.286558) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.421876,0.000105728) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204156,0.000270399) , 
0.478134, 1, 8, 0, 0.26917,0.106015) , 
0.598492, 1, 9, 0, 0.300335,0.0787982) , 
0.637994, 0, 14, 0, 0.51791,-0.0515285)    );
  // itree = 759
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.824062,-0.000188656) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.578233,-0.000226791) , 
0.543904, 0, 2, 0, 0.737172,-0.217285) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.528203,0.000467048) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167292,-2.41201e-05) , 
0.84302, 0, 3, 0, 0.333948,0.14739) , 
0.0159501, 1, 0, 0, 0.691581,-0.176052) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.891503,-0.000187581) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.467486,-0.000111657) , 
0.00881694, 1, 6, 0, 0.71541,-0.221756) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.434414,-3.55438e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270302,0.000124144) , 
0.930838, 1, 8, 0, 0.358867,0.0797404) , 
2.05244, 0, 7, 0, 0.384954,0.0576811) , 
0.132943, 1, 16, 0, 0.454999,0.00428779)    );
  // itree = 760
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.743533,-0.000152986) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.545618,-6.93154e-05) , 
0.266319, 1, 15, 0, 0.676217,-0.14938) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69555,-0.000309664) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180365,0.000168238) , 
2.19751, 0, 8, 0, 0.271714,0.222658) , 
0.265929, 0, 2, 0, 0.63955,-0.115656) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.938532,-0.000247861) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.557405,-0.000164282) , 
1.19748, 1, 9, 0, 0.730466,-0.246794) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.893474,-0.000259026) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271794,7.60264e-05) , 
0.442622, 0, 12, 0, 0.289602,0.115049) , 
0.0924299, 1, 16, 0, 0.321228,0.0890916) , 
0.711778, 0, 14, 0, 0.468444,-0.00559908)    );
  // itree = 761
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.80888,-0.000119783) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.628249,-0.000120371) , 
0.0657273, 0, 6, 0, 0.6611,-0.160748) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.621582,-4.33656e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34742,2.72605e-05) , 
0.492506, 1, 8, 0, 0.457787,0.0116012) , 
0.969364, 0, 7, 0, 0.561591,-0.0763939) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.555671,-0.0001036) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0772009,0.0100323) , 
0.535816, 0, 13, 0, 0.369126,0.000834223) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.696747,-0.000259403) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0899456,0.000228733) , 
0.785114, 0, 0, 0, 0.109938,0.236806) , 
1.05903, 1, 17, 0, 0.159105,0.192043) , 
0.551115, 0, 14, 0, 0.498125,-0.0340651)    );
  // itree = 762
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69472,-0.00012184) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335064,0.000168225) , 
0.585076, 0, 13, 0, 0.662217,-0.164276) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575355,-7.66697e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.170827,0.000357508) , 
2.09721, 0, 10, 0, 0.325782,0.0816209) , 
0.138549, 1, 0, 0, 0.583038,-0.106405) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666868,-0.000112342) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187649,0.000301726) , 
0.115631, 0, 15, 0, 0.560606,-0.0828349) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.88968,-0.000313034) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.291664,6.822e-05) , 
0.232818, 0, 6, 0, 0.304417,0.129724) , 
1.20343, 1, 17, 0, 0.393806,0.0555584) , 
0.732834, 1, 8, 0, 0.482348,-0.0202246)    );
  // itree = 763
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.805714,-0.000222916) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113378,-8.36512e-05) , 
0.770241, 1, 1, 0, 0.794463,-0.265937) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.365278,-0.000347155) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129515,0.000487266) , 
0.0527328, 1, 15, 0, 0.224742,0.131751) , 
0.598577, 0, 14, 0, 0.755293,-0.238594) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.542849,-5.70509e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.327425,0.000132291) , 
0.350417, 0, 2, 0, 0.511615,-0.0364718) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.662832,-0.000130438) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0840828,0.000885469) , 
2.67741, 0, 8, 0, 0.163023,0.165426) , 
0.0898002, 0, 15, 0, 0.455984,-0.00425162) , 
1.97335, 0, 7, 0, 0.498929,-0.0378749)    );
  // itree = 764
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.732278,-0.000109804) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.595745,-7.91056e-05) , 
1.49759, 1, 17, 0, 0.671013,-0.153374) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742323,-0.00186568) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.141505,0.000418175) , 
1.60464, 0, 7, 0, 0.207617,0.278114) , 
0.220047, 0, 2, 0, 0.654602,-0.138093) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.483054,8.89984e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.200224,0.000293108) , 
2.10944, 1, 17, 0, 0.394828,-0.00654547) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.431454,-0.000102075) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.150287,0.000262947) , 
-1.36314, 1, 4, 0, 0.19996,0.177952) , 
1.79507, 0, 17, 0, 0.277112,0.104906) , 
0.659385, 0, 14, 0, 0.514202,-0.0477149)    );
  // itree = 765
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.73922,-0.000113108) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.563865,-9.33164e-05) , 
0.457855, 0, 2, 0, 0.689821,-0.171194) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689215,-0.000187342) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.193625,0.00050438) , 
0.906031, 1, 17, 0, 0.390428,0.0140077) , 
0.11583, 0, 15, 0, 0.621765,-0.129095) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558265,-2.95332e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.295865,7.49357e-05) , 
0.219308, 1, 12, 0, 0.452435,-0.0242665) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.527998,-8.82193e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.15524,0.00027389) , 
0.350604, 0, 12, 0, 0.226506,0.187111) , 
1.34223, 1, 18, 0, 0.339263,0.0816164) , 
0.308677, 1, 16, 0, 0.514929,-0.0494085)    );
  // itree = 766
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.904587,-0.000176795) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.759046,-0.000197392) , 
0.909811, 0, 2, 0, 0.790893,-0.253213) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.627766,-7.80647e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.395551,-1.84151e-05) , 
0.0819633, 1, 0, 0, 0.587755,-0.0773948) , 
1.72668, 0, 7, 0, 0.638311,-0.121151) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.416097,5.99442e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127698,0.00132541) , 
0.433507, 0, 2, 0, 0.373295,0.0156499) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.866222,-0.000229686) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134659,0.000227742) , 
-2.0992, 1, 3, 0, 0.164341,0.210842) , 
0.824391, 1, 2, 0, 0.323067,0.0625698) , 
0.66057, 0, 14, 0, 0.511861,-0.0474575)    );
  // itree = 767
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679078,-9.63673e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.526444,-5.29512e-05) , 
0.458833, 0, 2, 0, 0.63551,-0.130373) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.508209,-6.99038e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.2572,0.000299216) , 
0.489935, 1, 8, 0, 0.334167,0.0507415) , 
0.116247, 0, 15, 0, 0.560784,-0.085461) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.643302,-0.000103979) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0831995,0.00571684) , 
0.872523, 0, 18, 0, 0.502277,-0.0663566) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729017,-0.000371378) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118897,0.000400164) , 
2.84182, 0, 11, 0, 0.13603,0.246456) , 
-0.892058, 1, 4, 0, 0.231719,0.164728) , 
0.482651, 1, 16, 0, 0.514023,-0.0499079)    );
  // itree = 768
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.852703,-0.00023934) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128794,-0.000204429) , 
0.100616, 0, 12, 0, 0.818519,-0.306443) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628189,-0.000107356) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.179584,0.000505956) , 
0.0887707, 0, 15, 0, 0.563294,-0.0845209) , 
0.61278, 1, 17, 0, 0.599455,-0.115964) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.567971,-4.55276e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.132924,0.000471472) , 
0.365046, 0, 2, 0, 0.517427,-0.0574092) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.527669,-0.000117403) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259402,9.1785e-05) , 
2.24391, 0, 10, 0, 0.308779,0.121375) , 
0.492506, 1, 8, 0, 0.378692,0.0614688) , 
0.986685, 0, 7, 0, 0.482541,-0.021997)    );
  // itree = 769
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.806869,-0.000176038) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.597999,-0.000213044) , 
0.602813, 0, 2, 0, 0.772927,-0.253972) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.606578,-0.000184243) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.177624,0.00064888) , 
0.482554, 0, 7, 0, 0.55808,-0.0397316) , 
0.356924, 0, 1, 0, 0.69955,-0.180802) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7564,-0.00013309) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.47653,-7.86991e-05) , 
0.367531, 0, 16, 0, 0.649024,-0.196701) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.514958,-4.42943e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.231218,0.000228165) , 
0.640766, 0, 14, 0, 0.39318,0.0499373) , 
2.5431, 0, 10, 0, 0.424741,0.0195122) , 
0.132973, 1, 16, 0, 0.485589,-0.0248411)    );
  // itree = 770
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764472,-0.000106276) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183998,0.000235394) , 
0.0899131, 0, 15, 0, 0.6885,-0.203942) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.785218,-0.000197682) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.504738,-8.37868e-05) , 
2.54308, 0, 11, 0, 0.526491,-0.0394834) , 
0.770595, 0, 2, 0, 0.580283,-0.0940886) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666968,-0.000128904) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.173464,6.10985e-05) , 
0.087486, 0, 0, 0, 0.582961,-0.152488) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.502285,8.30545e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225614,0.000171629) , 
0.29697, 0, 12, 0, 0.318159,0.0995568) , 
2.39351, 0, 10, 0, 0.360971,0.0588079) , 
0.30858, 1, 16, 0, 0.489394,-0.0307244)    );
  // itree = 771
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.793647,-0.000163974) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.320957,-0.000178652) , 
0.157555, 0, 15, 0, 0.773993,-0.239671) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.592572,-0.000127618) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.214083,0.000229301) , 
1.19675, 1, 11, 0, 0.502161,0.00736401) , 
0.258248, 0, 1, 0, 0.698056,-0.170661) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.832807,-0.000223392) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.529287,-9.31197e-05) , 
0.0733761, 1, 16, 0, 0.600782,-0.124186) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.416581,-1.79538e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256597,0.000126062) , 
0.969792, 1, 8, 0, 0.344174,0.0798441) , 
1.65211, 0, 7, 0, 0.392506,0.0414152) , 
0.778374, 0, 14, 0, 0.477382,-0.0174958)    );
  // itree = 772
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.889235,-0.000262277) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0785757,-8.13299e-05) , 
0.740701, 0, 7, 0, 0.866774,-0.333291) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738223,-0.000171045) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530103,-0.000141071) , 
0.732834, 1, 8, 0, 0.64153,-0.130081) , 
0.0506001, 1, 16, 0, 0.709442,-0.191349) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.555419,-6.56061e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.319168,0.00010137) , 
2.24214, 1, 18, 0, 0.515436,-0.0199128) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.455512,7.18762e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.222046,0.000238097) , 
1.34635, 1, 9, 0, 0.26148,0.109638) , 
0.630915, 0, 14, 0, 0.411536,0.0330896) , 
0.132002, 1, 16, 0, 0.481444,-0.0195783)    );
  // itree = 773
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.713589,-0.000111431) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.433872,9.35965e-05) , 
0.112698, 1, 0, 0, 0.682401,-0.162402) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.953791,-0.000621808) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.422637,4.63843e-05) , 
2.10469, 0, 3, 0, 0.454932,0.0441753) , 
0.266496, 0, 1, 0, 0.639435,-0.123383) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.492435,-2.64622e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.116955,0.00135638) , 
0.459915, 1, 16, 0, 0.418824,-0.0293409) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.486283,-3.64994e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.161888,0.000264246) , 
1.33215, 1, 9, 0, 0.24778,0.131857) , 
2.54319, 0, 9, 0, 0.317446,0.0662008) , 
0.658743, 0, 14, 0, 0.513331,-0.0491339)    );
  // itree = 774
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.874986,-0.000147404) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191172,4.9953e-05) , 
2.24236, 1, 10, 0, 0.831174,-0.34065) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.726081,-0.000217146) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.287389,4.20352e-06) , 
0.0437334, 1, 0, 0, 0.665298,-0.15588) , 
0.680176, 0, 1, 0, 0.716885,-0.213343) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556613,-5.97415e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.151852,0.000722913) , 
0.0898002, 0, 15, 0, 0.499963,-0.0399921) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.592927,-9.09177e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226952,0.000433944) , 
1.87315, 0, 4, 0, 0.256661,0.16983) , 
2.24128, 1, 18, 0, 0.456133,-0.00219328) , 
1.72668, 0, 7, 0, 0.509524,-0.0454284)    );
  // itree = 775
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760448,-0.000115713) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.261162,-1.10564e-05) , 
0.3827, 1, 16, 0, 0.72865,-0.196507) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.573998,-0.000108358) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.232854,0.000401739) , 
0.233352, 0, 2, 0, 0.537234,-0.0220202) , 
0.543909, 0, 2, 0, 0.62707,-0.103911) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.83736,-0.000166324) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.427091,-0.000210556) , 
0.136042, 1, 12, 0, 0.724595,-0.25972) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.508484,2.19654e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236843,0.00015852) , 
0.365353, 1, 13, 0, 0.280213,0.115147) , 
2.10388, 0, 7, 0, 0.324248,0.0780003) , 
0.697055, 0, 14, 0, 0.472198,-0.0108767)    );
  // itree = 776
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.815197,-0.000103956) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.652677,-0.000113185) , 
0.727099, 0, 2, 0, 0.716271,-0.194623) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738865,-2.3226e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.384696,3.68457e-05) , 
-0.953415, 1, 3, 0, 0.446897,0.00542114) , 
0.31021, 1, 16, 0, 0.625367,-0.127115) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.93476,-0.000225601) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.433132,-4.90499e-05) , 
0.299717, 1, 10, 0, 0.642026,-0.190915) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.357343,4.7175e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.087343,0.00248812) , 
0.0852194, 0, 15, 0, 0.212702,0.147823) , 
0.776592, 1, 17, 0, 0.274531,0.0990392) , 
0.116222, 0, 15, 0, 0.540747,-0.0725674)    );
  // itree = 777
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.88515,-0.000152404) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.618142,-0.000104715) , 
0.0967609, 0, 6, 0, 0.631961,-0.123619) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738093,-0.00025431) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.147414,0.00195756) , 
0.611366, 1, 17, 0, 0.27091,0.104411) , 
0.0886516, 0, 15, 0, 0.583395,-0.0929462) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64154,-0.000163639) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0578772,0.000656639) , 
1.9579, 0, 11, 0, 0.554021,-0.129017) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.481563,-5.57843e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239796,0.000152527) , 
0.40159, 1, 8, 0, 0.30375,0.112592) , 
2.54313, 0, 10, 0, 0.330856,0.0864243) , 
0.303948, 1, 16, 0, 0.48081,-0.020083)    );
  // itree = 778
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.752496,-0.000135651) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.604622,-0.000111261) , 
1.7632, 0, 17, 0, 0.683599,-0.153939) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817179,-0.000489249) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.398182,7.84629e-05) , 
1.9295, 0, 7, 0, 0.452339,0.0512342) , 
0.350417, 0, 2, 0, 0.627519,-0.104185) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612718,-0.000108276) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.333508,-4.91179e-05) , 
1.79731, 1, 18, 0, 0.527847,-0.0894925) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.598587,-8.84742e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.274247,0.000109891) , 
-1.60939, 1, 4, 0, 0.296732,0.105491) , 
1.36391, 0, 7, 0, 0.356131,0.0553779) , 
0.710214, 0, 14, 0, 0.477577,-0.0160264)    );
  // itree = 779
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.796512,-0.000137332) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.535652,1.72075e-05) , 
0.985095, 1, 8, 0, 0.717023,-0.202286) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.585905,-7.5503e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184522,0.000248798) , 
0.453336, 1, 16, 0, 0.548848,-0.0423037) , 
0.747975, 1, 11, 0, 0.630938,-0.120394) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615839,-0.00012044) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0950789,0.00586296) , 
0.215159, 1, 0, 0, 0.480624,-0.0883445) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.364738,5.11563e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.156087,0.000358778) , 
1.79554, 0, 17, 0, 0.233725,0.136895) , 
0.0929935, 1, 12, 0, 0.286677,0.0885891) , 
0.636914, 0, 14, 0, 0.517259,-0.0513859)    );
  // itree = 780
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677555,-0.000105761) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220148,0.000279314) , 
0.233966, 0, 2, 0, 0.662753,-0.149712) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663648,-0.000116077) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265384,0.000132059) , 
0.792398, 0, 14, 0, 0.348457,0.0986184) , 
0.387631, 1, 16, 0, 0.592227,-0.0939886) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.887153,-0.000563216) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128658,0.00898313) , 
0.946765, 1, 8, 0, 0.743231,-0.28577) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.320666,0.000133704) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.124307,0.000293937) , 
2.24095, 0, 18, 0, 0.18069,0.179979) , 
0.912375, 0, 13, 0, 0.206958,0.158231) , 
0.115897, 0, 15, 0, 0.499408,-0.0332235)    );
  // itree = 781
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.84822,-0.000181388) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.627047,-0.000122886) , 
0.442319, 0, 2, 0, 0.722447,-0.194821) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.59568,-8.10052e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.320046,3.04957e-05) , 
1.19677, 1, 11, 0, 0.52628,-0.0146327) , 
0.795917, 0, 14, 0, 0.61524,-0.0963468) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.822921,-0.000291174) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.282879,0.000733611) , 
0.903357, 1, 8, 0, 0.681417,-0.247106) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.598915,-8.19551e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209369,0.000134863) , 
0.49548, 0, 15, 0, 0.235423,0.151745) , 
0.598492, 1, 9, 0, 0.264318,0.125904) , 
0.677134, 0, 14, 0, 0.462224,0.00056367)    );
  // itree = 782
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.886782,-0.000162272) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174115,0.000456452) , 
0.108598, 1, 16, 0, 0.837317,-0.315927) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.662608,-0.00021832) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.288256,-9.72711e-05) , 
0.252761, 0, 2, 0, 0.635883,-0.11614) , 
0.772568, 0, 2, 0, 0.711843,-0.191479) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.699267,-0.000110363) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.49633,-3.56379e-05) , 
2.24397, 0, 10, 0, 0.529517,-0.0372364) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.845132,-0.000405579) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.222103,0.000211432) , 
0.316621, 1, 14, 0, 0.233337,0.132942) , 
0.617006, 0, 14, 0, 0.420632,0.0253268) , 
0.13294, 1, 16, 0, 0.487876,-0.024736)    );
  // itree = 783
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.732989,-0.000104743) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.583284,-8.2e-05) , 
0.549991, 0, 2, 0, 0.667638,-0.144192) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.609974,-0.000147981) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.346994,5.51936e-05) , 
0.59839, 1, 10, 0, 0.43975,-0.000652908) , 
0.171464, 0, 15, 0, 0.569423,-0.0823295) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.941736,-0.00021381) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0503647,-3.19688e-05) , 
0.674606, 1, 0, 0, 0.689205,-0.303214) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.428283,-6.98221e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.219947,0.000252531) , 
0.948554, 0, 7, 0, 0.274052,0.137913) , 
0.242955, 0, 6, 0, 0.290678,0.120248) , 
0.344087, 1, 16, 0, 0.476257,-0.0146214)    );
  // itree = 784
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.777771,-0.000113248) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.614751,-8.8334e-05) , 
0.738822, 1, 8, 0, 0.701799,-0.178407) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738911,-0.000185518) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.469388,-1.93278e-05) , 
1.04745, 1, 9, 0, 0.52559,-0.0171615) , 
0.536008, 0, 2, 0, 0.6181,-0.101815) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.475724,-1.74486e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.076693,0.000421641) , 
0.225915, 1, 0, 0, 0.418094,-0.0230086) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.434781,5.88985e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154943,0.000401924) , 
0.436114, 1, 13, 0, 0.234824,0.13919) , 
-0.370755, 1, 4, 0, 0.314762,0.068442) , 
0.659385, 0, 14, 0, 0.493358,-0.0318004)    );
  // itree = 785
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.950363,-7.99549e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.668232,-0.000121688) , 
0.436856, 0, 15, 0, 0.706749,-0.20282) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.632844,-8.98062e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.400954,-2.64754e-05) , 
0.738757, 1, 8, 0, 0.516301,-0.0362327) , 
1.21326, 1, 17, 0, 0.602609,-0.111727) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.743662,-0.000122887) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.36213,3.86878e-06) , 
0.546272, 1, 14, 0, 0.582437,-0.168596) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.351606,0.000100762) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164373,0.000216022) , 
1.50984, 1, 18, 0, 0.263876,0.141412) , 
1.34674, 1, 9, 0, 0.323031,0.0838452) , 
0.338705, 1, 16, 0, 0.51096,-0.0476161)    );
  // itree = 786
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817034,-0.000205965) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.37783,-0.000157619) , 
2.54307, 1, 10, 0, 0.802429,-0.280145) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.552219,-0.00195638) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0809248,2.14287e-05) , 
0.77951, 0, 13, 0, 0.160092,0.22821) , 
0.054122, 0, 15, 0, 0.777533,-0.260442) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74379,-0.000155713) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.28734,0.00389707) , 
0.11664, 0, 15, 0, 0.69126,-0.179958) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.435149,6.46004e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.188273,0.000133935) , 
0.860786, 1, 2, 0, 0.403777,0.036393) , 
0.134114, 1, 16, 0, 0.455438,-0.00248565) , 
1.97338, 0, 7, 0, 0.506758,-0.0435862)    );
  // itree = 787
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.774707,-0.000122803) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.51856,-8.46763e-05) , 
0.985192, 1, 8, 0, 0.668893,-0.17732) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.590083,-0.00014546) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.308215,0.000156844) , 
0.740038, 0, 7, 0, 0.486896,0.0072255) , 
0.454191, 0, 2, 0, 0.607694,-0.115264) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.970275,-0.00024726) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0191003,0.00748592) , 
0.700759, 0, 5, 0, 0.815282,-0.410879) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.860152,-0.000126066) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340173,5.08585e-05) , 
2.33042, 0, 7, 0, 0.364953,0.0598923) , 
0.247519, 0, 6, 0, 0.3818,0.0422796) , 
0.0461831, 1, 0, 0, 0.50387,-0.042855)    );
  // itree = 788
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.879236,-0.000186718) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.291155,0.00388501) , 
0.111657, 1, 16, 0, 0.837448,-0.318327) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.798439,-0.000452163) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.510157,-0.000155537) , 
1.36187, 0, 4, 0, 0.566131,-0.0488987) , 
0.490588, 0, 1, 0, 0.694151,-0.176028) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655732,-9.51913e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172556,0.000286343) , 
0.31092, 0, 7, 0, 0.591367,-0.135509) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.54236,-5.39475e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306192,8.9564e-05) , 
0.252014, 0, 15, 0, 0.389951,0.050529) , 
0.23276, 1, 8, 0, 0.423843,0.0192241) , 
0.129604, 1, 16, 0, 0.48215,-0.0228927)    );
  // itree = 789
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.796211,-0.000224669) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234345,-0.000121867) , 
0.407526, 0, 13, 0, 0.769582,-0.256965) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.582391,-8.02762e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.146373,0.00175904) , 
0.090867, 0, 15, 0, 0.525262,-0.04341) , 
2.22002, 0, 7, 0, 0.560599,-0.0742972) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764544,-0.000236671) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221492,0.00591503) , 
0.429192, 1, 16, 0, 0.543576,-0.120606) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76379,-0.000207648) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227243,0.000147357) , 
2.86807, 0, 8, 0, 0.249743,0.158757) , 
0.299516, 1, 10, 0, 0.283358,0.126798) , 
0.352652, 1, 16, 0, 0.472382,-0.0103098)    );
  // itree = 790
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672244,-0.000115904) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.509199,2.58521e-05) , 
0.26491, 0, 1, 0, 0.632922,-0.109661) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.631806,0.00068549) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0835529,0.000258069) , 
0.727804, 0, 2, 0, 0.193792,0.277793) , 
0.551523, 1, 16, 0, 0.620272,-0.0984993) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.711043,-0.000175736) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.316445,-7.09777e-05) , 
0.527252, 0, 13, 0, 0.608945,-0.153607) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.452445,-3.72909e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209061,0.000262777) , 
2.09438, 0, 10, 0, 0.274939,0.117919) , 
1.82763, 0, 7, 0, 0.319689,0.0815399) , 
0.695771, 0, 14, 0, 0.467647,-0.00708184)    );
  // itree = 791
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.808038,-0.000200546) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.528938,-0.000176878) , 
0.309705, 0, 1, 0, 0.740744,-0.217892) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668716,-0.000151302) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198653,0.000477898) , 
0.0383605, 0, 6, 0, 0.337846,0.137641) , 
0.0159709, 1, 0, 0, 0.697783,-0.179981) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686804,-0.000108371) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.442635,-3.04477e-05) , 
1.36922, 0, 7, 0, 0.496406,-0.0111597) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.588535,5.97675e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.207635,0.000238037) , 
0.216732, 1, 1, 0, 0.24528,0.126535) , 
0.145623, 0, 15, 0, 0.394776,0.0445648) , 
0.133216, 1, 16, 0, 0.4656,-0.00792011)    );
  // itree = 792
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.750319,-0.00013611) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.56807,-7.18029e-05) , 
0.305196, 0, 1, 0, 0.700774,-0.177111) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.620084,-0.000145895) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.254715,0.000378263) , 
0.679348, 0, 1, 0, 0.366021,0.0330837) , 
0.653743, 0, 14, 0, 0.631876,-0.133849) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.587152,-6.80527e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183504,-1.80097e-05) , 
0.252797, 1, 15, 0, 0.524901,-0.0980797) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.516551,-5.6536e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212191,7.69789e-05) , 
0.457415, 1, 18, 0, 0.243238,0.17137) , 
2.09435, 0, 10, 0, 0.319508,0.0984075) , 
0.265519, 1, 16, 0, 0.489628,-0.0280827)    );
  // itree = 793
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.723028,-0.000136856) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.44416,-0.000128484) , 
0.299227, 0, 11, 0, 0.705167,-0.191859) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.337268,-9.2499e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0677344,0.00922045) , 
0.0776343, 1, 0, 0, 0.2623,0.102905) , 
0.0891265, 0, 15, 0, 0.643387,-0.15074) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.548287,-5.42439e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265175,0.000269481) , 
-1.11432, 0, 5, 0, 0.51529,-0.0299286) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.44941,-3.69167e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.196687,0.000484778) , 
2.09419, 0, 10, 0, 0.261562,0.111294) , 
0.146939, 0, 15, 0, 0.423341,0.0212493) , 
1.22804, 0, 7, 0, 0.504018,-0.0418081)    );
  // itree = 794
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707521,-0.000115404) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318768,0.0001785) , 
0.234014, 0, 2, 0, 0.693842,-0.173061) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.87303,-0.00019993) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.42918,5.37834e-05) , 
0.236077, 0, 6, 0, 0.457102,0.000588047) , 
0.309275, 1, 16, 0, 0.608718,-0.110622) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.935042,-0.000298534) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.179092,-0.000101191) , 
2.84253, 0, 9, 0, 0.716019,-0.278327) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.546247,-0.000128768) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186964,0.00030553) , 
2.68542, 0, 8, 0, 0.223305,0.138551) , 
-1.85652, 1, 3, 0, 0.252926,0.113489) , 
0.117052, 0, 15, 0, 0.523027,-0.0566463)    );
  // itree = 795
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720208,-0.000122105) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.517113,-3.35727e-05) , 
0.350417, 0, 2, 0, 0.673152,-0.145589) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.89408,-0.000704264) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172207,9.82979e-05) , 
1.81384, 0, 17, 0, 0.211136,0.285683) , 
0.243969, 0, 7, 0, 0.639495,-0.114171) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.737228,-0.000122203) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.432467,-4.71447e-05) , 
0.11631, 0, 0, 0, 0.463735,-0.0233508) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.920679,-0.000273788) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204879,0.000111811) , 
0.799565, 0, 16, 0, 0.219148,0.169795) , 
0.267649, 1, 16, 0, 0.314652,0.0943774) , 
0.712465, 0, 14, 0, 0.462252,-0.000381124)    );
  // itree = 796
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74707,-0.000122769) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.526668,-0.000132392) , 
0.313589, 0, 1, 0, 0.715957,-0.197507) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.548756,-7.32762e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.357919,2.2006e-06) , 
1.94216, 1, 18, 0, 0.493621,-0.00861254) , 
1.07735, 1, 17, 0, 0.549793,-0.0563357) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742586,-0.000276884) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0848841,0.00215245) , 
2.39426, 1, 10, 0, 0.688804,-0.223012) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.334184,5.42342e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.131512,0.000566737) , 
0.477471, 1, 13, 0, 0.193603,0.16215) , 
0.616467, 1, 17, 0, 0.235335,0.129691) , 
0.11583, 0, 15, 0, 0.466783,-0.00722868)    );
  // itree = 797
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.879252,-0.000179058) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.707027,-0.000204335) , 
0.540984, 0, 1, 0, 0.759148,-0.235767) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.785761,-0.000172072) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163124,0.00158191) , 
0.833668, 0, 14, 0, 0.363741,0.116803) , 
0.0182287, 1, 0, 0, 0.727094,-0.207186) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.713182,-9.90747e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.434869,-6.64769e-05) , 
-0.371059, 1, 4, 0, 0.599903,-0.127834) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.599431,-2.6626e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.313893,5.42705e-05) , 
0.223643, 1, 8, 0, 0.366801,0.0670006) , 
1.30609, 0, 7, 0, 0.428138,0.0157326) , 
0.132539, 1, 16, 0, 0.500826,-0.0384675)    );
  // itree = 798
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.884789,-0.000224265) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.491351,-0.000186034) , 
-1.60929, 0, 3, 0, 0.86882,-0.327354) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.740128,-0.000213202) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.324182,0.000489842) , 
0.161006, 1, 16, 0, 0.651199,-0.171489) , 
0.169831, 0, 15, 0, 0.773465,-0.259059) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.548488,-6.39652e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.109099,0.000475785) , 
0.277099, 1, 0, 0, 0.521921,-0.0323536) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.842763,-0.000195619) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157996,0.000331131) , 
-2.10403, 1, 3, 0, 0.18518,0.166026) , 
0.117052, 0, 15, 0, 0.437625,0.0173064) , 
1.9532, 0, 7, 0, 0.492058,-0.0274872)    );
  // itree = 799
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776017,-0.000192515) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.597825,-8.19075e-05) , 
1.69638, 0, 7, 0, 0.650772,-0.131272) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7796,-0.000237295) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.260642,0.000292851) , 
2.69829, 0, 7, 0, 0.34139,0.0545474) , 
0.116084, 0, 15, 0, 0.582361,-0.0901838) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.983457,-0.000182599) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.480717,-0.000110575) , 
0.499572, 1, 13, 0, 0.756109,-0.345126) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.407985,1.34946e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.20124,0.000248781) , 
1.34216, 1, 18, 0, 0.301904,0.113297) , 
2.72771, 0, 8, 0, 0.334841,0.0800542) , 
0.30858, 1, 16, 0, 0.481385,-0.0207352)    );
  // itree = 800
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670129,-9.30713e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.499071,-2.60645e-05) , 
0.454185, 0, 2, 0, 0.615925,-0.113796) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.436692,0.0020581) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118987,0.000210836) , 
0.0638292, 1, 12, 0, 0.13341,0.297931) , 
0.52069, 1, 16, 0, 0.591457,-0.0929171) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.980251,-0.000590871) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0545715,-0.000650579) , 
0.265844, 0, 16, 0, 0.882748,-0.463387) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.860066,-0.000402973) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.190703,0.000186285) , 
2.35232, 0, 3, 0, 0.196957,0.163068) , 
3.61196, 0, 8, 0, 0.211749,0.149556) , 
0.601912, 0, 14, 0, 0.495866,-0.031875)    );
  // itree = 801
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.68118,-0.000110401) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.433423,-2.13619e-05) , 
0.394878, 1, 15, 0, 0.652023,-0.13897) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.6246,-0.000146073) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.298838,0.000310236) , 
0.868158, 0, 14, 0, 0.426946,0.0646623) , 
0.350412, 0, 2, 0, 0.609948,-0.100904) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.711118,-0.000119019) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.328922,0.000161646) , 
0.234294, 1, 8, 0, 0.409962,-0.0279705) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.318684,2.1323e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0926186,0.000552413) , 
0.357446, 1, 16, 0, 0.200263,0.166279) , 
1.793, 0, 17, 0, 0.283291,0.0893679) , 
0.635633, 0, 14, 0, 0.499807,-0.036749)    );
  // itree = 802
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.785428,-0.000174719) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.6011,-6.81271e-05) , 
0.79053, 0, 14, 0, 0.681867,-0.15672) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.860878,-0.000478123) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.196437,0.000219888) , 
1.96223, 0, 7, 0, 0.266701,0.225787) , 
0.270272, 0, 2, 0, 0.649647,-0.127035) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.756607,-0.000173168) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145909,0.000365612) , 
2.24356, 0, 9, 0, 0.615421,-0.158617) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.667448,-0.000218737) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233701,0.000169642) , 
0.0937973, 1, 16, 0, 0.259963,0.121444) , 
0.335069, 0, 15, 0, 0.306027,0.0851514) , 
0.677618, 0, 14, 0, 0.502943,-0.0364446)    );
  // itree = 803
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.768966,-0.000143256) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.583058,-0.000215225) , 
0.324532, 1, 12, 0, 0.736994,-0.206392) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.796626,-0.00017857) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.498285,-3.2142e-05) , 
2.54283, 0, 10, 0, 0.536621,-0.0323228) , 
1.22811, 0, 7, 0, 0.624459,-0.10863) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.56178,-7.29006e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257104,0.000137576) , 
0.653985, 0, 2, 0, 0.450003,-0.0490434) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.91936,-0.000354586) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.231911,0.000220337) , 
0.442923, 0, 12, 0, 0.248885,0.126156) , 
1.49575, 0, 11, 0, 0.31293,0.0703645) , 
0.66057, 0, 14, 0, 0.49911,-0.0366082)    );
  // itree = 804
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.824846,-0.0001962) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.618087,-7.7174e-05) , 
1.88399, 0, 7, 0, 0.661031,-0.148603) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.603823,-0.000176372) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234864,0.00043641) , 
1.96531, 0, 7, 0, 0.330484,0.0556649) , 
0.116155, 0, 15, 0, 0.584545,-0.101337) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.916402,-0.000241067) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0155512,0.00869963) , 
0.465374, 0, 3, 0, 0.600825,-0.227081) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.752207,-0.000320013) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.200759,0.000169691) , 
0.438003, 0, 12, 0, 0.223137,0.182519) , 
0.236077, 0, 6, 0, 0.24309,0.16088) , 
0.396602, 1, 16, 0, 0.509053,-0.0433641)    );
  // itree = 805
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674865,-0.000122822) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.359246,-9.44272e-05) , 
0.39147, 1, 16, 0, 0.649489,-0.145361) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.662601,-0.000198934) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171329,0.000389108) , 
2.5352, 0, 18, 0, 0.310447,0.0582532) , 
0.0883546, 0, 15, 0, 0.594291,-0.112211) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721032,-0.000152535) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.144656,0.000350399) , 
0.8953, 1, 8, 0, 0.657586,-0.142512) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.376418,3.25878e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.150264,0.00035013) , 
0.534998, 1, 16, 0, 0.334027,0.0874776) , 
0.803911, 0, 14, 0, 0.396915,0.0427764) , 
0.981101, 0, 7, 0, 0.488274,-0.0289628)    );
  // itree = 806
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769197,-0.000132321) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.634978,-9.58081e-05) , 
0.732881, 1, 8, 0, 0.707072,-0.176866) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.440009,-2.55303e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175225,0.000130985) , 
0.736659, 1, 13, 0, 0.382479,0.0312269) , 
0.687421, 0, 14, 0, 0.606768,-0.112562) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.604896,-0.00010766) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.333962,0.000229091) , 
0.0958453, 0, 0, 0, 0.424064,-0.0114385) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.405909,-3.82705e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.173989,0.000144231) , 
1.08567, 0, 7, 0, 0.221588,0.191047) , 
0.448733, 1, 11, 0, 0.261404,0.151229) , 
0.308582, 1, 16, 0, 0.480083,-0.0157993)    );
  // itree = 807
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.747266,-0.000139521) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.360132,6.57605e-05) , 
-1.3619, 0, 5, 0, 0.728165,-0.194187) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.678365,-8.45458e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.383356,3.19408e-05) , 
0.536008, 0, 2, 0, 0.503187,0.00384709) , 
0.736852, 0, 7, 0, 0.659577,-0.133813) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.651208,-0.00017404) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129064,-9.91667e-05) , 
0.0965699, 1, 0, 0, 0.60062,-0.157897) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.518455,7.43369e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.232682,0.000151309) , 
0.299177, 1, 11, 0, 0.276188,0.116022) , 
1.85243, 0, 7, 0, 0.31613,0.0822991) , 
0.697055, 0, 14, 0, 0.493869,-0.0295421)    );
  // itree = 808
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676628,-0.000101139) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.463745,-2.18781e-05) , 
2.24265, 1, 18, 0, 0.64263,-0.137082) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.582501,-3.09839e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211862,0.000185158) , 
0.866552, 0, 5, 0, 0.355706,0.0773852) , 
0.398332, 1, 16, 0, 0.57881,-0.0893779) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.919584,-0.00050958) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.361848,-0.000135497) , 
2.35226, 0, 3, 0, 0.418059,-0.0200545) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.404241,0.000193573) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0657313,0.000605827) , 
0.827416, 0, 13, 0, 0.102639,0.21558) , 
1.97342, 0, 7, 0, 0.149718,0.18041) , 
0.0895322, 0, 15, 0, 0.518293,-0.0513285)    );
  // itree = 809
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.778225,-0.000120309) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.489916,-8.5534e-05) , 
0.637862, 0, 13, 0, 0.719768,-0.187056) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.58009,-0.000127051) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335141,3.69588e-05) , 
0.773252, 0, 14, 0, 0.524548,-0.0124605) , 
0.354981, 0, 1, 0, 0.631883,-0.108456) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.89788,-0.000190934) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.454273,-0.000128018) , 
0.169018, 0, 15, 0, 0.65265,-0.19142) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.486513,-4.39508e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226272,0.000226278) , 
2.09437, 0, 10, 0, 0.296929,0.100775) , 
1.88604, 0, 7, 0, 0.34241,0.0634165) , 
0.706618, 0, 14, 0, 0.475924,-0.0158561)    );
  // itree = 810
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.752263,-0.000105907) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.399245,3.82998e-06) , 
0.112698, 1, 0, 0, 0.711077,-0.187478) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.56863,-9.07282e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253159,0.000492076) , 
0.133342, 0, 15, 0, 0.523646,-0.0148501) , 
0.357625, 0, 1, 0, 0.637911,-0.12009) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.851236,-0.00022699) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.103343,0.0157029) , 
2.24655, 0, 7, 0, 0.792625,-0.337128) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.463325,-1.61477e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236159,0.000245535) , 
2.24393, 0, 10, 0, 0.286735,0.0954693) , 
0.628431, 1, 17, 0, 0.318869,0.0679907) , 
0.659126, 0, 14, 0, 0.511178,-0.0453793)    );
  // itree = 811
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.710169,-0.0001102) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.390439,9.83817e-05) , 
0.11931, 1, 0, 0, 0.677215,-0.155899) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.465466,-6.29276e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.14947,0.000550886) , 
0.258815, 1, 15, 0, 0.383057,0.115802) , 
0.263767, 0, 1, 0, 0.628628,-0.111021) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.885035,-0.000292766) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0698747,0.000342463) , 
0.756948, 1, 13, 0, 0.745962,-0.303418) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653163,-0.000239082) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227668,0.000163854) , 
2.10441, 0, 5, 0, 0.250967,0.129688) , 
2.54277, 0, 11, 0, 0.280832,0.103557) , 
0.659385, 0, 14, 0, 0.492227,-0.0268664)    );
  // itree = 812
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.827007,-0.000135992) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.651271,-0.000116588) , 
0.540856, 0, 1, 0, 0.697434,-0.189732) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.55678,-3.16664e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224926,8.48194e-07) , 
1.94092, 1, 18, 0, 0.478578,-0.0230458) , 
0.0268847, 1, 0, 0, 0.608752,-0.12219) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.911345,-0.00023823) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0721954,0.0337015) , 
0.937663, 0, 7, 0, 0.822498,-0.386642) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.696439,-0.000139578) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.263407,0.000175164) , 
2.24383, 0, 11, 0, 0.308505,0.105275) , 
2.86804, 0, 8, 0, 0.334933,0.0799815) , 
0.353721, 1, 16, 0, 0.524433,-0.0599335)    );
  // itree = 813
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735112,-0.000197106) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.525609,-4.54047e-05) , 
0.120224, 1, 16, 0, 0.57898,-0.099625) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687118,-0.00050958) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0671988,0.000694124) , 
0.901998, 0, 1, 0, 0.111591,0.206248) , 
0.496561, 0, 14, 0, 0.550087,-0.0807164) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.762166,-0.000139941) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.476672,6.86449e-05) , 
0.369904, 0, 1, 0, 0.580581,-0.073281) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.770607,-0.000208008) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172721,0.000142928) , 
0.242955, 0, 6, 0, 0.205518,0.188699) , 
0.73698, 0, 14, 0, 0.336129,0.0974674) , 
0.493356, 0, 7, 0, 0.491937,-0.0322887)    );
  // itree = 814
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.630343,-9.08392e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.144138,0.000404014) , 
0.229096, 0, 2, 0, 0.616227,-0.115641) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.697509,0.0014475) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0990063,0.000357706) , 
0.0285647, 1, 12, 0, 0.120799,0.285908) , 
0.272877, 1, 0, 0, 0.591166,-0.095329) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746741,-0.000128671) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.114008,0.000173914) , 
0.661223, 0, 13, 0, 0.550215,-0.126899) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.529691,-0.000128024) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165568,0.000396342) , 
2.68718, 0, 8, 0, 0.201689,0.154715) , 
1.11441, 0, 3, 0, 0.277012,0.0938527) , 
0.116222, 0, 15, 0, 0.512165,-0.0477549)    );
  // itree = 815
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.820711,-0.000164514) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.63825,-8.95591e-05) , 
1.11442, 0, 4, 0, 0.681402,-0.155955) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769313,-0.000250317) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.309425,0.000205528) , 
0.0739271, 1, 16, 0, 0.462993,0.0319295) , 
0.154995, 0, 15, 0, 0.642229,-0.122257) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.809631,-0.000214399) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0517852,0.0207495) , 
0.266209, 1, 16, 0, 0.759863,-0.2946) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721042,-0.000234334) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26322,0.000155354) , 
-1.85713, 1, 3, 0, 0.283291,0.105434) , 
0.633608, 1, 17, 0, 0.31246,0.0809498) , 
0.677134, 0, 14, 0, 0.499697,-0.0344274)    );
  // itree = 816
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.644027,-9.04114e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.476237,-5.52738e-05) , 
2.24059, 1, 18, 0, 0.615272,-0.105562) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.582276,-0.00044055) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145927,0.00127022) , 
2.3348, 0, 17, 0, 0.195452,0.206495) , 
0.639356, 0, 14, 0, 0.597667,-0.0924761) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.980501,-0.000281974) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0255643,9.8099e-05) , 
0.501058, 1, 1, 0, 0.695941,-0.293922) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.328344,3.09732e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.139527,0.000256338) , 
1.4958, 0, 11, 0, 0.196275,0.166021) , 
0.224408, 1, 13, 0, 0.221137,0.143135) , 
0.622068, 0, 14, 0, 0.487736,-0.0236876)    );
  // itree = 817
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.864472,-0.000172439) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.228653,0.000379859) , 
0.0171293, 1, 0, 0, 0.811331,-0.290785) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.743564,-0.000257817) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.492336,-0.00017446) , 
0.863231, 0, 14, 0, 0.594624,-0.0725231) , 
0.636108, 0, 2, 0, 0.715762,-0.19453) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.756779,-0.00014206) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.390332,-4.06753e-05) , 
1.04674, 1, 11, 0, 0.663419,-0.190465) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.441835,-2.61936e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.268378,0.000110701) , 
0.557172, 0, 7, 0, 0.376703,0.0633865) , 
-1.35933, 1, 4, 0, 0.418152,0.0266881) , 
0.129696, 1, 16, 0, 0.487238,-0.0246644)    );
  // itree = 818
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.797378,-0.000150723) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.516005,-4.95579e-05) , 
0.0141861, 1, 6, 0, 0.673156,-0.15716) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.657229,-0.000111669) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.399881,-1.91631e-05) , 
1.20247, 1, 17, 0, 0.503343,-0.00152149) , 
0.734756, 1, 8, 0, 0.58959,-0.0805691) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.916901,-0.000252729) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.463884,-0.000110098) , 
0.555723, 0, 16, 0, 0.691634,-0.269092) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.330394,0.000113201) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.104601,0.000377746) , 
0.446689, 1, 16, 0, 0.255445,0.114845) , 
2.39322, 0, 11, 0, 0.286545,0.0874704) , 
0.636907, 0, 14, 0, 0.480487,-0.0200714)    );
  // itree = 819
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.73137,-0.00013072) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.523716,-7.19277e-05) , 
0.311067, 0, 1, 0, 0.677826,-0.158328) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.45124,-6.15903e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159238,0.000585192) , 
0.191314, 1, 16, 0, 0.335083,0.046552) , 
0.619262, 0, 14, 0, 0.627364,-0.128163) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.790471,-0.000200167) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0533712,0.0234152) , 
2.23736, 1, 18, 0, 0.712754,-0.239117) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.559235,-7.34013e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292182,5.16951e-05) , 
1.25661, 0, 4, 0, 0.325398,0.0949522) , 
2.39352, 0, 11, 0, 0.355007,0.0694163) , 
0.26457, 1, 16, 0, 0.498945,-0.0350022)    );
  // itree = 820
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735993,-0.000138378) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.359212,0.000792863) , 
-1.36189, 0, 5, 0, 0.714725,-0.191211) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.57893,-7.74006e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.353171,2.44763e-06) , 
0.0283722, 1, 6, 0, 0.526053,-0.0239267) , 
1.20647, 1, 17, 0, 0.59735,-0.0871409) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677013,-0.000143463) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22214,0.00327286) , 
0.361374, 0, 3, 0, 0.482101,-0.109019) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.464452,-9.24331e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152969,0.00020844) , 
1.13977, 1, 9, 0, 0.196517,0.169812) , 
2.99199, 0, 9, 0, 0.23051,0.136623) , 
0.636677, 0, 14, 0, 0.473342,-0.0114991)    );
  // itree = 821
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687955,-0.000118176) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.222462,-3.59778e-05) , 
0.403778, 1, 15, 0, 0.671187,-0.152215) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.826396,-0.000211781) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.29191,0.000194525) , 
-2.10425, 1, 3, 0, 0.336426,0.0578283) , 
0.116867, 0, 15, 0, 0.596441,-0.105316) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.586217,-9.61675e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.102361,0.000272393) , 
0.589908, 1, 1, 0, 0.496456,-0.0626604) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.46818,-4.9936e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.19455,0.000318365) , 
1.3473, 1, 9, 0, 0.244484,0.163245) , 
0.865792, 0, 7, 0, 0.332532,0.0843062) , 
0.309515, 1, 16, 0, 0.493068,-0.0310411)    );
  // itree = 822
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742357,-0.000118026) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.484771,-6.04492e-05) , 
0.686819, 0, 14, 0, 0.692674,-0.169985) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.633375,-0.000213045) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.200073,0.000350854) , 
2.21077, 0, 7, 0, 0.306185,0.0858992) , 
0.116799, 0, 15, 0, 0.613901,-0.117832) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.773289,-0.000166734) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.375187,0.000235477) , 
0.441769, 1, 8, 0, 0.4779,-0.0525743) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.909307,-0.000300666) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.232634,0.000140458) , 
0.807368, 0, 16, 0, 0.248798,0.161102) , 
0.748069, 1, 10, 0, 0.316842,0.0976393) , 
0.308606, 1, 16, 0, 0.50371,-0.0379053)    );
  // itree = 823
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.763278,-0.00014076) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.613123,-8.34144e-05) , 
0.273775, 1, 15, 0, 0.712408,-0.181613) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.820645,-0.000486843) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.373611,9.07446e-05) , 
1.92196, 0, 7, 0, 0.434119,0.0690677) , 
0.357681, 0, 2, 0, 0.653151,-0.128234) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.861001,-0.000416337) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.437527,-3.43955e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.247468,0.000214318) , 
0.93507, 0, 7, 0, 0.329857,0.0708117) , 
0.313094, 1, 14, 0, 0.337818,0.0618089) , 
0.697055, 0, 14, 0, 0.498117,-0.0347994)    );
  // itree = 824
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.840447,-0.000160448) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.658223,-0.000202633) , 
0.635095, 0, 2, 0, 0.750817,-0.217423) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.579488,-6.09799e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.399045,1.94842e-05) , 
1.48923, 1, 17, 0, 0.492836,-0.0249309) , 
0.133332, 1, 16, 0, 0.55722,-0.0729702) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700201,-0.000242709) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.20517,0.00455804) , 
-0.123952, 1, 4, 0, 0.558497,-0.133819) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.177552,0.000130282) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0457809,0.000873897) , 
0.0433868, 1, 0, 0, 0.0797557,0.233917) , 
0.119927, 1, 16, 0, 0.161008,0.171505) , 
0.088617, 0, 15, 0, 0.496352,-0.035413)    );
  // itree = 825
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.903832,-0.000268559) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.27352,-0.000128247) , 
0.50833, 0, 13, 0, 0.875478,-0.346371) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.855786,-0.000180054) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.587926,-0.000147768) , 
0.91149, 0, 13, 0, 0.657404,-0.140333) , 
2.45614, 0, 7, 0, 0.718084,-0.197664) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.75777,-9.14664e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.507852,-5.16121e-05) , 
0.687894, 0, 16, 0, 0.524531,-0.0387574) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.359956,2.3781e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134975,0.000325646) , 
1.3063, 0, 7, 0, 0.196519,0.173326) , 
0.146043, 0, 15, 0, 0.401848,0.040566) , 
0.130557, 1, 16, 0, 0.473648,-0.0135234)    );
  // itree = 826
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.780876,-0.000119864) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.474489,-2.94985e-05) , 
0.314491, 0, 1, 0, 0.745899,-0.261109) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.61223,-7.39915e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0895875,0.00205491) , 
1.48809, 1, 17, 0, 0.260415,0.175328) , 
0.226058, 0, 7, 0, 0.710859,-0.229609) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.833506,-0.000163314) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.511986,-8.111e-05) , 
0.0983263, 0, 6, 0, 0.524949,-0.0415707) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65025,-5.3693e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229514,0.000199562) , 
0.800513, 0, 14, 0, 0.288026,0.126903) , 
0.308606, 1, 16, 0, 0.427799,0.0275116) , 
0.244119, 1, 8, 0, 0.488357,-0.027497)    );
  // itree = 827
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744618,-0.000135327) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.476185,-4.90672e-05) , 
0.389199, 1, 15, 0, 0.714488,-0.182901) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666341,-0.000155911) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.386907,7.97492e-05) , 
0.412452, 0, 12, 0, 0.502119,0.00564003) , 
0.295322, 0, 1, 0, 0.654557,-0.129694) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.983095,-0.000222383) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160881,3.67802e-06) , 
0.955697, 0, 2, 0, 0.866893,-0.410473) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.502163,-4.91383e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306682,0.000167576) , 
2.09434, 0, 10, 0, 0.358507,0.0399484) , 
-2.10367, 1, 3, 0, 0.375091,0.0252552) , 
0.697055, 0, 14, 0, 0.511934,-0.0506172)    );
  // itree = 828
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701467,-9.78932e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.287492,3.21556e-05) , 
0.112547, 0, 15, 0, 0.668308,-0.158922) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.75898,-0.000175577) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.408374,-1.94937e-05) , 
1.04719, 1, 9, 0, 0.487506,0.0138089) , 
0.541151, 0, 2, 0, 0.586873,-0.0811224) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722929,-0.000216444) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.101954,0.000414544) , 
0.246337, 1, 16, 0, 0.55854,-0.150426) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.493138,-1.10835e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.144174,0.000192837) , 
0.817139, 0, 1, 0, 0.170226,0.187921) , 
0.902589, 1, 17, 0, 0.224234,0.140863) , 
0.622998, 0, 14, 0, 0.477651,-0.0142639)    );
  // itree = 829
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.708271,-0.000107859) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.374705,0.000147663) , 
-1.11424, 0, 5, 0, 0.681197,-0.155033) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691622,-0.000176142) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.277912,0.000138861) , 
0.3878, 1, 8, 0, 0.447083,0.0443951) , 
0.354754, 1, 16, 0, 0.642425,-0.122006) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.697824,-0.000147474) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0806695,-7.18402e-06) , 
0.123805, 1, 5, 0, 0.550447,-0.135982) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.361264,8.74101e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.150409,0.000168666) , 
1.02946, 1, 11, 0, 0.273784,0.11023) , 
1.19695, 1, 9, 0, 0.311199,0.0769327) , 
0.673088, 0, 14, 0, 0.500962,-0.0370416)    );
  // itree = 830
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.896353,-0.000188851) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.711265,-0.000409817) , 
0.774617, 0, 2, 0, 0.795004,-0.265477) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.710557,-0.000114037) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.468543,-0.000144532) , 
0.638982, 0, 1, 0, 0.561336,-0.0823057) , 
0.106936, 1, 16, 0, 0.672056,-0.169098) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.819914,-0.000181298) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187651,-0.000193039) , 
2.67848, 1, 11, 0, 0.716024,-0.227123) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.537732,-4.61296e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.298632,7.22777e-05) , 
0.22463, 0, 15, 0, 0.396235,0.0490412) , 
2.39349, 0, 11, 0, 0.421488,0.0272331) , 
1.71693, 0, 7, 0, 0.469787,-0.0106111)    );
  // itree = 831
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.732837,-0.000142821) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.570745,-0.000102649) , 
0.545781, 0, 2, 0, 0.659008,-0.150141) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.6567,-0.000150847) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226788,0.000151049) , 
0.0764306, 0, 0, 0, 0.347981,0.0868926) , 
0.526453, 0, 13, 0, 0.628381,-0.1268) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660621,-0.000106404) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.456879,-3.01938e-05) , 
1.10734, 0, 4, 0, 0.498678,-0.0140017) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.765162,-0.000411903) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.197154,0.000181224) , 
0.316895, 1, 14, 0, 0.210532,0.150136) , 
0.618165, 0, 14, 0, 0.378485,0.0544643) , 
0.221227, 1, 16, 0, 0.483737,-0.0218814)    );
  // itree = 832
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.874132,-0.000180483) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.740662,-0.000204819) , 
0.101016, 1, 12, 0, 0.763566,-0.25093) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.607197,-0.00022492) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259798,-5.2995e-06) , 
-1.60968, 1, 4, 0, 0.338635,0.0999735) , 
0.530856, 0, 13, 0, 0.700372,-0.198745) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.681701,-9.98059e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.398975,8.30546e-05) , 
0.350417, 0, 2, 0, 0.610896,-0.09232) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.491098,-4.40415e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.288622,0.00026354) , 
2.09439, 0, 10, 0, 0.340993,0.0572772) , 
0.704267, 0, 14, 0, 0.460489,-0.0089548) , 
1.72669, 0, 7, 0, 0.506233,-0.0451469)    );
  // itree = 833
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767884,-0.000162353) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.372039,0.00168976) , 
0.224665, 0, 2, 0, 0.753322,-0.217429) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764162,-0.000143963) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.389202,5.1261e-05) , 
0.391535, 0, 1, 0, 0.500424,0.00818397) , 
0.736852, 0, 7, 0, 0.682241,-0.154017) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676534,-0.000137077) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.426443,-5.47142e-05) , 
0.244153, 1, 8, 0, 0.472014,-0.0307251) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.411651,-2.06729e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.232938,0.000129415) , 
2.09431, 0, 10, 0, 0.273215,0.128559) , 
0.944065, 0, 7, 0, 0.361683,0.0576758) , 
0.743276, 0, 14, 0, 0.483603,-0.0228384)    );
  // itree = 834
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.794505,-0.00012476) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.601516,-0.000233693) , 
0.549509, 0, 2, 0, 0.744234,-0.221676) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.620622,-0.000142339) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.297318,0.00011199) , 
2.39368, 0, 9, 0, 0.501735,-0.0622357) , 
0.140337, 0, 15, 0, 0.655176,-0.163121) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.699884,-0.00010997) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245612,0.00079748) , 
0.210864, 0, 2, 0, 0.664173,-0.146636) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.542709,-5.57071e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.283197,0.000109464) , 
2.09438, 0, 10, 0, 0.350732,0.0650931) , 
0.761952, 0, 14, 0, 0.442588,0.00304423) , 
1.23334, 0, 7, 0, 0.518706,-0.056452)    );
  // itree = 835
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.710362,-0.000147957) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.112165,-9.66051e-06) , 
0.769236, 1, 1, 0, 0.700428,-0.17847) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.90715,-0.000633598) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.248185,0.000129105) , 
3.61199, 0, 8, 0, 0.296221,0.0777046) , 
0.608437, 0, 14, 0, 0.632443,-0.135383) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.880727,-0.000206928) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.287328,0.000174604) , 
1.13719, 1, 8, 0, 0.803938,-0.315013) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.47733,-3.06314e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.269987,0.000242378) , 
0.976413, 1, 8, 0, 0.397344,0.0428921) , 
2.54308, 0, 11, 0, 0.423951,0.0194719) , 
1.23334, 0, 7, 0, 0.498833,-0.0361456)    );
  // itree = 836
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.750782,-0.000136502) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.39094,-8.84513e-05) , 
0.17502, 0, 12, 0, 0.737854,-0.20282) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.599275,-7.94596e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.177934,0.000776045) , 
0.326821, 1, 16, 0, 0.521095,-0.0119354) , 
0.350261, 0, 2, 0, 0.675458,-0.147872) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.50369,-4.18739e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.328473,2.22601e-05) , 
1.79428, 1, 18, 0, 0.440923,-0.00502224) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.693756,-0.000161271) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.114104,0.000334299) , 
0.242955, 0, 6, 0, 0.176872,0.19634) , 
0.483459, 1, 16, 0, 0.389986,0.0338222) , 
0.741893, 0, 14, 0, 0.49756,-0.0346457)    );
  // itree = 837
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.819186,-0.000128277) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.633882,-0.000118977) , 
0.678837, 0, 2, 0, 0.70666,-0.178485) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.532819,-0.000157291) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.278817,0.000434426) , 
1.62111, 0, 7, 0, 0.378179,0.0153783) , 
0.655067, 0, 14, 0, 0.639112,-0.13862) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.630548,-0.000109351) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.352565,9.59922e-05) , 
0.126356, 1, 3, 0, 0.545839,-0.114563) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.453921,4.46616e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252204,0.000111185) , 
0.766943, 0, 7, 0, 0.340013,0.0820185) , 
2.09403, 0, 10, 0, 0.393934,0.0305195) , 
0.258633, 1, 16, 0, 0.518649,-0.0555167)    );
  // itree = 838
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.825105,-0.000174695) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.599364,-0.000223053) , 
0.59064, 0, 2, 0, 0.734063,-0.209943) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.621963,-7.84465e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.319495,0.000177545) , 
0.145508, 0, 15, 0, 0.519233,-0.0469256) , 
0.117388, 1, 16, 0, 0.583232,-0.0954895) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.725549,-0.000114577) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.207354,0.000246878) , 
0.14385, 1, 3, 0, 0.61481,-0.182862) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.342827,0.000116165) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.1529,0.000182969) , 
2.54335, 0, 9, 0, 0.231435,0.170434) , 
1.34674, 1, 9, 0, 0.311703,0.0964635) , 
0.351159, 1, 16, 0, 0.496792,-0.0343817)    );
  // itree = 839
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.845681,-0.000113865) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.371199,0.0017314) , 
0.866689, 1, 4, 0, 0.809419,-0.276479) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691675,-0.000157084) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.498706,-4.42801e-05) , 
0.808248, 0, 14, 0, 0.597069,-0.0763431) , 
0.72157, 0, 2, 0, 0.655907,-0.131796) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.63868,-0.00011197) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.320402,0.000138764) , 
0.616952, 0, 14, 0, 0.484229,-0.0602131) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.523997,3.86744e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211963,0.000247544) , 
0.411239, 1, 13, 0, 0.282795,0.10377) , 
0.943029, 0, 7, 0, 0.369062,0.0335417) , 
0.697055, 0, 14, 0, 0.511113,-0.0483369)    );
  // itree = 840
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74757,-0.000105701) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.550336,-0.000118854) , 
1.19679, 1, 11, 0, 0.697077,-0.174091) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776471,-8.54399e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.408744,4.41786e-05) , 
0.449684, 1, 18, 0, 0.461568,-0.00900094) , 
0.309275, 1, 16, 0, 0.610017,-0.113063) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.890855,-0.000265681) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.353018,-0.000262527) , 
0.660577, 0, 13, 0, 0.752191,-0.271679) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.794667,-0.000368659) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184211,0.000333322) , 
3.66416, 0, 8, 0, 0.198067,0.154773) , 
0.611366, 1, 17, 0, 0.259433,0.107546) , 
0.115897, 0, 15, 0, 0.525181,-0.0596788)    );
  // itree = 841
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.753235,-0.000186318) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.569012,-7.16015e-05) , 
1.6864, 0, 7, 0, 0.626467,-0.115628) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746716,-0.000225476) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184224,0.00081988) , 
0.0593678, 1, 16, 0, 0.254543,0.108197) , 
0.0886516, 0, 15, 0, 0.57691,-0.0858044) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.669783,-0.000147524) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138559,0.00024451) , 
0.433126, 0, 7, 0, 0.572933,-0.141929) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.533407,-9.43981e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236601,0.000175589) , 
2.30809, 0, 8, 0, 0.27052,0.140643) , 
2.39355, 0, 10, 0, 0.318973,0.0953693) , 
0.309517, 1, 16, 0, 0.473754,-0.0133479)    );
  // itree = 842
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.814046,-0.000149525) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.588925,-0.000161735) , 
0.41814, 1, 1, 0, 0.764213,-0.226142) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.588224,-7.03671e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.173732,0.000261916) , 
0.290516, 1, 16, 0, 0.483559,0.021894) , 
0.357687, 0, 2, 0, 0.691563,-0.161936) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.538613,-6.03964e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.156354,0.000523499) , 
0.0908507, 0, 15, 0, 0.461045,-0.0267225) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.587927,-0.000143686) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220993,0.000118512) , 
1.04718, 1, 9, 0, 0.267314,0.144162) , 
1.7948, 1, 18, 0, 0.392924,0.033365) , 
0.74328, 0, 14, 0, 0.505354,-0.0401606)    );
  // itree = 843
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.751755,-0.000132509) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.500414,-6.96257e-05) , 
0.348227, 1, 15, 0, 0.706792,-0.172868) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.680297,-0.000187001) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.435941,2.75258e-05) , 
0.875583, 0, 14, 0, 0.507169,0.00343034) , 
0.45421, 0, 2, 0, 0.627252,-0.102622) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735866,-0.000190841) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306372,0.000304764) , 
0.710384, 1, 13, 0, 0.616881,-0.204844) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.525395,-0.000114651) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271933,0.000116118) , 
1.94474, 0, 11, 0, 0.305873,0.0894006) , 
2.7088, 0, 8, 0, 0.33202,0.0646629) , 
0.695491, 0, 14, 0, 0.477936,-0.0180164)    );
  // itree = 844
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.715232,-0.000113243) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253551,0.000169641) , 
0.0894912, 0, 15, 0, 0.673038,-0.179234) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.552683,-8.71737e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234431,0.000199828) , 
0.143124, 0, 15, 0, 0.438942,0.0297384) , 
0.732504, 1, 8, 0, 0.557552,-0.0761425) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.52503,-8.55117e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239554,0.000333562) , 
1.78317, 0, 17, 0, 0.335221,0.0693612) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.274409,-5.05868e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0786545,0.000286362) , 
0.841908, 0, 4, 0, 0.109771,0.277183) , 
-0.371541, 0, 5, 0, 0.262215,0.136658) , 
0.3966, 1, 16, 0, 0.482904,-0.0223557)    );
  // itree = 845
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.756439,-0.000199775) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.427151,-4.12199e-05) , 
0.528005, 0, 13, 0, 0.702291,-0.19386) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.532162,-4.76406e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.32214,0.000117769) , 
0.357673, 0, 2, 0, 0.499176,-0.0330724) , 
1.72671, 0, 7, 0, 0.548989,-0.0725051) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.608859,-8.81344e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113545,0.000356721) , 
0.898642, 0, 18, 0, 0.490806,-0.0417823) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676993,-0.000158202) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.133645,0.0001726) , 
2.2836, 0, 17, 0, 0.154776,0.227639) , 
0.0461831, 1, 0, 0, 0.230267,0.167112) , 
0.438819, 1, 16, 0, 0.487372,-0.0261814)    );
  // itree = 846
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.868619,-0.000113187) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340274,0.00179061) , 
0.866597, 1, 4, 0, 0.836634,-0.303352) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668946,-0.000148204) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.475011,-2.73044e-05) , 
0.791477, 0, 14, 0, 0.588716,-0.0672095) , 
0.7216, 0, 2, 0, 0.670819,-0.145413) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664456,-5.15623e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.453084,-2.91659e-05) , 
0.479649, 1, 13, 0, 0.538338,-0.112445) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.469629,-0.000105464) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224645,0.0003016) , 
1.34673, 1, 9, 0, 0.261844,0.117834) , 
0.926263, 0, 7, 0, 0.393225,0.00841289) , 
0.694671, 0, 14, 0, 0.532626,-0.0688345)    );
  // itree = 847
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.908893,-0.000164735) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.710261,-0.000265605) , 
0.775275, 0, 2, 0, 0.796346,-0.269315) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.476521,0.00045106) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0421353,0.000509029) , 
0.282832, 0, 7, 0, 0.263518,0.240494) , 
0.494304, 0, 7, 0, 0.770685,-0.244763) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767398,-9.3539e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.514085,-7.22149e-05) , 
0.531089, 0, 1, 0, 0.580805,-0.0632889) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.34593,6.82842e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.10922,0.000275557) , 
0.486751, 1, 16, 0, 0.293209,0.0993712) , 
0.692327, 0, 14, 0, 0.426112,0.0242033) , 
0.0885641, 1, 16, 0, 0.47547,-0.0143248)    );
  // itree = 848
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.906921,-0.000166453) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.74266,-0.000213611) , 
0.107142, 1, 12, 0, 0.777032,-0.263765) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679229,-0.000161094) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.166931,0.000344533) , 
2.21272, 0, 7, 0, 0.492092,-0.0288651) , 
0.52712, 0, 13, 0, 0.726747,-0.222311) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.613675,-7.59768e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226565,0.000255095) , 
0.138749, 0, 15, 0, 0.56782,-0.0607542) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.488389,4.26842e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.178158,0.000241134) , 
1.6459, 1, 9, 0, 0.264732,0.108479) , 
0.654112, 0, 14, 0, 0.439031,0.0111572) , 
1.72669, 0, 7, 0, 0.499059,-0.0375529)    );
  // itree = 849
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.685628,-8.91843e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.561781,-6.14509e-05) , 
0.536008, 0, 2, 0, 0.637874,-0.135314) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.458301,-1.79078e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152868,0.000621548) , 
0.9813, 0, 7, 0, 0.324286,0.0498077) , 
0.11583, 0, 15, 0, 0.562027,-0.0905391) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.910125,-0.000302178) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.297681,0.000651911) , 
0.704844, 0, 16, 0, 0.521094,-0.0862658) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.120955,0.00871958) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.065189,0.000530442) , 
0.444586, 1, 14, 0, 0.0743061,0.293657) , 
0.372578, 0, 12, 0, 0.115482,0.258643) , 
0.574377, 1, 16, 0, 0.534842,-0.0692812)    );
  // itree = 850
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.753574,-0.000126992) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.51948,1.96163e-05) , 
0.985053, 1, 8, 0, 0.671748,-0.16937) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.913316,-0.000231441) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.491279,-3.87932e-05) , 
0.250192, 0, 6, 0, 0.511276,-0.0268227) , 
0.897594, 1, 11, 0, 0.593512,-0.0998732) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.874051,-0.000232341) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0603196,0.00199614) , 
-0.381408, 1, 3, 0, 0.701054,-0.325546) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.535155,-0.000137623) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.1886,0.000262959) , 
2.6941, 0, 8, 0, 0.221176,0.144058) , 
0.81164, 0, 1, 0, 0.274774,0.0916078) , 
0.116474, 0, 15, 0, 0.512136,-0.0509869)    );
  // itree = 851
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.98886,-9.44968e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.112923,0.00847988) , 
0.963138, 0, 5, 0, 0.970694,-0.437603) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.845883,-0.000235834) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.583356,-7.41093e-05) , 
0.611353, 1, 17, 0, 0.66202,-0.175479) , 
0.439573, 0, 15, 0, 0.728063,-0.231562) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704046,-0.000106413) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.482955,-3.56883e-05) , 
0.734807, 1, 8, 0, 0.609681,-0.0881571) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.523647,-5.87727e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.231573,0.000205948) , 
2.09409, 0, 10, 0, 0.315402,0.084203) , 
0.705389, 0, 14, 0, 0.446733,0.00728183) , 
1.05464, 1, 17, 0, 0.530462,-0.0638025)    );
  // itree = 852
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.838095,-0.000201137) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0612534,-3.95572e-05) , 
0.611957, 0, 14, 0, 0.821862,-0.280548) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.60114,-6.07667e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.447395,6.39899e-07) , 
0.455829, 0, 2, 0, 0.557618,-0.0718703) , 
1.8742, 0, 7, 0, 0.600176,-0.105479) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.887597,-0.000466261) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317988,0.00024423) , 
0.456608, 1, 13, 0, 0.543503,-0.162687) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.491462,-0.000118526) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.103602,0.000466445) , 
1.71941, 0, 7, 0, 0.188879,0.168023) , 
1.94391, 0, 11, 0, 0.243171,0.117391) , 
0.116291, 0, 15, 0, 0.512612,-0.0508146)    );
  // itree = 853
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.848466,-9.9503e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.651107,-8.73379e-05) , 
0.303331, 0, 12, 0, 0.697224,-0.183274) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.627765,-0.000139533) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.414725,3.63333e-05) , 
0.735837, 0, 7, 0, 0.545063,-0.0378322) , 
0.637167, 0, 2, 0, 0.607233,-0.0972567) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.413204,3.84336e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0750035,0.00013079) , 
1.93774, 1, 17, 0, 0.361537,0.0135241) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.384825,-1.13794e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145288,0.000541262) , 
2.31097, 0, 8, 0, 0.203393,0.152971) , 
0.956261, 1, 8, 0, 0.285198,0.0808377) , 
0.637994, 0, 14, 0, 0.495119,-0.0352543)    );
  // itree = 854
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.9031,-0.000178583) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.724558,-0.000211002) , 
0.52351, 0, 1, 0, 0.79305,-0.265327) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.491365,0.000385225) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0454799,0.000545069) , 
0.05657, 1, 16, 0, 0.24357,0.258317) , 
0.491336, 0, 7, 0, 0.769375,-0.242765) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.591852,-8.64854e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.420163,-4.48373e-06) , 
1.79422, 1, 18, 0, 0.534073,-0.0404014) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.33409,6.97643e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.120987,0.00043182) , 
0.839574, 0, 7, 0, 0.23336,0.144749) , 
0.14413, 0, 15, 0, 0.424525,0.0270472) , 
0.0887996, 1, 16, 0, 0.474441,-0.0120068)    );
  // itree = 855
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705665,-0.000105358) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.520619,-4.29312e-05) , 
0.309244, 0, 1, 0, 0.646882,-0.133057) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.494927,-7.22077e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.136516,0.000620486) , 
0.0874724, 0, 6, 0, 0.306044,0.166261) , 
0.122945, 1, 0, 0, 0.615965,-0.105906) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.574265,-0.00011779) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.302233,0.000162097) , 
0.44884, 1, 10, 0, 0.360706,0.0202943) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.810251,-0.000235143) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0945791,0.000319175) , 
2.54122, 0, 11, 0, 0.160874,0.19642) , 
0.401356, 1, 16, 0, 0.27964,0.0917431) , 
0.637994, 0, 14, 0, 0.501399,-0.0385785)    );
  // itree = 856
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707034,-0.000106) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.500332,-7.55537e-05) , 
-0.371429, 0, 5, 0, 0.65376,-0.138776) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.573605,-0.000153846) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192081,0.000505776) , 
1.71941, 0, 7, 0, 0.34154,0.0541346) , 
0.115759, 0, 15, 0, 0.581696,-0.0942504) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.89079,-0.000196419) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.450922,-3.6815e-05) , 
0.296368, 1, 12, 0, 0.634875,-0.132484) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.304748,0.000102746) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.072777,0.000610416) , 
0.568239, 1, 16, 0, 0.25021,0.146317) , 
0.793558, 0, 14, 0, 0.300313,0.110003) , 
0.351159, 1, 16, 0, 0.49272,-0.0296635)    );
  // itree = 857
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761044,-0.000165706) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.624536,-0.000119323) , 
0.403942, 0, 16, 0, 0.642155,-0.13954) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.523845,-6.71927e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113859,0.00158656) , 
0.689587, 1, 8, 0, 0.297594,0.0658477) , 
0.573147, 0, 14, 0, 0.589936,-0.108413) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.594584,-7.24725e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.136161,0.000341638) , 
0.119164, 0, 15, 0, 0.502103,-0.0463972) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.554977,0.000251786) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201174,0.000421256) , 
1.98327, 0, 17, 0, 0.244953,0.16109) , 
0.985008, 1, 8, 0, 0.406537,0.0307126) , 
0.986676, 0, 7, 0, 0.489718,-0.0323884)    );
  // itree = 858
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761959,-0.00010518) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.614869,-7.21186e-05) , 
0.549006, 0, 2, 0, 0.70154,-0.184427) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.787234,-0.000231211) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.361868,6.14882e-05) , 
0.075648, 1, 16, 0, 0.435953,-0.00141219) , 
0.170427, 0, 15, 0, 0.590552,-0.107945) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76053,-0.000161443) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.161336,0.00012925) , 
0.243576, 0, 7, 0, 0.665914,-0.163925) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76792,-0.000215844) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.210139,0.000260758) , 
2.86804, 0, 8, 0, 0.232716,0.157043) , 
0.800104, 0, 14, 0, 0.290137,0.114498) , 
0.39499, 1, 16, 0, 0.518869,-0.0548675)    );
  // itree = 859
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.70262,-0.000107709) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.310816,0.000266407) , 
-1.36185, 0, 5, 0, 0.681305,-0.151132) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705278,-0.000105596) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.341979,6.2217e-05) , 
0.0946107, 0, 6, 0, 0.388367,0.0152389) , 
0.676079, 0, 14, 0, 0.588162,-0.0982326) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.583125,-7.67861e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279908,-5.01921e-05) , 
0.5436, 1, 14, 0, 0.462499,-0.0604609) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.407343,4.26795e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0795389,0.00121294) , 
0.145795, 0, 15, 0, 0.277406,0.128948) , 
2.09437, 0, 10, 0, 0.322257,0.0830505) , 
0.351159, 1, 16, 0, 0.503113,-0.0402496)    );
  // itree = 860
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.716719,-0.000111666) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.534626,-8.0566e-05) , 
0.314807, 0, 1, 0, 0.672276,-0.150491) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.588015,-0.000222742) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.196087,0.000264143) , 
0.0887353, 1, 16, 0, 0.27525,0.116122) , 
0.118164, 0, 15, 0, 0.588689,-0.0943605) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.557127,-5.45196e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.31872,6.30462e-05) , 
0.448834, 1, 10, 0, 0.360911,0.0594743) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.865892,-0.000567957) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0909968,0.000361433) , 
0.469347, 0, 12, 0, 0.105867,0.267049) , 
0.543401, 1, 16, 0, 0.30486,0.105093) , 
0.308739, 1, 16, 0, 0.480548,-0.0183672)    );
  // itree = 861
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.944215,-0.000175528) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.32796,-0.000166529) , 
-0.123348, 0, 5, 0, 0.910745,-0.382789) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.823457,-0.000290617) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.585168,-0.000106861) , 
0.0496419, 1, 16, 0, 0.706677,-0.177143) , 
0.771908, 0, 2, 0, 0.791305,-0.262426) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.757535,-0.00020067) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.102681,8.44214e-05) , 
2.53916, 1, 18, 0, 0.715844,-0.229891) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.563853,-6.40071e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378103,4.11452e-05) , 
1.22187, 1, 17, 0, 0.439074,0.0100542) , 
2.24389, 0, 11, 0, 0.465831,-0.0131431) , 
0.0864192, 1, 16, 0, 0.510719,-0.0475231)    );
  // itree = 862
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.807284,-0.000109325) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.564927,-0.000115638) , 
1.04564, 1, 11, 0, 0.754957,-0.220106) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.6396,-0.000122086) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.376067,6.94421e-05) , 
0.267514, 1, 15, 0, 0.562337,-0.043575) , 
0.541201, 0, 2, 0, 0.649089,-0.12308) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.605642,-0.000106461) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.11367,6.96397e-05) , 
0.53841, 0, 14, 0, 0.525432,-0.0933709) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.445026,8.04449e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212487,0.000155445) , 
0.0445702, 1, 0, 0, 0.292121,0.100873) , 
1.06156, 1, 17, 0, 0.34644,0.0556497) , 
0.708182, 0, 14, 0, 0.487831,-0.0278494)    );
  // itree = 863
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.690633,-0.000105527) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.438721,-4.61376e-05) , 
2.24059, 1, 18, 0, 0.652446,-0.138426) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.525888,-3.49177e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252979,0.000258852) , 
0.608412, 0, 7, 0, 0.376635,0.0668034) , 
0.397487, 1, 16, 0, 0.590554,-0.0923725) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776426,-0.00027569) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0911664,0.00275859) , 
0.582459, 1, 17, 0, 0.728908,-0.246546) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.823569,-0.000325404) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174477,0.000315537) , 
0.33156, 1, 14, 0, 0.189581,0.16256) , 
0.610887, 1, 17, 0, 0.240706,0.123779) , 
0.115897, 0, 15, 0, 0.506347,-0.0403454)    );
  // itree = 864
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728034,-0.000123179) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.43777,-1.20932e-05) , 
0.0400203, 1, 6, 0, 0.691796,-0.16558) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622882,-0.000104837) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.332732,0.000145438) , 
1.04718, 0, 10, 0, 0.523835,-0.00199091) , 
0.979678, 1, 8, 0, 0.634008,-0.109296) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.885077,-0.00016992) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.150851,0.000521887) , 
0.834971, 0, 2, 0, 0.762613,-0.274701) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.464046,-6.07304e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233575,0.000153342) , 
0.436535, 1, 13, 0, 0.291111,0.0994332) , 
2.33767, 0, 7, 0, 0.325604,0.0720632) , 
0.695491, 0, 14, 0, 0.481081,-0.0193662)    );
  // itree = 865
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.780219,-0.000117614) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.592148,-8.76675e-05) , 
0.454977, 0, 2, 0, 0.713821,-0.179279) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.57216,-1.10808e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265643,-2.81529e-05) , 
0.437197, 0, 16, 0, 0.447419,0.0480914) , 
0.315374, 1, 16, 0, 0.663699,-0.1365) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.867351,-0.000177733) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.146456,-0.000256325) , 
0.580182, 0, 14, 0, 0.774811,-0.292702) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.492414,-4.73743e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.27028,0.000179277) , 
2.09435, 0, 10, 0, 0.329692,0.0630049) , 
0.629448, 1, 17, 0, 0.356042,0.0419479) , 
0.695771, 0, 14, 0, 0.511685,-0.0483285)    );
  // itree = 866
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.773138,-0.000201964) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.606264,-0.000102813) , 
0.265845, 1, 15, 0, 0.710954,-0.178194) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.945441,-0.000454895) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.327521,0.000167637) , 
2.04726, 0, 7, 0, 0.447281,0.0634731) , 
0.272284, 0, 2, 0, 0.664885,-0.13597) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.847577,-0.000232333) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.299303,-0.000110215) , 
0.0266527, 1, 6, 0, 0.771427,-0.273727) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.863499,-0.00023219) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34077,2.16839e-05) , 
-2.10458, 1, 3, 0, 0.360077,0.0663715) , 
0.615988, 1, 17, 0, 0.386348,0.044651) , 
0.770025, 0, 14, 0, 0.464557,-0.00606506)    );
  // itree = 867
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.836372,-0.000138699) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.5246,-0.000163378) , 
1.94491, 0, 9, 0, 0.795342,-0.256777) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668338,-0.000103799) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.452445,-2.60312e-05) , 
0.732328, 1, 8, 0, 0.573114,-0.053414) , 
1.05365, 1, 17, 0, 0.646117,-0.12022) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.452216,-1.5229e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.241172,0.000148625) , 
1.7916, 1, 18, 0, 0.379053,0.0275319) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.759656,-0.000279356) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.104461,0.000310745) , 
0.799372, 0, 16, 0, 0.127851,0.232828) , 
0.48599, 1, 16, 0, 0.324351,0.0722373) , 
0.695075, 0, 14, 0, 0.486653,-0.0248402)    );
  // itree = 868
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.786761,-0.000111765) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.599592,-9.62598e-05) , 
0.536699, 0, 1, 0, 0.667185,-0.155288) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.597138,-8.45093e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.377915,0.000142308) , 
0.401528, 1, 8, 0, 0.441342,-0.000636947) , 
0.309876, 1, 16, 0, 0.581614,-0.0966911) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.875535,-0.000218857) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.170727,0.000830798) , 
0.0813717, 0, 15, 0, 0.51743,-0.151216) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760494,-0.00066968) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0990473,0.000463787) , 
-2.35237, 1, 5, 0, 0.117695,0.204797) , 
2.6941, 0, 8, 0, 0.161939,0.165393) , 
0.0891881, 0, 15, 0, 0.520773,-0.0586961)    );
  // itree = 869
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746498,-0.000146054) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0808727,2.46539e-05) , 
0.575525, 0, 14, 0, 0.727591,-0.199382) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.577737,-0.000182615) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.295408,0.000112322) , 
0.74826, 1, 10, 0, 0.397985,0.00440918) , 
0.11511, 0, 15, 0, 0.642976,-0.147066) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.855297,-0.000114644) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.553462,-5.95551e-05) , 
0.149841, 1, 10, 0, 0.594285,-0.078595) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.429719,1.90606e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202053,0.000246481) , 
1.34611, 0, 11, 0, 0.292826,0.098431) , 
0.705932, 0, 14, 0, 0.421645,0.0227843) , 
1.23335, 0, 7, 0, 0.502244,-0.0390673)    );
  // itree = 870
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761507,-0.000116459) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.527126,-5.26212e-05) , 
0.721022, 0, 14, 0, 0.666759,-0.152839) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.516842,-2.13379e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.277235,9.81078e-06) , 
0.370995, 1, 4, 0, 0.452866,0.034049) , 
0.299674, 0, 1, 0, 0.615572,-0.108115) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.625783,-0.000239391) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292886,0.00132611) , 
-0.123805, 1, 4, 0, 0.495617,-0.0994518) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.386325,5.4024e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172842,0.0001884) , 
0.448834, 1, 10, 0, 0.20477,0.152718) , 
0.182118, 1, 16, 0, 0.249321,0.114092) , 
0.624085, 0, 14, 0, 0.50495,-0.0409996)    );
  // itree = 871
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.798078,-0.000144131) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.622743,-9.15639e-05) , 
0.246307, 1, 8, 0, 0.660421,-0.14352) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.823881,-0.000496002) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.383279,0.000126212) , 
1.96222, 0, 7, 0, 0.431729,0.0630502) , 
0.357682, 0, 2, 0, 0.615627,-0.10306) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.910869,-0.000262922) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0254894,0.0173017) , 
0.123659, 0, 12, 0, 0.688855,-0.287542) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.525582,-5.98124e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.246461,0.000217867) , 
0.299296, 1, 10, 0, 0.280931,0.0916205) , 
0.234809, 1, 13, 0, 0.301525,0.0724786) , 
0.644627, 0, 14, 0, 0.500347,-0.0386345)    );
  // itree = 872
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.822782,-0.000253032) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192215,-0.000144009) , 
0.106177, 0, 12, 0, 0.807258,-0.271481) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.623068,-0.000139307) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.182608,-4.71828e-05) , 
0.27227, 0, 2, 0, 0.576446,-0.0652267) , 
1.71702, 0, 7, 0, 0.705573,-0.180615) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.620321,-8.39365e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.332819,0.000150656) , 
0.943673, 1, 8, 0, 0.500175,-0.0515974) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694506,-0.000138111) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.328248,3.57955e-05) , 
2.05247, 0, 7, 0, 0.352515,0.0856955) , 
2.39361, 0, 9, 0, 0.427276,0.0161833) , 
0.126297, 1, 16, 0, 0.484899,-0.0245649)    );
  // itree = 873
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714981,-9.97896e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239947,-4.98211e-05) , 
0.149595, 0, 11, 0, 0.704231,-0.179981) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.656861,-9.43294e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.346075,3.3401e-05) , 
1.64548, 0, 11, 0, 0.441898,-0.0260449) , 
0.14376, 0, 15, 0, 0.618439,-0.129638) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.861094,-0.000246784) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.307051,-2.19129e-05) , 
0.426772, 1, 8, 0, 0.68887,-0.185026) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.317577,5.95677e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.132375,0.000521598) , 
0.40656, 0, 7, 0, 0.253581,0.142269) , 
0.804853, 0, 14, 0, 0.312059,0.0982999) , 
0.352592, 1, 16, 0, 0.526702,-0.0613889)    );
  // itree = 874
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.715509,-0.000111301) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530685,-8.28233e-05) , 
0.313698, 0, 1, 0, 0.671738,-0.150947) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.620837,-9.99738e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.327834,0.000136754) , 
0.922764, 0, 7, 0, 0.424138,0.0271748) , 
0.31021, 1, 16, 0, 0.581845,-0.0862786) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.649431,-0.000201453) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.258736,0.000242286) , 
1.19719, 1, 10, 0, 0.49806,-0.0730473) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.478298,-2.69934e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0871191,0.00037845) , 
1.94449, 0, 11, 0, 0.14402,0.192932) , 
1.48018, 0, 7, 0, 0.256116,0.108719) , 
0.116799, 0, 15, 0, 0.496458,-0.0351621)    );
  // itree = 875
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.840589,-0.000104524) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.641353,-9.73754e-05) , 
0.81646, 0, 2, 0, 0.685789,-0.158741) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653873,-0.000119592) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227089,0.000138194) , 
0.917212, 0, 4, 0, 0.387293,0.0998655) , 
0.394334, 1, 16, 0, 0.650711,-0.128351) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.586404,-0.000140643) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.130578,0.00447381) , 
0.564505, 0, 14, 0, 0.469283,-0.072149) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.3599,4.28205e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0883669,0.000506382) , 
0.0924763, 0, 15, 0, 0.273326,0.108125) , 
2.19061, 0, 8, 0, 0.305641,0.0783967) , 
0.671902, 0, 14, 0, 0.509456,-0.0437187)    );
  // itree = 876
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.943143,-0.000164609) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163283,0.00306152) , 
0.418338, 0, 13, 0, 0.93181,-0.393857) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.804092,-0.000290543) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.473008,-5.41679e-05) , 
0.0547742, 1, 16, 0, 0.673765,-0.145956) , 
0.772561, 0, 2, 0, 0.801843,-0.268999) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.6987,-9.27366e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0826658,0.000198044) , 
0.0983656, 1, 6, 0, 0.644449,-0.17426) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.505301,-4.96705e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.151077,0.000439563) , 
0.116474, 0, 15, 0, 0.411005,0.0362534) , 
0.241119, 1, 8, 0, 0.452257,-0.000946551) , 
0.0881708, 1, 16, 0, 0.506388,-0.0424523)    );
  // itree = 877
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.873246,-0.000147546) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.483606,-8.80774e-05) , 
1.04735, 1, 10, 0, 0.761854,-0.276176) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.807097,-0.000207782) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.514507,-7.53815e-05) , 
0.59849, 1, 9, 0, 0.537413,-0.0462045) , 
0.909444, 0, 2, 0, 0.573744,-0.0834303) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.973899,-0.00025743) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.114117,0.00814362) , 
0.873115, 0, 5, 0, 0.785658,-0.392294) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615266,0.000115933) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306553,9.93688e-05) , 
0.813353, 0, 1, 0, 0.327839,0.0848866) , 
0.242955, 0, 6, 0, 0.35084,0.0609137) , 
0.30858, 1, 16, 0, 0.481978,-0.0240061)    );
  // itree = 878
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717781,-0.000108918) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.566298,-8.63852e-05) , 
1.48981, 1, 17, 0, 0.651774,-0.136763) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.594528,-0.000176052) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233662,0.000404616) , 
0.90688, 1, 17, 0, 0.349037,0.042869) , 
0.11583, 0, 15, 0, 0.581723,-0.0951975) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.841481,-0.000186155) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.45406,1.51294e-05) , 
1.05466, 0, 5, 0, 0.561575,-0.125496) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.502602,-1.96909e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.156593,0.00025318) , 
0.441769, 0, 15, 0, 0.215808,0.181388) , 
0.441243, 1, 8, 0, 0.335034,0.0755691) , 
0.351157, 1, 16, 0, 0.502894,-0.0406289)    );
  // itree = 879
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.690443,-0.000109977) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.463072,-6.57523e-05) , 
0.335631, 1, 15, 0, 0.658767,-0.14143) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707345,-0.000115431) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.300957,8.56546e-05) , 
2.3935, 0, 10, 0, 0.387418,0.0537846) , 
0.354295, 1, 16, 0, 0.582536,-0.0865879) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.92552,-0.000260514) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.117302,0.0315116) , 
0.455183, 0, 13, 0, 0.884904,-0.360035) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.531178,-4.5651e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.170481,0.000281573) , 
0.0372869, 1, 12, 0, 0.188911,0.164016) , 
0.467889, 1, 17, 0, 0.234037,0.130039) , 
0.116223, 0, 15, 0, 0.495545,-0.0325141)    );
  // itree = 880
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.795655,-0.000191516) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.473235,-0.000163339) , 
0.113295, 0, 15, 0, 0.717208,-0.200932) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.584405,-0.000789336) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0540986,0.00098296) , 
0.575373, 1, 2, 0, 0.116863,0.281372) , 
0.289558, 1, 16, 0, 0.689798,-0.178911) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.772449,-0.000222897) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202391,3.39151e-06) , 
2.23904, 1, 18, 0, 0.683038,-0.20682) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.403052,-4.91198e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.177901,0.000117405) , 
0.163517, 0, 7, 0, 0.380385,0.0603137) , 
0.598412, 1, 9, 0, 0.397564,0.0451508) , 
1.71693, 0, 7, 0, 0.459628,-0.00243492)    );
  // itree = 881
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.927184,-0.000208113) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.755751,-0.000293578) , 
2.69294, 0, 9, 0, 0.854102,-0.329716) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.52513,-0.0002465) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0365487,0.027047) , 
0.506646, 1, 13, 0, 0.338775,0.0797928) , 
0.196142, 1, 16, 0, 0.817494,-0.300624) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.515843,-4.73587e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.273474,0.000183216) , 
0.257618, 0, 2, 0, 0.503459,-0.0382527) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.815629,-0.00207705) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.089246,0.00353592) , 
0.805872, 0, 14, 0, 0.103105,0.187884) , 
0.0622653, 0, 15, 0, 0.47514,-0.022257) , 
0.614281, 1, 17, 0, 0.49714,-0.0401454)    );
  // itree = 882
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.841705,-0.000137221) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.573173,-0.000141755) , 
1.19652, 1, 11, 0, 0.790313,-0.248578) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.642198,-0.000101036) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.409504,-7.10846e-06) , 
0.304963, 1, 16, 0, 0.579061,-0.0593382) , 
1.05476, 1, 17, 0, 0.647499,-0.120645) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661384,-0.000100441) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335131,-4.2144e-06) , 
1.34478, 1, 18, 0, 0.529285,-0.105096) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.708385,-0.000195734) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245795,0.000177339) , 
0.0866252, 1, 16, 0, 0.274406,0.121909) , 
2.09437, 0, 10, 0, 0.346704,0.0575177) , 
0.706623, 0, 14, 0, 0.488032,-0.0261916)    );
  // itree = 883
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.925464,-0.000164193) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.1625,-0.000133693) , 
1.68808, 1, 8, 0, 0.901537,-0.367078) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776466,-0.000290992) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.428579,-4.66384e-05) , 
0.0551552, 1, 16, 0, 0.642861,-0.110672) , 
0.771764, 0, 2, 0, 0.767697,-0.234412) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.610949,-9.206e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.222253,0.000212092) , 
-1.11432, 0, 5, 0, 0.574713,-0.0546907) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.329558,5.80332e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.074283,0.000310984) , 
0.226139, 1, 0, 0, 0.283759,0.111185) , 
0.702574, 0, 14, 0, 0.408702,0.0399535) , 
0.0887996, 1, 16, 0, 0.461804,-0.000629945)    );
  // itree = 884
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.847909,-0.00023756) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.131014,-0.000183257) , 
0.209974, 1, 16, 0, 0.816867,-0.295782) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.618738,-0.000105481) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245037,0.000448976) , 
0.0883546, 0, 15, 0, 0.559611,-0.0801207) , 
0.619382, 1, 17, 0, 0.59905,-0.113183) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.828576,-0.000159196) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.419224,2.56955e-05) , 
0.604061, 1, 10, 0, 0.505412,-0.0526452) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.710684,-0.000188532) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.285489,4.89184e-05) , 
0.522569, 0, 15, 0, 0.305981,0.120464) , 
0.492506, 1, 8, 0, 0.374577,0.0609219) , 
0.986676, 0, 7, 0, 0.480712,-0.0213983)    );
  // itree = 885
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721705,-0.000125091) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.533014,-4.71265e-05) , 
0.985057, 1, 8, 0, 0.645386,-0.130418) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.484683,-2.50529e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187231,-4.70317e-05) , 
0.212193, 0, 12, 0, 0.397599,0.0939364) , 
0.0327394, 1, 6, 0, 0.601391,-0.0905835) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.960889,-0.000637182) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0421754,0.0120795) , 
0.521754, 1, 2, 0, 0.886407,-0.467311) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695822,-0.00020961) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238566,0.000184909) , 
2.3522, 0, 5, 0, 0.249938,0.116395) , 
3.65102, 0, 8, 0, 0.260304,0.106889) , 
0.641704, 0, 14, 0, 0.481138,-0.0209631)    );
  // itree = 886
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71239,-0.000103676) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.41071,2.9987e-06) , 
-1.11437, 0, 5, 0, 0.683925,-0.15989) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.698413,-7.34378e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.314988,8.46969e-05) , 
0.527092, 1, 14, 0, 0.410845,0.0337695) , 
0.379124, 1, 16, 0, 0.617399,-0.112711) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.640347,-0.00015278) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.286045,8.82758e-05) , 
1.19719, 1, 10, 0, 0.501313,-0.0667494) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.424427,0.000146363) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.132222,0.000268552) , 
1.11571, 0, 7, 0, 0.159172,0.196905) , 
1.23345, 0, 7, 0, 0.300382,0.0880885) , 
0.143039, 0, 15, 0, 0.509088,-0.0441073)    );
  // itree = 887
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722423,-0.000115559) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.326016,0.000185634) , 
-1.3619, 0, 5, 0, 0.703383,-0.172427) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.408888,-8.01329e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.110429,0.000316973) , 
0.36457, 0, 2, 0, 0.289828,0.20769) , 
0.245321, 0, 7, 0, 0.673883,-0.145312) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.979577,-0.000157121) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.633845,-0.000242369) , 
0.0324206, 0, 6, 0, 0.737415,-0.250155) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71717,-0.000167487) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317704,0.00010066) , 
0.242955, 0, 6, 0, 0.328728,0.0704148) , 
0.0926971, 1, 16, 0, 0.357432,0.0478994) , 
0.708187, 0, 14, 0, 0.507113,-0.0434894)    );
  // itree = 888
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728629,-0.000114287) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.481315,-1.43554e-05) , 
0.976551, 1, 8, 0, 0.640828,-0.140524) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.862172,-0.000135012) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.452026,-3.69771e-05) , 
0.236077, 0, 6, 0, 0.472589,0.0117744) , 
1.04711, 1, 11, 0, 0.574781,-0.0807344) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.511844,-6.47056e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0724177,0.000766135) , 
0.449688, 0, 1, 0, 0.40618,-0.0333754) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.527475,-0.000172481) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0947245,0.00067576) , 
0.905832, 1, 17, 0, 0.181042,0.17228) , 
1.34602, 0, 11, 0, 0.267274,0.0935099) , 
0.116867, 0, 15, 0, 0.495389,-0.0357485)    );
  // itree = 889
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.681558,-0.00010738) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.379772,4.33555e-05) , 
0.273289, 0, 2, 0, 0.660648,-0.141722) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.398757,2.03741e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.122903,0.000762246) , 
0.618608, 1, 3, 0, 0.345713,0.0309811) , 
0.641704, 0, 14, 0, 0.560605,-0.0868609) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.716043,-0.000184494) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.346475,0.000483641) , 
0.421117, 0, 7, 0, 0.455002,-0.019615) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.389365,-5.37785e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.177137,0.000254424) , 
0.746323, 1, 10, 0, 0.257482,0.16392) , 
1.49682, 1, 9, 0, 0.296542,0.127626) , 
0.491328, 0, 7, 0, 0.49377,-0.0325736)    );
  // itree = 890
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736727,-0.000103872) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.467425,-0.000124609) , 
1.94479, 0, 9, 0, 0.690263,-0.16844) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.57764,-9.34999e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249641,0.000212426) , 
0.488235, 1, 8, 0, 0.354301,0.0395578) , 
0.115759, 0, 15, 0, 0.617977,-0.123686) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.973129,-0.000192355) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.153806,-0.000148691) , 
0.498989, 1, 13, 0, 0.711748,-0.318002) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.419295,7.89089e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245384,0.000263332) , 
1.49393, 1, 18, 0, 0.33791,0.0755458) , 
2.86807, 0, 8, 0, 0.352369,0.0603244) , 
0.309582, 1, 16, 0, 0.514797,-0.0522044)    );
  // itree = 891
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720377,-0.000122403) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.533029,-3.06137e-05) , 
0.708348, 0, 7, 0, 0.65493,-0.133362) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.836021,-0.000229007) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317348,0.000174211) , 
0.244948, 0, 6, 0, 0.349709,0.0613863) , 
0.640947, 0, 14, 0, 0.591145,-0.0926632) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735607,-0.000326037) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.348894,-7.3625e-05) , 
2.8423, 0, 9, 0, 0.483687,-0.0598864) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647052,-0.000171437) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.13815,0.00043883) , 
2.87009, 0, 8, 0, 0.174841,0.165261) , 
1.72675, 0, 7, 0, 0.239882,0.117847) , 
0.117146, 0, 15, 0, 0.504692,-0.0408524)    );
  // itree = 892
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.685462,-0.000110189) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.330579,-5.9105e-05) , 
-1.36185, 0, 5, 0, 0.66504,-0.142533) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.897549,-0.000188959) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.241093,0.000244836) , 
2.9434, 0, 7, 0, 0.354273,0.0438791) , 
0.115588, 0, 15, 0, 0.596495,-0.101416) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622512,-6.18115e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143987,-5.17905e-05) , 
-0.380068, 0, 3, 0, 0.531805,-0.115743) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.478226,-2.41431e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.185752,0.000308688) , 
0.945886, 0, 7, 0, 0.274105,0.137578) , 
2.09432, 0, 10, 0, 0.34589,0.0670128) , 
0.30858, 1, 16, 0, 0.496263,-0.0340515)    );
  // itree = 893
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.869678,-0.000178958) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.685313,-0.00019241) , 
2.24629, 0, 18, 0, 0.759027,-0.235574) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622156,-0.0016869) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0973542,0.00032924) , 
0.609571, 1, 9, 0, 0.144001,0.196355) , 
0.571708, 0, 14, 0, 0.718309,-0.206978) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.519156,-5.24894e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.339493,6.50239e-05) , 
0.573079, 0, 7, 0, 0.450199,0.00476838) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744754,-0.000182337) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152435,0.000224869) , 
0.828682, 0, 13, 0, 0.212461,0.188878) , 
0.583817, 1, 1, 0, 0.412397,0.0340428) , 
1.71925, 0, 7, 0, 0.480314,-0.0194674)    );
  // itree = 894
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.737132,-0.000149732) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.580668,-9.71646e-05) , 
0.489888, 1, 8, 0, 0.627885,-0.13958) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.855243,-0.000640426) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0900469,1.61583e-05) , 
0.0532582, 1, 16, 0, 0.127217,0.278876) , 
0.394283, 0, 13, 0, 0.601446,-0.117483) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.531157,-1.03194e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318231,-2.45625e-05) , 
0.628779, 1, 2, 0, 0.454391,-0.0159188) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.506479,-0.000371931) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143874,0.000844667) , 
-2.37447, 1, 5, 0, 0.163694,0.238016) , 
2.24062, 1, 18, 0, 0.403975,0.0281212) , 
0.964747, 0, 7, 0, 0.497569,-0.0408898)    );
  // itree = 895
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.795563,-0.000206672) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.14188,0.00346974) , 
0.0710967, 0, 12, 0, 0.783141,-0.256793) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.268751,0.00326127) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0514509,-0.00014118) , 
0.50432, 1, 14, 0, 0.146453,0.191883) , 
0.57641, 0, 14, 0, 0.746887,-0.231244) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677103,-9.23844e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.478136,-3.19374e-05) , 
1.184, 1, 17, 0, 0.53809,-0.0483686) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.421941,1.96259e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.161316,0.00049866) , 
0.484871, 1, 8, 0, 0.240602,0.107991) , 
0.117723, 0, 15, 0, 0.46,-0.00732486) , 
1.96486, 0, 7, 0, 0.501526,-0.0397359)    );
  // itree = 896
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.774534,-0.000126416) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.545215,-0.000102604) , 
0.371433, 1, 4, 0, 0.721731,-0.189298) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.58438,-0.000133264) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.353679,-3.2786e-05) , 
0.801084, 0, 14, 0, 0.497519,0.0193439) , 
0.398611, 0, 1, 0, 0.598557,-0.074678) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.532594,-7.58662e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292633,0.000245184) , 
1.79472, 1, 18, 0, 0.454972,-0.00526541) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.490883,-8.70326e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.161425,0.00016004) , 
1.3615, 0, 3, 0, 0.200369,0.165554) , 
0.172539, 0, 15, 0, 0.295066,0.102019) , 
0.709411, 0, 14, 0, 0.433101,0.0216534)    );
  // itree = 897
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.752894,-0.000203375) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.480159,-8.5849e-05) , 
0.542493, 0, 13, 0, 0.706131,-0.195053) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.584259,-8.53426e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378787,0.000117539) , 
0.973221, 1, 8, 0, 0.493931,-0.0316418) , 
1.71925, 0, 7, 0, 0.542752,-0.069238) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.964996,-0.000308145) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.00114865,0.0153344) , 
0.471854, 0, 14, 0, 0.8967,-0.499948) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.494393,-0.000100069) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.179279,0.00019838) , 
2.39336, 0, 10, 0, 0.227445,0.158714) , 
0.795554, 0, 16, 0, 0.258926,0.127731) , 
0.138549, 1, 0, 0, 0.484392,-0.0287374)    );
  // itree = 898
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677493,-0.00011024) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.50753,-3.74077e-05) , 
0.452693, 0, 2, 0, 0.622327,-0.119619) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.771506,-0.000212624) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.294897,6.66774e-05) , 
2.84402, 0, 9, 0, 0.36805,0.0692181) , 
0.56881, 0, 13, 0, 0.580848,-0.0888144) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.608809,-0.000135689) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167968,0.00054292) , 
0.545826, 1, 1, 0, 0.498009,-0.0668821) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.405469,9.74761e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.190774,0.000210048) , 
0.866681, 0, 5, 0, 0.25936,0.144788) , 
0.961398, 0, 7, 0, 0.327228,0.084592) , 
0.309515, 1, 16, 0, 0.480617,-0.0202842)    );
  // itree = 899
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71176,-0.00010165) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.571835,-6.38816e-05) , 
1.48084, 1, 17, 0, 0.647318,-0.142687) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.843467,-0.000224515) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34116,8.39108e-05) , 
0.701125, 0, 16, 0, 0.384174,0.0944026) , 
-1.11424, 0, 5, 0, 0.618812,-0.117004) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738219,-0.000204406) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.390665,2.20707e-05) , 
0.89808, 1, 10, 0, 0.575589,-0.116052) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.377523,-3.06226e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168233,0.000421242) , 
2.09417, 0, 10, 0, 0.219734,0.146558) , 
1.71934, 0, 7, 0, 0.301834,0.085971) , 
0.14466, 0, 15, 0, 0.51017,-0.0474358)    );
  // itree = 900
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.822229,-0.000130745) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.440877,-0.000131863) , 
0.449384, 0, 2, 0, 0.771582,-0.268243) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.806569,-0.000102825) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.44771,2.22778e-05) , 
0.0352498, 1, 8, 0, 0.492985,-0.0399927) , 
1.04737, 1, 10, 0, 0.644741,-0.164324) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.795763,-0.00018504) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.430539,-0.000130245) , 
0.189213, 0, 15, 0, 0.626578,-0.127356) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.587203,-4.72661e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.303719,0.000137448) , 
0.417646, 0, 15, 0, 0.355175,0.076239) , 
1.71925, 0, 7, 0, 0.414124,0.0320182) , 
0.738804, 1, 8, 0, 0.5301,-0.066721)    );
  // itree = 901
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.815422,-0.00013149) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.585789,-5.4261e-05) , 
0.518391, 1, 14, 0, 0.622059,-0.165652) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.536628,-8.69624e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259811,2.55539e-05) , 
0.084342, 1, 0, 0, 0.473874,0.00228903) , 
0.767967, 0, 2, 0, 0.520632,-0.0507029) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.868585,-0.00107669) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.016398,0.0159019) , 
1.64993, 1, 9, 0, 0.606328,-0.298256) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.584321,-0.00663715) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0512825,0.000910574) , 
0.0719457, 1, 16, 0, 0.0532677,0.256112) , 
0.0271527, 1, 12, 0, 0.0819333,0.227379) , 
0.497626, 0, 14, 0, 0.48592,-0.0286998)    );
  // itree = 902
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.638333,-7.47759e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.527531,-8.24489e-05) , 
0.527382, 0, 1, 0, 0.563517,-0.0729763) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.66427,-0.000154074) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.32029,-4.16206e-05) , 
-1.3615, 1, 4, 0, 0.376593,0.11427) , 
0.335618, 1, 15, 0, 0.530726,-0.0401287) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.624584,-0.000171953) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212772,0.000145863) , 
0.079916, 0, 15, 0, 0.473311,-0.0594398) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622594,-0.000157861) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127203,0.000393524) , 
0.598469, 1, 9, 0, 0.158298,0.183905) , 
1.0538, 1, 17, 0, 0.246352,0.115883) , 
0.115897, 0, 15, 0, 0.455421,0.00118485)    );
  // itree = 903
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749656,-0.000115232) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.58601,-7.91604e-05) , 
0.267564, 0, 12, 0, 0.657975,-0.143014) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.699636,-0.000195132) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.439681,3.94451e-05) , 
2.2439, 0, 10, 0, 0.503161,-0.00476735) , 
0.443213, 0, 2, 0, 0.605165,-0.0958553) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.521006,-1.33499e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.293869,0.000220707) , 
1.49584, 0, 11, 0, 0.363778,0.0132265) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.55632,-0.00046056) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0701269,0.000284039) , 
0.907125, 0, 1, 0, 0.0866366,0.254566) , 
0.272877, 1, 0, 0, 0.320231,0.0511486) , 
0.641166, 0, 14, 0, 0.500709,-0.041964)    );
  // itree = 904
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.811148,-0.000131456) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.630959,-0.000196488) , 
0.545165, 0, 2, 0, 0.756837,-0.222532) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.90395,-0.000599815) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.345944,5.00207e-05) , 
3.58653, 0, 8, 0, 0.390045,-0.00658086) , 
0.643027, 0, 14, 0, 0.674852,-0.174263) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72571,-0.00011108) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.231419,0.000696749) , 
0.985351, 1, 8, 0, 0.587653,-0.128984) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.504191,-6.25201e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.312747,0.000112011) , 
2.11571, 0, 10, 0, 0.369965,0.0612794) , 
0.748022, 1, 10, 0, 0.445292,-0.00455785) , 
1.23335, 0, 7, 0, 0.531393,-0.0682091)    );
  // itree = 905
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672964,-0.000112879) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128346,0.000226064) , 
0.536503, 1, 16, 0, 0.659359,-0.129565) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.395028,-0.000146305) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.095612,0.000388375) , 
1.13572, 0, 7, 0, 0.156624,0.331999) , 
0.227875, 0, 2, 0, 0.634124,-0.106395) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.785734,-0.00019815) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.451674,-0.000114407) , 
-0.12332, 0, 5, 0, 0.690922,-0.218329) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.511723,-0.000114971) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22225,0.000125942) , 
0.139664, 1, 16, 0, 0.250849,0.141807) , 
2.12179, 0, 7, 0, 0.290312,0.109513) , 
0.706203, 0, 14, 0, 0.456945,0.00487008)    );
  // itree = 906
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749078,-0.000115476) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.447431,-1.58313e-05) , 
-1.11424, 0, 5, 0, 0.72645,-0.193216) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.590953,-0.000106834) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.276542,0.00047606) , 
0.792809, 0, 14, 0, 0.505251,0.00529284) , 
0.308288, 0, 1, 0, 0.659494,-0.133128) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.972319,-0.000256459) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0797684,0.00889068) , 
0.888941, 0, 5, 0, 0.738506,-0.35692) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.898836,-0.000445915) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340993,8.24473e-05) , 
0.312849, 1, 14, 0, 0.348817,0.0479329) , 
0.236077, 0, 6, 0, 0.362032,0.0342041) , 
0.695771, 0, 14, 0, 0.510888,-0.0495325)    );
  // itree = 907
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760667,-0.000197315) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335736,-8.13076e-05) , 
0.0774097, 0, 15, 0, 0.713816,-0.196831) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700957,-0.000485094) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.206434,0.000240021) , 
0.54884, 1, 2, 0, 0.293143,0.10688) , 
0.248906, 1, 16, 0, 0.672509,-0.167008) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749688,-0.000157479) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.246637,0.000128009) , 
0.257621, 0, 2, 0, 0.65587,-0.133602) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.684314,-0.000155008) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.332157,2.29913e-05) , 
0.448805, 1, 9, 0, 0.346506,0.0798504) , 
0.811163, 0, 14, 0, 0.40351,0.0405193) , 
1.69637, 0, 7, 0, 0.457694,-0.00128282)    );
  // itree = 908
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.993154,-0.000284921) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0222469,0.00990888) , 
0.53493, 1, 1, 0, 0.912325,-0.482194) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.685083,-0.000139039) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.213277,0.00048836) , 
0.572579, 0, 14, 0, 0.632984,-0.135267) , 
0.23361, 1, 13, 0, 0.647471,-0.153259) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.881915,-0.00020019) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0643065,0.00325743) , 
-0.866154, 0, 5, 0, 0.850108,-0.341304) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.510904,-3.04194e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.262135,8.53139e-05) , 
0.200725, 0, 15, 0, 0.37729,0.0586769) , 
2.54309, 0, 11, 0, 0.419658,0.0228357) , 
1.21981, 0, 7, 0, 0.502099,-0.0408891)    );
  // itree = 909
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.710011,-0.000180176) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.170903,-6.05782e-05) , 
0.124351, 1, 16, 0, 0.69178,-0.169357) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.52636,-4.15966e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.324869,0.000176831) , 
2.23993, 1, 18, 0, 0.488895,-0.0292618) , 
0.130554, 1, 16, 0, 0.533191,-0.0598487) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.539162,-0.000743185) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.072265,-0.000234555) , 
0.91865, 0, 2, 0, 0.228927,0.091513) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.0835529,0.00117782) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0178914,0.0013864) , 
0.0906283, 1, 6, 0, 0.0602298,0.249281) , 
1.35476, 0, 3, 0, 0.0699844,0.240158) , 
0.497618, 0, 14, 0, 0.497092,-0.0364685)    );
  // itree = 910
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.962867,-0.000178542) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.195405,0.0116034) , 
0.721356, 0, 13, 0, 0.881866,-0.392772) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.758955,-0.000178198) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.553203,-5.81168e-05) , 
0.118583, 1, 16, 0, 0.615251,-0.0963488) , 
0.485014, 0, 15, 0, 0.632531,-0.11556) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.868108,-0.000206903) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.404772,-0.000132735) , 
0.43466, 0, 16, 0, 0.600621,-0.208544) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.477117,-4.94631e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.25967,0.000181544) , 
1.34657, 1, 9, 0, 0.297436,0.0744204) , 
2.75352, 0, 8, 0, 0.320866,0.0525527) , 
0.66057, 0, 14, 0, 0.508544,-0.0486813)    );
  // itree = 911
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749976,-0.00013566) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.524091,-7.17802e-06) , 
1.04714, 1, 10, 0, 0.657342,-0.157176) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.657149,-0.000171261) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.387249,6.30183e-05) , 
1.71925, 0, 7, 0, 0.484354,-0.0137668) , 
0.979673, 1, 8, 0, 0.588482,-0.10009) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.955985,-0.000258736) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129804,0.00800305) , 
0.89687, 0, 5, 0, 0.773055,-0.383734) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.380613,1.79262e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.140921,0.000509929) , 
0.407467, 0, 7, 0, 0.299464,0.106427) , 
0.242955, 0, 6, 0, 0.321927,0.0831783) , 
0.353659, 1, 16, 0, 0.504628,-0.042437)    );
  // itree = 912
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.893079,-0.000161986) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.705394,-0.000214562) , 
0.90982, 0, 2, 0, 0.761476,-0.240832) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.63145,-9.50095e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.389157,-2.65945e-05) , 
0.0140466, 1, 6, 0, 0.524469,-0.0384563) , 
1.95166, 0, 7, 0, 0.584241,-0.0894946) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.806973,-0.000138438) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165975,0.00108036) , 
0.790789, 0, 13, 0, 0.591907,-0.146287) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.403632,-1.24548e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158293,0.000195095) , 
1.79515, 0, 10, 0, 0.256705,0.145801) , 
-1.27584, 1, 4, 0, 0.296814,0.11085) , 
0.309517, 1, 16, 0, 0.471822,-0.0111348)    );
  // itree = 913
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736136,-0.000117587) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.494313,-8.7411e-05) , 
1.46291, 1, 8, 0, 0.702759,-0.169925) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.5762,-7.92314e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265773,0.000369056) , 
0.399792, 0, 12, 0, 0.423219,0.0770601) , 
0.304007, 0, 2, 0, 0.660687,-0.132753) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.534094,-2.4718e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.328056,5.79278e-05) , 
1.20348, 1, 17, 0, 0.402001,0.00712476) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.685489,-0.000319285) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0935152,0.000277905) , 
2.8418, 0, 11, 0, 0.110568,0.24571) , 
0.488143, 1, 16, 0, 0.343078,0.0553631) , 
0.697055, 0, 14, 0, 0.503836,-0.0398521)    );
  // itree = 914
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700373,-0.000175554) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.510292,-8.87877e-05) , 
0.0128533, 1, 6, 0, 0.626226,-0.126476) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.523516,-6.71647e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167368,0.00104636) , 
0.654772, 0, 14, 0, 0.423821,0.0380007) , 
0.986676, 0, 7, 0, 0.532006,-0.0499117) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.947257,-0.000304283) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0311251,0.00291397) , 
0.72803, 0, 13, 0, 0.805784,-0.37314) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672849,-0.000177963) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.246329,8.24795e-05) , 
0.245062, 0, 6, 0, 0.26331,0.13178) , 
2.5425, 0, 11, 0, 0.283637,0.11286) , 
0.090959, 1, 0, 0, 0.458069,-0.0014563)    );
  // itree = 915
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.89526,-0.000176441) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.51002,-0.00019143) , 
0.897619, 1, 11, 0, 0.835856,-0.296007) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682593,-0.000301165) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.362995,-0.000136789) , 
0.0549221, 1, 16, 0, 0.523875,-0.00183504) , 
0.731556, 1, 8, 0, 0.732857,-0.198888) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.631636,-9.12641e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.389227,2.5976e-06) , 
0.323284, 1, 16, 0, 0.538289,-0.0452217) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.350442,4.44539e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0931489,0.000407646) , 
0.422318, 0, 7, 0, 0.292403,0.0967297) , 
0.171046, 0, 15, 0, 0.422892,0.0213978) , 
0.0882614, 1, 16, 0, 0.461852,-0.00628994)    );
  // itree = 916
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.77023,-0.000181383) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.414567,-0.000134279) , 
2.992, 1, 9, 0, 0.755602,-0.234857) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728723,-0.000886333) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.148153,0.00055024) , 
2.66078, 0, 18, 0, 0.2614,0.0776166) , 
0.561478, 0, 14, 0, 0.723093,-0.214302) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.638626,-8.75043e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.131841,0.00186762) , 
0.0888694, 0, 15, 0, 0.568685,-0.102166) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.486458,-2.96327e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.208524,0.000116627) , 
0.171673, 0, 15, 0, 0.361461,0.0751816) , 
1.19628, 1, 17, 0, 0.421071,0.0241662) , 
1.72669, 0, 7, 0, 0.487643,-0.028397)    );
  // itree = 917
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.758725,-0.000131481) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.30197,0.000155442) , 
0.113389, 1, 0, 0, 0.698648,-0.209896) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.530653,-8.34759e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.263835,0.000324827) , 
2.03502, 0, 10, 0, 0.40847,0.037439) , 
1.04725, 1, 11, 0, 0.591714,-0.11875) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.844919,-0.000183867) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.395973,6.22171e-05) , 
0.324553, 1, 12, 0, 0.667304,-0.129901) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.581021,-5.049e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.287906,4.68218e-05) , 
0.350342, 1, 13, 0, 0.322209,0.100091) , 
0.80651, 0, 14, 0, 0.383222,0.0594284) , 
0.738757, 1, 8, 0, 0.482141,-0.0251087)    );
  // itree = 918
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.739683,-0.000113321) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.509485,-4.91491e-05) , 
0.26491, 0, 1, 0, 0.696751,-0.163372) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688136,-0.00016759) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.30415,6.32206e-05) , 
2.36788, 0, 17, 0, 0.380194,0.0276356) , 
0.678904, 0, 14, 0, 0.606228,-0.108751) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.532471,-4.26812e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.300752,0.000126981) , 
1.35016, 1, 18, 0, 0.420054,0.0295388) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.242945,0.000139416) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0412477,0.000319753) , 
2.08668, 0, 18, 0, 0.109827,0.216227) , 
0.118745, 0, 15, 0, 0.324583,0.0869912) , 
0.309517, 1, 16, 0, 0.498773,-0.0340703)    );
  // itree = 919
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.819702,-0.0001805) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.533354,-0.000139787) , 
0.116471, 0, 15, 0, 0.766668,-0.242318) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.789784,-0.000542289) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.39876,-5.53464e-05) , 
1.9627, 0, 7, 0, 0.516716,0.00392927) , 
0.313713, 0, 1, 0, 0.705684,-0.182238) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.807507,-0.000172768) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.350217,0.000198198) , 
0.311366, 0, 2, 0, 0.710937,-0.184015) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.589966,-4.83297e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.334631,4.51251e-05) , 
0.229802, 1, 8, 0, 0.376354,0.0477032) , 
0.799315, 0, 14, 0, 0.438458,0.00469272) , 
0.132002, 1, 16, 0, 0.498921,-0.0376028)    );
  // itree = 920
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.768388,-0.000110269) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.549325,-8.66805e-05) , 
0.457832, 0, 2, 0, 0.712111,-0.188543) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645554,-9.87159e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.366085,0.000127444) , 
0.415887, 1, 8, 0, 0.455777,0.000364554) , 
0.31021, 1, 16, 0, 0.62324,-0.123049) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702421,-0.000117618) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.301311,-3.51711e-05) , 
0.0962833, 0, 15, 0, 0.469841,-0.0714998) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.60327,-0.000197128) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.117542,0.00040472) , 
-1.85651, 1, 3, 0, 0.148879,0.193875) , 
1.05464, 1, 17, 0, 0.241162,0.117575) , 
0.117052, 0, 15, 0, 0.533084,-0.0662703)    );
  // itree = 921
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676705,-0.000118403) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.370114,0.000151578) , 
0.265925, 0, 2, 0, 0.648106,-0.118369) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647676,-0.000112378) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.189807,1.64269e-05) , 
0.299547, 1, 11, 0, 0.286564,0.208654) , 
0.245311, 0, 7, 0, 0.618636,-0.0917133) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.84129,-0.000195566) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.464709,-6.30673e-05) , 
1.9475, 1, 10, 0, 0.544007,-0.121936) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.420891,-4.60785e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233873,0.000308684) , 
0.926211, 0, 7, 0, 0.315232,0.0831368) , 
1.3464, 1, 9, 0, 0.353235,0.0490706) , 
0.708187, 0, 14, 0, 0.470987,-0.0133916)    );
  // itree = 922
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.876682,-0.000181258) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.630803,-0.000193207) , 
0.678358, 1, 13, 0, 0.80417,-0.25679) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.827027,-0.00022643) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.475584,-0.000145508) , 
0.299493, 1, 10, 0, 0.553547,-0.0878759) , 
0.189213, 0, 15, 0, 0.668487,-0.165343) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653457,-0.000112146) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134566,0.000299736) , 
0.582812, 0, 14, 0, 0.562267,-0.111142) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.52295,-5.45657e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363314,1.57525e-05) , 
2.09411, 0, 10, 0, 0.399584,0.0436941) , 
-0.8665, 1, 4, 0, 0.437199,0.00789404) , 
1.72669, 0, 7, 0, 0.479074,-0.0234713)    );
  // itree = 923
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.708174,-0.000132755) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.540856,-6.68739e-05) , 
0.244173, 1, 8, 0, 0.569449,-0.087783) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.403124,-0.000346481) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0788461,0.00243807) , 
0.117247, 1, 16, 0, 0.130917,0.173389) , 
0.0618628, 0, 15, 0, 0.539352,-0.0698583) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.574512,-7.71528e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.262281,0.000124882) , 
0.976507, 1, 8, 0, 0.472765,-0.0140846) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.3203,0.000293794) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0936634,0.000537257) , 
0.29535, 0, 12, 0, 0.162072,0.223606) , 
0.392698, 1, 16, 0, 0.34463,0.0839427) , 
0.491214, 0, 7, 0, 0.485938,-0.0276694)    );
  // itree = 924
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.825639,-0.000153077) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.642307,-5.28314e-05) , 
2.39334, 0, 9, 0, 0.748712,-0.217931) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749413,-0.000183573) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.495146,-5.09098e-05) , 
0.849949, 0, 14, 0, 0.561524,-0.0381089) , 
0.73476, 1, 8, 0, 0.668625,-0.140996) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.871798,-0.000251728) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138709,-7.22615e-05) , 
0.0239972, 1, 0, 0, 0.728075,-0.255088) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.87116,-0.00026632) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317919,9.94296e-05) , 
0.793102, 0, 16, 0, 0.3257,0.0642049) , 
0.616467, 1, 17, 0, 0.346078,0.0480343) , 
0.697055, 0, 14, 0, 0.513103,-0.0498514)    );
  // itree = 925
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.871272,-0.000161995) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.716401,-0.000244137) , 
0.540452, 0, 1, 0, 0.780255,-0.258022) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.766083,-0.000131821) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.205744,7.69813e-05) , 
0.206976, 0, 15, 0, 0.434653,0.0259739) , 
0.535259, 0, 13, 0, 0.724121,-0.211894) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.807782,-0.00015567) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.435339,1.99503e-05) , 
0.722188, 1, 10, 0, 0.563925,-0.0965114) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.479177,-2.46181e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245452,7.1605e-05) , 
0.0202463, 1, 6, 0, 0.371244,0.0679317) , 
0.492509, 1, 8, 0, 0.435385,0.0131906) , 
1.71693, 0, 7, 0, 0.496205,-0.0342219)    );
  // itree = 926
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719808,-0.000111378) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.441807,6.89235e-06) , 
0.106645, 1, 0, 0, 0.696826,-0.165431) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.980018,-0.00542384) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134962,0.000269792) , 
2.43018, 0, 17, 0, 0.182685,0.304839) , 
0.211223, 0, 2, 0, 0.678224,-0.148417) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556696,-7.70913e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0654166,0.00101948) , 
0.494497, 0, 14, 0, 0.51466,-0.0844229) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.479871,5.3146e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129452,0.00022257) , 
0.361675, 0, 15, 0, 0.193674,0.186026) , 
0.943013, 0, 7, 0, 0.346793,0.0570149) , 
0.705384, 0, 14, 0, 0.510777,-0.0446274)    );
  // itree = 927
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.792215,-0.000141259) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.535756,-9.96065e-05) , 
0.448804, 1, 11, 0, 0.654693,-0.144912) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.563223,-0.000110247) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.24637,0.000376715) , 
0.598291, 0, 11, 0, 0.472791,0.000415403) , 
0.985008, 1, 8, 0, 0.568534,-0.0760771) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.576716,-8.25764e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0997995,0.00657266) , 
0.0913642, 0, 15, 0, 0.479507,-0.035646) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672876,-0.000189179) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.166608,0.000107695) , 
0.247515, 0, 6, 0, 0.187647,0.208908) , 
0.984381, 0, 7, 0, 0.300535,0.114318) , 
0.0461831, 1, 0, 0, 0.447709,0.00976053)    );
  // itree = 928
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817576,-0.0001725) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.675258,-0.000208802) , 
0.54515, 0, 2, 0, 0.752957,-0.211015) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.57248,-0.000214937) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236963,0.000905698) , 
0.087188, 1, 16, 0, 0.440415,-0.00604381) , 
0.115497, 0, 15, 0, 0.70182,-0.177478) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.859354,-0.000144061) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.492082,-4.57624e-05) , 
2.22498, 0, 7, 0, 0.509446,-0.0213386) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.42147,0.00012864) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.14394,0.000257515) , 
1.34679, 1, 17, 0, 0.264252,0.102281) , 
0.144901, 0, 15, 0, 0.412854,0.0273604) , 
0.130557, 1, 16, 0, 0.476325,-0.017632)    );
  // itree = 929
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655103,-0.00010509) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253178,0.000415953) , 
0.232531, 0, 2, 0, 0.635899,-0.112123) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.643243,-0.000180294) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226821,0.000248743) , 
1.97376, 0, 7, 0, 0.363538,0.105569) , 
0.133036, 0, 15, 0, 0.601734,-0.0848164) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.898746,-0.000239249) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199812,-0.000144454) , 
0.116159, 1, 16, 0, 0.7,-0.241553) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.547045,-0.000161079) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211106,0.000185059) , 
2.81052, 0, 8, 0, 0.23129,0.139187) , 
0.616699, 1, 17, 0, 0.252912,0.121623) , 
0.66057, 0, 14, 0, 0.46111,-0.0015925)    );
  // itree = 930
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769698,-0.000139099) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.590322,-0.000198432) , 
0.458123, 0, 2, 0, 0.732758,-0.220338) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776568,-0.000156504) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.337009,8.93501e-05) , 
0.116226, 0, 6, 0, 0.423273,0.0235032) , 
0.568367, 0, 13, 0, 0.667871,-0.169214) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.564867,-6.71886e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.323787,0.000246952) , 
2.24145, 1, 18, 0, 0.525893,-0.0230997) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728326,-0.000168973) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.162567,0.000207872) , 
0.598413, 1, 9, 0, 0.208557,0.152999) , 
0.655174, 0, 14, 0, 0.388034,0.0534027) , 
1.23334, 0, 7, 0, 0.497494,-0.0336753)    );
  // itree = 931
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709977,-0.000101949) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26406,6.94149e-05) , 
0.278529, 0, 2, 0, 0.686266,-0.174827) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72154,-0.000147949) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.436337,-1.64215e-05) , 
0.122338, 1, 16, 0, 0.519915,-0.0158338) , 
1.5052, 1, 17, 0, 0.613191,-0.104984) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655721,-0.00020792) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.291573,0.000302459) , 
0.616554, 0, 1, 0, 0.505227,-0.118851) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660938,-0.000157701) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.185656,0.000191024) , 
0.233886, 0, 6, 0, 0.204727,0.14821) , 
1.80832, 0, 7, 0, 0.236543,0.119934) , 
0.622998, 0, 14, 0, 0.501795,-0.0384634)    );
  // itree = 932
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65694,-9.34457e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.401724,1.46763e-05) , 
-1.11424, 0, 5, 0, 0.629739,-0.125585) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628463,-9.14698e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.247915,0.000193482) , 
0.0965058, 0, 6, 0, 0.311209,0.0616079) , 
0.117052, 0, 15, 0, 0.550682,-0.0791251) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.884874,-0.000171091) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0433194,0.0132509) , 
0.401769, 0, 7, 0, 0.707864,-0.291135) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65453,-9.87164e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.130545,0.000227868) , 
0.83148, 0, 14, 0, 0.167533,0.21193) , 
-0.865753, 1, 3, 0, 0.243562,0.141145) , 
0.48609, 1, 16, 0, 0.507679,-0.0482825)    );
  // itree = 933
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.734379,-0.000166916) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.480515,-0.000121879) , 
0.266451, 0, 1, 0, 0.685128,-0.162804) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.5898,-7.06619e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.351952,1.32776e-05) , 
0.598236, 0, 3, 0, 0.456118,0.0137863) , 
0.0162861, 1, 0, 0, 0.584955,-0.0855604) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.845851,-0.000287634) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.364052,2.25933e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202353,3.63976e-05) , 
0.268249, 1, 3, 0, 0.312558,0.100928) , 
0.801404, 0, 16, 0, 0.32043,0.0927127) , 
0.265371, 1, 16, 0, 0.455832,0.00146011)    );
  // itree = 934
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.798352,-0.000103486) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.55785,-7.06068e-05) , 
0.674281, 0, 13, 0, 0.72611,-0.204976) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.650095,-0.000131758) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.424254,3.36992e-05) , 
0.766802, 0, 14, 0, 0.56786,-0.0518968) , 
0.637189, 0, 2, 0, 0.629241,-0.111272) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.933979,-0.000429879) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.409096,1.95993e-05) , 
2.82157, 0, 18, 0, 0.460169,-0.0729338) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.460107,1.65245e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229694,0.000176103) , 
0.452978, 1, 18, 0, 0.259362,0.113115) , 
0.687798, 0, 1, 0, 0.304082,0.0716818) , 
0.657988, 0, 14, 0, 0.501489,-0.0393911)    );
  // itree = 935
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717712,-0.000120314) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257025,2.00469e-05) , 
0.411753, 1, 15, 0, 0.708244,-0.172687) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.858569,-8.4393e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.437033,1.38698e-05) , 
1.05259, 1, 17, 0, 0.520221,-0.0183454) , 
0.306729, 1, 16, 0, 0.664872,-0.137084) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.641853,-8.05043e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134492,0.00351141) , 
0.0909793, 0, 15, 0, 0.540473,-0.121484) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.57633,-0.00015026) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227643,0.000124975) , 
0.340576, 0, 12, 0, 0.267389,0.119059) , 
-0.866682, 1, 3, 0, 0.338126,0.0567508) , 
0.695075, 0, 14, 0, 0.507267,-0.0435887)    );
  // itree = 936
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.926712,-0.000186616) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.728201,-0.000187996) , 
0.0697954, 0, 6, 0, 0.752103,-0.233554) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.881229,-0.000539248) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.156207,0.000215303) , 
0.290823, 1, 1, 0, 0.324897,0.0986531) , 
0.248936, 1, 16, 0, 0.71422,-0.204095) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.525046,-4.68573e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.3556,9.20748e-05) , 
0.299704, 0, 1, 0, 0.49429,-0.0429518) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.350958,0.000199046) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138704,0.000507735) , 
-0.98784, 0, 5, 0, 0.252665,0.168885) , 
2.24106, 1, 18, 0, 0.450958,-0.00496262) , 
1.70905, 0, 7, 0, 0.505531,-0.0462418)    );
  // itree = 937
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.766475,-0.000144102) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167035,-2.79097e-06) , 
0.366514, 0, 13, 0, 0.755643,-0.222607) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.551538,-0.000156321) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.197899,0.000156884) , 
1.7539, 0, 7, 0, 0.379341,0.00962149) , 
0.64066, 0, 14, 0, 0.673287,-0.171782) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.606484,-0.000104628) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.246757,5.57141e-05) , 
0.371431, 1, 3, 0, 0.526747,-0.089837) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.543898,-5.53838e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.206834,0.000272494) , 
0.700425, 0, 14, 0, 0.362618,0.0788563) , 
2.09435, 0, 10, 0, 0.400307,0.0401186) , 
1.22803, 0, 7, 0, 0.507316,-0.0429471)    );
  // itree = 938
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.825474,-0.000179023) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.596096,-0.000202893) , 
1.48964, 0, 18, 0, 0.757345,-0.249376) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.646768,-0.000235055) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.285571,-0.00010551) , 
0.123473, 0, 5, 0, 0.509492,-0.0287673) , 
1.64551, 1, 10, 0, 0.697501,-0.19611) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712105,-0.000154082) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.510246,-4.86113e-05) , 
1.19717, 1, 9, 0, 0.543509,-0.0378583) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.803926,-0.000395373) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211774,0.000191504) , 
0.325329, 1, 14, 0, 0.221899,0.13912) , 
0.653584, 0, 14, 0, 0.411584,0.0347382) , 
1.71929, 0, 7, 0, 0.471581,-0.013703)    );
  // itree = 939
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.759041,-0.000150445) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.526857,-5.45298e-05) , 
0.5984, 1, 10, 0, 0.597751,-0.121988) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.725455,-0.000204533) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378697,1.50553e-06) , 
2.09423, 0, 11, 0, 0.429058,0.0294338) , 
0.985008, 1, 8, 0, 0.528307,-0.0596541) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686391,-0.000147593) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.110653,-6.97887e-05) , 
1.10551, 0, 8, 0, 0.479591,-0.0728735) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.459173,0.000150471) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.137335,0.000295063) , 
2.40914, 0, 8, 0, 0.161992,0.215256) , 
2.39317, 0, 10, 0, 0.213917,0.168149) , 
0.477341, 1, 16, 0, 0.482049,-0.0261361)    );
  // itree = 940
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655428,-0.000101935) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.385074,7.30237e-05) , 
0.63015, 0, 14, 0, 0.593536,-0.0990552) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.847935,-0.000464621) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.266417,0.000178629) , 
1.7691, 0, 7, 0, 0.335528,0.161239) , 
0.304016, 0, 2, 0, 0.569699,-0.0750078) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.857175,-0.000253537) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.181878,0.0068732) , 
0.106936, 1, 16, 0, 0.786913,-0.307642) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.402713,-1.02498e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.149832,0.000670683) , 
0.489838, 1, 8, 0, 0.223575,0.12439) , 
2.69808, 0, 7, 0, 0.262252,0.0947279) , 
0.116222, 0, 15, 0, 0.489098,-0.0305094)    );
  // itree = 941
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.809624,-0.000170138) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.621031,-0.000224839) , 
0.636637, 0, 2, 0, 0.717991,-0.193408) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.675121,-9.36643e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.461366,-1.38806e-05) , 
0.239124, 1, 8, 0, 0.49832,-0.0399972) , 
0.116124, 1, 16, 0, 0.546335,-0.0735287) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.824118,-0.000523891) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252981,1.87805e-05) , 
0.18352, 1, 8, 0, 0.362918,0.0113455) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.456221,-0.00020263) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.108611,0.000262362) , 
0.408325, 0, 12, 0, 0.120923,0.254291) , 
2.84211, 0, 9, 0, 0.163216,0.211832) , 
0.486092, 1, 16, 0, 0.496765,-0.0366077)    );
  // itree = 942
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.850823,-0.000165266) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.300622,-0.000185632) , 
0.561255, 0, 13, 0, 0.833488,-0.286203) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.681635,-0.000162011) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.409131,0.000280301) , 
0.243479, 0, 2, 0, 0.627226,-0.104564) , 
0.456861, 0, 2, 0, 0.717379,-0.183955) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.566679,-6.61937e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.281758,0.000213431) , 
0.282554, 0, 1, 0, 0.530592,-0.0380434) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.42608,-3.7373e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.188631,0.000223355) , 
1.05844, 1, 17, 0, 0.238102,0.122554) , 
0.631532, 0, 14, 0, 0.398217,0.0346396) , 
0.779586, 0, 14, 0, 0.49161,-0.029325)    );
  // itree = 943
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.870746,-0.000108146) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.623238,-6.08459e-05) , 
0.37096, 1, 4, 0, 0.824952,-0.285257) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700862,-0.00013158) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.490368,2.7927e-05) , 
0.354557, 0, 2, 0, 0.631156,-0.107446) , 
0.636136, 0, 2, 0, 0.707633,-0.177616) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628327,-6.58396e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.35629,3.46525e-05) , 
-0.618422, 1, 3, 0, 0.458939,-0.0207662) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.342232,0.000162944) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118289,0.000296475) , 
2.6928, 0, 9, 0, 0.188561,0.145927) , 
0.116291, 0, 15, 0, 0.345913,0.0489165) , 
0.697055, 0, 14, 0, 0.541901,-0.0738235)    );
  // itree = 944
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.680968,-0.000111407) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.188069,0.000174301) , 
0.231977, 0, 2, 0, 0.666769,-0.143012) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.506699,-0.000140861) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.105395,0.000731135) , 
1.48041, 0, 7, 0, 0.312516,0.0754164) , 
0.11583, 0, 15, 0, 0.593452,-0.0978055) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.59925,-8.98773e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.345239,8.24608e-05) , 
2.0944, 0, 10, 0, 0.418397,-0.00148069) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.527142,-4.22373e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.170234,0.000307213) , 
-0.952892, 1, 3, 0, 0.213456,0.178721) , 
1.0326, 1, 8, 0, 0.335924,0.0710365) , 
0.30858, 1, 16, 0, 0.492995,-0.0319431)    );
  // itree = 945
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634294,-0.000138736) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159367,-1.08333e-05) , 
0.0908843, 1, 0, 0, 0.610479,-0.118506) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.498289,-4.694e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.331837,9.19435e-05) , 
0.443213, 0, 2, 0, 0.438655,0.0151052) , 
0.981117, 0, 7, 0, 0.526028,-0.0528359) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65476,-0.000171114) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0619864,1.84832e-05) , 
0.77496, 1, 2, 0, 0.462441,-0.0444028) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.306254,0.000270807) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0952743,0.000156717) , 
-0.609697, 1, 5, 0, 0.171317,0.210261) , 
1.25654, 0, 7, 0, 0.223059,0.165) , 
0.136439, 1, 0, 0, 0.465089,-0.00902081)    );
  // itree = 946
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.974432,-0.000283697) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.00831657,0.0191614) , 
0.305133, 1, 7, 0, 0.916703,-0.500958) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.643675,-9.78995e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.360557,0.000122711) , 
0.393804, 1, 16, 0, 0.579842,-0.0765858) , 
0.233886, 0, 6, 0, 0.591007,-0.090651) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.970857,-0.000507277) , 
NN(
0, 
0, 
0, 1, -1, -1, 1.13999e-05,0.0140308) , 
0.424189, 1, 16, 0, 0.890975,-0.568044) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.477347,-7.85142e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187337,0.000257817) , 
1.22648, 0, 7, 0, 0.305362,0.0821111) , 
0.331909, 1, 14, 0, 0.321171,0.0645599) , 
0.143039, 0, 15, 0, 0.495471,-0.0356982)    );
  // itree = 947
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712484,-0.00010796) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.374983,0.000151048) , 
-1.36189, 0, 5, 0, 0.695016,-0.167206) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.489269,-4.9642e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.116314,0.000967421) , 
0.776584, 0, 14, 0, 0.407808,0.0925296) , 
0.350411, 0, 2, 0, 0.642647,-0.119846) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.825164,-0.000414257) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.497775,-4.36647e-05) , 
0.461545, 1, 13, 0, 0.56494,-0.164109) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.426542,1.8946e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.176975,0.000338405) , 
0.116337, 0, 15, 0, 0.312848,0.0637776) , 
1.94438, 0, 11, 0, 0.348027,0.031976) , 
0.671644, 0, 14, 0, 0.515664,-0.05441)    );
  // itree = 948
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639088,-0.000102376) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.260221,0.00024177) , 
0.2268, 0, 2, 0, 0.626578,-0.11758) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.681155,-0.000110888) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.268286,0.000197297) , 
2.39366, 0, 10, 0, 0.349939,0.0862721) , 
0.398399, 1, 16, 0, 0.561903,-0.0699216) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.494976,-4.66642e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175396,0.00056509) , 
0.586397, 1, 14, 0, 0.420413,-0.0568188) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720056,-0.000218782) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.146658,0.000468842) , 
-1.85666, 1, 3, 0, 0.180641,0.173699) , 
1.79519, 0, 10, 0, 0.273944,0.0839966) , 
0.116867, 0, 15, 0, 0.486127,-0.0294182)    );
  // itree = 949
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.713961,-0.000104381) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.274755,5.87925e-06) , 
-1.36193, 0, 5, 0, 0.693208,-0.166946) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687251,-0.000169015) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.359276,0.000148045) , 
0.877315, 0, 14, 0, 0.462669,0.0385678) , 
0.299674, 0, 1, 0, 0.634541,-0.114647) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.885676,-0.00049031) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.372108,5.31854e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.169496,0.000257988) , 
0.357446, 1, 16, 0, 0.276749,0.0962175) , 
0.305869, 1, 14, 0, 0.284334,0.0880091) , 
0.659126, 0, 14, 0, 0.499775,-0.0366613)    );
  // itree = 950
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688848,-0.000106934) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.511922,-8.97467e-05) , 
1.02807, 0, 18, 0, 0.65178,-0.125483) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.874882,-0.000280954) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226786,0.00167845) , 
2.42142, 0, 7, 0, 0.350855,0.158278) , 
-1.36185, 0, 5, 0, 0.63263,-0.107425) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.522028,-5.99308e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152285,0.00118035) , 
0.0904962, 0, 15, 0, 0.423542,-0.0112694) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.966624,-0.00034578) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0969408,0.000202846) , 
0.449566, 0, 12, 0, 0.126283,0.234495) , 
0.389338, 1, 16, 0, 0.321163,0.0733745) , 
0.694671, 0, 14, 0, 0.480055,-0.0188585)    );
  // itree = 951
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.810332,-0.000156374) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.687114,-0.000228952) , 
0.543001, 0, 1, 0, 0.747338,-0.235108) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.926579,-0.000618989) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129883,9.89077e-05) , 
2.7486, 0, 18, 0, 0.320852,0.0920048) , 
0.24644, 1, 16, 0, 0.712102,-0.208082) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722109,-9.29758e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.451009,-1.61798e-05) , 
0.452518, 0, 2, 0, 0.613864,-0.0925999) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.490695,-5.26881e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204286,0.000257275) , 
2.09438, 0, 10, 0, 0.284218,0.10001) , 
0.699949, 0, 14, 0, 0.438907,0.00962636) , 
1.72671, 0, 7, 0, 0.493881,-0.0341825)    );
  // itree = 952
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.911185,-0.000193076) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530953,-0.000167537) , 
0.545952, 0, 13, 0, 0.877763,-0.338668) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718384,-0.000388057) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.503324,-0.000107651) , 
1.71957, 0, 7, 0, 0.606604,-0.075074) , 
0.400428, 0, 1, 0, 0.775573,-0.239329) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.611411,-7.65145e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236645,0.000111167) , 
0.11931, 1, 0, 0, 0.575691,-0.0627563) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.543835,-8.26543e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.248455,0.00016724) , 
0.299437, 1, 10, 0, 0.285596,0.0832605) , 
0.656206, 0, 14, 0, 0.449053,0.000986) , 
0.0883573, 1, 16, 0, 0.494845,-0.0327167)    );
  // itree = 953
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.684807,-0.000105827) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.264115,0.000208943) , 
0.257606, 0, 2, 0, 0.658274,-0.133182) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.539514,-2.71575e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.261557,0.000142346) , 
0.523798, 1, 14, 0, 0.326456,0.089097) , 
0.660911, 0, 14, 0, 0.585711,-0.0845736) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.791641,-0.000220136) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.345848,-5.93448e-06) , 
0.494699, 1, 8, 0, 0.49284,-0.0779159) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.579413,-0.000150234) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191756,0.000210756) , 
2.69415, 0, 8, 0, 0.224754,0.141953) , 
0.598487, 1, 10, 0, 0.29792,0.0819466) , 
0.142866, 0, 15, 0, 0.48374,-0.0255714)    );
  // itree = 954
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.790397,-0.000193658) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.552837,-0.000177827) , 
0.363165, 0, 2, 0, 0.749088,-0.216862) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.770763,-0.000855953) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.282431,3.96586e-05) , 
0.0482447, 0, 6, 0, 0.322227,0.152048) , 
0.01594, 1, 0, 0, 0.702357,-0.176474) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.595636,-5.26563e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.442307,-1.43763e-05) , 
0.448827, 1, 10, 0, 0.468766,-0.0161894) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.803833,-0.00708722) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.071565,0.00366393) , 
0.133972, 1, 1, 0, 0.0801357,0.194425) , 
0.0622596, 0, 15, 0, 0.437838,0.000571914) , 
0.132943, 1, 16, 0, 0.496745,-0.0388555)    );
  // itree = 955
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.68077,-0.00010365) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.326378,0.000177584) , 
0.110562, 1, 0, 0, 0.648706,-0.126243) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.771924,-0.0005062) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.264591,4.27325e-05) , 
0.742569, 1, 17, 0, 0.3433,0.157396) , 
-1.11429, 0, 5, 0, 0.617876,-0.09761) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.54865,-3.78771e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.231058,4.89469e-05) , 
1.48718, 1, 17, 0, 0.414847,-0.0371906) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702235,-0.000238674) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.210915,0.000291222) , 
0.629926, 1, 17, 0, 0.23758,0.130651) , 
0.702802, 1, 8, 0, 0.307677,0.0642817) , 
0.66057, 0, 14, 0, 0.489359,-0.0305374)    );
  // itree = 956
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.740887,-0.000120989) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.29717,-4.89359e-06) , 
1.27435, 1, 17, 0, 0.723241,-0.188009) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622372,-0.000112373) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.428513,-1.3463e-05) , 
0.734817, 1, 8, 0, 0.534487,-0.0157992) , 
1.33698, 1, 17, 0, 0.624271,-0.0977135) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.878849,-0.000202363) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.357701,-2.75595e-05) , 
1.97788, 1, 10, 0, 0.495157,-0.0960888) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.48598,-5.83228e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.261876,0.000131049) , 
-1.11412, 1, 4, 0, 0.302359,0.0867364) , 
1.34701, 1, 9, 0, 0.331913,0.0587108) , 
0.695491, 0, 14, 0, 0.478058,-0.019483)    );
  // itree = 957
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.796565,-0.000141917) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.620491,-8.11479e-05) , 
0.270549, 1, 15, 0, 0.727305,-0.189445) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720414,-0.000181795) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530506,-4.57833e-05) , 
0.866508, 0, 14, 0, 0.588486,-0.0676615) , 
0.387425, 0, 1, 0, 0.649149,-0.120881) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67557,-0.000148807) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171629,0.000238768) , 
0.430949, 0, 7, 0, 0.597928,-0.169295) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.449281,-4.14999e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238637,0.000295696) , 
0.916181, 0, 7, 0, 0.332904,0.0641395) , 
1.34641, 1, 9, 0, 0.378712,0.0237913) , 
0.706623, 0, 14, 0, 0.502507,-0.0424338)    );
  // itree = 958
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.772854,-0.000112699) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.434292,-6.08457e-05) , 
0.587875, 0, 13, 0, 0.736286,-0.199689) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663867,-0.000155756) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.373683,4.29918e-05) , 
0.848248, 0, 14, 0, 0.513117,-0.000912065) , 
0.452697, 0, 2, 0, 0.654222,-0.126594) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683956,-8.5743e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279066,-1.66481e-05) , 
0.123831, 0, 5, 0, 0.546126,-0.137164) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.404777,1.73632e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.200765,0.000300866) , 
0.997351, 1, 10, 0, 0.302249,0.0862637) , 
2.09438, 0, 10, 0, 0.370865,0.0234009) , 
0.695771, 0, 14, 0, 0.51101,-0.0507848)    );
  // itree = 959
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.905645,-6.23295e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220777,-7.80956e-05) , 
0.572534, 0, 2, 0, 0.85449,-0.328443) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.662971,-6.21177e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.433572,0.000143492) , 
0.271155, 1, 7, 0, 0.535627,-0.0543145) , 
1.28455, 1, 17, 0, 0.702249,-0.197561) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72542,-0.000197358) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187688,-2.54497e-05) , 
0.084037, 1, 0, 0, 0.690759,-0.177405) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.470233,-8.22529e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318283,3.20134e-05) , 
2.09435, 0, 10, 0, 0.352675,0.0778135) , 
1.717, 0, 7, 0, 0.429136,0.0200934) , 
0.387214, 0, 15, 0, 0.480189,-0.0205928)    );
  // itree = 960
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.821697,-0.000153401) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.110644,5.64847e-05) , 
0.55273, 0, 14, 0, 0.787432,-0.282786) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.619516,-9.72556e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.415523,-2.23533e-05) , 
0.234523, 1, 8, 0, 0.48682,-0.0271543) , 
0.448885, 1, 10, 0, 0.548184,-0.0793368) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.740754,-0.000215691) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.349753,-0.000133463) , 
1.04752, 0, 10, 0, 0.650714,-0.127924) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.476216,-5.23314e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253523,0.0001042) , 
-0.866206, 1, 4, 0, 0.31798,0.104047) , 
0.124613, 1, 16, 0, 0.380658,0.0603502) , 
0.985008, 1, 8, 0, 0.477091,-0.0200581)    );
  // itree = 961
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702538,-0.000109387) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.483584,8.01991e-05) , 
0.323399, 0, 2, 0, 0.666578,-0.137156) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.696112,-0.00018563) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259224,2.67419e-05) , 
1.71946, 0, 7, 0, 0.45123,0.0487079) , 
0.155755, 0, 15, 0, 0.627692,-0.103595) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.889635,-0.000259286) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.432223,-6.0838e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201007,0.000169838) , 
2.09438, 0, 10, 0, 0.263916,0.113123) , 
0.785113, 0, 0, 0, 0.278219,0.0991199) , 
0.680006, 0, 14, 0, 0.473323,-0.0140516)    );
  // itree = 962
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.874147,-0.00019788) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.666238,-0.000144232) , 
0.416701, 0, 16, 0, 0.683235,-0.173267) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660872,-0.000101708) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279437,0.000218945) , 
0.171332, 0, 15, 0, 0.467389,-0.0258576) , 
0.0429855, 1, 0, 0, 0.606888,-0.121127) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670943,-9.88483e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.447746,-2.06481e-05) , 
0.401749, 1, 13, 0, 0.475314,-7.1321e-05) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.36203,-0.000244289) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.108109,0.000671381) , 
2.54287, 0, 10, 0, 0.132518,0.191474) , 
0.119123, 0, 15, 0, 0.387114,0.0492125) , 
0.986676, 0, 7, 0, 0.49149,-0.0316856)    );
  // itree = 963
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.815542,-0.000216916) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152755,0.00444215) , 
0.373437, 0, 13, 0, 0.79114,-0.269218) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.600035,-9.51219e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.426462,6.1998e-05) , 
0.979722, 1, 8, 0, 0.520645,-0.049262) , 
2.2075, 0, 7, 0, 0.55366,-0.0761082) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.68611,-0.000137279) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.196366,0.00057149) , 
-0.172541, 1, 3, 0, 0.506036,-0.0931409) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.518641,-9.80592e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.104954,0.000328577) , 
1.24782, 0, 7, 0, 0.190344,0.192731) , 
1.6469, 1, 9, 0, 0.281941,0.109786) , 
0.136298, 1, 0, 0, 0.49674,-0.0371669)    );
  // itree = 964
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.80635,-0.000173661) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.64198,-7.90761e-05) , 
0.786691, 0, 14, 0, 0.71263,-0.177433) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.932699,-0.000207833) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.452998,2.40516e-05) , 
0.691367, 0, 16, 0, 0.485191,0.020033) , 
0.361469, 0, 2, 0, 0.658603,-0.130526) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677811,-0.00011313) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.379744,1.9195e-06) , 
1.79405, 0, 9, 0, 0.497601,-0.0882814) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.362381,6.09013e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157071,0.000418422) , 
2.2486, 0, 9, 0, 0.302672,0.0812262) , 
2.09446, 0, 10, 0, 0.354081,0.0365214) , 
0.697055, 0, 14, 0, 0.506375,-0.0470202)    );
  // itree = 965
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.854144,-0.000202303) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.380624,-0.000352664) , 
2.99187, 1, 9, 0, 0.842317,-0.294649) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653478,-8.07753e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.289381,0.000285289) , 
0.138099, 0, 15, 0, 0.613703,-0.097513) , 
1.96486, 0, 7, 0, 0.66205,-0.139203) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.533567,-7.9492e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.266632,0.000177926) , 
-0.373614, 1, 4, 0, 0.401052,-0.0108204) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.441662,-6.76977e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.166642,0.000524226) , 
1.83909, 0, 17, 0, 0.213477,0.144446) , 
0.70135, 0, 7, 0, 0.316702,0.0590006) , 
0.66057, 0, 14, 0, 0.529857,-0.0633345)    );
  // itree = 966
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.768044,-9.5529e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.075641,0.00348938) , 
0.281475, 1, 0, 0, 0.754016,-0.230884) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683879,-0.000165103) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.427687,-2.80288e-05) , 
1.2023, 1, 17, 0, 0.518281,-0.00883045) , 
0.589525, 0, 2, 0, 0.640338,-0.123804) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.89248,-0.00042561) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158586,0.00312592) , 
0.0249665, 1, 0, 0, 0.720213,-0.279849) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.348673,0.000105782) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186565,0.000244595) , 
0.533602, 1, 14, 0, 0.266601,0.095243) , 
0.617745, 1, 17, 0, 0.289233,0.0765285) , 
0.642489, 0, 14, 0, 0.521108,-0.0557741)    );
  // itree = 967
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663702,-9.36259e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.156249,0.000277829) , 
0.272596, 1, 0, 0, 0.633466,-0.133359) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.649079,-0.000156276) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.185262,0.000457736) , 
1.19388, 0, 7, 0, 0.381686,0.0978229) , 
2.24062, 1, 18, 0, 0.59368,-0.096828) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.946086,-0.000530828) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.425268,-9.45635e-05) , 
3.66187, 0, 8, 0, 0.490799,-0.0744246) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.359806,5.44328e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129622,0.00049314) , 
1.49577, 0, 11, 0, 0.197359,0.141246) , 
0.908074, 1, 17, 0, 0.251535,0.101428) , 
0.116867, 0, 15, 0, 0.508029,-0.0471975)    );
  // itree = 968
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.808501,-0.00018023) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.42375,-0.00013423) , 
0.581686, 0, 13, 0, 0.759307,-0.233394) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.599507,-0.000162165) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.261215,-0.000129878) , 
0.169469, 0, 1, 0, 0.561398,-0.0389043) , 
0.310139, 0, 1, 0, 0.71062,-0.185549) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.498382,-3.86955e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0623214,0.000626529) , 
0.490191, 0, 14, 0, 0.45124,-0.0195825) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.456569,-7.83553e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.196064,0.000326923) , 
0.846232, 0, 7, 0, 0.299804,0.152392) , 
0.449444, 0, 2, 0, 0.415588,0.0209053) , 
0.132002, 1, 16, 0, 0.483633,-0.0267105)    );
  // itree = 969
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.815638,-0.0002006) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.635835,-0.000172074) , 
0.400009, 0, 1, 0, 0.728995,-0.199768) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.78955,-0.000151945) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.210736,7.84772e-05) , 
0.299508, 0, 15, 0, 0.406327,0.0857208) , 
0.0159709, 1, 0, 0, 0.68928,-0.164629) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.803792,-0.000148638) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.481791,-6.50407e-05) , 
0.448781, 0, 2, 0, 0.639052,-0.113862) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.391473,9.6167e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.195609,0.000517423) , 
0.41913, 0, 2, 0, 0.363872,0.0513233) , 
0.774837, 0, 14, 0, 0.422036,0.0164088) , 
0.133117, 1, 16, 0, 0.479882,-0.022778)    );
  // itree = 970
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688199,-0.000103316) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.509506,-2.85777e-05) , 
0.976675, 1, 8, 0, 0.618635,-0.122229) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.921063,-0.000233093) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322553,5.44287e-05) , 
3.12931, 0, 7, 0, 0.351618,0.0911688) , 
0.567231, 0, 13, 0, 0.572062,-0.0850082) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.930638,-0.000195284) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249728,1.65559e-05) , 
0.413413, 0, 16, 0, 0.618989,-0.255134) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.482887,-0.000161813) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.102922,0.000540478) , 
0.222389, 1, 1, 0, 0.13685,0.182075) , 
2.6941, 0, 8, 0, 0.199137,0.125592) , 
0.0905104, 0, 15, 0, 0.511605,-0.0508664)    );
  // itree = 971
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.791683,-0.000186222) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.319391,-8.23164e-05) , 
2.99194, 1, 9, 0, 0.776644,-0.241361) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.646411,-0.00023443) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.140823,0.000198117) , 
0.0863552, 1, 16, 0, 0.312902,0.0666501) , 
0.0869044, 0, 15, 0, 0.714309,-0.199959) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.629443,-8.602e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.182481,2.15608e-05) , 
-0.865483, 0, 3, 0, 0.5861,-0.136942) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.483665,-2.70614e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157439,0.000320617) , 
0.129613, 1, 0, 0, 0.411034,0.0388389) , 
2.09434, 0, 10, 0, 0.453597,-0.00389815) , 
1.71929, 0, 7, 0, 0.505925,-0.0432498)    );
  // itree = 972
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.623295,-7.72387e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.496368,-7.55783e-05) , 
0.498306, 0, 2, 0, 0.585124,-0.108831) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.445032,-0.000205474) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0628876,0.000822752) , 
-1.10675, 1, 5, 0, 0.13266,0.219683) , 
0.30442, 1, 0, 0, 0.566362,-0.0952092) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655407,-9.67146e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239399,0.000173152) , 
0.19884, 0, 15, 0, 0.460128,-0.0240951) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.300457,0.000102886) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.105305,0.000607958) , 
1.60275, 1, 9, 0, 0.195078,0.215344) , 
2.24394, 0, 9, 0, 0.364382,0.0623994) , 
0.48474, 0, 7, 0, 0.512191,-0.0529382)    );
  // itree = 973
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.754587,-0.000174133) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.475541,-0.000196927) , 
0.746855, 0, 18, 0, 0.725698,-0.199406) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.845117,-0.00552385) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164033,0.000197352) , 
0.938585, 0, 14, 0, 0.251594,0.259589) , 
0.23238, 0, 2, 0, 0.709873,-0.184085) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.637709,-8.62201e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.430543,-6.77269e-06) , 
0.239128, 1, 8, 0, 0.465126,-0.0145801) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700794,-0.000252917) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125217,0.000427862) , 
0.408512, 0, 12, 0, 0.162569,0.208581) , 
0.547494, 1, 16, 0, 0.431355,0.010329) , 
0.132539, 1, 16, 0, 0.496983,-0.0354814)    );
  // itree = 974
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.669521,-0.000105705) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.346818,3.26282e-05) , 
0.108173, 1, 0, 0, 0.617011,-0.133161) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556685,-9.31804e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.278502,0.000436761) , 
0.982427, 0, 7, 0, 0.432516,0.0171329) , 
0.985008, 1, 8, 0, 0.536385,-0.0674808) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71752,-0.000215567) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174573,0.00062854) , 
-0.407688, 1, 3, 0, 0.392359,0.000813197) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.53299,-1.57101e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0716275,0.00025051) , 
0.680512, 0, 13, 0, 0.106156,0.253254) , 
1.50045, 1, 9, 0, 0.156991,0.208416) , 
0.227163, 1, 0, 0, 0.499209,-0.0404466)    );
  // itree = 975
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.716092,-0.000132085) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.440596,4.60769e-06) , 
0.698547, 0, 14, 0, 0.574597,-0.0997654) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.73914,-0.00048318) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.3193,1.25784e-05) , 
1.97033, 0, 7, 0, 0.387923,0.105146) , 
0.361479, 0, 2, 0, 0.554272,-0.0774542) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.723848,-0.000132275) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.1882,0.00228547) , 
0.902857, 1, 8, 0, 0.584001,-0.129535) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.476422,-3.95049e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152072,0.000200679) , 
0.691209, 0, 14, 0, 0.292858,0.131274) , 
1.85978, 0, 17, 0, 0.341266,0.0879097) , 
0.732449, 0, 7, 0, 0.468431,-0.0108131)    );
  // itree = 976
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.685256,-0.000106906) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.540138,-6.23626e-05) , 
0.457241, 0, 2, 0, 0.642137,-0.130371) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745697,-0.00024068) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.166663,0.000902409) , 
0.0740536, 1, 16, 0, 0.27762,0.0781587) , 
0.0895322, 0, 15, 0, 0.591973,-0.101673) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.850028,-0.000130997) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.331178,-4.09803e-05) , 
0.122248, 1, 5, 0, 0.752611,-0.243378) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702401,-0.000175629) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270342,0.000137569) , 
0.242955, 0, 6, 0, 0.283311,0.113733) , 
0.797899, 0, 14, 0, 0.365289,0.0513522) , 
0.309517, 1, 16, 0, 0.500975,-0.0402439)    );
  // itree = 977
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746806,-0.000102299) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.383978,7.88643e-06) , 
0.11583, 0, 15, 0, 0.661893,-0.175957) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.529405,-8.65604e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.162136,0.000658922) , 
0.0318734, 1, 6, 0, 0.484152,0.00867949) , 
0.54516, 0, 2, 0, 0.598431,-0.110033) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.914502,-0.000252143) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0217721,0.0142519) , 
0.270841, 1, 7, 0, 0.752716,-0.37621) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.35882,3.28991e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.10054,0.00124836) , 
0.271661, 0, 7, 0, 0.300201,0.103655) , 
0.242955, 0, 6, 0, 0.319118,0.0835949) , 
0.34732, 1, 16, 0, 0.508786,-0.0478879)    );
  // itree = 978
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717232,-0.000114515) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.449162,-5.65153e-05) , 
0.594341, 0, 13, 0, 0.683731,-0.147087) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.609866,-0.000132366) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.354366,4.6476e-05) , 
0.398499, 0, 12, 0, 0.469795,0.0393974) , 
0.305472, 0, 1, 0, 0.616987,-0.0889078) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.914669,-0.000395614) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.453534,-9.70917e-05) , 
0.360503, 1, 13, 0, 0.549927,-0.146774) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.569068,-0.000144932) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.24616,0.00013224) , 
2.10387, 0, 7, 0, 0.267592,0.117167) , 
1.94471, 0, 11, 0, 0.303874,0.0832485) , 
0.695491, 0, 14, 0, 0.458527,-0.00178304)    );
  // itree = 979
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689944,-0.000101146) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.474193,-0.000129437) , 
0.751085, 0, 18, 0, 0.656284,-0.161831) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660236,-0.000188875) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.376374,-2.67838e-05) , 
0.863231, 0, 14, 0, 0.461513,0.0338116) , 
0.498303, 0, 2, 0, 0.580461,-0.0856687) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.789605,-0.000149263) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.30074,-3.00949e-05) , 
0.0603281, 1, 5, 0, 0.683811,-0.223789) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.458225,-4.00783e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.166092,0.000275065) , 
0.170414, 0, 15, 0, 0.309799,0.0996684) , 
2.09438, 0, 11, 0, 0.350151,0.0647701) , 
0.0461831, 1, 0, 0, 0.472571,-0.0151946)    );
  // itree = 980
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.681262,-0.000173147) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.356592,-0.000128119) , 
0.273302, 0, 2, 0, 0.656477,-0.134031) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.656574,-0.000138653) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.411657,-2.93179e-05) , 
1.0472, 1, 9, 0, 0.442534,0.0131365) , 
0.132572, 1, 16, 0, 0.504567,-0.0295351) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.896908,-0.000251411) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0457072,0.00701482) , 
0.413231, 0, 3, 0, 0.66586,-0.2967) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705849,-0.000210679) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183708,0.000171278) , 
2.81066, 0, 8, 0, 0.205022,0.182137) , 
0.242955, 0, 6, 0, 0.22671,0.159602) , 
0.396622, 1, 16, 0, 0.433846,0.0186052)    );
  // itree = 981
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703636,-0.00013432) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.577592,-9.2302e-05) , 
0.593585, 1, 2, 0, 0.654503,-0.152389) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.549663,-0.000165858) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145008,0.000502847) , 
0.0559963, 1, 12, 0, 0.209373,0.131537) , 
0.572957, 0, 14, 0, 0.590621,-0.111642) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.82937,-0.000205588) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.448131,-3.40727e-05) , 
0.242955, 0, 6, 0, 0.474035,-0.0288877) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.725172,-8.78912e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184906,0.000473911) , 
2.35216, 0, 5, 0, 0.212003,0.188746) , 
0.961659, 1, 8, 0, 0.376274,0.0523083) , 
0.740007, 0, 7, 0, 0.504135,-0.0454897)    );
  // itree = 982
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.979813,-0.000201849) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.728809,-0.000180414) , 
0.104227, 0, 6, 0, 0.743754,-0.231646) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.53356,-0.000280429) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.112269,0.000259725) , 
0.112465, 0, 6, 0, 0.195789,0.198456) , 
0.319791, 1, 16, 0, 0.727234,-0.218679) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688284,-0.000148148) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.213355,3.47633e-05) , 
0.320989, 0, 2, 0, 0.629014,-0.161283) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.490241,-5.50329e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.295755,9.97901e-05) , 
0.738812, 1, 8, 0, 0.387153,0.0534656) , 
1.9447, 0, 11, 0, 0.421759,0.0227386) , 
1.71693, 0, 7, 0, 0.48747,-0.0291931)    );
  // itree = 983
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.985772,-0.000114897) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160873,0.00288375) , 
0.688795, 1, 2, 0, 0.956106,-0.43046) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.781777,-0.00016515) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.518423,-8.51196e-05) , 
0.244285, 1, 8, 0, 0.572475,-0.0897999) , 
0.466071, 0, 15, 0, 0.636119,-0.146315) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.862551,-0.000217) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.520865,-0.00012893) , 
2.6001, 1, 10, 0, 0.641156,-0.199228) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.423635,1.23316e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172805,0.00146738) , 
2.24124, 1, 18, 0, 0.379397,0.0532304) , 
2.54298, 0, 10, 0, 0.409781,0.0239264) , 
0.982427, 0, 7, 0, 0.517669,-0.0572226)    );
  // itree = 984
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.894994,-0.000235239) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.720668,-0.000166761) , 
0.61224, 1, 17, 0, 0.807059,-0.282054) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677574,-0.00104586) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125074,-0.000101063) , 
1.49973, 1, 10, 0, 0.18209,0.222348) , 
0.356515, 0, 13, 0, 0.789295,-0.267718) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679321,-0.000126328) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.448298,-2.54224e-05) , 
2.24393, 0, 10, 0, 0.499317,-0.0420233) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.623363,-3.17776e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.218573,7.82063e-05) , 
0.913639, 0, 13, 0, 0.2605,0.156966) , 
0.467184, 0, 7, 0, 0.433053,0.0131901) , 
1.9622, 0, 7, 0, 0.495433,-0.0359986)    );
  // itree = 985
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736375,-0.000114399) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257386,-7.89637e-05) , 
0.672409, 1, 1, 0, 0.725318,-0.186229) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.913498,-0.00031885) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378764,3.88631e-05) , 
0.13389, 1, 2, 0, 0.41541,0.0901357) , 
0.350417, 0, 2, 0, 0.6637,-0.13128) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.624236,-7.97066e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.285655,1.86405e-05) , 
0.619268, 1, 5, 0, 0.559793,-0.149467) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.597221,-0.000135567) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.23555,0.000255545) , 
1.65034, 0, 7, 0, 0.299558,0.0958159) , 
2.09437, 0, 10, 0, 0.375031,0.0246785) , 
0.706903, 0, 14, 0, 0.511088,-0.0488285)    );
  // itree = 986
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72695,-9.54112e-05) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.592027,-0.000103012) , 
0.636136, 0, 2, 0, 0.653301,-0.133187) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.457117,-8.69787e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.193259,0.000547737) , 
1.34908, 1, 17, 0, 0.330318,0.0536052) , 
0.116155, 0, 15, 0, 0.579969,-0.0907762) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668821,-0.000187631) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.235806,0.000322113) , 
2.82723, 1, 10, 0, 0.568798,-0.162781) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.474888,2.31271e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.121638,0.000280449) , 
0.63208, 0, 14, 0, 0.296842,0.106951) , 
2.54238, 0, 10, 0, 0.329549,0.0745116) , 
0.344272, 1, 16, 0, 0.497076,-0.0360634)    );
  // itree = 987
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.772694,-0.000112675) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.529676,-9.31458e-05) , 
0.49335, 0, 7, 0, 0.739136,-0.200967) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.586552,-0.000104486) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.296215,4.56513e-05) , 
0.0294884, 1, 0, 0, 0.511828,0.00722682) , 
0.341342, 0, 1, 0, 0.647992,-0.117487) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.865732,-0.000143501) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.4371,-2.38305e-05) , 
2.1442, 1, 10, 0, 0.537028,-0.133558) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.368635,3.12629e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0783715,0.00041989) , 
0.126513, 1, 0, 0, 0.278354,0.113447) , 
2.09431, 0, 10, 0, 0.352914,0.0422502) , 
0.706898, 0, 14, 0, 0.490667,-0.0323209)    );
  // itree = 988
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692413,-0.000106894) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.188316,-2.27279e-05) , 
0.685865, 0, 14, 0, 0.668773,-0.140218) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.611744,-0.000134142) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.254103,0.000168181) , 
0.180457, 1, 16, 0, 0.442761,0.0596535) , 
0.364154, 0, 2, 0, 0.617018,-0.0944489) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.996543,-0.000394802) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0823333,0.00502257) , 
0.0175311, 0, 6, 0, 0.928065,-0.476626) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.435678,-2.79686e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.218359,0.000182137) , 
1.94481, 0, 10, 0, 0.293628,0.082668) , 
0.442622, 0, 12, 0, 0.312121,0.0663657) , 
0.671908, 0, 14, 0, 0.484047,-0.0243149)    );
  // itree = 989
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.822681,-0.000169109) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.619419,-0.000104241) , 
0.243775, 1, 8, 0, 0.659856,-0.152723) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702542,-0.00025125) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.170727,0.000277558) , 
0.075201, 1, 16, 0, 0.262396,0.0917475) , 
0.0883546, 0, 15, 0, 0.598968,-0.115272) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686331,-0.000178124) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.426956,7.91428e-07) , 
2.54313, 0, 10, 0, 0.453571,-0.0107631) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721522,-5.2709e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.142953,0.000784569) , 
-1.06101, 1, 3, 0, 0.16488,0.239416) , 
2.23981, 1, 18, 0, 0.402452,0.0335364) , 
0.981131, 0, 7, 0, 0.494205,-0.0359419)    );
  // itree = 990
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.968804,-0.000194406) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0934118,0.0178263) , 
2.42351, 0, 9, 0, 0.898839,-0.45044) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.598777,-9.17648e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.430282,-3.85708e-05) , 
0.403565, 0, 2, 0, 0.563843,-0.0723427) , 
0.101704, 0, 6, 0, 0.582238,-0.093104) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.809647,-0.000114544) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.244271,0.000197209) , 
0.721472, 1, 7, 0, 0.606532,-0.149144) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.91788,-0.000311078) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.287895,9.5599e-05) , 
0.809825, 0, 16, 0, 0.299481,0.105676) , 
-1.22988, 1, 4, 0, 0.341049,0.0711797) , 
0.309582, 1, 16, 0, 0.485796,-0.0274136)    );
  // itree = 991
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722119,-0.000111976) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239102,0.000227476) , 
0.54765, 0, 13, 0, 0.701144,-0.167285) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.461421,-3.49462e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211971,6.08014e-05) , 
-0.123948, 1, 5, 0, 0.350874,0.0406788) , 
0.676462, 0, 14, 0, 0.603177,-0.10912) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.681625,-0.000162837) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.205298,0.0017935) , 
0.934538, 0, 7, 0, 0.517179,-0.105797) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.476594,-8.27502e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.230489,0.000137417) , 
1.34671, 1, 9, 0, 0.270973,0.129653) , 
2.20623, 0, 8, 0, 0.302097,0.0998889) , 
0.30858, 1, 16, 0, 0.489001,-0.0298592)    );
  // itree = 992
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.784903,-0.0001122) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.584845,-3.47685e-05) , 
0.343986, 0, 1, 0, 0.693313,-0.170811) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7731,-0.000248072) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.390559,-4.65816e-05) , 
0.806831, 0, 14, 0, 0.461348,0.0495263) , 
0.673755, 0, 13, 0, 0.649927,-0.1296) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.935099,-0.00044012) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.405625,-1.28e-05) , 
0.407589, 0, 12, 0, 0.436357,-0.0367702) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.352518,-1.93381e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.108462,0.000423206) , 
1.88653, 0, 17, 0, 0.154617,0.196067) , 
0.93511, 0, 7, 0, 0.280175,0.0923034) , 
0.66057, 0, 14, 0, 0.509736,-0.0454654)    );
  // itree = 993
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.739242,-0.000107996) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.321329,1.99114e-05) , 
0.106645, 1, 0, 0, 0.710579,-0.177147) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.4923,2.90907e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224007,0.000189371) , 
1.05257, 0, 18, 0, 0.427637,0.00647506) , 
0.689915, 0, 14, 0, 0.628049,-0.123587) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.649063,-9.93633e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270893,4.49455e-05) , 
0.124394, 0, 5, 0, 0.508445,-0.108423) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.378346,-6.60007e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0985869,0.000817565) , 
0.982514, 0, 7, 0, 0.237597,0.136483) , 
2.09428, 0, 10, 0, 0.314311,0.0671168) , 
0.14376, 0, 15, 0, 0.521872,-0.059048)    );
  // itree = 994
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.75125,-0.000115252) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.548647,-2.49759e-05) , 
0.29624, 0, 1, 0, 0.696393,-0.167639) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.631619,0.00015295) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186635,0.000253085) , 
0.84602, 0, 14, 0, 0.285979,0.223486) , 
-1.36194, 0, 5, 0, 0.675669,-0.14789) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.549395,-2.33155e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.342392,0.00012196) , 
0.740261, 0, 2, 0, 0.454922,-0.0525563) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.436666,-5.3119e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.173156,0.000229138) , 
0.258814, 1, 16, 0, 0.269465,0.117914) , 
0.973658, 1, 8, 0, 0.367973,0.0273664) , 
0.697055, 0, 14, 0, 0.52652,-0.0629381)    );
  // itree = 995
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.680709,-0.000120405) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270061,4.18238e-05) , 
0.270265, 0, 2, 0, 0.661809,-0.139196) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.812301,-0.000144331) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.425476,-4.6749e-06) , 
2.54298, 0, 10, 0, 0.477835,0.0105344) , 
0.735826, 0, 7, 0, 0.596265,-0.0858526) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.565609,1.3251e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.275288,9.01759e-05) , 
2.84242, 0, 9, 0, 0.353472,0.0173442) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.362203,-5.56625e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0672915,0.000467881) , 
1.88496, 0, 17, 0, 0.138315,0.203626) , 
0.401356, 1, 16, 0, 0.267651,0.0916474) , 
0.636907, 0, 14, 0, 0.481017,-0.0236017)    );
  // itree = 996
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670005,-9.50116e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317433,0.000146932) , 
0.265929, 0, 2, 0, 0.641076,-0.128857) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72696,-0.000191654) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.222052,2.81374e-05) , 
1.60931, 0, 3, 0, 0.318737,0.158508) , 
0.54368, 0, 13, 0, 0.614824,-0.105453) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.548102,-4.84551e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252885,0.000194627) , 
0.722449, 1, 8, 0, 0.387894,-0.0130158) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.887732,-0.000287052) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.103901,0.000234074) , 
0.796579, 0, 16, 0, 0.143694,0.196595) , 
0.398541, 1, 16, 0, 0.290567,0.0705256) , 
0.624085, 0, 14, 0, 0.514399,-0.0509509)    );
  // itree = 997
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.658202,-0.000109991) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160314,0.000326003) , 
0.526104, 0, 13, 0, 0.63008,-0.133826) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.757776,-0.000208759) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.370527,6.20634e-05) , 
2.20748, 0, 7, 0, 0.438275,0.0203261) , 
0.985008, 1, 8, 0, 0.544887,-0.0653568) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.947937,-0.000325465) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0253908,0.0162802) , 
0.205546, 1, 7, 0, 0.845624,-0.456555) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.302107,5.01329e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0648729,0.000242054) , 
0.241705, 1, 0, 0, 0.198346,0.18505) , 
0.790185, 0, 16, 0, 0.221802,0.161799) , 
0.138549, 1, 0, 0, 0.483058,-0.021886)    );
  // itree = 998
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.925982,-0.000219651) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.675358,-0.000131084) , 
0.367462, 0, 0, 0, 0.686568,-0.171719) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.501091,-0.000206142) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.136882,0.00131548) , 
2.17323, 0, 7, 0, 0.262914,0.0952024) , 
0.0873353, 0, 15, 0, 0.624677,-0.132725) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.657018,-0.000126265) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.445591,-4.28525e-06) , 
1.15485, 1, 17, 0, 0.49135,-0.0257327) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639195,-0.000190395) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191284,0.000147597) , 
2.69215, 0, 10, 0, 0.228547,0.155042) , 
0.0923662, 1, 0, 0, 0.398212,0.0383343) , 
1.23336, 0, 7, 0, 0.47792,-0.0218727)    );
  // itree = 999
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.934755,-0.000216281) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.677835,-0.000175271) , 
0.104412, 0, 6, 0, 0.696003,-0.188503) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558717,-6.21223e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.137591,0.00154462) , 
0.0903757, 0, 15, 0, 0.499875,-0.0277631) , 
1.70905, 0, 7, 0, 0.551221,-0.0698441) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.857629,-0.000188992) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.347815,0.000224251) , 
1.55847, 0, 18, 0, 0.457699,-0.0411661) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.500879,5.28592e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154044,0.000130864) , 
0.299369, 1, 10, 0, 0.1961,0.186719) , 
0.866557, 0, 5, 0, 0.280453,0.113237) , 
0.387779, 1, 16, 0, 0.478261,-0.0205116)    );
   return;
};
 
// Clean up
inline void ReadBDTGrad::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDTGrad::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
         if (IsNormalised()) {
            // normalise variables
            std::vector<double> iV;
            int ivar = 0;
            for (std::vector<double>::const_iterator varIt = inputValues.begin();
                 varIt != inputValues.end(); varIt++, ivar++) {
               iV.push_back(NormVariable( *varIt, fVmin[ivar], fVmax[ivar] ));
            }
            retval = GetMvaValue__( iV );
         }
         else {
            retval = GetMvaValue__( inputValues );
         }
      }

      return retval;
   }
