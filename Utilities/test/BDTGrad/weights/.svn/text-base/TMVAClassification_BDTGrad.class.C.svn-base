// Class: ReadBDTGrad
// Automatically generated by MethodBase::MakeClass
//

/* configuration options =====================================================

#GEN -*-*-*-*-*-*-*-*-*-*-*- general info -*-*-*-*-*-*-*-*-*-*-*-

Method         : BDT::BDTGrad
TMVA Release   : 4.0.7         [262151]
ROOT Release   : 5.27/06       [334598]
Creator        : marfin
Date           : Mon Apr 23 21:13:34 2012
Host           : Linux lxbuild042.cern.ch 2.6.18-238.1.1.el5 #1 SMP Wed Jan 19 11:06:36 CET 2011 x86_64 x86_64 x86_64 GNU/Linux
Dir            : /data/user/marfin/CMSSW_4_2_4_patch1/src/Analysis/Utilities/test
Training events: 200000
Analysis type  : [Classification]


#OPT -*-*-*-*-*-*-*-*-*-*-*-*- options -*-*-*-*-*-*-*-*-*-*-*-*-

# Set by User:
V: "False" [Verbose output (short form of "VerbosityLevel" below - overrides the latter one)]
H: "True" [Print method-specific help message]
NTrees: "1000" [Number of trees in the forest]
BoostType: "Grad" [Boosting type for the trees in the forest]
UseBaggedGrad: "True" [Use only a random subsample of all events for growing the trees in each iteration. (Only valid for GradBoost)]
GradBaggingFraction: "5.000000e-01" [Defines the fraction of events to be used in each iteration when UseBaggedGrad=kTRUE. (Only valid for GradBoost)]
Shrinkage: "3.000000e-01" [Learning rate for GradBoost algorithm]
UseWeightedTrees: "True" [Use weighted trees or simple average in classification from the forest]
SeparationType: "giniindex" [Separation criterion for node splitting]
nCuts: "20" [Number of steps during node cut optimisation]
PruneMethod: "nopruning" [Method used for pruning (removal) of statistically insignificant branches]
NNodesMax: "10" [Max number of nodes in tree]
# Default:
VerbosityLevel: "Default" [Verbosity level]
VarTransform: "None" [List of variable transformations performed before training, e.g., "D_Background,P_Signal,G,N_AllClasses" for: "Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)"]
CreateMVAPdfs: "False" [Create PDFs for classifier outputs (signal and background)]
IgnoreNegWeightsInTraining: "False" [Events with negative weights are ignored in the training (but are included for testing and performance evaluation)]
AdaBoostR2Loss: "quadratic" [Type of Loss function in AdaBoostR2t (Linear,Quadratic or Exponential)]
AdaBoostBeta: "1.000000e+00" [Parameter for AdaBoost algorithm]
UseRandomisedTrees: "False" [Choose at each node splitting a random set of variables]
UseNvars: "2" [Number of variables used if randomised tree option is chosen]
UseNTrainEvents: "200000" [number of randomly picked training events used in randomised (and bagged) trees]
UseYesNoLeaf: "True" [Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node]
NodePurityLimit: "5.000000e-01" [In boosting/pruning, nodes with purity > NodePurityLimit are signal; background otherwise.]
nEventsMin: "55" [Minimum number of events required in a leaf node (default: max(20, N_train/(Nvar^2)/10) ) ]
PruneStrength: "-1.000000e+00" [Pruning strength]
PruneBeforeBoost: "False" [Flag to prune the tree before applying boosting algorithm]
PruningValFraction: "5.000000e-01" [Fraction of events to use for optimizing automatic pruning.]
MaxDepth: "3" [Max depth of the decision tree allowed]
##


#VAR -*-*-*-*-*-*-*-*-*-*-*-* variables *-*-*-*-*-*-*-*-*-*-*-*-

NVar 19
D                             D                             D                             D                             F                                 'F'    [8.09350796018e-13,0.969845294952]
Et3byEt1                      Et3byEt1                      Et3byEt1                      Et3byEt1                      F                                 'F'    [0.0213338062167,0.995630800724]
Et3byEt2                      Et3byEt2                      Et3byEt2                      Et3byEt2                      F                                 'F'    [0.0256310589612,0.999987959862]
Eta1                          Eta1                          Eta1                          Eta1                          F                                 'F'    [-2.59995794296,2.59998321533]
Eta2                          Eta2                          Eta2                          Eta2                          F                                 'F'    [-2.5999815464,2.59995913506]
Eta3                          Eta3                          Eta3                          Eta3                          F                                 'F'    [-2.5999994278,2.59999895096]
aplanarity                    aplanarity                    aplanarity                    aplanarity                    F                                 'F'    [7.72851021461e-13,0.425171911716]
detajet1jet2                  detajet1jet2                  detajet1jet2                  detajet1jet2                  F                                 'F'    [1.82086080258e-06,5.18003892899]
detajet2jet3                  detajet2jet3                  detajet2jet3                  detajet2jet3                  F                                 'F'    [3.12055794893e-06,5.1712808609]
dphijet1jet3                  dphijet1jet3                  dphijet1jet3                  dphijet1jet3                  F                                 'F'    [9.89213640423e-06,3.14158535004]
dphijet2jet3                  dphijet2jet3                  dphijet2jet3                  dphijet2jet3                  F                                 'F'    [7.99048575573e-06,3.14154052734]
dphijet2jet3_boost12          dphijet2jet3_boost12          dphijet2jet3_boost12          dphijet2jet3_boost12          F                                 'F'    [2.08782535083e-06,3.14154076576]
dptjet1jet3                   dptjet1jet3                   dptjet1jet3                   dptjet1jet3                   F                                 'F'    [0.00093678914709,0.749734222889]
isotropy                      isotropy                      isotropy                      isotropy                      F                                 'F'    [0.0916248187423,0.999600529671]
maxdijetmass                  maxdijetmass                  maxdijetmass                  maxdijetmass                  F                                 'F'    [0.222750738263,0.988934218884]
mindijetmass                  mindijetmass                  mindijetmass                  mindijetmass                  F                                 'F'    [0.00732990400866,0.580337285995]
sphericity                    sphericity                    sphericity                    sphericity                    F                                 'F'    [0.000508818775415,0.927527248859]
thetajet1_boost12             thetajet1_boost12             thetajet1_boost12             thetajet1_boost12             F                                 'F'    [0.0203365664929,3.13854455948]
thetajet3_boost12             thetajet3_boost12             thetajet3_boost12             thetajet3_boost12             F                                 'F'    [0.00201850407757,3.13869547844]
NSpec 0


============================================================================ */

#include <vector>
#include <cmath>
#include <string>
#include <iostream>

#ifndef NN
#define NN new BDT_DecisionTreeNode
#endif
   
#ifndef BDT_DecisionTreeNode__def
#define BDT_DecisionTreeNode__def
   
class BDT_DecisionTreeNode {
   
public:
   
   // constructor of an essentially "empty" node floating in space
   BDT_DecisionTreeNode ( BDT_DecisionTreeNode* left,
                          BDT_DecisionTreeNode* right,
                          double cutValue, Bool_t cutType, int selector,
                          int nodeType, double purity, double response ) :
   fLeft    ( left     ),
   fRight   ( right    ),
   fCutValue( cutValue ),
   fCutType ( cutType  ),
   fSelector( selector ),
   fNodeType( nodeType ),
   fPurity  ( purity   ),
   fResponse( response ){}

   virtual ~BDT_DecisionTreeNode();

   // test event if it decends the tree at this node to the right
   virtual Bool_t GoesRight( const std::vector<double>& inputValues ) const;
   BDT_DecisionTreeNode* GetRight( void )  {return fRight; };

   // test event if it decends the tree at this node to the left 
   virtual Bool_t GoesLeft ( const std::vector<double>& inputValues ) const;
   BDT_DecisionTreeNode* GetLeft( void ) { return fLeft; };   

   // return  S/(S+B) (purity) at this node (from  training)

   double GetPurity( void ) const { return fPurity; } 
   // return the node type
   int    GetNodeType( void ) const { return fNodeType; }
   double GetResponse(void) const {return fResponse;}

private:

   BDT_DecisionTreeNode*   fLeft;     // pointer to the left daughter node
   BDT_DecisionTreeNode*   fRight;    // pointer to the right daughter node
   double                  fCutValue; // cut value appplied on this node to discriminate bkg against sig
   Bool_t                  fCutType;  // true: if event variable > cutValue ==> signal , false otherwise
   int                     fSelector; // index of variable used in node selection (decision tree)   
   int                     fNodeType; // Type of node: -1 == Bkg-leaf, 1 == Signal-leaf, 0 = internal 
   double                  fPurity;   // Purity of node from training
   double                  fResponse; // Regression response value of node
}; 
   
//_______________________________________________________________________
BDT_DecisionTreeNode::~BDT_DecisionTreeNode()
{
   if (fLeft  != NULL) delete fLeft;
   if (fRight != NULL) delete fRight;
}; 
   
//_______________________________________________________________________
Bool_t BDT_DecisionTreeNode::GoesRight( const std::vector<double>& inputValues ) const
{
   // test event if it decends the tree at this node to the right
   Bool_t result = (inputValues[fSelector] > fCutValue );
   if (fCutType == true) return result; //the cuts are selecting Signal ;
   else return !result;
}
   
//_______________________________________________________________________
Bool_t BDT_DecisionTreeNode::GoesLeft( const std::vector<double>& inputValues ) const
{
   // test event if it decends the tree at this node to the left
   if (!this->GoesRight(inputValues)) return true;
   else return false;
}
   
#endif
   
#ifndef IClassifierReader__def
#define IClassifierReader__def

class IClassifierReader {

 public:

   // constructor
   IClassifierReader() : fStatusIsClean( true ) {}
   virtual ~IClassifierReader() {}

   // return classifier response
   virtual double GetMvaValue( const std::vector<double>& inputValues ) const = 0;

   // returns classifier status
   Bool_t IsStatusClean() const { return fStatusIsClean; }

 protected:

   Bool_t fStatusIsClean;
};

#endif

class ReadBDTGrad : public IClassifierReader {

 public:

   // constructor
   ReadBDTGrad( std::vector<std::string>& theInputVars ) 
      : IClassifierReader(),
        fClassName( "ReadBDTGrad" ),
        fNvars( 19 ),
        fIsNormalised( false )
   {      
      // the training input variables
      const char* inputVars[] = { "D", "Et3byEt1", "Et3byEt2", "Eta1", "Eta2", "Eta3", "aplanarity", "detajet1jet2", "detajet2jet3", "dphijet1jet3", "dphijet2jet3", "dphijet2jet3_boost12", "dptjet1jet3", "isotropy", "maxdijetmass", "mindijetmass", "sphericity", "thetajet1_boost12", "thetajet3_boost12" };

      // sanity checks
      if (theInputVars.size() <= 0) {
         std::cout << "Problem in class \"" << fClassName << "\": empty input vector" << std::endl;
         fStatusIsClean = false;
      }

      if (theInputVars.size() != fNvars) {
         std::cout << "Problem in class \"" << fClassName << "\": mismatch in number of input values: "
                   << theInputVars.size() << " != " << fNvars << std::endl;
         fStatusIsClean = false;
      }

      // validate input variables
      for (size_t ivar = 0; ivar < theInputVars.size(); ivar++) {
         if (theInputVars[ivar] != inputVars[ivar]) {
            std::cout << "Problem in class \"" << fClassName << "\": mismatch in input variable names" << std::endl
                      << " for variable [" << ivar << "]: " << theInputVars[ivar].c_str() << " != " << inputVars[ivar] << std::endl;
            fStatusIsClean = false;
         }
      }

      // initialize min and max vectors (for normalisation)
      fVmin[0] = 8.09350796018155e-13;
      fVmax[0] = 0.969845294952393;
      fVmin[1] = 0.0213338062167168;
      fVmax[1] = 0.99563080072403;
      fVmin[2] = 0.025631058961153;
      fVmax[2] = 0.999987959861755;
      fVmin[3] = -2.59995794296265;
      fVmax[3] = 2.59998321533203;
      fVmin[4] = -2.59998154640198;
      fVmax[4] = 2.59995913505554;
      fVmin[5] = -2.59999942779541;
      fVmax[5] = 2.59999895095825;
      fVmin[6] = 7.72851021461213e-13;
      fVmax[6] = 0.425171911716461;
      fVmin[7] = 1.82086080258159e-06;
      fVmax[7] = 5.1800389289856;
      fVmin[8] = 3.1205579489324e-06;
      fVmax[8] = 5.17128086090088;
      fVmin[9] = 9.89213640423259e-06;
      fVmax[9] = 3.14158535003662;
      fVmin[10] = 7.9904857557267e-06;
      fVmax[10] = 3.14154052734375;
      fVmin[11] = 2.08782535082719e-06;
      fVmax[11] = 3.14154076576233;
      fVmin[12] = 0.000936789147090167;
      fVmax[12] = 0.749734222888947;
      fVmin[13] = 0.0916248187422752;
      fVmax[13] = 0.999600529670715;
      fVmin[14] = 0.22275073826313;
      fVmax[14] = 0.988934218883514;
      fVmin[15] = 0.00732990400865674;
      fVmax[15] = 0.580337285995483;
      fVmin[16] = 0.000508818775415421;
      fVmax[16] = 0.927527248859406;
      fVmin[17] = 0.0203365664929152;
      fVmax[17] = 3.13854455947876;
      fVmin[18] = 0.00201850407756865;
      fVmax[18] = 3.13869547843933;

      // initialize input variable types
      fType[0] = 'F';
      fType[1] = 'F';
      fType[2] = 'F';
      fType[3] = 'F';
      fType[4] = 'F';
      fType[5] = 'F';
      fType[6] = 'F';
      fType[7] = 'F';
      fType[8] = 'F';
      fType[9] = 'F';
      fType[10] = 'F';
      fType[11] = 'F';
      fType[12] = 'F';
      fType[13] = 'F';
      fType[14] = 'F';
      fType[15] = 'F';
      fType[16] = 'F';
      fType[17] = 'F';
      fType[18] = 'F';

      // initialize constants
      Initialize();

   }

   // destructor
   virtual ~ReadBDTGrad() {
      Clear(); // method-specific
   }

   // the classifier response
   // "inputValues" is a vector of input values in the same order as the 
   // variables given to the constructor
   double GetMvaValue( const std::vector<double>& inputValues ) const;

 private:

   // method-specific destructor
   void Clear();

   // common member variables
   const char* fClassName;

   const size_t fNvars;
   size_t GetNvar()           const { return fNvars; }
   char   GetType( int ivar ) const { return fType[ivar]; }

   // normalisation of input variables
   const Bool_t fIsNormalised;
   Bool_t IsNormalised() const { return fIsNormalised; }
   double fVmin[19];
   double fVmax[19];
   double NormVariable( double x, double xmin, double xmax ) const {
      // normalise to output range: [-1, 1]
      return 2*(x - xmin)/(xmax - xmin) - 1.0;
   }

   // type of input variable: 'F' or 'I'
   char   fType[19];

   // initialize internal variables
   void Initialize();
   double GetMvaValue__( const std::vector<double>& inputValues ) const;

   // private members (method specific)
   std::vector<BDT_DecisionTreeNode*> fForest;       // i.e. root nodes of decision trees
   std::vector<double>                fBoostWeights; // the weights applied in the individual boosts
};

double ReadBDTGrad::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDT_DecisionTreeNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDT_DecisionTreeNode*)current->GetRight();
         else current=(BDT_DecisionTreeNode*)current->GetLeft();
      }
      myMVA += current->GetResponse();
   }
   return 2.0/(1.0+exp(-2.0*myMVA))-1.0;
};

void ReadBDTGrad::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727991,-0.00034435) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530474,-0.000229308) , 
0.536008, 0, 2, 0, 0.637034,-0.137034) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.840495,-0.000455064) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.048173,0.00231009) , 
0.567353, 0, 14, 0, 0.713058,-0.213058) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.472304,0.000279589) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239788,0.00221857) , 
2.0944, 0, 10, 0, 0.305124,0.194876) , 
0.759888, 1, 17, 0, 0.347701,0.152299) , 
0.658743, 0, 14, 0, 0.519748,-0.0197482)    );
  // itree = 1
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.621874,-0.000339367) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271636,0.000438625) , 
0.107925, 0, 15, 0, 0.597814,-0.0976731) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.581124,0.000316527) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.274927,0.00115713) , 
0.0646681, 0, 6, 0, 0.389701,0.109508) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.874867,-0.00113209) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113607,0.00235327) , 
2.99449, 0, 8, 0, 0.140956,0.358179) , 
0.477016, 1, 16, 0, 0.326828,0.172362) , 
0.659126, 0, 14, 0, 0.48204,0.0176949)    );
  // itree = 2
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.675364,-0.00034595) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.456906,-0.000155642) , 
0.454192, 0, 2, 0, 0.599671,-0.099397) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628499,-6.28181e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.289457,0.00201747) , 
0.404287, 1, 16, 0, 0.491109,0.00745262) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.5004,0.000184622) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167675,0.00172806) , 
0.911587, 1, 17, 0, 0.221636,0.276891) , 
0.171283, 0, 15, 0, 0.307313,0.191225) , 
0.658369, 0, 14, 0, 0.47837,0.0211842)    );
  // itree = 3
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.633894,-0.000331334) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.300378,0.000570404) , 
0.111776, 0, 15, 0, 0.605585,-0.105302) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556125,0.00016356) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0622305,0.00138281) , 
-0.372066, 0, 3, 0, 0.447553,0.0507988) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695013,4.00604e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.15619,0.00223181) , 
-1.85678, 1, 4, 0, 0.196631,0.300906) , 
2.09417, 0, 10, 0, 0.267486,0.230281) , 
0.642489, 0, 14, 0, 0.483044,0.0163266)    );
  // itree = 4
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.805297,-0.000738406) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.589084,-0.000232588) , 
1.96485, 0, 7, 0, 0.631767,-0.131241) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.450659,0.000250897) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152367,0.0160042) , 
0.0639183, 0, 15, 0, 0.39909,0.0982364) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.509253,0.000662059) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.121086,0.00192852) , 
-0.993901, 1, 4, 0, 0.194906,0.301817) , 
0.35644, 1, 16, 0, 0.300924,0.196112) , 
0.66057, 0, 14, 0, 0.498189,0.000928398)    );
  // itree = 5
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.748715,-0.000496105) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.53501,-0.000122457) , 
1.22083, 0, 7, 0, 0.628599,-0.128167) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.777746,-0.000184779) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0816568,0.0396254) , 
1.86965, 0, 17, 0, 0.513906,-0.0176525) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.852719,-0.000742635) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172337,0.0014158) , 
2.74144, 0, 7, 0, 0.197441,0.298015) , 
0.240875, 1, 8, 0, 0.25173,0.243863) , 
0.63667, 0, 14, 0, 0.509232,-0.0103329)    );
  // itree = 6
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.874106,-0.000192984) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.561298,-0.000300098) , 
0.470189, 0, 15, 0, 0.606005,-0.105362) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.540267,0.00027055) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.284494,0.00111139) , 
0.530699, 1, 14, 0, 0.383437,0.111121) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.480698,0.000587232) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.122515,0.0044618) , 
0.243526, 1, 8, 0, 0.181258,0.311028) , 
0.0898002, 0, 15, 0, 0.310579,0.183161) , 
0.643347, 0, 14, 0, 0.49917,-0.00102315)    );
  // itree = 7
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.629162,-0.000348307) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.362291,0.00023905) , 
0.132776, 0, 15, 0, 0.59373,-0.0927564) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.594715,9.94821e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.102374,0.00488683) , 
0.492409, 0, 14, 0, 0.493524,0.000573508) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.383752,0.000815906) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145823,0.00169651) , 
1.79522, 0, 10, 0, 0.218979,0.273809) , 
0.434768, 1, 13, 0, 0.299169,0.194001) , 
0.658369, 0, 14, 0, 0.471813,0.0259307)    );
  // itree = 8
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718627,-0.000417588) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363321,0.00117115) , 
0.572143, 0, 14, 0, 0.664199,-0.165907) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.547805,-0.000114707) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.33757,5.41739e-05) , 
0.546501, 0, 2, 0, 0.467103,0.0312924) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.607654,0.00111135) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.146563,0.00365553) , 
1.94423, 0, 11, 0, 0.222894,0.268437) , 
0.0919273, 0, 15, 0, 0.418845,0.0781541) , 
1.05974, 1, 17, 0, 0.484946,0.0124011)    );
  // itree = 9
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.638552,-0.000347678) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.351149,0.000235455) , 
0.133083, 0, 15, 0, 0.602426,-0.10131) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.627218,-4.01463e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259512,0.000918742) , 
1.34373, 1, 18, 0, 0.472629,0.0215483) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.352202,0.000591522) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.124219,0.00371686) , 
0.344984, 1, 16, 0, 0.239217,0.25231) , 
2.09434, 0, 10, 0, 0.304674,0.187596) , 
0.659126, 0, 14, 0, 0.478755,0.0186877)    );
  // itree = 10
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.739985,-0.000413911) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.510284,-0.000296731) , 
2.39357, 0, 9, 0, 0.650602,-0.149326) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558699,-0.000154916) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.339819,0.000701375) , 
0.993758, 0, 7, 0, 0.422293,0.0727085) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.451664,0.000178623) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.133333,0.0120019) , 
0.0845164, 0, 15, 0, 0.201053,0.287361) , 
0.0922641, 0, 15, 0, 0.353855,0.139109) , 
0.697055, 0, 14, 0, 0.499694,-0.00264466)    );
  // itree = 11
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71108,-0.000447592) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.536176,-9.48968e-05) , 
0.982427, 0, 7, 0, 0.62729,-0.12652) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692253,-0.000299251) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0754936,0.0166194) , 
0.0912836, 0, 15, 0, 0.540207,-0.048755) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.392246,0.00122324) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.17416,0.00147337) , 
0.748647, 1, 10, 0, 0.236414,0.251756) , 
-1.36071, 1, 4, 0, 0.276878,0.211728) , 
0.637994, 0, 14, 0, 0.514117,-0.0172753)    );
  // itree = 12
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672284,-0.000323519) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.394548,-0.000248507) , 
1.19679, 1, 11, 0, 0.602227,-0.10082) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.592808,0.000147591) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.268553,0.00112353) , 
0.789482, 1, 2, 0, 0.502936,-0.0125315) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.388159,0.000884158) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.148705,0.00263809) , 
0.36549, 1, 16, 0, 0.249748,0.238571) , 
0.904102, 0, 7, 0, 0.368642,0.120656) , 
0.66057, 0, 14, 0, 0.501187,-0.00501804)    );
  // itree = 13
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686063,-0.000355528) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.38611,0.000133487) , 
0.350411, 0, 2, 0, 0.633852,-0.132276) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.840393,-0.000544091) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0365569,-2.65134e-05) , 
0.574003, 1, 17, 0, 0.766465,-0.274036) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.325257,0.000831325) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0650936,0.0189757) , 
0.062917, 0, 15, 0, 0.284161,0.203595) , 
0.629926, 1, 17, 0, 0.314085,0.173961) , 
0.66057, 0, 14, 0, 0.50551,-0.00936475)    );
  // itree = 14
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.685058,-0.000368604) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.414592,-9.69171e-05) , 
0.493339, 0, 7, 0, 0.630493,-0.128798) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741593,2.04982e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.374854,0.000915383) , 
0.520595, 1, 14, 0, 0.401995,0.086904) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.349187,0.000325048) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0518459,0.00309869) , 
1.49541, 0, 11, 0, 0.163476,0.315901) , 
0.513665, 0, 14, 0, 0.339893,0.146527) , 
0.659126, 0, 14, 0, 0.512098,-0.0166269)    );
  // itree = 15
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.648478,-0.000340402) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.457229,0.000356067) , 
0.347942, 1, 16, 0, 0.585369,-0.0868069) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.959544,-0.000600695) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.507398,-0.000604935) , 
0.908751, 0, 2, 0, 0.752263,-0.254402) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.376779,0.000994046) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113218,0.00409324) , 
0.84466, 0, 7, 0, 0.261736,0.221887) , 
0.0811884, 1, 16, 0, 0.320963,0.164379) , 
0.115897, 0, 15, 0, 0.515425,-0.0203604)    );
  // itree = 16
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72728,-0.000392987) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.481165,-0.000200397) , 
0.396815, 0, 2, 0, 0.652164,-0.150116) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.699984,-0.000334611) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204335,9.61589e-05) , 
1.79594, 1, 10, 0, 0.593254,-0.101102) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.471452,0.000223006) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257243,0.0010807) , 
1.34654, 1, 9, 0, 0.292006,0.195555) , 
1.65028, 0, 7, 0, 0.344744,0.143621) , 
0.706203, 0, 14, 0, 0.488506,0.0062568)    );
  // itree = 17
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683377,-0.000408732) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.449721,-3.79792e-05) , 
0.732504, 0, 7, 0, 0.604796,-0.103657) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660109,-7.63273e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256053,0.00481484) , 
-0.371418, 0, 5, 0, 0.570082,-0.0824463) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.478286,0.000361724) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.19864,0.00166111) , 
2.40796, 0, 8, 0, 0.233493,0.248777) , 
2.3936, 0, 10, 0, 0.300555,0.182784) , 
0.63667, 0, 14, 0, 0.497938,-0.00305111)    );
  // itree = 18
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706611,-0.000411097) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.385009,4.14044e-05) , 
0.350397, 0, 2, 0, 0.63832,-0.135901) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.528717,-0.000116012) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224041,0.00160048) , 
0.558311, 0, 14, 0, 0.444862,0.0450707) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.552805,-0.000129213) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.189757,0.00151404) , 
1.94465, 0, 11, 0, 0.234176,0.251513) , 
0.926226, 0, 7, 0, 0.327226,0.160337) , 
0.706203, 0, 14, 0, 0.473871,0.0206948)    );
  // itree = 19
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.658814,-0.000373634) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.404953,1.68538e-05) , 
0.315376, 1, 16, 0, 0.600778,-0.0986808) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.853249,-0.000359902) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.354519,0.00130361) , 
0.00778227, 1, 6, 0, 0.682843,-0.195264) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.460512,0.000555001) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209988,0.00129039) , 
0.648406, 0, 1, 0, 0.283466,0.199836) , 
2.67741, 0, 8, 0, 0.328491,0.155293) , 
0.659385, 0, 14, 0, 0.486521,0.00789196)    );
  // itree = 20
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.81171,-0.000688951) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.569814,-0.000191274) , 
1.96486, 0, 7, 0, 0.614992,-0.113688) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.557847,7.68851e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.283101,0.00149142) , 
0.748475, 1, 10, 0, 0.382907,0.0993189) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.436864,0.000245856) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.10578,0.00205393) , 
1.34717, 1, 9, 0, 0.159236,0.320241) , 
0.357508, 1, 16, 0, 0.273291,0.207588) , 
0.636325, 0, 14, 0, 0.501142,-0.00664363)    );
  // itree = 21
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653242,-0.000330232) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.386415,0.000524905) , 
0.392246, 1, 16, 0, 0.590707,-0.0921779) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.833043,-0.000434508) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.374461,0.000964978) , 
0.298947, 1, 11, 0, 0.470142,0.013632) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.839034,-0.00111639) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.140374,0.00368263) , 
3.66428, 0, 8, 0, 0.177512,0.302544) , 
0.732926, 1, 8, 0, 0.316321,0.165498) , 
0.116152, 0, 15, 0, 0.517409,-0.0233437)    );
  // itree = 22
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.70696,-0.000550289) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.537634,-0.000220601) , 
0.80846, 0, 14, 0, 0.602672,-0.100264) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.836361,-0.000551852) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.290444,0.0195663) , 
0.448706, 1, 11, 0, 0.673412,-0.185739) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.474858,0.000128032) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.219532,0.000979174) , 
0.454718, 1, 18, 0, 0.248064,0.23381) , 
0.341071, 0, 12, 0, 0.301149,0.181449) , 
0.673093, 0, 14, 0, 0.469196,0.0244421)    );
  // itree = 23
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.673328,-0.000369078) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.381804,0.000970003) , 
0.115759, 0, 15, 0, 0.606984,-0.109903) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.920928,-0.000503116) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0882325,0.00143507) , 
2.81071, 1, 10, 0, 0.788242,-0.29726) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.435151,-5.8938e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171252,0.00133745) , 
0.663374, 0, 14, 0, 0.272668,0.214738) , 
2.54311, 0, 11, 0, 0.309407,0.178254) , 
0.309582, 1, 16, 0, 0.495314,-0.00176808)    );
  // itree = 24
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670767,-0.000327331) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378272,0.000195542) , 
0.138794, 0, 15, 0, 0.626242,-0.124786) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.548147,-4.28247e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.200609,0.000659707) , 
0.679358, 1, 8, 0, 0.381861,0.0998684) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.465439,0.000840081) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154726,0.00202204) , 
0.147885, 1, 11, 0, 0.185322,0.291633) , 
2.09442, 0, 10, 0, 0.241081,0.237229) , 
0.635983, 0, 14, 0, 0.503835,-0.0097344)    );
  // itree = 25
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.75917,-0.00068677) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.513624,-0.000168193) , 
1.97339, 0, 7, 0, 0.553958,-0.0535358) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661629,0.00017817) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.30625,0.000830083) , 
1.94241, 0, 11, 0, 0.381876,0.0971952) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727374,-0.000174951) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0981474,0.00160425) , 
2.31154, 0, 17, 0, 0.130961,0.34466) , 
0.357966, 1, 16, 0, 0.258811,0.218568) , 
0.62241, 0, 14, 0, 0.458253,0.0346978)    );
  // itree = 26
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.740284,-0.000602143) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.541821,-0.000221222) , 
0.152727, 1, 16, 0, 0.630447,-0.127221) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.784081,-0.000428308) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.444315,0.000323565) , 
2.34991, 0, 7, 0, 0.531958,-0.0463491) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.445603,0.000526084) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.181383,0.000961444) , 
0.775934, 0, 1, 0, 0.206471,0.274151) , 
1.37079, 0, 7, 0, 0.29654,0.185461) , 
0.693844, 0, 14, 0, 0.470083,0.0229491)    );
  // itree = 27
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705608,-0.000293196) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.513647,-0.000245879) , 
0.58708, 0, 2, 0, 0.607309,-0.105743) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.924369,-0.000585117) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0147791,0.0572397) , 
0.227917, 1, 7, 0, 0.724869,-0.244477) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.324038,0.00075003) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.140847,0.00461338) , 
0.467545, 0, 7, 0, 0.267163,0.209477) , 
0.242955, 0, 6, 0, 0.283309,0.193463) , 
0.636907, 0, 14, 0, 0.495017,-0.0020438)    );
  // itree = 28
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.650301,-0.000413023) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.389869,0.000225516) , 
0.311803, 0, 2, 0, 0.60501,-0.101423) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.644594,-8.46358e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.352485,0.000236791) , 
0.744444, 0, 2, 0, 0.52156,-0.0365137) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.47881,2.85624e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.205071,0.00112013) , 
0.172539, 0, 15, 0, 0.314441,0.168809) , 
2.09437, 0, 10, 0, 0.370784,0.112955) , 
0.712793, 0, 14, 0, 0.469646,0.02247)    );
  // itree = 29
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.646461,-0.000316231) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.384916,0.000327066) , 
0.139505, 0, 15, 0, 0.600099,-0.0992373) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.762363,-0.000280892) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.308979,0.00105857) , 
0.250724, 1, 13, 0, 0.345951,0.13063) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67631,-0.0006328) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0870551,0.00185666) , 
2.54227, 0, 11, 0, 0.118281,0.3536) , 
0.446495, 1, 16, 0, 0.270982,0.204051) , 
0.622762, 0, 14, 0, 0.499324,-0.0063715)    );
  // itree = 30
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683721,-0.000401549) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.481093,-4.45857e-05) , 
0.306732, 1, 16, 0, 0.635009,-0.131595) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.56624,-6.99916e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.268178,0.000654716) , 
0.0347474, 1, 6, 0, 0.444332,0.038067) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.477579,0.000290756) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.132703,0.00230213) , 
0.417089, 1, 13, 0, 0.223792,0.251764) , 
0.93507, 0, 7, 0, 0.320073,0.15847) , 
0.671908, 0, 14, 0, 0.500665,-0.00786039)    );
  // itree = 31
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679499,-0.000339802) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.512996,-0.000218182) , 
0.536, 0, 2, 0, 0.597529,-0.094477) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.841708,-0.000397834) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.384062,0.000858483) , 
1.98011, 1, 10, 0, 0.500994,-0.0207402) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.527353,-4.3797e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.182691,0.0011731) , 
2.67745, 0, 8, 0, 0.213104,0.261428) , 
1.34634, 1, 9, 0, 0.261474,0.21402) , 
0.66057, 0, 14, 0, 0.463596,0.0284728)    );
  // itree = 32
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76077,-0.000665143) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.537251,-0.000320379) , 
0.0114078, 1, 0, 0, 0.711604,-0.211262) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.553035,-0.000251888) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292419,0.00137582) , 
0.321683, 0, 2, 0, 0.511415,-0.00937214) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.419166,0.000616834) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168831,0.00159689) , 
1.49555, 0, 11, 0, 0.250779,0.223795) , 
0.651591, 0, 14, 0, 0.387927,0.101101) , 
0.133145, 1, 16, 0, 0.467848,0.0239742)    );
  // itree = 33
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.656419,-0.000517149) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.49502,-0.000186538) , 
0.784137, 0, 14, 0, 0.56487,-0.0615117) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.818985,-0.000626174) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34934,0.00152328) , 
0.64073, 0, 14, 0, 0.473097,0.0056943) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688421,-0.000869549) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172033,0.00105497) , 
-2.10442, 1, 4, 0, 0.184655,0.28925) , 
2.84239, 0, 9, 0, 0.252329,0.222723) , 
0.659385, 0, 14, 0, 0.434338,0.0571982)    );
  // itree = 34
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.820397,-0.00067836) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.553609,-0.000164862) , 
1.96488, 0, 7, 0, 0.607324,-0.106227) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.550526,1.21288e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252606,0.0011469) , 
0.359716, 1, 16, 0, 0.401309,0.0778346) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.549737,8.65354e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0858476,0.00441618) , 
2.64877, 0, 8, 0, 0.137608,0.324234) , 
0.0900273, 0, 15, 0, 0.307762,0.165243) , 
0.622998, 0, 14, 0, 0.512181,-0.0200065)    );
  // itree = 35
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707883,-0.000410091) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.505558,-5.89385e-05) , 
0.740047, 0, 7, 0, 0.638903,-0.136096) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.452881,0.000617791) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.141425,0.00149455) , 
0.864744, 1, 2, 0, 0.377897,0.0962728) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.320774,0.00245393) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0860121,0.00236037) , 
2.15926, 0, 17, 0, 0.112158,0.356112) , 
0.430401, 0, 1, 0, 0.304355,0.168183) , 
0.643027, 0, 14, 0, 0.521971,-0.0297449)    );
  // itree = 36
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.775506,-0.000384637) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.580316,-0.000299297) , 
0.543918, 0, 2, 0, 0.671456,-0.166752) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.799824,-0.000304973) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.479796,0.000273219) , 
2.14426, 1, 10, 0, 0.539972,-0.0582629) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.506791,0.000237495) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.242072,0.00103309) , 
0.912338, 0, 2, 0, 0.291719,0.186889) , 
2.09437, 0, 10, 0, 0.364101,0.115411) , 
0.706618, 0, 14, 0, 0.512472,-0.0207992)    );
  // itree = 37
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687607,-0.000395721) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.277124,0.000231714) , 
0.311796, 0, 2, 0, 0.633919,-0.129119) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.850402,-0.000343749) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.389935,0.0002807) , 
0.231539, 1, 13, 0, 0.413608,0.0711079) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.342113,0.000548457) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.075467,0.00876305) , 
2.09428, 0, 10, 0, 0.148957,0.312482) , 
0.0908507, 0, 15, 0, 0.336185,0.141721) , 
0.697055, 0, 14, 0, 0.481807,0.00925316)    );
  // itree = 38
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709895,-0.000523891) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.461585,-0.000436447) , 
1.94297, 1, 18, 0, 0.658258,-0.153245) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.799645,-0.000622642) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.493593,-4.23585e-05) , 
0.615988, 1, 17, 0, 0.52231,-0.0315109) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.340392,0.000278331) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0561788,0.0048882) , 
0.483354, 0, 14, 0, 0.295212,0.182887) , 
0.0461831, 1, 0, 0, 0.396276,0.0874741) , 
0.770025, 0, 14, 0, 0.468693,0.0209345)    );
  // itree = 39
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.799374,-0.000664679) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.553206,-0.000201645) , 
1.71695, 0, 7, 0, 0.62182,-0.117552) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701199,-4.17376e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.288153,0.00127841) , 
0.371325, 0, 4, 0, 0.507221,-0.0296196) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.31681,0.000672572) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.124642,0.00142694) , 
0.400154, 1, 16, 0, 0.240609,0.229604) , 
1.79482, 0, 11, 0, 0.291418,0.180203) , 
0.66057, 0, 14, 0, 0.491102,0.000250018)    );
  // itree = 40
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721322,-0.000430081) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.468517,-9.13726e-05) , 
0.305542, 1, 16, 0, 0.670077,-0.164732) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.768181,-0.000463005) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251965,-0.000308607) , 
-0.12332, 0, 5, 0, 0.665662,-0.178005) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.392938,0.000359295) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201497,0.00175012) , 
0.116475, 0, 15, 0, 0.308225,0.167276) , 
2.03864, 0, 7, 0, 0.338751,0.137788) , 
0.695491, 0, 14, 0, 0.51057,-0.0190927)    );
  // itree = 41
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.669785,-0.000341015) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.324953,0.000337847) , 
0.304007, 0, 2, 0, 0.629316,-0.124921) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.400007,0.000600789) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0839162,0.000661855) , 
0.870008, 1, 2, 0, 0.357145,0.117042) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.618103,0.00109392) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0507293,0.00457522) , 
0.0227127, 1, 12, 0, 0.0670103,0.387352) , 
0.49378, 0, 14, 0, 0.303228,0.167275) , 
0.66057, 0, 14, 0, 0.500688,-0.00966171)    );
  // itree = 42
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661458,-0.000320418) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.397013,0.000153205) , 
0.394354, 1, 16, 0, 0.624812,-0.121861) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.619899,0.000113062) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212261,0.0027771) , 
-0.370756, 0, 5, 0, 0.528053,-0.0541238) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670739,-0.000148401) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.203057,0.00180321) , 
2.81052, 0, 8, 0, 0.246946,0.217964) , 
1.49583, 0, 11, 0, 0.346786,0.121327) , 
0.636907, 0, 14, 0, 0.527994,-0.0371747)    );
  // itree = 43
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.84408,-0.000447546) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.571695,-0.00027371) , 
0.907192, 0, 2, 0, 0.606617,-0.102097) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.896642,-0.000569694) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.368708,0.000455537) , 
0.812079, 1, 17, 0, 0.742242,-0.264298) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.596302,-0.000170807) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212313,0.00107588) , 
0.357501, 0, 12, 0, 0.241749,0.225623) , 
0.0941557, 1, 16, 0, 0.272519,0.195503) , 
0.659385, 0, 14, 0, 0.476333,0.0139541)    );
  // itree = 44
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.79408,-0.000573108) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.602491,-0.000309273) , 
-0.866644, 1, 4, 0, 0.662954,-0.157054) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.81575,-0.000435764) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.338541,-0.000336722) , 
0.130096, 1, 12, 0, 0.661071,-0.174308) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.464577,9.9523e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209212,0.00103714) , 
0.171283, 0, 15, 0, 0.309323,0.166554) , 
1.85243, 0, 7, 0, 0.358264,0.119128) , 
0.712209, 0, 14, 0, 0.496736,-0.00638816)    );
  // itree = 45
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661715,-0.000340312) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.379986,1.78485e-05) , 
0.342673, 1, 16, 0, 0.609234,-0.105552) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.97227,-0.00112376) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.111425,0.116297) , 
1.36046, 0, 3, 0, 0.804485,-0.331838) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683745,-0.000364938) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.217196,0.00124877) , 
2.54204, 0, 11, 0, 0.242432,0.222355) , 
2.35224, 0, 5, 0, 0.263126,0.20195) , 
0.645919, 0, 14, 0, 0.483648,0.00602594)    );
  // itree = 46
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76944,-0.000372937) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.496153,-0.000300383) , 
0.499663, 0, 2, 0, 0.653189,-0.147045) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749283,-0.000487071) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.197367,0.00180034) , 
0.0790425, 0, 15, 0, 0.632785,-0.141766) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.340808,0.000785081) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129188,0.000835494) , 
0.181918, 1, 0, 0, 0.285827,0.18685) , 
1.87017, 0, 7, 0, 0.328864,0.146088) , 
0.706903, 0, 14, 0, 0.486962,0.00319536)    );
  // itree = 47
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.748156,-0.000349436) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.57608,-0.000251465) , 
0.545816, 0, 2, 0, 0.66266,-0.157029) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.651712,-9.29384e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270745,0.00104139) , 
1.19628, 1, 18, 0, 0.46966,0.00435716) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.410289,0.000300861) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158857,0.00127613) , 
0.221222, 1, 16, 0, 0.22129,0.24602) , 
1.49593, 0, 11, 0, 0.301051,0.168413) , 
0.677906, 0, 14, 0, 0.5121,-0.0215271)    );
  // itree = 48
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676159,-0.000367736) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.39414,0.000969891) , 
0.115532, 0, 15, 0, 0.61077,-0.11444) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.841146,-0.000292319) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.297128,0.000173119) , 
2.14406, 1, 10, 0, 0.468876,0.00768242) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.503092,0.0002361) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.210826,0.00115666) , 
0.82853, 0, 13, 0, 0.279532,0.196773) , 
2.09404, 0, 10, 0, 0.327347,0.149022) , 
0.309515, 1, 16, 0, 0.501404,-0.0127763)    );
  // itree = 49
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712592,-0.000396073) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.431631,-6.73873e-05) , 
0.29624, 0, 1, 0, 0.63331,-0.126775) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.964683,-0.00064524) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.453887,-0.00033429) , 
0.326165, 0, 15, 0, 0.571891,-0.083775) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.385481,6.99091e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209592,0.00106641) , 
2.09438, 0, 10, 0, 0.251824,0.220234) , 
1.87012, 0, 7, 0, 0.290961,0.183061) , 
0.709799, 0, 14, 0, 0.452274,0.0370678)    );
  // itree = 50
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.690905,-0.000431003) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.425298,-0.000101408) , 
0.740007, 0, 7, 0, 0.607643,-0.102101) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.765072,-0.000471396) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.405271,0.000847704) , 
0.684972, 0, 1, 0, 0.486808,-0.0120464) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.581489,0.000182779) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180493,0.00102032) , 
1.94358, 0, 11, 0, 0.239799,0.224471) , 
0.0451829, 1, 0, 0, 0.322932,0.144869) , 
0.67165, 0, 14, 0, 0.479947,0.00866818)    );
  // itree = 51
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692242,-0.000424305) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.512715,-0.00022993) , 
0.273076, 1, 15, 0, 0.633559,-0.127229) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.592073,4.13568e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0860928,0.000248116) , 
0.53247, 1, 16, 0, 0.533072,-0.0550104) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.557701,0.000499632) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.235495,0.000923509) , 
2.99385, 0, 9, 0, 0.285154,0.184596) , 
2.09446, 0, 10, 0, 0.354079,0.117982) , 
0.697055, 0, 14, 0, 0.491204,-0.00232949)    );
  // itree = 52
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.865806,-0.000739924) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.563785,-0.000149462) , 
2.13378, 0, 7, 0, 0.598166,-0.100948) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.901684,-0.000520692) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363677,0.00277108) , 
0.299899, 1, 10, 0, 0.59814,-0.124303) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.602055,0.00021889) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.156715,0.00162485) , 
0.748998, 0, 14, 0, 0.200748,0.26319) , 
-1.11438, 1, 4, 0, 0.299638,0.166764) , 
0.116474, 0, 15, 0, 0.522083,-0.0327192)    );
  // itree = 53
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.726011,-0.000606823) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.515865,-0.00015088) , 
0.123988, 1, 16, 0, 0.575222,-0.0718953) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.915279,-0.000551946) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.280017,0.00183807) , 
0.705196, 0, 1, 0, 0.45984,0.00473982) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.315455,0.000899404) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.1261,0.00138684) , 
0.371349, 0, 5, 0, 0.20983,0.250777) , 
0.598354, 1, 10, 0, 0.270607,0.190966) , 
0.636914, 0, 14, 0, 0.465542,0.0227514)    );
  // itree = 54
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628628,-0.000274955) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.454255,-0.000257112) , 
-0.12381, 0, 5, 0, 0.56382,-0.0607543) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.483093,2.33463e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.240488,0.00115522) , 
0.36115, 1, 16, 0, 0.354868,0.114967) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.427217,0.000679698) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0964666,0.00327981) , 
0.776592, 1, 17, 0, 0.129038,0.315881) , 
0.0909793, 0, 15, 0, 0.272725,0.188047) , 
0.636325, 0, 14, 0, 0.459006,0.0288305)    );
  // itree = 55
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.605789,-0.00025231) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.384169,0.000129726) , 
0.484283, 0, 7, 0, 0.549096,-0.0543566) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686602,-0.000647176) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.176229,0.000493454) , 
2.54577, 0, 9, 0, 0.466257,-0.000836112) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.583524,0.000228432) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0752434,0.00342036) , 
-2.35236, 1, 5, 0, 0.0878795,0.362018) , 
0.758415, 1, 17, 0, 0.134113,0.317681) , 
0.0887553, 0, 15, 0, 0.487737,0.000652235)    );
  // itree = 56
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682196,-0.000328025) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.294249,0.000387439) , 
0.122945, 1, 0, 0, 0.655858,-0.150013) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.569702,-8.51167e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.261968,0.0011052) , 
0.496762, 1, 13, 0, 0.443881,0.0248377) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.520223,0.000449678) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134005,0.00154223) , 
0.226912, 0, 15, 0, 0.208664,0.250736) , 
2.09445, 0, 10, 0, 0.273587,0.188385) , 
0.659385, 0, 14, 0, 0.513595,-0.0240774)    );
  // itree = 57
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.6323,-0.00033139) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.36359,0.000302624) , 
0.353236, 1, 16, 0, 0.552711,-0.0556709) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.724736,-0.000724484) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202724,0.00133225) , 
0.0177684, 1, 6, 0, 0.57676,-0.0965859) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.34007,0.000506449) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125983,0.00305222) , 
2.09437, 0, 10, 0, 0.179301,0.277933) , 
2.17079, 0, 7, 0, 0.224729,0.235128) , 
0.115759, 0, 15, 0, 0.469052,0.0185031)    );
  // itree = 58
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.716181,-0.000336972) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.519354,-0.000410493) , 
2.24397, 0, 9, 0, 0.64833,-0.140746) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.835084,-0.000582402) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0686495,0.0112665) , 
0.437819, 0, 2, 0, 0.770566,-0.284443) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.675429,-0.000478273) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.293538,0.000362942) , 
2.12179, 0, 7, 0, 0.327552,0.145998) , 
2.54266, 0, 11, 0, 0.355466,0.118876) , 
0.731408, 0, 14, 0, 0.470147,0.0172122)    );
  // itree = 59
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69976,-0.000365147) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.46944,-2.53363e-05) , 
0.305602, 1, 16, 0, 0.640001,-0.136031) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.457679,0.000424148) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212961,0.00111147) , 
0.124045, 1, 3, 0, 0.373338,0.0975887) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.408367,0.000395411) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0820096,0.0016885) , 
2.40796, 0, 8, 0, 0.129281,0.317711) , 
0.118688, 0, 15, 0, 0.24833,0.210337) , 
0.636325, 0, 14, 0, 0.516648,-0.0269457)    );
  // itree = 60
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.762597,-0.000530769) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.55234,-0.000223556) , 
1.22816, 0, 7, 0, 0.649401,-0.141568) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.59999,-1.18903e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.364063,0.000591449) , 
0.72129, 1, 8, 0, 0.442088,0.0338885) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.273303,0.000700682) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0839042,0.000647708) , 
1.02993, 1, 8, 0, 0.212904,0.248788) , 
0.0393462, 1, 6, 0, 0.348748,0.121411) , 
0.706903, 0, 14, 0, 0.491797,-0.00371283)    );
  // itree = 61
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682208,-0.000310002) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.447641,1.68596e-05) , 
0.299674, 0, 1, 0, 0.627661,-0.123655) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.43117,0.000537358) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0425603,0.046494) , 
0.458827, 0, 14, 0, 0.396373,0.0649627) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689511,-0.000236027) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.120974,0.00155348) , 
0.449854, 1, 9, 0, 0.151015,0.301932) , 
0.6462, 0, 7, 0, 0.302384,0.155739) , 
0.63667, 0, 14, 0, 0.517912,-0.0293872)    );
  // itree = 62
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.854972,-0.000691867) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.578342,-0.000222898) , 
2.22004, 0, 7, 0, 0.61862,-0.114082) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647601,-0.000169517) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180224,0.00499465) , 
0.0887341, 0, 15, 0, 0.512711,-0.0489235) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.378224,0.000665789) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160279,0.00216315) , 
1.34588, 0, 11, 0, 0.251631,0.203336) , 
1.06112, 1, 17, 0, 0.308319,0.148564) , 
0.642489, 0, 14, 0, 0.5095,-0.0217202)    );
  // itree = 63
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695202,-0.000458927) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.497678,-6.61575e-05) , 
1.19381, 0, 7, 0, 0.56732,-0.0706953) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.922566,-0.000307447) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.248129,0.00142494) , 
2.1445, 1, 10, 0, 0.546501,-0.084959) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.411417,-5.85643e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0973403,0.00416851) , 
1.04803, 1, 17, 0, 0.181242,0.272199) , 
2.09436, 0, 10, 0, 0.295977,0.160008) , 
0.115897, 0, 15, 0, 0.494783,-0.00902247)    );
  // itree = 64
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686103,-0.000365778) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152662,0.000843467) , 
0.211211, 0, 2, 0, 0.666795,-0.158459) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.644256,-7.8575e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209828,0.000453572) , 
0.458486, 0, 7, 0, 0.574473,-0.100975) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.499487,0.000102376) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186393,0.00143524) , 
0.171585, 0, 15, 0, 0.312694,0.154333) , 
2.09436, 0, 10, 0, 0.389574,0.0793531) , 
0.708182, 0, 14, 0, 0.516447,-0.0294844)    );
  // itree = 65
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677876,-0.000335563) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.336015,-0.000517014) , 
1.36191, 1, 5, 0, 0.658189,-0.15011) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.449414,-2.91908e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.155328,0.00175124) , 
0.230916, 1, 0, 0, 0.400276,0.0814051) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.568677,0.000237616) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.105985,0.0018808) , 
2.64875, 0, 8, 0, 0.157912,0.28876) , 
0.116291, 0, 15, 0, 0.300572,0.166707) , 
0.705384, 0, 14, 0, 0.479157,0.00849685)    );
  // itree = 66
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731655,-0.000457295) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.520665,-0.000116082) , 
0.74025, 0, 7, 0, 0.66445,-0.156033) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.855351,-0.000724066) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.471665,-0.000125701) , 
0.0182179, 1, 0, 0, 0.713213,-0.227618) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.524097,-8.42986e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233306,0.00096828) , 
0.306045, 0, 15, 0, 0.278845,0.18344) , 
2.08398, 0, 7, 0, 0.321369,0.143199) , 
0.694671, 0, 14, 0, 0.499346,-0.0120306)    );
  // itree = 67
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.651598,-0.000348808) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.4489,7.18164e-05) , 
0.702865, 0, 7, 0, 0.571381,-0.0748683) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.862862,-0.00150654) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.332748,-0.00052404) , 
0.124065, 0, 5, 0, 0.769898,-0.287131) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.411672,0.00035485) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.14201,0.00338756) , 
0.489838, 1, 8, 0, 0.224596,0.227189) , 
2.71341, 0, 7, 0, 0.262516,0.191424) , 
0.11583, 0, 15, 0, 0.491327,-0.00584845)    );
  // itree = 68
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702635,-0.000332499) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.496387,-0.000124804) , 
0.449437, 0, 2, 0, 0.634339,-0.127663) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.853319,-0.000656766) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0899505,0.0143788) , 
-0.371374, 0, 5, 0, 0.773754,-0.297546) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.562629,0.000504808) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236943,0.000941692) , 
3.0205, 0, 9, 0, 0.271724,0.182981) , 
0.598849, 1, 9, 0, 0.309243,0.147069) , 
0.659126, 0, 14, 0, 0.504594,-0.018018)    );
  // itree = 69
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.786057,-0.000624824) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.548093,-0.000193293) , 
0.115342, 1, 16, 0, 0.620684,-0.113723) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.565816,0.000243765) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.301617,0.000887496) , 
0.0640632, 0, 6, 0, 0.397672,0.0623734) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.331958,0.00669864) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0684626,0.00159262) , 
0.280163, 0, 15, 0, 0.113102,0.334196) , 
0.489368, 1, 16, 0, 0.334352,0.122857) , 
0.66057, 0, 14, 0, 0.502109,-0.0157509)    );
  // itree = 70
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.811005,-0.000699214) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.551867,-0.000216982) , 
1.93871, 0, 7, 0, 0.607676,-0.100754) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.893362,-0.000749827) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0886101,-0.000261883) , 
1.37498, 0, 8, 0, 0.78238,-0.304331) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.286751,0.000654535) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.111071,0.00132429) , 
0.357921, 1, 16, 0, 0.198879,0.254054) , 
0.622946, 1, 17, 0, 0.235773,0.218747) , 
0.659126, 0, 14, 0, 0.464971,0.0218442)    );
  // itree = 71
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.725232,-0.000346993) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.520587,-0.000144293) , 
0.454869, 0, 2, 0, 0.651778,-0.143805) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.928865,-0.000648464) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0246227,0.0486412) , 
0.199923, 0, 15, 0, 0.764885,-0.30595) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.649712,-8.53572e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256735,0.000776849) , 
0.498778, 0, 15, 0, 0.282716,0.17467) , 
0.233886, 0, 6, 0, 0.304381,0.153074) , 
0.675948, 0, 14, 0, 0.505538,-0.0188312)    );
  // itree = 72
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728523,-0.000482605) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.496985,-0.000112134) , 
1.23339, 0, 7, 0, 0.596391,-0.0916433) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.783781,-0.000496496) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0825002,0.0258683) , 
0.574172, 1, 2, 0, 0.624719,-0.163343) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.606882,-0.000439353) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168599,0.00125727) , 
2.54281, 0, 11, 0, 0.190731,0.257255) , 
2.62971, 0, 8, 0, 0.23467,0.214672) , 
0.63667, 0, 14, 0, 0.474649,0.011451)    );
  // itree = 73
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.770184,-0.000654226) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.544252,-0.00020976) , 
1.72668, 0, 7, 0, 0.602976,-0.0951519) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.620436,-7.94235e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.299178,0.00130921) , 
1.49557, 0, 11, 0, 0.417634,0.0427496) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.920589,-0.00141664) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175879,0.000836963) , 
2.10459, 0, 5, 0, 0.19675,0.255452) , 
1.19299, 1, 18, 0, 0.296667,0.159236) , 
0.671908, 0, 14, 0, 0.466987,0.017786)    );
  // itree = 74
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730131,-0.000510567) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.513601,-0.000150495) , 
0.786889, 0, 14, 0, 0.606745,-0.101718) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.737782,-0.000281921) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171705,0.0231883) , 
0.927162, 0, 7, 0, 0.606924,-0.15025) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.417793,9.28791e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158842,0.00140673) , 
2.3937, 0, 10, 0, 0.201056,0.246347) , 
2.40796, 0, 8, 0, 0.26308,0.18574) , 
0.636907, 0, 14, 0, 0.490854,-0.0047812)    );
  // itree = 75
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.768461,-0.000373892) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.574714,-0.00027861) , 
0.545173, 0, 2, 0, 0.662536,-0.152702) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.890424,-0.000638856) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0211501,-0.000145874) , 
0.589014, 0, 14, 0, 0.807414,-0.319565) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.36498,0.000225401) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.120393,0.00294375) , 
0.0915319, 0, 15, 0, 0.29475,0.166708) , 
0.609835, 1, 17, 0, 0.332301,0.13109) , 
0.708182, 0, 14, 0, 0.491773,-0.00595498)    );
  // itree = 76
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.912703,-0.000317292) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.586309,-0.000283834) , 
0.46423, 0, 15, 0, 0.615738,-0.125874) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722923,-0.000303458) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.460467,-0.000157061) , 
1.32374, 1, 17, 0, 0.557403,-0.0496416) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575596,-1.20319e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.206536,0.0012704) , 
2.3935, 0, 10, 0, 0.271831,0.184466) , 
0.702336, 0, 14, 0, 0.391837,0.0860868) , 
0.982437, 0, 7, 0, 0.499345,-0.0156886)    );
  // itree = 77
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705728,-0.000329244) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.503649,-0.000123963) , 
0.452704, 0, 2, 0, 0.634352,-0.12709) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.842489,-0.000335977) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.400147,0.000252946) , 
0.241302, 1, 8, 0, 0.518742,-0.0548141) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.45093,0.000302688) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.177004,0.00120295) , 
1.34634, 1, 9, 0, 0.221746,0.226579) , 
1.37088, 0, 7, 0, 0.297534,0.154773) , 
0.659385, 0, 14, 0, 0.502502,-0.016753)    );
  // itree = 78
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683967,-0.000398611) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.459679,-3.55598e-05) , 
0.740007, 0, 7, 0, 0.609805,-0.104565) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.640571,-4.28664e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.111314,0.00537623) , 
0.341744, 1, 16, 0, 0.480408,-0.0324168) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647489,-0.000448956) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.169541,0.00125543) , 
0.5984, 1, 9, 0, 0.209287,0.237696) , 
0.748069, 1, 10, 0, 0.294312,0.152988) , 
0.637994, 0, 14, 0, 0.501999,-0.0165576)    );
  // itree = 79
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.651264,-0.000361102) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.376683,0.00014151) , 
0.350379, 0, 2, 0, 0.595474,-0.0870047) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.98266,-0.000665218) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.362206,0.000659697) , 
0.955542, 0, 2, 0, 0.881423,-0.394738) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.332526,0.00040974) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.130937,0.00111634) , 
0.35865, 1, 16, 0, 0.237025,0.215087) , 
-2.1037, 1, 3, 0, 0.263732,0.189813) , 
0.679035, 0, 14, 0, 0.447719,0.0362874)    );
  // itree = 80
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661604,-0.000361843) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.332957,0.000794085) , 
0.11583, 0, 15, 0, 0.590636,-0.095633) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.923388,-0.000404074) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.397443,0.000433548) , 
0.369386, 0, 0, 0, 0.433189,0.0377494) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639545,-0.000450858) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159128,0.000798282) , 
0.832419, 0, 14, 0, 0.197316,0.262386) , 
0.455289, 1, 16, 0, 0.334232,0.131992) , 
0.308582, 1, 16, 0, 0.490044,-0.00633203)    );
  // itree = 81
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.725372,-0.000418682) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.540561,-0.000143866) , 
1.2023, 1, 17, 0, 0.611382,-0.10895) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.529208,0.000174581) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265031,0.000727251) , 
1.04451, 1, 18, 0, 0.366392,0.0820809) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.607243,-0.000432565) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127157,0.00140215) , 
2.10466, 0, 5, 0, 0.156919,0.283273) , 
1.79166, 0, 17, 0, 0.238346,0.205065) , 
0.62241, 0, 14, 0, 0.502855,-0.0175939)    );
  // itree = 82
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.648382,-0.00031446) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.385491,0.000187558) , 
0.357681, 0, 2, 0, 0.600414,-0.095518) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.597453,0.000204616) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.303974,0.000491613) , 
0.671494, 1, 8, 0, 0.461186,-0.00842359) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.821862,-0.000619468) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187465,0.00142481) , 
2.3522, 0, 5, 0, 0.212689,0.227421) , 
1.4958, 0, 11, 0, 0.295394,0.148928) , 
0.635983, 0, 14, 0, 0.493627,-0.00993822)    );
  // itree = 83
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.726803,-0.000377085) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.483824,-4.36661e-05) , 
0.293382, 0, 1, 0, 0.665031,-0.154636) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67524,-0.00032023) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183068,0.00128064) , 
0.0891404, 1, 0, 0, 0.559732,-0.0733443) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729892,-0.000505243) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.250051,0.00074463) , 
-1.85658, 1, 3, 0, 0.273094,0.178514) , 
0.306117, 0, 15, 0, 0.319259,0.137951) , 
0.695771, 0, 14, 0, 0.499305,-0.0144019)    );
  // itree = 84
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.757629,-0.000644577) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.525729,-0.00019001) , 
1.71696, 0, 7, 0, 0.58809,-0.079907) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.813819,-0.000864171) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.345143,0.00027357) , 
0.222136, 1, 1, 0, 0.373821,0.0791703) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.723455,0.000192539) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.141937,0.00149513) , 
0.861537, 0, 1, 0, 0.177062,0.265999) , 
0.935232, 0, 7, 0, 0.257201,0.189905) , 
0.659385, 0, 14, 0, 0.45412,0.0293338)    );
  // itree = 85
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.748829,-0.000633601) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388095,6.78293e-05) , 
0.0159709, 1, 0, 0, 0.706524,-0.200865) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.499107,-0.000131628) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.291747,0.000345761) , 
0.136439, 1, 0, 0, 0.449657,0.0375984) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.803629,-0.000644006) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.131836,0.00265793) , 
0.319421, 1, 14, 0, 0.147098,0.280526) , 
0.0909954, 0, 15, 0, 0.392314,0.08364) , 
0.132943, 1, 16, 0, 0.464818,0.01799)    );
  // itree = 86
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647529,-0.00032929) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.365695,0.000231899) , 
0.135318, 0, 15, 0, 0.611383,-0.103179) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.624006,-0.000126488) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.296038,0.000516527) , 
-0.632869, 1, 4, 0, 0.526455,-0.0689882) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.857433,-0.000887287) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192244,0.00112905) , 
0.442827, 0, 12, 0, 0.201845,0.241662) , 
1.06112, 1, 17, 0, 0.277477,0.169282) , 
0.66057, 0, 14, 0, 0.478664,0.00511651)    );
  // itree = 87
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683555,-0.000313977) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.510329,-9.55242e-05) , 
0.454199, 0, 2, 0, 0.620783,-0.11548) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703276,-1.44376e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.365445,0.00063254) , 
0.351467, 1, 13, 0, 0.489044,-0.0353175) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.301482,0.00103096) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.062704,0.0018881) , 
0.138549, 1, 0, 0, 0.21863,0.220491) , 
1.49584, 0, 11, 0, 0.311767,0.132384) , 
0.641353, 0, 14, 0, 0.510343,-0.0268948)    );
  // itree = 88
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687398,-0.000326696) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.439618,-0.000213208) , 
0.358863, 0, 1, 0, 0.590007,-0.0807115) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.614888,-0.000162527) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184778,0.00161448) , 
1.17749, 1, 17, 0, 0.447157,0.00829549) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663328,-0.000351998) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192187,0.000968115) , 
0.233886, 0, 6, 0, 0.211729,0.23448) , 
-0.618984, 1, 4, 0, 0.296241,0.153286) , 
0.669977, 0, 14, 0, 0.459482,0.0232572)    );
  // itree = 89
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.697201,-0.000303748) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.509169,-0.000155517) , 
0.536001, 0, 2, 0, 0.614906,-0.109716) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.596277,-4.77847e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.21791,0.00103283) , 
0.0332079, 1, 6, 0, 0.428272,0.0210302) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.632685,-0.000473465) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.119088,0.0014924) , 
0.598491, 1, 9, 0, 0.155873,0.279665) , 
0.93514, 0, 7, 0, 0.277297,0.164377) , 
0.634579, 0, 14, 0, 0.502954,-0.0188263)    );
  // itree = 90
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.675062,-0.000357865) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.439566,0.0002059) , 
0.31021, 1, 16, 0, 0.588439,-0.0910529) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.956719,-0.00068476) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.156595,0.00394132) , 
0.86777, 0, 2, 0, 0.805549,-0.32887) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.587194,-0.000732563) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.15886,0.00195794) , 
0.615901, 1, 17, 0, 0.192824,0.247161) , 
-1.85666, 1, 3, 0, 0.245292,0.197835) , 
0.11583, 0, 15, 0, 0.505742,-0.021432)    );
  // itree = 91
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69184,-0.000425493) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.460331,-8.78763e-05) , 
0.97586, 0, 7, 0, 0.587617,-0.0822714) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.681391,-0.000523709) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0952765,0.00186793) , 
0.571067, 0, 14, 0, 0.477814,-0.0259642) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.264988,0.00109485) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0975762,0.00109013) , 
0.563746, 0, 13, 0, 0.199481,0.23897) , 
-1.36175, 1, 4, 0, 0.235591,0.204598) , 
0.637994, 0, 14, 0, 0.464646,0.0179393)    );
  // itree = 92
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761596,-0.000472673) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.584931,-0.00026739) , 
1.05974, 1, 17, 0, 0.637833,-0.126691) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.819671,-0.000579742) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0592159,0.0499524) , 
0.450477, 0, 2, 0, 0.7569,-0.281192) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.359199,0.000341029) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145278,0.00141548) , 
0.467528, 0, 7, 0, 0.296101,0.155673) , 
0.598413, 1, 9, 0, 0.328742,0.124727) , 
0.697055, 0, 14, 0, 0.484165,-0.00169544)    );
  // itree = 93
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.743248,-0.000379225) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.502273,-2.32374e-05) , 
0.295902, 0, 1, 0, 0.679843,-0.16836) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.474622,0.000139185) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256998,0.000981579) , 
0.435365, 0, 7, 0, 0.415822,0.044311) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.2924,0.0016509) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0462613,0.0160438) , 
1.8527, 0, 7, 0, 0.0864665,0.325021) , 
0.0630092, 0, 15, 0, 0.373349,0.0805114) , 
0.697055, 0, 14, 0, 0.529936,-0.0466368)    );
  // itree = 94
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.68535,-0.0003115) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.458829,-7.64114e-05) , 
0.308635, 0, 1, 0, 0.625612,-0.118467) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.84103,-0.000632828) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340587,0.00193978) , 
0.675008, 1, 13, 0, 0.568226,-0.121023) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683887,-0.000220611) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251421,0.00114014) , 
0.236078, 0, 6, 0, 0.268749,0.170814) , 
0.299169, 1, 10, 0, 0.305986,0.134528) , 
0.645713, 0, 14, 0, 0.509816,-0.0268108)    );
  // itree = 95
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695221,-0.000338067) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.390671,-5.57038e-05) , 
0.308288, 0, 1, 0, 0.61686,-0.106602) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.811571,-0.000465968) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378938,0.00038072) , 
0.651655, 0, 14, 0, 0.454896,0.000539561) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.342158,0.00042869) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.150207,0.00104916) , 
0.855005, 1, 10, 0, 0.224942,0.217712) , 
2.24404, 0, 10, 0, 0.273521,0.171834) , 
0.671644, 0, 14, 0, 0.471651,0.0111575)    );
  // itree = 96
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67493,-0.000380418) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.452697,5.3119e-06) , 
0.740047, 0, 7, 0, 0.598896,-0.095137) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.880837,-0.00069951) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.122886,-3.50968e-05) , 
0.398814, 0, 9, 0, 0.728088,-0.266233) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.468029,0.000717685) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204444,0.00109431) , 
0.0452299, 1, 0, 0, 0.27924,0.156583) , 
0.59885, 1, 9, 0, 0.309815,0.127781) , 
0.62241, 0, 14, 0, 0.504284,-0.0221792)    );
  // itree = 97
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694355,-0.000338971) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.373884,0.000194411) , 
0.357663, 0, 2, 0, 0.63631,-0.126185) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.518644,7.1137e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113787,0.00128253) , 
0.0910148, 0, 15, 0, 0.408265,0.0360452) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.873967,-0.000861524) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.188693,0.0012402) , 
0.47587, 1, 17, 0, 0.211534,0.22919) , 
0.722525, 1, 8, 0, 0.290713,0.151454) , 
0.66057, 0, 14, 0, 0.500625,-0.0171803)    );
  // itree = 98
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.68663,-0.00032023) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.381073,0.000461436) , 
0.398757, 1, 16, 0, 0.624372,-0.123399) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.606193,-0.000323101) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.230601,0.00173364) , 
0.0852212, 0, 15, 0, 0.502871,-0.0306963) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.541816,-0.00012688) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138843,0.000915258) , 
1.79509, 0, 11, 0, 0.217023,0.227793) , 
0.981187, 0, 7, 0, 0.363867,0.0950036) , 
0.170467, 0, 15, 0, 0.510653,-0.0280591)    );
  // itree = 99
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.662752,-0.000334272) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.45051,0.000284186) , 
0.317766, 0, 2, 0, 0.626577,-0.116397) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.619038,-0.000338772) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.351559,0.000502806) , 
-1.36166, 1, 4, 0, 0.386546,0.0662063) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.120687,0.0154693) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0302999,0.0110126) , 
2.4349, 0, 8, 0, 0.0404994,0.358704) , 
0.0638596, 0, 15, 0, 0.337082,0.108016) , 
0.669886, 0, 14, 0, 0.50125,-0.0192451)    );
  // itree = 100
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.708845,-0.000475752) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.360461,0.000465623) , 
0.115588, 0, 15, 0, 0.641953,-0.142735) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653338,-0.000161314) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0844345,0.00113146) , 
0.902838, 0, 18, 0, 0.593667,-0.124802) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.447781,-0.000127453) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.20956,0.000455304) , 
1.02352, 0, 7, 0, 0.281564,0.183191) , 
2.09432, 0, 10, 0, 0.371997,0.0939496) , 
0.22056, 1, 16, 0, 0.489256,-0.00885752)    );
  // itree = 101
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749546,-0.000382627) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.39844,0.000253612) , 
0.686183, 0, 14, 0, 0.652953,-0.155378) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.753803,-0.000465131) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.329109,0.000225577) , 
1.35507, 0, 7, 0, 0.39123,0.0912477) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.511817,3.8357e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0830513,0.00148676) , 
2.54202, 0, 10, 0, 0.143879,0.284672) , 
0.146177, 0, 15, 0, 0.287226,0.172577) , 
0.308677, 1, 16, 0, 0.527148,-0.0425656)    );
  // itree = 102
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7871,-0.000601746) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.568749,-0.000248027) , 
0.115375, 1, 16, 0, 0.644967,-0.132101) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721489,-0.000192023) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221753,0.000552744) , 
1.50967, 1, 17, 0, 0.566316,-0.108813) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.581707,-0.000409457) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257369,0.000841892) , 
1.77628, 0, 7, 0, 0.301217,0.15152) , 
2.39357, 0, 10, 0, 0.345217,0.108311) , 
0.706903, 0, 14, 0, 0.485215,-0.00397371)    );
  // itree = 103
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.808843,-0.000666969) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.504395,-9.25087e-05) , 
1.93872, 0, 7, 0, 0.552647,-0.0606175) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742279,-0.000720667) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.36902,0.00112722) , 
-0.371696, 1, 4, 0, 0.58543,-0.109092) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.380145,0.000114902) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.104095,0.00688435) , 
0.0828759, 0, 15, 0, 0.155725,0.261689) , 
0.0801208, 1, 16, 0, 0.187328,0.23442) , 
0.0905444, 0, 15, 0, 0.492899,-0.0123641)    );
  // itree = 104
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.805859,-0.000661734) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.581874,-0.000190213) , 
1.9622, 0, 7, 0, 0.621975,-0.11436) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.582273,-0.000199421) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322296,0.000779304) , 
1.2815, 0, 7, 0, 0.3881,0.0634744) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.809049,-0.00187446) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0779921,0.00225449) , 
3.82506, 0, 8, 0, 0.0888841,0.312253) , 
0.0900775, 0, 15, 0, 0.289164,0.145733) , 
0.643347, 0, 14, 0, 0.504294,-0.022392)    );
  // itree = 105
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767556,-0.000589007) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530223,-0.000143916) , 
0.123988, 1, 16, 0, 0.603725,-0.0968615) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.711233,-0.000487947) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192536,0.00101881) , 
0.0305142, 1, 6, 0, 0.555964,-0.107736) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.467251,3.63893e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172391,0.00131672) , 
2.39357, 0, 10, 0, 0.224538,0.205323) , 
1.62093, 0, 7, 0, 0.280826,0.152154) , 
0.63667, 0, 14, 0, 0.491722,-0.0104859)    );
  // itree = 106
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704986,-0.000380141) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.518191,-2.69331e-05) , 
0.29624, 0, 1, 0, 0.646394,-0.133484) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.623281,-5.57001e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.365236,0.000377915) , 
0.913003, 0, 2, 0, 0.416565,0.039742) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.821734,-0.000675505) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.142284,0.00123942) , 
0.799949, 0, 16, 0, 0.166891,0.267735) , 
0.474571, 1, 16, 0, 0.362114,0.0894645) , 
0.706903, 0, 14, 0, 0.493745,-0.0137677)    );
  // itree = 107
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695786,-0.000349944) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.529777,-0.000185703) , 
0.747998, 1, 11, 0, 0.607095,-0.101253) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.516085,0.000241743) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.272476,0.000943739) , 
0.0869398, 0, 6, 0, 0.32451,0.110372) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.852175,-0.00279376) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0907163,0.00148193) , 
0.422628, 0, 12, 0, 0.101322,0.320568) , 
0.490134, 1, 16, 0, 0.269456,0.162222) , 
0.637994, 0, 14, 0, 0.491621,-0.0111436)    );
  // itree = 108
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.751325,-0.00060305) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.48213,-5.57926e-05) , 
1.71931, 0, 7, 0, 0.549065,-0.0537539) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.838638,-0.000783201) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0598034,0.026632) , 
2.84312, 1, 10, 0, 0.713588,-0.259533) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.437846,0.000245876) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.120594,0.00110068) , 
0.299289, 1, 10, 0, 0.152198,0.268107) , 
2.54219, 0, 11, 0, 0.189616,0.232939) , 
0.573846, 0, 14, 0, 0.474344,0.00584216)    );
  // itree = 109
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.675479,-0.000329617) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.39911,0.000229935) , 
0.142955, 0, 15, 0, 0.586064,-0.093971) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691331,-0.000443808) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.284229,0.00111575) , 
0.865799, 0, 7, 0, 0.459829,0.0184752) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.348103,0.00014945) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.111162,0.00116091) , 
0.394882, 1, 8, 0, 0.176381,0.271109) , 
0.0461831, 1, 0, 0, 0.246126,0.208946) , 
0.347444, 1, 16, 0, 0.482127,-0.00135317)    );
  // itree = 110
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764313,-0.000580085) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363157,-0.000477588) , 
0.223997, 0, 1, 0, 0.733893,-0.227199) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.633854,-0.000363408) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.474959,-3.4154e-05) , 
-0.866395, 1, 4, 0, 0.515279,-0.0254985) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.530279,0.000299684) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.130613,0.00203303) , 
2.09384, 0, 10, 0, 0.256241,0.170358) , 
0.117809, 0, 15, 0, 0.439034,0.03215) , 
0.129571, 1, 16, 0, 0.507627,-0.0281822)    );
  // itree = 111
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.766822,-0.000545781) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.555422,-0.000163118) , 
0.158157, 1, 16, 0, 0.646045,-0.135372) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.819314,-0.000545705) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165559,0.000652661) , 
0.607873, 0, 14, 0, 0.61373,-0.154482) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.331286,0.000454754) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160101,0.00275307) , 
1.79146, 1, 18, 0, 0.267688,0.167265) , 
1.85243, 0, 7, 0, 0.310105,0.127826) , 
0.659126, 0, 14, 0, 0.517218,-0.0344404)    );
  // itree = 112
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672818,-0.000336535) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.315615,0.000147336) , 
0.394143, 1, 16, 0, 0.633732,-0.122329) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.656044,-0.00038089) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198826,0.000758692) , 
0.608747, 1, 2, 0, 0.530623,-0.0879227) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.417083,0.000133668) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.197034,0.000839375) , 
0.103452, 1, 12, 0, 0.245453,0.193444) , 
2.64461, 0, 8, 0, 0.27167,0.167576) , 
0.676433, 0, 14, 0, 0.479948,0.000807113)    );
  // itree = 113
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.797309,-0.000690451) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.593733,-0.000208842) , 
1.9622, 0, 7, 0, 0.629223,-0.118479) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.762278,-0.000301907) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.347341,0.000377986) , 
2.3953, 0, 10, 0, 0.473947,-0.0358796) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.854545,-0.000757964) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.231475,0.0010609) , 
0.42247, 0, 12, 0, 0.25178,0.182314) , 
0.445148, 1, 13, 0, 0.316498,0.118753) , 
0.66057, 0, 14, 0, 0.505753,-0.0248146)    );
  // itree = 114
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668959,-0.00036788) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.394635,0.000189784) , 
0.680424, 0, 14, 0, 0.58113,-0.087177) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.595161,-0.000255804) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125455,0.000396228) , 
0.792706, 1, 13, 0, 0.53599,-0.0752627) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.472091,8.45398e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202737,0.00086025) , 
0.332784, 0, 15, 0, 0.273538,0.183755) , 
2.39354, 0, 10, 0, 0.312214,0.145586) , 
0.308582, 1, 16, 0, 0.476594,0.00330474)    );
  // itree = 115
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.657193,-0.000293788) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.374154,0.000578275) , 
0.117008, 0, 15, 0, 0.58175,-0.0991414) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.793201,-0.00043983) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.391849,-2.1728e-05) , 
0.349068, 1, 13, 0, 0.437644,0.0515506) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.576596,-5.53117e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0589253,0.00658958) , 
0.444441, 0, 7, 0, 0.147354,0.276993) , 
0.146939, 0, 15, 0, 0.331653,0.133864) , 
0.491273, 0, 7, 0, 0.518585,-0.0402932)    );
  // itree = 116
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.824468,-0.000636037) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.613487,-0.000193001) , 
0.0828317, 1, 16, 0, 0.651513,-0.14362) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.708999,-0.000231646) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.297724,0.00197378) , 
0.023821, 1, 0, 0, 0.549911,-0.10854) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.477429,6.08237e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.147115,0.00164808) , 
2.09377, 0, 10, 0, 0.246986,0.179064) , 
0.222084, 1, 16, 0, 0.326704,0.103378) , 
0.63667, 0, 14, 0, 0.541887,-0.060256)    );
  // itree = 117
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.654236,-0.000290056) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.360302,0.000326793) , 
0.144066, 0, 15, 0, 0.561356,-0.0721933) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.958016,-0.00105033) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0438893,0.0730896) , 
0.332192, 1, 3, 0, 0.82467,-0.408773) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.446754,-8.21163e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.106289,0.000803797) , 
0.721977, 0, 14, 0, 0.150764,0.28952) , 
2.81413, 0, 18, 0, 0.16634,0.27338) , 
0.138549, 1, 0, 0, 0.493178,-0.0125486)    );
  // itree = 118
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686845,-0.000390021) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.462254,-4.94238e-05) , 
0.736852, 0, 7, 0, 0.609543,-0.101252) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.415878,0.000162028) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.141654,0.00362148) , 
-0.61819, 0, 5, 0, 0.349153,0.0969951) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.601204,-0.000273824) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0809034,0.0026422) , 
0.334753, 1, 14, 0, 0.0992726,0.293682) , 
0.0898002, 0, 15, 0, 0.261192,0.166231) , 
0.641704, 0, 14, 0, 0.489962,-0.0094311)    );
  // itree = 119
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.831129,-0.000684125) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530537,-0.000156747) , 
1.87421, 0, 7, 0, 0.581944,-0.0821696) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.657962,-0.000655606) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128279,3.72948e-05) , 
0.0143607, 1, 6, 0, 0.554193,-0.0681994) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.501263,-0.000163558) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.151653,0.00128669) , 
0.13662, 0, 15, 0, 0.180575,0.248772) , 
0.129604, 1, 16, 0, 0.254579,0.185988) , 
0.142955, 0, 15, 0, 0.469274,0.0101233)    );
  // itree = 120
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655334,-0.000347541) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.336794,-0.000117249) , 
0.0321193, 1, 6, 0, 0.608422,-0.0964923) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701438,-0.000332149) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.280834,1.9346e-05) , 
-0.370555, 1, 3, 0, 0.535017,-0.0506661) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.526562,-9.00055e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194001,0.000918363) , 
2.64875, 0, 8, 0, 0.226026,0.201888) , 
0.651911, 0, 14, 0, 0.271532,0.164693) , 
0.671908, 0, 14, 0, 0.465282,0.0144817)    );
  // itree = 121
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.690811,-0.00035761) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257829,0.000351933) , 
0.257617, 0, 2, 0, 0.658713,-0.144358) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672355,-0.000179793) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.111056,0.0194875) , 
0.126659, 1, 3, 0, 0.532997,-0.0876982) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.872492,-0.000631283) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259093,0.000529908) , 
0.246366, 0, 6, 0, 0.274232,0.168599) , 
0.349917, 1, 13, 0, 0.311617,0.13157) , 
0.697055, 0, 14, 0, 0.489821,-0.0100951)    );
  // itree = 122
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679274,-0.000435969) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.475404,-0.000158681) , 
0.236729, 1, 16, 0, 0.603052,-0.090625) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.559764,-0.000117031) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.207933,0.00118441) , 
0.124601, 1, 3, 0, 0.448646,-3.31597e-05) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.576713,-0.00042981) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.213958,0.00103387) , 
1.99581, 0, 7, 0, 0.245197,0.187406) , 
1.4958, 0, 11, 0, 0.309712,0.127967) , 
0.677906, 0, 14, 0, 0.467192,0.0106155)    );
  // itree = 123
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727992,-0.000360626) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.513214,-0.000204773) , 
0.74796, 1, 10, 0, 0.602815,-0.0950654) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.866903,-0.000347441) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.345645,0.000473779) , 
2.14435, 1, 10, 0, 0.500775,-0.0632696) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.474407,8.1664e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180508,0.00202601) , 
1.38947, 0, 7, 0, 0.244032,0.176705) , 
2.09434, 0, 10, 0, 0.318392,0.107202) , 
0.637994, 0, 14, 0, 0.499451,-0.0215584)    );
  // itree = 124
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639856,-0.000316718) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.305837,0.00105667) , 
0.115588, 0, 15, 0, 0.55966,-0.0720807) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736323,-0.000244086) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.139211,0.00111531) , 
0.237775, 0, 5, 0, 0.55096,-0.0960736) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.539801,0.0112493) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.120509,0.000941954) , 
-1.0716, 1, 3, 0, 0.137883,0.306271) , 
0.441304, 1, 8, 0, 0.287055,0.160974) , 
0.396622, 1, 16, 0, 0.492571,-0.0147254)    );
  // itree = 125
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.681742,-0.000361521) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.352965,0.000287285) , 
0.663452, 0, 14, 0, 0.613076,-0.115037) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.582748,0.000157989) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.389268,-0.000112717) , 
0.580905, 1, 14, 0, 0.448978,0.0307787) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.368239,0.000117844) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.108339,0.00261328) , 
1.49564, 0, 11, 0, 0.19392,0.225134) , 
0.145844, 0, 15, 0, 0.333777,0.118562) , 
0.0461831, 1, 0, 0, 0.491526,-0.0133754)    );
  // itree = 126
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661099,-0.000264436) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.353789,0.000152131) , 
0.350412, 0, 2, 0, 0.623472,-0.122266) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664527,-0.000676041) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186566,4.61429e-05) , 
0.014415, 1, 6, 0, 0.556793,-0.0717495) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.602284,-0.000148096) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183653,0.00127589) , 
0.137582, 0, 15, 0, 0.22607,0.20309) , 
0.132035, 1, 16, 0, 0.286695,0.15271) , 
0.144066, 0, 15, 0, 0.511154,-0.0305594)    );
  // itree = 127
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.699639,-0.000311157) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.406725,0.000397326) , 
0.122945, 1, 0, 0, 0.676112,-0.163567) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.562823,-0.000122793) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.308741,0.00109395) , 
0.357026, 1, 16, 0, 0.442383,0.00732983) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.395698,0.00117032) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.102781,0.0022256) , 
1.34657, 1, 9, 0, 0.153119,0.239566) , 
0.0893674, 0, 15, 0, 0.356516,0.0762681) , 
0.659385, 0, 14, 0, 0.552259,-0.0706237)    );
  // itree = 128
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.693451,-0.000349604) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.273545,0.000358411) , 
0.257621, 0, 2, 0, 0.662848,-0.147753) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.80182,-0.000528503) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.23824,0.00019783) , 
0.0782415, 0, 15, 0, 0.675399,-0.196142) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.345764,0.000448941) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.130432,0.00112776) , 
0.400735, 0, 7, 0, 0.289086,0.147648) , 
2.10387, 0, 7, 0, 0.322377,0.118022) , 
0.694595, 0, 14, 0, 0.503193,-0.0231245)    );
  // itree = 129
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.680918,-0.000383016) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.450788,-3.14399e-05) , 
0.736852, 0, 7, 0, 0.603924,-0.0954305) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.908371,-0.000823097) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0668917,0.0688909) , 
2.31564, 0, 17, 0, 0.785403,-0.337772) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.382009,0.000213154) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.170812,0.00146656) , 
1.94496, 0, 10, 0, 0.242948,0.176907) , 
-1.85713, 1, 3, 0, 0.266637,0.154431) , 
0.636907, 0, 14, 0, 0.487592,-0.00925243)    );
  // itree = 130
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.783154,-0.000655779) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.55141,-0.000143225) , 
1.69639, 0, 7, 0, 0.595371,-0.0969939) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.780819,-0.000310665) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.399543,5.61914e-05) , 
0.484336, 1, 13, 0, 0.488358,-0.0236567) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.870582,-0.000890913) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154834,0.00123022) , 
0.310755, 1, 14, 0, 0.177133,0.237752) , 
0.0449691, 1, 0, 0, 0.32292,0.1153) , 
0.143039, 0, 15, 0, 0.4983,-0.021356)    );
  // itree = 131
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674703,-0.000394665) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.508346,-8.71071e-05) , 
0.736821, 0, 7, 0, 0.614579,-0.102621) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.857042,-0.000604126) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.362743,0.000473805) , 
0.242955, 0, 6, 0, 0.379905,0.0571361) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744197,-0.000684325) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0747801,0.00402644) , 
0.325998, 1, 14, 0, 0.105308,0.284283) , 
0.493778, 0, 14, 0, 0.329979,0.0984355) , 
0.66057, 0, 14, 0, 0.496921,-0.0195013)    );
  // itree = 132
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.648341,-0.000294372) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.303697,0.000569172) , 
0.112399, 0, 15, 0, 0.618156,-0.110167) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.981211,-0.000972571) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0355247,0.00316805) , 
0.467095, 1, 14, 0, 0.792353,-0.365234) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.626958,-0.000206727) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201927,0.000948493) , 
2.75712, 0, 8, 0, 0.23496,0.183539) , 
2.3522, 0, 5, 0, 0.255801,0.163019) , 
0.636907, 0, 14, 0, 0.496342,-0.0183295)    );
  // itree = 133
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666928,-0.000376866) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.452756,0.000113985) , 
0.357687, 0, 2, 0, 0.612429,-0.0974107) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.90471,-0.000538435) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.350977,-0.000611706) , 
2.54672, 0, 9, 0, 0.780705,-0.308136) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.603752,1.55819e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.274682,0.000601834) , 
0.335069, 0, 15, 0, 0.329185,0.109789) , 
0.629926, 1, 17, 0, 0.359397,0.081825) , 
0.697055, 0, 14, 0, 0.479358,-0.00314949)    );
  // itree = 134
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691085,-0.000367196) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.460661,-5.03425e-05) , 
0.272145, 1, 16, 0, 0.619267,-0.108721) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.6175,-0.000233427) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0450208,0.0066711) , 
0.521599, 0, 2, 0, 0.497504,-0.0630495) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.538042,-0.000296953) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.210175,0.00113972) , 
2.62975, 0, 8, 0, 0.239712,0.178929) , 
1.34658, 1, 9, 0, 0.284038,0.137322) , 
0.645712, 0, 14, 0, 0.499113,-0.0205327)    );
  // itree = 135
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.669841,-0.000342411) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.459391,0.000102793) , 
0.703275, 0, 14, 0, 0.586229,-0.0893348) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.609269,-0.000326698) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.21699,0.000639337) , 
0.733052, 1, 8, 0, 0.416486,0.0283483) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.616344,-9.96657e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0958513,0.00174844) , 
0.600023, 1, 9, 0, 0.132396,0.280146) , 
1.06731, 1, 17, 0, 0.210589,0.210841) , 
0.11583, 0, 15, 0, 0.496739,-0.0178224)    );
  // itree = 136
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.884593,-0.000212815) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.556527,-0.000165458) , 
0.468153, 0, 15, 0, 0.592513,-0.110295) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.5656,-0.000195787) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.217258,0.000846949) , 
0.976464, 1, 8, 0, 0.458926,0.0307651) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.608602,-0.000891302) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0742302,0.00378217) , 
0.600919, 1, 9, 0, 0.105551,0.305472) , 
0.146043, 0, 15, 0, 0.337203,0.125391) , 
0.49335, 0, 7, 0, 0.528737,-0.0514213)    );
  // itree = 137
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65547,-0.000308252) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.283845,0.00187909) , 
0.090198, 0, 15, 0, 0.604004,-0.113365) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661155,-0.000210711) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335119,0.000324452) , 
0.74825, 1, 10, 0, 0.434307,0.0457118) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.905628,-0.000854697) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.112285,0.000943163) , 
-1.81975, 1, 4, 0, 0.13399,0.281738) , 
0.173122, 0, 15, 0, 0.289282,0.15969) , 
0.344087, 1, 16, 0, 0.506572,-0.0288318)    );
  // itree = 138
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712357,-0.000368307) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.468514,-4.47813e-06) , 
0.295902, 0, 1, 0, 0.646453,-0.130287) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69713,-0.000447785) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388016,0.00034257) , 
1.67294, 0, 7, 0, 0.432316,0.0267774) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.393016,0.00389482) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0708355,0.00224442) , 
2.38786, 0, 17, 0, 0.098306,0.29092) , 
0.0905104, 0, 15, 0, 0.341199,0.0988352) , 
0.697055, 0, 14, 0, 0.492925,-0.0150497)    );
  // itree = 139
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717288,-0.000454855) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.181604,0.000534665) , 
0.608437, 0, 14, 0, 0.636717,-0.141164) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.754025,-0.000164658) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.445894,-6.15402e-05) , 
0.460354, 1, 13, 0, 0.514628,-0.0220499) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.488166,-0.000260232) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.230456,0.000474393) , 
2.39339, 0, 10, 0, 0.270932,0.167752) , 
0.200725, 0, 15, 0, 0.386659,0.0776181) , 
1.23334, 0, 7, 0, 0.479113,-0.00327213)    );
  // itree = 140
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679153,-0.000304449) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.461112,-0.000130897) , 
0.158233, 0, 15, 0, 0.636674,-0.123622) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.497578,-4.06249e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.111013,0.00201366) , 
0.0912836, 0, 15, 0, 0.389185,0.0397548) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.302569,0.00298277) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.092856,0.00166537) , 
1.60965, 0, 4, 0, 0.117798,0.298491) , 
1.7916, 1, 18, 0, 0.297011,0.127632) , 
0.658369, 0, 14, 0, 0.506327,-0.027202)    );
  // itree = 141
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695237,-0.000314347) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.418095,0.000288155) , 
0.132167, 0, 15, 0, 0.665247,-0.150694) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.411921,0.000114222) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.103985,0.0071115) , 
0.0625482, 0, 15, 0, 0.363106,0.0712617) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.499501,0.000300058) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.102831,0.00113743) , 
0.80814, 0, 3, 0, 0.158728,0.258393) , 
0.445553, 1, 16, 0, 0.301436,0.127728) , 
0.673088, 0, 14, 0, 0.516454,-0.0368245)    );
  // itree = 142
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767843,-0.000307915) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.553056,-0.000240868) , 
0.532, 0, 1, 0, 0.615193,-0.105741) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.911708,-0.000840082) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0647828,0.0341842) , 
2.84411, 1, 10, 0, 0.799756,-0.343694) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.648297,0.00012282) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245046,0.000918642) , 
0.85929, 0, 1, 0, 0.269872,0.147136) , 
2.54146, 0, 11, 0, 0.317954,0.102599) , 
0.643347, 0, 14, 0, 0.505322,-0.0287306)    );
  // itree = 143
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.732241,-0.000363364) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.555006,-0.000163047) , 
0.455652, 0, 2, 0, 0.656276,-0.138638) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691009,-0.000311058) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.285713,0.000580216) , 
1.54934, 1, 17, 0, 0.565483,-0.0880647) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.357924,0.000185515) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.104076,0.00504204) , 
0.444157, 0, 7, 0, 0.294797,0.136007) , 
0.251599, 0, 15, 0, 0.354227,0.086811) , 
0.708187, 0, 14, 0, 0.495187,-0.0184016)    );
  // itree = 144
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.693126,-0.000353448) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.38183,0.000655708) , 
0.116867, 0, 15, 0, 0.625154,-0.132182) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717107,-0.000377118) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0609485,0.00420715) , 
0.684285, 1, 2, 0, 0.578205,-0.110269) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.364182,0.000222405) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.103348,0.00181516) , 
0.116291, 0, 15, 0, 0.279215,0.165401) , 
1.26481, 0, 4, 0, 0.315914,0.131565) , 
0.30858, 1, 16, 0, 0.511782,-0.035488)    );
  // itree = 145
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.750958,-0.000372479) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.503604,9.00964e-05) , 
0.350411, 0, 2, 0, 0.695898,-0.178089) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.821931,-0.000496543) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.401522,0.00024859) , 
0.0454809, 1, 0, 0, 0.573522,-0.127452) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.486683,-1.16688e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251567,0.000694279) , 
0.436535, 1, 13, 0, 0.293949,0.142559) , 
0.685749, 0, 1, 0, 0.356639,0.0820137) , 
0.708187, 0, 14, 0, 0.527136,-0.0487028)    );
  // itree = 146
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712863,-0.000401691) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.411952,-1.54425e-05) , 
0.143261, 0, 15, 0, 0.622494,-0.123385) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.587177,-0.000108417) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0225928,0.00364244) , 
0.50016, 0, 14, 0, 0.527012,-0.0661932) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.446068,-0.000118729) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.170688,0.00084711) , 
1.05385, 1, 17, 0, 0.217554,0.227803) , 
0.860995, 1, 8, 0, 0.39179,0.062273) , 
0.258193, 1, 16, 0, 0.505775,-0.0294563)    );
  // itree = 147
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719645,-0.000372609) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.418719,-3.87808e-05) , 
0.305823, 1, 16, 0, 0.655799,-0.140544) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.595917,-3.82889e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.122804,0.00191548) , 
0.499481, 0, 14, 0, 0.523845,-0.080483) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.483021,-8.85218e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186498,0.00085469) , 
0.337731, 0, 12, 0, 0.223341,0.197169) , 
1.49593, 0, 11, 0, 0.333066,0.0957879) , 
0.676721, 0, 14, 0, 0.515746,-0.0379852)    );
  // itree = 148
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.654127,-0.000349162) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.460341,0.000178388) , 
0.309275, 1, 16, 0, 0.578826,-0.0833838) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.811509,-0.00023402) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.402451,0.000552385) , 
0.390081, 0, 16, 0, 0.496658,-0.0467952) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.859865,-0.000863016) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0859023,0.00171049) , 
0.317942, 1, 14, 0, 0.116403,0.277886) , 
0.0429855, 1, 0, 0, 0.284179,0.134631) , 
0.115713, 0, 15, 0, 0.500535,-0.0254547)    );
  // itree = 149
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686991,-0.000360469) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.471721,-5.34443e-05) , 
0.276186, 1, 16, 0, 0.616473,-0.106228) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.919779,-0.000687178) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0344139,0.0272009) , 
0.727823, 0, 5, 0, 0.660553,-0.244673) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.353513,0.000312002) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.147434,0.00140231) , 
0.32569, 1, 16, 0, 0.24007,0.172374) , 
0.242955, 0, 6, 0, 0.256431,0.156146) , 
0.640814, 0, 14, 0, 0.496479,-0.0187849)    );
  // itree = 150
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744399,-0.000477583) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.443621,-0.000125228) , 
0.293382, 0, 1, 0, 0.646375,-0.12704) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.8155,-0.000342799) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.407628,0.000128784) , 
2.14426, 1, 10, 0, 0.498577,-0.0471719) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.426103,-0.000138716) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.176436,0.0013328) , 
0.330778, 1, 16, 0, 0.317121,0.131499) , 
2.09438, 0, 10, 0, 0.361611,0.0876919) , 
0.746423, 0, 14, 0, 0.462311,0.0117572)    );
  // itree = 151
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663476,-0.000328804) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.27674,0.00167826) , 
0.0896043, 0, 15, 0, 0.613162,-0.120201) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.895978,-0.000488926) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.415901,0.000746412) , 
1.10143, 1, 17, 0, 0.584948,-0.0923759) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.504013,-0.000102379) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.262644,0.000952078) , 
2.09402, 0, 10, 0, 0.327175,0.1135) , 
0.414661, 0, 15, 0, 0.372745,0.077104) , 
0.308779, 1, 16, 0, 0.516112,-0.0405537)    );
  // itree = 152
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.751,-0.000395946) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.479969,-6.36018e-05) , 
0.948349, 0, 7, 0, 0.620951,-0.119132) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.878539,-0.00117832) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.589479,-0.000631812) , 
2.99209, 0, 9, 0, 0.686556,-0.186629) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.477254,0.000156284) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22262,0.00063088) , 
1.49597, 0, 11, 0, 0.303018,0.129807) , 
0.0864384, 1, 16, 0, 0.347893,0.0927825) , 
0.171046, 0, 15, 0, 0.501279,-0.0262565)    );
  // itree = 153
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689158,-0.000293976) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.478843,-4.93495e-05) , 
1.7929, 1, 18, 0, 0.625202,-0.123444) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719943,-0.00067136) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225581,-0.000155653) , 
0.192771, 0, 12, 0, 0.576666,-0.102259) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.465513,-0.000218682) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.197597,0.000544148) , 
1.34701, 1, 9, 0, 0.245091,0.186995) , 
0.914325, 1, 17, 0, 0.309914,0.130445) , 
0.171556, 0, 15, 0, 0.492947,-0.0169442)    );
  // itree = 154
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76488,-0.000538589) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.515596,-0.000183215) , 
0.758038, 0, 14, 0, 0.652846,-0.152687) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.616862,-0.000171005) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.376943,-3.54416e-05) , 
1.34637, 1, 10, 0, 0.518513,-0.0313526) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.345345,0.000292477) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0502376,0.0164459) , 
0.0698966, 0, 15, 0, 0.27922,0.13944) , 
0.170414, 0, 15, 0, 0.404596,0.0499545) , 
0.219821, 1, 16, 0, 0.510096,-0.0361631)    );
  // itree = 155
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694734,-0.000388894) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.470618,-8.51784e-05) , 
0.736861, 0, 7, 0, 0.621476,-0.107748) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.92545,-0.000512628) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.289594,-5.51541e-05) , 
1.94494, 0, 10, 0, 0.722394,-0.290146) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.490352,0.000298558) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.219793,0.000807382) , 
0.406403, 1, 13, 0, 0.286563,0.130792) , 
2.86881, 0, 8, 0, 0.324694,0.0939638) , 
0.66057, 0, 14, 0, 0.499948,-0.0251495)    );
  // itree = 156
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749282,-0.000483794) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.496545,-0.000135237) , 
1.23344, 0, 7, 0, 0.615994,-0.0998491) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.784707,-0.00038122) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.412614,0.000176382) , 
2.14464, 1, 10, 0, 0.484345,-0.0508054) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.613246,-0.0004338) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194276,0.00121222) , 
0.776592, 1, 17, 0, 0.230524,0.186934) , 
2.0944, 0, 10, 0, 0.305803,0.116424) , 
0.67165, 0, 14, 0, 0.481994,-0.00642088)    );
  // itree = 157
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679062,-0.00028526) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.511578,-4.1924e-05) , 
0.452685, 0, 2, 0, 0.62383,-0.117924) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.554076,0.000177941) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.309501,0.000289638) , 
0.117723, 1, 15, 0, 0.481927,-0.0626833) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71665,-0.000325164) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152059,0.00146297) , 
0.859138, 0, 1, 0, 0.17484,0.225272) , 
1.79517, 0, 10, 0, 0.317147,0.0918306) , 
0.624085, 0, 14, 0, 0.527039,-0.0517239)    );
  // itree = 158
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.779154,-0.000683726) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.560807,-0.000178797) , 
1.93879, 0, 7, 0, 0.609439,-0.113658) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.929114,-0.000668719) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.47109,-0.000109601) , 
0.248983, 0, 6, 0, 0.502171,-0.0172799) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.438383,7.2916e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.1296,0.00182646) , 
2.09263, 0, 10, 0, 0.218489,0.195079) , 
0.170691, 0, 15, 0, 0.355474,0.092534) , 
0.0461831, 1, 0, 0, 0.494007,-0.0199401)    );
  // itree = 159
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676061,-0.000268245) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.46174,-0.000194983) , 
1.64556, 1, 10, 0, 0.628591,-0.118277) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.597298,-0.000388077) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.024407,0.00580298) , 
0.203511, 1, 12, 0, 0.477855,-0.0487692) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.779869,-0.000505965) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167691,0.000896933) , 
-2.10378, 1, 3, 0, 0.179628,0.224971) , 
1.04748, 1, 9, 0, 0.214371,0.193081) , 
0.638, 0, 14, 0, 0.49724,-0.0195438)    );
  // itree = 160
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.750898,-0.000630354) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.437699,-7.12058e-05) , 
0.543307, 0, 13, 0, 0.694478,-0.201055) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.588905,-0.000240579) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.346318,0.00035586) , 
0.401548, 1, 16, 0, 0.523316,-0.0290481) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.434009,-0.000191527) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.105926,0.00148865) , 
0.131326, 0, 15, 0, 0.157144,0.25716) , 
0.144304, 0, 15, 0, 0.398387,0.0685993) , 
1.72671, 0, 7, 0, 0.458925,0.0134665)    );
  // itree = 161
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689497,-0.000324526) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.454765,0.000134894) , 
0.26491, 0, 1, 0, 0.644764,-0.128341) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.52728,0.000135487) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0640338,0.0164685) , 
0.0631592, 0, 15, 0, 0.46997,-0.0405352) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.449315,-0.000101558) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.190576,0.00160617) , 
0.926211, 0, 7, 0, 0.286457,0.135509) , 
1.78396, 0, 17, 0, 0.35973,0.0652183) , 
0.676721, 0, 14, 0, 0.516011,-0.0409084)    );
  // itree = 162
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.889871,-0.000787845) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.63671,-0.000465422) , 
2.45614, 0, 7, 0, 0.720699,-0.210195) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661307,-0.000206222) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.463526,-0.000104079) , 
0.739145, 0, 3, 0, 0.521679,-0.027724) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.532867,5.61383e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.17505,0.00112175) , 
2.39296, 0, 10, 0, 0.240807,0.173846) , 
0.14341, 0, 15, 0, 0.414915,0.0488963) , 
0.132943, 1, 16, 0, 0.488566,-0.0135081)    );
  // itree = 163
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.765247,-0.000573828) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.565445,-0.000166652) , 
0.118616, 1, 16, 0, 0.622721,-0.110941) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.933622,-0.00171973) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.362147,0.000446039) , 
3.67625, 0, 8, 0, 0.412362,0.0147701) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.609344,-0.000442921) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.151572,0.00100236) , 
0.248312, 0, 6, 0, 0.169438,0.231985) , 
1.16889, 0, 7, 0, 0.245039,0.164385) , 
0.645712, 0, 14, 0, 0.494725,-0.0176336)    );
  // itree = 164
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.667535,-0.00029748) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.428565,0.000171693) , 
0.350417, 0, 2, 0, 0.624552,-0.114411) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.521067,-0.000117349) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202089,0.00504305) , 
0.0900273, 0, 15, 0, 0.401913,0.0159838) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.524127,-0.000237361) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0875508,0.00171777) , 
2.39287, 0, 10, 0, 0.178533,0.219456) , 
0.355006, 1, 16, 0, 0.292913,0.115269) , 
0.636319, 0, 14, 0, 0.512258,-0.036641)    );
  // itree = 165
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700367,-0.00038005) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.450795,8.73516e-05) , 
0.350393, 0, 2, 0, 0.641525,-0.122079) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575173,-0.00033908) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.193816,0.00287657) , 
0.0887341, 0, 15, 0, 0.47249,-0.02376) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.487097,-0.000209939) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.232935,0.000506544) , 
1.34641, 1, 9, 0, 0.273308,0.154563) , 
1.05622, 1, 17, 0, 0.314138,0.118009) , 
0.710494, 0, 14, 0, 0.466906,0.00597741)    );
  // itree = 166
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67989,-0.000335142) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.372662,0.000178194) , 
0.350417, 0, 2, 0, 0.622787,-0.106017) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.527329,-8.2174e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154052,0.00258204) , 
0.916758, 1, 5, 0, 0.389154,0.0365434) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.451335,9.67373e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.141731,0.000657904) , 
0.775852, 0, 1, 0, 0.177721,0.234996) , 
1.19584, 1, 18, 0, 0.272339,0.146187) , 
0.676174, 0, 14, 0, 0.47293,0.00182982)    );
  // itree = 167
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.711902,-0.000429714) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.489078,-9.50331e-06) , 
1.2117, 0, 7, 0, 0.570944,-0.0825962) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.554615,-0.000477215) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.213317,0.00176044) , 
2.54326, 0, 9, 0, 0.382728,0.0419471) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.521065,-0.000130886) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0532742,0.00215075) , 
-2.35113, 1, 5, 0, 0.0640519,0.307257) , 
1.48018, 0, 7, 0, 0.151849,0.234162) , 
0.0890994, 0, 15, 0, 0.51003,-0.0365561)    );
  // itree = 168
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.757433,-0.000375376) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.571167,-0.000237262) , 
1.34888, 1, 17, 0, 0.666149,-0.147198) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.80355,-0.000710837) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.357747,0.000551004) , 
0.344045, 0, 12, 0, 0.509282,-0.0804197) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.470216,5.09965e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186942,0.000809737) , 
0.170691, 0, 15, 0, 0.295977,0.130153) , 
0.598434, 1, 10, 0, 0.346823,0.0799577) , 
0.694671, 0, 14, 0, 0.50881,-0.0352735)    );
  // itree = 169
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674222,-0.000369419) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.311207,0.000710376) , 
0.08729, 0, 15, 0, 0.616806,-0.129184) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.5243,-0.000149477) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127479,-1.78831e-05) , 
0.138364, 0, 7, 0, 0.486655,0.0201253) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.37888,0.000478186) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0857629,0.00166804) , 
0.782558, 0, 2, 0, 0.20698,0.194207) , 
0.652848, 0, 14, 0, 0.358217,0.100071) , 
0.968541, 0, 7, 0, 0.486857,-0.0139763)    );
  // itree = 170
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.66468,-0.00027862) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.45815,-2.25462e-05) , 
0.738757, 1, 8, 0, 0.559601,-0.0776506) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.95322,-0.000533059) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160273,0.00107826) , 
0.343817, 1, 8, 0, 0.617157,-0.152107) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.788084,-0.00229313) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.120776,0.000938784) , 
-2.351, 1, 5, 0, 0.130307,0.292435) , 
2.99173, 0, 9, 0, 0.193777,0.234481) , 
0.48609, 1, 16, 0, 0.510443,-0.0357072)    );
  // itree = 171
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.787292,-0.000644857) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.546217,-0.000182649) , 
1.97335, 0, 7, 0, 0.5929,-0.0811295) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769842,-0.000958729) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0374301,0.0894601) , 
2.54346, 1, 9, 0, 0.654085,-0.211961) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.462892,-0.00021975) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.166788,0.000924647) , 
1.70572, 0, 7, 0, 0.204099,0.19714) , 
-1.85702, 1, 4, 0, 0.228612,0.174854) , 
0.641166, 0, 14, 0, 0.466536,0.0076663)    );
  // itree = 172
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.516198,-0.000186568) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647131,-0.000636746) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.29465,0.000228654) , 
1.92377, 0, 7, 0, 0.361489,0.104474) , 
-0.619025, 0, 5, 0, 0.476544,-0.00322762) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.875564,-0.000817227) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.753224,-0.000595761) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172362,0.000975601) , 
2.54217, 0, 11, 0, 0.200744,0.223092) , 
0.809147, 0, 16, 0, 0.221336,0.20251) , 
0.503663, 1, 16, 0, 0.440464,0.0258582)    );
  // itree = 173
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.699163,-0.00036173) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.491459,0.000111211) , 
0.350417, 0, 2, 0, 0.65121,-0.132183) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.862732,-0.000697778) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0510201,0.00251161) , 
0.577829, 0, 14, 0, 0.792653,-0.331023) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.540813,-2.1977e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257412,0.000478961) , 
0.450063, 1, 18, 0, 0.292258,0.131528) , 
-1.85719, 1, 3, 0, 0.318579,0.107198) , 
0.695491, 0, 14, 0, 0.490968,-0.0168638)    );
  // itree = 174
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.777171,-0.000608351) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.446368,-0.00022191) , 
0.115391, 0, 15, 0, 0.72547,-0.212982) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.931924,-0.000301421) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.405821,0.000810146) , 
1.18292, 1, 17, 0, 0.701334,-0.207306) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.497939,-8.81113e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.321141,0.000267589) , 
0.713104, 1, 8, 0, 0.399888,0.0552956) , 
0.444077, 0, 15, 0, 0.438678,0.021504) , 
0.127384, 1, 16, 0, 0.501222,-0.0296334)    );
  // itree = 175
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639595,-0.000272237) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256953,0.000333311) , 
-1.3619, 0, 5, 0, 0.615178,-0.105798) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64975,-0.000479309) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0874697,0.00152568) , 
0.584943, 0, 14, 0, 0.395339,0.0197452) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.513332,0.00197859) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.148876,0.000804533) , 
1.8923, 0, 4, 0, 0.164189,0.233684) , 
-1.11416, 1, 4, 0, 0.205629,0.19533) , 
0.635919, 0, 14, 0, 0.48374,-0.00915574)    );
  // itree = 176
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721257,-0.000395361) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.484616,-0.00013305) , 
0.169666, 0, 15, 0, 0.610359,-0.123512) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.623904,-0.000239597) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.310112,-6.41358e-05) , 
0.371767, 1, 4, 0, 0.554446,-0.0391516) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.598479,0.000178451) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.12785,0.00079443) , 
0.146029, 1, 16, 0, 0.167524,0.247488) , 
0.702336, 0, 14, 0, 0.33815,0.121084) , 
0.982437, 0, 7, 0, 0.473169,-0.000237989)    );
  // itree = 177
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64814,-0.000314041) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.285671,0.000580502) , 
0.106777, 1, 0, 0, 0.615126,-0.098737) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.866521,-0.000398968) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.477256,-1.79587e-05) , 
2.67775, 0, 8, 0, 0.529902,-0.0966711) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.454675,2.54817e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.182169,0.00117189) , 
0.498646, 1, 10, 0, 0.245766,0.16286) , 
2.09432, 0, 10, 0, 0.328144,0.087616) , 
0.671644, 0, 14, 0, 0.488394,-0.0164434)    );
  // itree = 178
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712855,-0.000371474) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.449672,0.000126132) , 
0.357672, 0, 2, 0, 0.65252,-0.131992) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.878564,-0.000639789) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.111793,-0.000234813) , 
0.0211866, 1, 0, 0, 0.758096,-0.294289) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.870628,-0.000748506) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.250974,0.000468454) , 
0.442467, 0, 12, 0, 0.266771,0.157673) , 
2.31553, 0, 7, 0, 0.304484,0.122981) , 
0.706203, 0, 14, 0, 0.473857,-0.00110218)    );
  // itree = 179
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.732863,-0.000633017) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.534691,-0.000126585) , 
1.72671, 0, 7, 0, 0.590896,-0.0940586) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.521054,-0.000162969) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.176234,0.000841368) , 
0.116247, 0, 15, 0, 0.403752,0.0439003) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.429169,-7.13015e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0807278,0.00117227) , 
0.253809, 0, 15, 0, 0.197762,0.231971) , 
0.587273, 0, 7, 0, 0.320732,0.119699) , 
0.0451829, 1, 0, 0, 0.467979,0.00319485)    );
  // itree = 180
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.608176,-0.000213631) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.448734,-7.46458e-05) , 
0.536001, 0, 2, 0, 0.550408,-0.0639663) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.974207,-0.000571818) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.425578,0.00144321) , 
-0.867354, 1, 4, 0, 0.875338,-0.360717) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.415449,-7.16357e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0911376,0.0060016) , 
0.0822493, 0, 15, 0, 0.161396,0.219784) , 
0.0411643, 1, 16, 0, 0.195149,0.192339) , 
0.0899738, 0, 15, 0, 0.490973,-0.0210859)    );
  // itree = 181
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.650428,-0.000299775) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.263082,0.00158097) , 
0.0891881, 0, 15, 0, 0.602237,-0.110584) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689449,-0.000246563) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194018,0.000162496) , 
0.499876, 1, 13, 0, 0.524492,-0.0926155) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.447282,0.000362761) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127044,0.00107708) , 
0.224906, 0, 15, 0, 0.256701,0.179132) , 
2.09399, 0, 10, 0, 0.327725,0.107058) , 
0.344675, 1, 16, 0, 0.513893,-0.0405417)    );
  // itree = 182
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655279,-0.000302159) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.488545,-0.000152303) , 
1.3428, 1, 17, 0, 0.570398,-0.0836664) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.626084,3.09612e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.293801,0.000389245) , 
1.96756, 0, 17, 0, 0.364942,0.080308) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.132886,0.0017494) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0438782,0.000911635) , 
1.19911, 1, 10, 0, 0.058191,0.342062) , 
0.271367, 1, 0, 0, 0.298547,0.136964) , 
0.353683, 1, 16, 0, 0.483679,-0.013287)    );
  // itree = 183
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.590048,-0.000244948) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.266353,0.000298979) , 
0.465645, 1, 16, 0, 0.541533,-0.0517205) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653709,-0.000582779) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194295,0.000385966) , 
1.04755, 1, 10, 0, 0.454387,-0.0180482) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.517085,0.00507787) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0902089,0.00229002) , 
0.399083, 0, 12, 0, 0.104814,0.265029) , 
1.96492, 0, 7, 0, 0.163089,0.217839) , 
0.0916878, 0, 15, 0, 0.478227,-0.00662856)    );
  // itree = 184
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.716496,-0.000607222) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.488823,-8.99982e-05) , 
1.72671, 0, 7, 0, 0.548927,-0.0588962) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634084,-0.000428877) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0975695,0.000415908) , 
1.48988, 1, 18, 0, 0.462204,-0.0247563) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.472683,-7.32749e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.120449,0.000678019) , 
0.333179, 0, 15, 0, 0.197386,0.229039) , 
1.34798, 1, 9, 0, 0.237467,0.190626) , 
0.090959, 1, 0, 0, 0.461877,0.0108434)    );
  // itree = 185
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.699104,-0.000344719) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.496811,-0.000206361) , 
0.348008, 0, 1, 0, 0.614686,-0.0950489) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.762457,-0.000517751) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.385825,0.000220759) , 
0.260547, 0, 12, 0, 0.591241,-0.110084) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.375457,0.00043631) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191252,0.000505584) , 
2.54321, 0, 9, 0, 0.268619,0.145158) , 
0.307192, 0, 15, 0, 0.321793,0.10309) , 
0.694595, 0, 14, 0, 0.467122,0.00477629)    );
  // itree = 186
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.710146,-0.000406885) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.464762,-7.85456e-05) , 
0.986713, 0, 7, 0, 0.601977,-0.0900979) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666387,-0.000193245) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171246,0.00169089) , 
1.49078, 1, 18, 0, 0.494817,-0.0761652) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.307385,0.000456942) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0963506,0.00140509) , 
0.384432, 1, 16, 0, 0.214736,0.17844) , 
2.24391, 0, 10, 0, 0.281516,0.117734) , 
0.638, 0, 14, 0, 0.490772,-0.0179773)    );
  // itree = 187
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.863785,-0.000314684) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.606832,-0.00030791) , 
0.818062, 0, 2, 0, 0.664143,-0.143773) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.786942,-0.00036121) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.331048,0.00383822) , 
0.364621, 0, 3, 0, 0.617609,-0.181743) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.408697,-4.36014e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.177091,0.000920034) , 
0.93514, 0, 7, 0, 0.278819,0.143894) , 
2.99199, 0, 9, 0, 0.323981,0.100486) , 
0.697055, 0, 14, 0, 0.499788,-0.0257552)    );
  // itree = 188
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.698375,-0.00030628) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.520457,-0.000152151) , 
0.543918, 0, 2, 0, 0.612785,-0.100736) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742938,-0.000390403) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.337511,0.000445561) , 
0.448813, 1, 10, 0, 0.413218,-0.00542973) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.624216,-0.000547511) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.148122,0.00164892) , 
-1.85653, 1, 4, 0, 0.188731,0.20679) , 
0.956399, 1, 8, 0, 0.309793,0.0923438) , 
0.641941, 0, 14, 0, 0.501853,-0.030045)    );
  // itree = 189
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.814406,-0.000617339) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.372402,-0.000131955) , 
0.740701, 0, 7, 0, 0.778646,-0.260959) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817232,-0.000738848) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.55786,-0.000296688) , 
2.24358, 0, 10, 0, 0.625056,-0.10559) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.438209,-1.85449e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.24141,0.00030331) , 
1.34988, 1, 17, 0, 0.321863,0.120814) , 
0.763279, 0, 14, 0, 0.403535,0.0598266) , 
0.0872057, 1, 16, 0, 0.456523,0.0145125)    );
  // itree = 190
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.685889,-0.000310274) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.478055,0.000354037) , 
0.317754, 0, 2, 0, 0.653704,-0.137285) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.543051,-4.02433e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192411,0.000325685) , 
1.79666, 0, 9, 0, 0.487722,-0.0594242) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.406053,0.000304667) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.132809,0.0017115) , 
1.94452, 0, 10, 0, 0.22771,0.170196) , 
0.93507, 0, 7, 0, 0.346587,0.0652138) , 
0.659126, 0, 14, 0, 0.533679,-0.0581462)    );
  // itree = 191
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.656367,-0.000356469) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.263479,0.000824329) , 
0.608437, 0, 14, 0, 0.574086,-0.0883169) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634736,-0.000166074) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.10327,0.0162253) , 
1.79259, 1, 18, 0, 0.539237,-0.0849776) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.394837,-0.000122999) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.14793,0.00129622) , 
0.356981, 1, 16, 0, 0.269497,0.179854) , 
1.77355, 0, 17, 0, 0.35284,0.0980285) , 
0.740007, 0, 7, 0, 0.48666,-0.014682)    );
  // itree = 192
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729912,-0.000350929) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.54682,-0.0001511) , 
0.454192, 0, 2, 0, 0.658051,-0.137547) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.70527,-0.000399163) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265701,0.000112931) , 
0.371939, 1, 5, 0, 0.612071,-0.152938) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.521368,0.000120692) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252685,0.000687676) , 
-0.86662, 1, 4, 0, 0.322236,0.097058) , 
1.65028, 0, 7, 0, 0.373335,0.0529828) , 
0.697055, 0, 14, 0, 0.514433,-0.041439)    );
  // itree = 193
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714203,-0.000359316) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.496049,0.000140955) , 
0.357681, 0, 2, 0, 0.663784,-0.142556) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.765544,-0.00032737) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.193966,0.00155917) , 
2.24249, 0, 9, 0, 0.599806,-0.161122) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.48374,-5.7194e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259979,0.000468955) , 
0.450063, 1, 18, 0, 0.286704,0.128912) , 
0.775132, 0, 1, 0, 0.323923,0.0944353) , 
0.695075, 0, 14, 0, 0.501651,-0.0294978)    );
  // itree = 194
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.642838,-0.000306905) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.323683,0.000379768) , 
0.304014, 0, 2, 0, 0.602868,-0.0869878) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.956122,-0.000810066) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0255195,0.0414078) , 
-0.863666, 1, 3, 0, 0.724417,-0.296731) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.549299,-0.000419956) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224718,0.000633428) , 
0.357702, 0, 12, 0, 0.248434,0.153471) , 
0.224831, 1, 13, 0, 0.270385,0.132709) , 
0.658743, 0, 14, 0, 0.469914,0.000864536)    );
  // itree = 195
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.842348,-0.000652013) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.518193,-0.000142356) , 
1.8967, 0, 7, 0, 0.574839,-0.0792098) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730488,-0.000514355) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.283853,0.00070503) , 
0.307845, 0, 16, 0, 0.347059,0.074806) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.470155,0.000399216) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0591437,0.00168344) , 
0.89991, 0, 1, 0, 0.0702964,0.295729) , 
0.323215, 1, 16, 0, 0.231555,0.167005) , 
0.11629, 0, 15, 0, 0.488673,-0.0174083)    );
  // itree = 196
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691824,-0.000407665) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.475525,-4.01472e-05) , 
0.249667, 1, 16, 0, 0.584796,-0.08671) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.893033,-0.000758759) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.353469,0.00649636) , 
1.11382, 1, 4, 0, 0.827348,-0.349791) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.630814,-0.000107803) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160576,0.00118915) , 
0.220559, 1, 13, 0, 0.176305,0.213733) , 
2.68362, 0, 7, 0, 0.233718,0.164038) , 
0.116867, 0, 15, 0, 0.498461,-0.0250473)    );
  // itree = 197
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767091,-0.000411434) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335402,0.00120037) , 
0.985487, 1, 8, 0, 0.635021,-0.152038) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612094,-0.000201505) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253203,0.000281549) , 
0.819577, 1, 2, 0, 0.562818,-0.0886229) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.420707,-9.36322e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113692,0.000950265) , 
0.138549, 1, 0, 0, 0.331429,0.125652) , 
1.79199, 0, 17, 0, 0.43391,0.03075) , 
0.747992, 1, 10, 0, 0.503028,-0.0320704)    );
  // itree = 198
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.797218,-0.000466596) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.385003,-4.80941e-05) , 
0.677618, 0, 14, 0, 0.688834,-0.187326) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.66522,-0.000363136) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.29541,0.000426524) , 
0.257621, 0, 2, 0, 0.597466,-0.0796046) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.39767,6.37464e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187956,0.000802253) , 
0.404156, 1, 16, 0, 0.314923,0.120034) , 
0.761952, 0, 14, 0, 0.392924,0.0649208) , 
1.23334, 0, 7, 0, 0.514106,-0.03838)    );
  // itree = 199
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.922478,-0.000501545) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.680262,-0.000762071) , 
0.772547, 0, 2, 0, 0.789983,-0.271561) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.798814,-0.000562967) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.533355,-0.000147877) , 
1.04721, 1, 9, 0, 0.576949,-0.0780877) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.673716,-0.000181529) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271516,0.000968802) , 
0.808234, 0, 1, 0, 0.307969,0.0991391) , 
0.145844, 0, 15, 0, 0.476414,-0.0118467) , 
0.0888313, 1, 16, 0, 0.520401,-0.0482795)    );
  // itree = 200
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686885,-0.000384489) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.454739,-6.16413e-05) , 
0.969392, 0, 7, 0, 0.564253,-0.0675371) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.621425,-0.000243661) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.178804,0.00191179) , 
0.403927, 0, 16, 0, 0.410077,-0.00200762) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.442778,-0.000457092) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.107247,0.00240503) , 
1.93715, 0, 7, 0, 0.158897,0.233484) , 
2.09416, 0, 10, 0, 0.222744,0.173625) , 
0.115897, 0, 15, 0, 0.478746,-0.00715496)    );
  // itree = 201
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.829084,-0.000652875) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.578974,-0.000273848) , 
2.35085, 0, 7, 0, 0.640666,-0.146472) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.680258,-0.00034694) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.410752,7.02853e-05) , 
0.748207, 1, 10, 0, 0.499453,-0.0331381) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.573043,-0.000119477) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.28739,0.000549778) , 
0.14971, 1, 10, 0, 0.315684,0.129106) , 
0.738804, 1, 8, 0, 0.402915,0.052092) , 
1.22805, 0, 7, 0, 0.490709,-0.0212309)    );
  // itree = 202
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.937272,-0.000197628) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.606162,-0.000235891) , 
0.467772, 0, 15, 0, 0.642086,-0.148946) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.914454,-0.000611487) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.188045,0.0104388) , 
0.3617, 0, 1, 0, 0.809726,-0.374461) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.56034,-0.000311675) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.273571,0.000847014) , 
2.39312, 0, 10, 0, 0.321572,0.113879) , 
2.81068, 0, 8, 0, 0.3515,0.0839392) , 
0.347298, 1, 16, 0, 0.554594,-0.0788268)    );
  // itree = 203
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.630208,-0.000281774) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.348408,0.000313412) , 
0.634858, 0, 14, 0, 0.572633,-0.0759993) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.540128,-0.000298915) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.14907,0.00128989) , 
0.0847453, 0, 15, 0, 0.348885,0.0750652) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767361,-0.000310635) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0542344,0.00266388) , 
-2.35237, 1, 5, 0, 0.0824592,0.286287) , 
0.981295, 0, 7, 0, 0.214842,0.181334) , 
0.115713, 0, 15, 0, 0.485809,-0.0135534)    );
  // itree = 204
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.747722,-0.000348375) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.506221,-0.000212338) , 
0.908231, 0, 2, 0, 0.547549,-0.0597832) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622842,-0.000163075) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26176,0.000732918) , 
-0.3343, 0, 3, 0, 0.50307,-0.0632326) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.430628,0.000160567) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143441,0.000955605) , 
0.250823, 0, 15, 0, 0.24242,0.185485) , 
1.89012, 0, 17, 0, 0.309637,0.121345) , 
0.347296, 1, 16, 0, 0.466401,0.00199665)    );
  // itree = 205
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.631496,-0.000258116) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.358535,0.000580445) , 
0.637994, 0, 14, 0, 0.547235,-0.0693185) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.809063,-0.0010843) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.147032,0.0341577) , 
0.691169, 0, 14, 0, 0.285805,0.128233) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.132636,0.00541991) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0345559,0.000490184) , 
2.07005, 0, 18, 0, 0.0568383,0.337987) , 
-0.795626, 1, 4, 0, 0.102591,0.296073) , 
0.271367, 1, 0, 0, 0.515539,-0.043272)    );
  // itree = 206
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703682,-0.000314121) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.395536,0.000249857) , 
0.143124, 0, 15, 0, 0.60771,-0.119495) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.944215,-0.000758124) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.048332,9.16246e-05) , 
0.557181, 0, 16, 0, 0.812991,-0.374995) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.559685,-0.000271718) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.205704,0.00088228) , 
2.03815, 0, 17, 0, 0.255652,0.167515) , 
2.54303, 0, 11, 0, 0.300459,0.1239) , 
0.390647, 1, 16, 0, 0.533711,-0.0608758)    );
  // itree = 207
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.765962,-0.000585143) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.513969,-6.59325e-05) , 
0.108648, 1, 16, 0, 0.572688,-0.0855003) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.938757,-0.000691085) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0366132,0.0210064) , 
0.229006, 0, 15, 0, 0.754149,-0.34891) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.544411,-0.000419573) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.162124,0.00064608) , 
1.20219, 1, 9, 0, 0.206851,0.208184) , 
0.249769, 0, 6, 0, 0.249989,0.164273) , 
0.136439, 1, 0, 0, 0.509586,-0.0366585)    );
  // itree = 208
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676326,-0.00028426) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.514607,-0.000215944) , 
1.04712, 1, 11, 0, 0.618689,-0.101406) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.51191,-2.35303e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252823,0.000740742) , 
0.170756, 1, 12, 0, 0.390876,0.0187233) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.468301,4.15431e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.126972,0.00110351) , 
1.1968, 1, 9, 0, 0.170446,0.220777) , 
1.63995, 1, 18, 0, 0.301685,0.100479) , 
0.66057, 0, 14, 0, 0.489547,-0.0191615)    );
  // itree = 209
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728294,-0.000579474) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184585,0.000290261) , 
0.26355, 1, 16, 0, 0.692574,-0.189801) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.587051,-0.000174898) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0771513,0.00376546) , 
0.0892637, 0, 15, 0, 0.520169,-0.0565357) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.589975,-0.000228576) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.278468,0.000234503) , 
0.806269, 0, 14, 0, 0.336083,0.116221) , 
1.49568, 1, 17, 0, 0.430815,0.0273189) , 
1.72671, 0, 7, 0, 0.48165,-0.0148464)    );
  // itree = 210
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686803,-0.000339978) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322852,0.000536508) , 
0.116155, 0, 15, 0, 0.61078,-0.113673) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.791605,-0.00049177) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.373539,9.37122e-05) , 
2.0399, 0, 17, 0, 0.502197,-0.0597172) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.845855,-0.000683871) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.273205,0.000556457) , 
0.768872, 0, 0, 0, 0.288213,0.144583) , 
2.24397, 0, 10, 0, 0.331933,0.102842) , 
0.30858, 1, 16, 0, 0.503944,-0.0307186)    );
  // itree = 211
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677162,-0.000293194) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.400953,0.000249252) , 
0.315883, 0, 2, 0, 0.640821,-0.127698) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.909092,-0.000602333) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.330507,0.000465658) , 
1.94747, 1, 10, 0, 0.507849,-0.105782) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.386023,0.000391242) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183134,0.00101618) , 
0.74763, 1, 10, 0, 0.246912,0.143902) , 
1.3464, 1, 9, 0, 0.291523,0.101215) , 
0.642489, 0, 14, 0, 0.523482,-0.0507992)    );
  // itree = 212
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691916,-0.000313854) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.504942,-8.4261e-05) , 
0.45421, 0, 2, 0, 0.623896,-0.105562) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.646972,-0.000320434) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.29747,0.000215501) , 
0.038812, 1, 0, 0, 0.455595,-0.0330912) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.554137,8.63084e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.15105,0.00100907) , 
0.149935, 1, 10, 0, 0.178235,0.212679) , 
0.904102, 0, 7, 0, 0.311499,0.0945927) , 
0.670887, 0, 14, 0, 0.488567,-0.0188558)    );
  // itree = 213
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.636601,-0.000249696) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0779677,0.00125421) , 
0.271098, 1, 0, 0, 0.610465,-0.111971) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.624307,-0.000340795) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211256,0.00305764) , 
0.726166, 0, 2, 0, 0.41237,-0.0035401) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.825479,-0.00122096) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125467,0.00141598) , 
3.67384, 0, 8, 0, 0.147689,0.23853) , 
1.94491, 1, 9, 0, 0.251108,0.143946) , 
0.115994, 0, 15, 0, 0.526416,-0.0521158)    );
  // itree = 214
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.748446,-0.000304854) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.575845,-0.000233819) , 
0.540856, 0, 1, 0, 0.637948,-0.14109) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660049,-0.000356934) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.333237,0.000365614) , 
0.975476, 0, 7, 0, 0.428419,0.0450996) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.472843,0.000309702) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.104518,0.000873901) , 
0.33785, 1, 16, 0, 0.169353,0.217001) , 
0.170691, 0, 15, 0, 0.301493,0.12932) , 
0.309541, 1, 16, 0, 0.518014,-0.0446991)    );
  // itree = 215
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.858096,-0.000743244) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.602413,-0.000279912) , 
0.619382, 1, 17, 0, 0.644996,-0.142139) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575428,-0.000234778) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.369954,0.00026618) , 
0.893894, 1, 8, 0, 0.472338,-0.0123175) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.369922,9.06555e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.109817,0.000607763) , 
1.49004, 1, 18, 0, 0.24865,0.169693) , 
0.658512, 0, 13, 0, 0.378318,0.0641849) , 
0.221227, 1, 16, 0, 0.494272,-0.0255266)    );
  // itree = 216
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.794037,-0.000343451) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.559289,-0.000254465) , 
0.669374, 0, 1, 0, 0.586953,-0.0710865) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.850214,-0.000611554) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.39211,6.30474e-05) , 
0.0773434, 1, 16, 0, 0.462845,-0.0349472) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.73493,-0.000498149) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.176419,0.000733401) , 
2.69235, 0, 11, 0, 0.199558,0.193375) , 
1.38933, 0, 7, 0, 0.262967,0.138387) , 
0.659126, 0, 14, 0, 0.455845,0.0136813)    );
  // itree = 217
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.658634,-0.000297942) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.418051,0.000163364) , 
0.350417, 0, 2, 0, 0.613774,-0.0986352) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.815746,-0.000902199) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0517949,0.00145571) , 
0.74373, 1, 13, 0, 0.643816,-0.212329) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.370823,0.000351314) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138545,0.00103932) , 
0.312555, 1, 16, 0, 0.236219,0.153482) , 
0.598412, 1, 9, 0, 0.259777,0.132338) , 
0.641403, 0, 14, 0, 0.491035,-0.0185512)    );
  // itree = 218
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.618168,-0.000254544) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160286,0.000862977) , 
0.271367, 1, 0, 0, 0.59378,-0.0913654) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.902791,-0.000674271) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.393309,-0.000205284) , 
0.122495, 1, 4, 0, 0.841901,-0.321899) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.280789,0.000403013) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.043351,0.000834931) , 
0.378356, 1, 16, 0, 0.202558,0.203075) , 
0.0444352, 1, 16, 0, 0.242059,0.17064) , 
0.143124, 0, 15, 0, 0.475869,-0.00353039)    );
  // itree = 219
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.658734,-0.000255393) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.446056,-7.43882e-05) , 
1.19676, 1, 11, 0, 0.594988,-0.0984277) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.8778,-0.000704373) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125705,-0.000810846) , 
0.0143286, 1, 6, 0, 0.789476,-0.304366) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.407697,0.000271446) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.166489,0.00226677) , 
0.734832, 1, 8, 0, 0.271768,0.115658) , 
2.70179, 0, 7, 0, 0.305462,0.088321) , 
0.116799, 0, 15, 0, 0.519133,-0.0494998)    );
  // itree = 220
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.671069,-0.000375992) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.409641,0.000208782) , 
0.691264, 0, 14, 0, 0.58164,-0.0874199) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712076,-0.000298142) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.139668,0.000323675) , 
1.49172, 1, 18, 0, 0.535194,-0.0925034) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.435802,5.73322e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.133716,0.000639937) , 
0.200068, 0, 15, 0, 0.266948,0.164194) , 
1.34674, 1, 9, 0, 0.314896,0.118311) , 
0.30114, 1, 16, 0, 0.473355,-0.00390361)    );
  // itree = 221
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709077,-0.00030331) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.508165,-0.000146008) , 
0.543909, 0, 2, 0, 0.61849,-0.107251) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.810125,-0.000492516) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220824,0.00174502) , 
0.593626, 1, 13, 0, 0.638387,-0.237479) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.404396,0.000401221) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201802,0.00112294) , 
1.48637, 1, 17, 0, 0.305185,0.0882242) , 
2.64875, 0, 8, 0, 0.337181,0.0569484) , 
0.642261, 0, 14, 0, 0.51385,-0.0461729)    );
  // itree = 222
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.787179,-0.0004401) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.53878,-0.000219292) , 
1.19008, 1, 17, 0, 0.645986,-0.122923) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.534649,-0.000210471) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204708,0.00111008) , 
0.898288, 0, 18, 0, 0.477644,-0.0429022) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.495893,-9.37358e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201516,0.000714029) , 
-1.11382, 1, 4, 0, 0.26242,0.150086) , 
2.09438, 0, 10, 0, 0.318876,0.0994636) , 
0.697055, 0, 14, 0, 0.486056,-0.0141938)    );
  // itree = 223
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692173,-0.000288931) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.419761,-0.000109577) , 
0.157958, 0, 15, 0, 0.643209,-0.125008) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.502993,-0.000156036) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.178813,0.0079104) , 
0.521744, 0, 2, 0, 0.441695,-0.0232485) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.590819,-0.000436927) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.173329,0.0010427) , 
0.774912, 1, 17, 0, 0.208947,0.181594) , 
1.49568, 0, 11, 0, 0.28615,0.113647) , 
0.659385, 0, 14, 0, 0.507245,-0.0341308)    );
  // itree = 224
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670085,-0.000305292) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.418359,0.00022752) , 
0.379447, 1, 16, 0, 0.605496,-0.103902) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.635244,-0.000549758) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.32048,0.000686263) , 
0.4485, 1, 11, 0, 0.413596,0.00435709) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.699404,-0.000645667) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.190339,0.00100961) , 
2.35224, 0, 5, 0, 0.214132,0.18298) , 
0.985008, 1, 8, 0, 0.327851,0.0811429) , 
0.143345, 0, 15, 0, 0.508104,-0.0389921)    );
  // itree = 225
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704125,-0.000321341) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.460545,1.94281e-05) , 
0.315569, 1, 16, 0, 0.648057,-0.128422) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.96045,-0.00078522) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340185,-0.000405778) , 
0.870155, 0, 2, 0, 0.737802,-0.298657) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692897,-0.000689858) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226398,0.000602151) , 
2.10451, 0, 5, 0, 0.254007,0.139182) , 
2.54278, 0, 11, 0, 0.285803,0.110407) , 
0.6583, 0, 14, 0, 0.513929,-0.0399938)    );
  // itree = 226
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.623723,-0.000286417) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.291874,0.000643488) , 
0.629922, 0, 14, 0, 0.573594,-0.0711585) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.859658,-0.000848411) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220346,0.000765591) , 
0.123831, 0, 5, 0, 0.742795,-0.288812) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.604886,-0.000170156) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.228174,0.000517022) , 
2.70877, 0, 8, 0, 0.259676,0.143229) , 
0.598653, 1, 9, 0, 0.297969,0.108984) , 
0.14413, 0, 15, 0, 0.472493,-0.00508105)    );
  // itree = 227
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735809,-0.000240328) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.486345,-0.000217386) , 
0.48907, 1, 13, 0, 0.609402,-0.155742) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.710487,-0.000418495) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.475686,-7.69269e-05) , 
1.22803, 0, 7, 0, 0.576966,-0.0637357) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.780615,-0.000799922) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.139913,0.0012068) , 
0.773554, 0, 16, 0, 0.1533,0.225208) , 
0.642489, 0, 14, 0, 0.444703,0.0264684) , 
2.09442, 0, 10, 0, 0.485664,-0.0188474)    );
  // itree = 228
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65657,-0.000267059) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.332593,0.000471084) , 
0.11583, 0, 15, 0, 0.581356,-0.0989642) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744622,-0.000432506) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226368,-0.00025081) , 
1.10572, 0, 8, 0, 0.531544,-0.103126) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.490365,-0.000134429) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.119956,0.00192923) , 
0.612974, 1, 18, 0, 0.177004,0.232936) , 
2.39361, 0, 10, 0, 0.236111,0.176909) , 
0.460805, 1, 16, 0, 0.525751,-0.0545323)    );
  // itree = 229
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.698682,-0.000390163) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.518001,-4.57519e-05) , 
0.975832, 0, 7, 0, 0.613629,-0.104738) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.867426,-0.00110813) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0311042,0.0638689) , 
2.29329, 0, 5, 0, 0.762588,-0.342279) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.681854,-0.000780667) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221197,0.000677042) , 
0.633927, 1, 17, 0, 0.243847,0.139042) , 
2.1046, 0, 5, 0, 0.281928,0.103709) , 
0.622762, 0, 14, 0, 0.512978,-0.0414877)    );
  // itree = 230
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.678755,-0.000180381) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.533827,-0.000232834) , 
0.210181, 1, 12, 0, 0.597791,-0.101621) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.914194,-0.000800332) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.015387,0.0843275) , 
0.125887, 1, 16, 0, 0.876271,-0.373968) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612393,-0.000235406) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163027,0.00120372) , 
0.813268, 0, 1, 0, 0.205811,0.177803) , 
0.463609, 1, 17, 0, 0.260776,0.132568) , 
0.115897, 0, 15, 0, 0.514158,-0.0435048)    );
  // itree = 231
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776648,-0.000592886) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.396861,-0.000355169) , 
0.661058, 0, 14, 0, 0.691835,-0.184725) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.916761,-0.000323221) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.35015,0.00273815) , 
0.967565, 0, 7, 0, 0.682456,-0.18974) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.582969,-0.000329171) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.302136,0.000140473) , 
0.811323, 0, 14, 0, 0.350669,0.105292) , 
0.467843, 0, 15, 0, 0.382498,0.0769885) , 
1.70905, 0, 7, 0, 0.447659,0.0218597)    );
  // itree = 232
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.795302,-0.000454129) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.242125,0.00259595) , 
0.576244, 0, 14, 0, 0.747596,-0.243983) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.756853,-0.000488966) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.495454,-9.93967e-05) , 
0.133015, 1, 16, 0, 0.554122,-0.0565111) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.308737,0.000338517) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134301,0.00161763) , 
0.590626, 0, 2, 0, 0.239533,0.156699) , 
0.14376, 0, 15, 0, 0.445512,0.0170985) , 
0.904107, 1, 17, 0, 0.504866,-0.0341993)    );
  // itree = 233
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.633056,-0.000269735) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.316381,0.000558984) , 
0.11583, 0, 15, 0, 0.564278,-0.076889) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.933077,-0.00072271) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0185525,0.0215375) , 
0.646635, 0, 1, 0, 0.774141,-0.336907) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.318845,9.06488e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0602067,0.0011375) , 
0.17261, 0, 15, 0, 0.173123,0.23273) , 
2.54034, 0, 11, 0, 0.194286,0.212671) , 
0.138549, 1, 0, 0, 0.496622,-0.0239401)    );
  // itree = 234
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672903,-0.000360349) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.484538,-0.000187671) , 
1.21475, 1, 17, 0, 0.553692,-0.0372133) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.90527,-0.000566733) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.320732,0.000288355) , 
0.139445, 1, 16, 0, 0.502916,-0.096798) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.542545,-0.000569051) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.181475,0.000728347) , 
2.39257, 0, 11, 0, 0.20281,0.187725) , 
0.229739, 1, 8, 0, 0.249766,0.143207) , 
0.66057, 0, 14, 0, 0.425472,0.0389022)    );
  // itree = 235
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.690221,-0.000395716) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.509536,-7.08328e-05) , 
0.986685, 0, 7, 0, 0.603736,-0.0911595) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.499656,1.90396e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0791054,0.00135968) , 
0.430991, 0, 7, 0, 0.399321,-0.00692267) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.436635,0.000376979) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.108935,0.00104877) , 
0.21949, 1, 16, 0, 0.185453,0.196704) , 
0.70288, 1, 8, 0, 0.271882,0.114413) , 
0.636325, 0, 14, 0, 0.49168,-0.0217443)    );
  // itree = 236
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.642714,-0.000341254) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.218784,0.00604957) , 
0.0617857, 0, 15, 0, 0.612155,-0.127865) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.870783,-0.000481533) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.040827,0.0267083) , 
0.118807, 0, 15, 0, 0.772013,-0.295777) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.510205,-7.71159e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270246,0.000219644) , 
2.8423, 0, 9, 0, 0.322263,0.124276) , 
1.07353, 1, 17, 0, 0.342305,0.105557) , 
0.981117, 0, 7, 0, 0.476404,-0.0104398)    );
  // itree = 237
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.654422,-0.000331976) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.267292,0.000428652) , 
0.117449, 0, 15, 0, 0.574234,-0.0805548) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727394,-0.000302185) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.277346,-7.64978e-05) , 
0.0525122, 1, 8, 0, 0.496141,-0.0684131) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.332027,0.000596637) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.130103,0.000451055) , 
1.04691, 1, 11, 0, 0.23879,0.186653) , 
0.220625, 1, 8, 0, 0.280095,0.145716) , 
0.308739, 1, 16, 0, 0.459322,0.00784254)    );
  // itree = 238
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695976,-0.0002991) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.464752,-3.23873e-05) , 
0.308635, 0, 1, 0, 0.631791,-0.113355) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.494927,3.39487e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.117614,0.00139932) , 
0.618811, 1, 4, 0, 0.422462,-0.0152072) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663823,-0.000798181) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0789101,0.00203219) , 
2.54165, 0, 11, 0, 0.115022,0.258851) , 
0.467727, 0, 7, 0, 0.341683,0.0568007) , 
0.659385, 0, 14, 0, 0.511149,-0.0425956)    );
  // itree = 239
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666873,-0.000314308) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.325295,0.00135846) , 
0.0891881, 0, 15, 0, 0.61937,-0.123527) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749835,-0.000396038) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.278747,0.00168829) , 
1.34672, 0, 11, 0, 0.577046,-0.126617) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.361987,0.000275581) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0347359,0.00122107) , 
0.0890861, 0, 15, 0, 0.300505,0.12585) , 
2.05226, 0, 17, 0, 0.344444,0.0857361) , 
0.309517, 1, 16, 0, 0.512563,-0.0422294)    );
  // itree = 240
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.777977,-0.000337541) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530874,-0.000219963) , 
0.535986, 0, 2, 0, 0.662866,-0.137285) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686574,-0.000202885) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340064,0.000406763) , 
1.20107, 1, 18, 0, 0.527667,-0.102682) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.455433,0.000164952) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.215265,0.000570097) , 
0.74756, 1, 10, 0, 0.309622,0.102059) , 
1.49598, 0, 11, 0, 0.381327,0.034729) , 
0.697055, 0, 14, 0, 0.51905,-0.0494167)    );
  // itree = 241
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74327,-0.000322787) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.552997,-0.000192434) , 
0.383117, 0, 1, 0, 0.656331,-0.132946) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.970775,-0.000730657) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0582122,0.00410715) , 
-0.463598, 0, 4, 0, 0.885661,-0.425522) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.578843,-0.000518522) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226541,0.000550812) , 
2.10391, 0, 7, 0, 0.250772,0.148742) , 
-2.10363, 1, 3, 0, 0.278275,0.123865) , 
0.67569, 0, 14, 0, 0.501939,-0.0280685)    );
  // itree = 242
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.780181,-0.000447802) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.519621,6.70893e-05) , 
0.26281, 0, 1, 0, 0.721433,-0.193441) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687757,-0.000335359) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.179858,-7.33056e-05) , 
0.914616, 1, 2, 0, 0.642933,-0.174206) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.50441,-9.33823e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340089,0.000264164) , 
2.09432, 0, 10, 0, 0.379735,0.0497424) , 
0.908129, 1, 17, 0, 0.419081,0.0162645) , 
0.744668, 0, 14, 0, 0.53745,-0.065834)    );
  // itree = 243
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703857,-0.000327301) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.39189,4.66416e-05) , 
0.143172, 0, 15, 0, 0.609994,-0.111811) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.921795,-0.000772084) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0138123,0.045626) , 
0.227917, 1, 7, 0, 0.747867,-0.348079) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.502682,-0.00029992) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225162,0.00054796) , 
2.39355, 0, 10, 0, 0.26846,0.157902) , 
0.233886, 0, 6, 0, 0.292947,0.132058) , 
0.309652, 1, 16, 0, 0.494435,-0.0229246)    );
  // itree = 244
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730674,-0.000581724) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.368569,-0.000191472) , 
0.114022, 1, 16, 0, 0.686459,-0.170518) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.503807,-0.000161662) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.310952,0.000796785) , 
0.350417, 0, 2, 0, 0.47714,0.00761998) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.656917,-0.000266952) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.144109,0.00112888) , 
2.7924, 0, 8, 0, 0.190052,0.185126) , 
0.117648, 0, 15, 0, 0.39304,0.0596187) , 
0.132943, 1, 16, 0, 0.460325,0.00684505)    );
  // itree = 245
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727113,-0.000493415) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.418035,8.98216e-06) , 
0.0214202, 1, 0, 0, 0.654347,-0.146418) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615412,-0.000167829) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335389,0.000634744) , 
0.904414, 0, 18, 0, 0.486696,-0.0355337) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.560547,-0.000302933) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.24212,0.000133815) , 
1.19699, 1, 9, 0, 0.287516,0.151017) , 
1.35012, 1, 18, 0, 0.386162,0.0586255) , 
0.210158, 1, 16, 0, 0.494689,-0.02435)    );
  // itree = 246
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.671445,-0.000290071) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.387043,0.000209555) , 
0.357682, 0, 2, 0, 0.622612,-0.109862) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.698152,-0.000291628) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.13628,0.00311398) , 
0.0903618, 0, 15, 0, 0.559601,-0.151366) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.414839,-3.46454e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.153723,0.00109686) , 
1.49605, 1, 9, 0, 0.211187,0.164694) , 
1.05903, 1, 17, 0, 0.300799,0.0834035) , 
0.636319, 0, 14, 0, 0.514737,-0.0450777)    );
  // itree = 247
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.643381,-0.000331248) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.333067,0.000491477) , 
0.116155, 0, 15, 0, 0.570089,-0.0771453) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639529,-0.000290815) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.290065,0.000467936) , 
1.64245, 1, 18, 0, 0.530069,-0.0951419) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.820453,-0.000562854) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271858,0.000718983) , 
1.22675, 1, 9, 0, 0.29374,0.131146) , 
2.09434, 0, 10, 0, 0.356342,0.0712038) , 
0.309515, 1, 16, 0, 0.480703,-0.0151079)    );
  // itree = 248
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.751863,-0.000343646) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.539047,-0.000186147) , 
0.977115, 1, 8, 0, 0.68806,-0.163234) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.830815,-0.000744324) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.50893,-0.000232831) , 
0.0211868, 1, 0, 0, 0.722251,-0.253966) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.509777,-7.3161e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.268558,0.000764599) , 
2.09412, 0, 10, 0, 0.335349,0.0755187) , 
2.10387, 0, 7, 0, 0.371166,0.045017) , 
0.695491, 0, 14, 0, 0.53502,-0.0626616)    );
  // itree = 249
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689824,-0.000323196) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.490102,0.000190088) , 
0.350417, 0, 2, 0, 0.644232,-0.121278) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.53834,-0.000193757) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158188,0.00463357) , 
0.0904962, 0, 15, 0, 0.432895,-0.0122977) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742604,-0.000650002) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187006,0.000874877) , 
2.54211, 0, 11, 0, 0.223163,0.161721) , 
0.357508, 1, 16, 0, 0.334591,0.069267) , 
0.678179, 0, 14, 0, 0.505193,-0.035717)    );
  // itree = 250
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.654804,-0.000284127) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.296562,0.000613308) , 
0.11214, 0, 15, 0, 0.626499,-0.109777) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.538322,-0.000131567) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187014,0.00185128) , 
1.94503, 1, 9, 0, 0.344483,0.0236353) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.535961,-0.00027111) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.144237,0.000680321) , 
0.132198, 1, 16, 0, 0.191033,0.207912) , 
0.537801, 1, 14, 0, 0.268376,0.115031) , 
0.645681, 0, 14, 0, 0.500147,-0.0304601)    );
  // itree = 251
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.711864,-0.000313098) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.42703,-0.000144635) , 
0.170126, 0, 15, 0, 0.603078,-0.105745) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.873811,-0.000695059) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.08748,0.0202954) , 
0.0256106, 1, 0, 0, 0.738934,-0.31168) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.355451,0.000445178) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167767,0.000297276) , 
0.244737, 1, 12, 0, 0.29226,0.130547) , 
2.72775, 0, 8, 0, 0.322101,0.101003) , 
0.309652, 1, 16, 0, 0.494326,-0.0257233)    );
  // itree = 252
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.748509,-0.000579356) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165877,-0.000267688) , 
0.052928, 1, 6, 0, 0.718902,-0.21489) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.711444,-0.000408951) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.452889,2.80373e-05) , 
0.748027, 1, 10, 0, 0.539976,-0.0708299) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.46632,6.57635e-07) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154264,0.00404591) , 
0.116337, 0, 15, 0, 0.378522,0.068298) , 
0.731138, 1, 8, 0, 0.453606,0.00359634) , 
1.71925, 0, 7, 0, 0.505982,-0.0395384)    );
  // itree = 253
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672219,-0.000279922) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.396153,3.33625e-05) , 
0.297595, 0, 1, 0, 0.609103,-0.0955572) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.895515,-0.00130878) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174489,0.0120245) , 
0.0207099, 1, 6, 0, 0.733319,-0.295289) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.485061,-0.000139064) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.195401,0.000845391) , 
2.39355, 0, 10, 0, 0.245379,0.133816) , 
0.624417, 1, 17, 0, 0.273646,0.108958) , 
0.636907, 0, 14, 0, 0.494314,-0.025575)    );
  // itree = 254
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67722,-0.000331101) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.31769,-6.51584e-05) , 
0.392513, 1, 15, 0, 0.650853,-0.123913) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.881715,-0.000513774) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.393873,-0.000371906) , 
0.170461, 0, 15, 0, 0.6002,-0.144933) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.604448,-0.000122247) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.260809,0.000547431) , 
-1.36199, 1, 4, 0, 0.306959,0.0970324) , 
1.82763, 0, 7, 0, 0.344999,0.065644) , 
0.695771, 0, 14, 0, 0.498031,-0.0291999)    );
  // itree = 255
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.671468,-0.000293309) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.387178,0.000341551) , 
0.661252, 0, 14, 0, 0.607336,-0.102872) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.830748,-0.000783173) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.281257,0.0195953) , 
0.0265053, 1, 0, 0, 0.747715,-0.274291) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.386606,0.000163647) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198133,0.0011033) , 
0.493131, 0, 1, 0, 0.285179,0.115325) , 
0.622808, 1, 17, 0, 0.329168,0.0782712) , 
0.144066, 0, 15, 0, 0.508517,-0.0385205)    );
  // itree = 256
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72465,-0.00028081) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.494652,-5.94926e-05) , 
0.443194, 0, 2, 0, 0.657941,-0.142057) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.619898,1.30576e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.341132,0.000120359) , 
2.11561, 1, 10, 0, 0.45421,-0.0595995) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.828097,-0.000823706) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145401,0.000922629) , 
2.3522, 0, 5, 0, 0.173533,0.19695) , 
1.49541, 0, 11, 0, 0.272422,0.106561) , 
0.636907, 0, 14, 0, 0.537347,-0.0642867)    );
  // itree = 257
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.937865,-0.000510054) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.701018,-0.000612485) , 
0.864829, 0, 2, 0, 0.785995,-0.263661) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691946,-0.000461346) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.278013,0.000818815) , 
0.265725, 0, 2, 0, 0.634752,-0.110492) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.799123,-0.000395023) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.330856,0.000131829) , 
0.236077, 0, 6, 0, 0.348732,0.0861654) , 
0.772915, 0, 14, 0, 0.41785,0.0386421) , 
0.0888313, 1, 16, 0, 0.473205,-0.00681266)    );
  // itree = 258
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69085,-0.000303873) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.402679,0.000203651) , 
0.350417, 0, 2, 0, 0.639409,-0.118736) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.842846,-0.000673907) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.319411,0.000523935) , 
0.521593, 1, 2, 0, 0.686701,-0.278903) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722546,-0.000615739) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26481,0.000600832) , 
2.54267, 0, 11, 0, 0.291092,0.101704) , 
2.62971, 0, 8, 0, 0.337321,0.0572279) , 
0.659385, 0, 14, 0, 0.516027,-0.0468668)    );
  // itree = 259
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.766581,-0.000442813) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.534408,-0.000198867) , 
0.244973, 1, 8, 0, 0.5857,-0.103804) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.617067,-0.000164918) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.283539,2.26028e-05) , 
0.317174, 0, 7, 0, 0.515907,-0.000449099) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.482362,0.000126914) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138705,0.000629695) , 
0.410367, 1, 13, 0, 0.219253,0.172853) , 
0.690059, 0, 14, 0, 0.349495,0.0967669) , 
0.740038, 0, 7, 0, 0.495974,-0.0276133)    );
  // itree = 260
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.783909,-0.00043561) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.562077,-0.000224418) , 
1.05365, 1, 17, 0, 0.632664,-0.106612) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672627,-0.000200963) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134419,0.00015913) , 
0.124635, 1, 3, 0, 0.545333,-0.123516) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.455183,-2.68377e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202259,0.000454326) , 
0.570067, 1, 10, 0, 0.264855,0.141549) , 
2.39357, 0, 10, 0, 0.312788,0.0962506) , 
0.695771, 0, 14, 0, 0.47431,-0.00618547)    );
  // itree = 261
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.740602,-0.000618955) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211727,-9.08858e-05) , 
0.0767531, 1, 0, 0, 0.699943,-0.19533) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.759822,-0.000223561) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.422767,-0.000136586) , 
0.626684, 0, 8, 0, 0.524797,-0.0536886) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.5719,-1.68889e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.312189,0.000346321) , 
1.30814, 0, 7, 0, 0.365114,0.0786471) , 
0.731141, 1, 8, 0, 0.438212,0.0180678) , 
1.71693, 0, 7, 0, 0.490546,-0.0246018)    );
  // itree = 262
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676772,-0.000298241) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.430854,1.01982e-05) , 
0.172539, 0, 15, 0, 0.570081,-0.0852938) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717547,-0.000379326) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.334333,0.000190388) , 
1.1463, 0, 4, 0, 0.420501,0.0269594) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.564973,-0.000472924) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0783728,0.00138274) , 
0.242955, 0, 6, 0, 0.11721,0.268827) , 
0.662746, 0, 13, 0, 0.281319,0.137954) , 
0.397804, 1, 16, 0, 0.499243,-0.030528)    );
  // itree = 263
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717804,-0.000445662) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.315738,-0.000276635) , 
0.0375649, 1, 6, 0, 0.693916,-0.166769) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.833355,-0.000532251) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.456288,-0.000145541) , 
2.54274, 0, 11, 0, 0.488029,-0.0181737) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.466044,-0.000126515) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191277,0.000688976) , 
2.03303, 0, 17, 0, 0.233747,0.178887) , 
0.310529, 1, 16, 0, 0.371136,0.0724145) , 
0.776888, 0, 14, 0, 0.465091,0.00279264)    );
  // itree = 264
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.772865,-0.00053767) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.552351,-0.000180936) , 
0.118586, 1, 16, 0, 0.623729,-0.0981213) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.962908,-0.000816848) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0346657,0.0273971) , 
0.903367, 0, 5, 0, 0.683774,-0.302379) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.458925,-6.00097e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.21992,0.000494221) , 
1.64534, 0, 11, 0, 0.278131,0.115293) , 
0.233886, 0, 6, 0, 0.295543,0.0973638) , 
0.675948, 0, 14, 0, 0.476303,-0.0103065)    );
  // itree = 265
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731347,-0.000348933) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.470109,-7.74855e-05) , 
0.710081, 0, 14, 0, 0.629692,-0.131614) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.838115,-0.000425229) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.51191,-3.86424e-05) , 
2.04677, 1, 10, 0, 0.591072,-0.151919) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.555465,-0.000188108) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259482,0.000683912) , 
2.09327, 0, 10, 0, 0.306002,0.112102) , 
1.3464, 1, 9, 0, 0.360122,0.0619786) , 
0.309515, 1, 16, 0, 0.526307,-0.0573682)    );
  // itree = 266
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.697687,-0.000339891) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.518257,-0.000180768) , 
0.976728, 1, 8, 0, 0.63766,-0.112194) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.47123,3.24608e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.216361,0.000207403) , 
0.569523, 0, 13, 0, 0.383817,0.0271917) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.568894,1.00243e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.103216,0.0010206) , 
0.819337, 0, 1, 0, 0.140501,0.242641) , 
0.443513, 0, 7, 0, 0.317977,0.0854911) , 
0.695491, 0, 14, 0, 0.475888,-0.0121577)    );
  // itree = 267
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749527,-0.000444099) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.563421,-0.000143221) , 
1.22641, 0, 7, 0, 0.646996,-0.121698) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.888289,-0.000928695) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.101091,0.0013641) , 
0.74568, 1, 13, 0, 0.777375,-0.337371) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.44631,-2.73861e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239883,0.000665446) , 
0.44375, 1, 13, 0, 0.297651,0.0959632) , 
2.54202, 0, 11, 0, 0.331771,0.0651426) , 
0.677618, 0, 14, 0, 0.508032,-0.039331)    );
  // itree = 268
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.708527,-0.000414101) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.337158,0.000581772) , 
0.0855715, 0, 15, 0, 0.652398,-0.159539) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.770495,-0.00048794) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.293398,-9.63483e-05) , 
0.124448, 1, 5, 0, 0.667499,-0.215885) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.576999,-0.000139013) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.240592,0.000289883) , 
0.733845, 0, 14, 0, 0.361621,0.0885363) , 
2.54309, 0, 10, 0, 0.400356,0.0499854) , 
1.22639, 0, 7, 0, 0.493915,-0.0277902)    );
  // itree = 269
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.710003,-0.000422846) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163655,0.000857198) , 
0.572957, 0, 14, 0, 0.65985,-0.161137) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.733877,-0.000402037) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.103084,0.00217429) , 
2.24062, 1, 18, 0, 0.678862,-0.167661) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.493646,-2.21358e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180437,0.000313766) , 
0.200961, 0, 15, 0, 0.33245,0.109313) , 
0.135082, 1, 16, 0, 0.385296,0.0670599) , 
1.22804, 0, 7, 0, 0.493354,-0.0227524)    );
  // itree = 270
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.758925,-0.000333173) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.575553,-0.000212407) , 
0.535986, 0, 2, 0, 0.658915,-0.131396) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.961254,-0.000819131) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.551029,-0.000346633) , 
0.462231, 1, 13, 0, 0.667191,-0.207811) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.585468,-0.000204862) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.250657,0.000409354) , 
1.36166, 0, 3, 0, 0.292511,0.115452) , 
1.04727, 1, 9, 0, 0.344813,0.070328) , 
0.708187, 0, 14, 0, 0.491847,-0.0241009)    );
  // itree = 271
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.559074,-0.000221932) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.331267,0.000243465) , 
0.357683, 0, 2, 0, 0.527717,-0.0401692) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.725635,-0.000461123) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.119163,0.000297456) , 
-1.1143, 1, 5, 0, 0.518209,-0.147763) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661218,-0.00213379) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0903176,0.00199943) , 
0.398649, 0, 12, 0, 0.121438,0.228537) , 
2.64459, 0, 8, 0, 0.168251,0.184139) , 
0.0890491, 0, 15, 0, 0.468277,-0.00307811)    );
  // itree = 272
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.690193,-0.000319511) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.457279,7.13097e-05) , 
0.31004, 1, 16, 0, 0.604188,-0.102552) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.84091,-0.000800653) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.244304,0.0203799) , 
0.0235477, 1, 0, 0, 0.75664,-0.270313) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.497001,-2.78004e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220908,0.000895887) , 
2.0944, 0, 10, 0, 0.299078,0.0958762) , 
0.615901, 1, 17, 0, 0.339273,0.0637081) , 
0.14413, 0, 15, 0, 0.510054,-0.0434732)    );
  // itree = 273
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749626,-0.000346894) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.11278,0.000969477) , 
0.482792, 1, 16, 0, 0.695755,-0.217707) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645688,-0.000235427) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.485856,-0.000194211) , 
0.143126, 1, 12, 0, 0.526113,-0.0455926) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.425696,-3.04744e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.182726,0.00099101) , 
0.813141, 0, 7, 0, 0.268376,0.148209) , 
0.35259, 1, 16, 0, 0.441384,0.0181179) , 
0.244973, 1, 8, 0, 0.490967,-0.0278496)    );
  // itree = 274
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695059,-0.000361068) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.446801,-3.5795e-05) , 
0.740007, 0, 7, 0, 0.612496,-0.0965199) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.520485,-0.000218898) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220013,0.000731369) , 
0.530409, 1, 14, 0, 0.309368,0.0814341) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.548748,0.000293297) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0408283,0.00291033) , 
0.903312, 0, 1, 0, 0.0565059,0.271492) , 
0.496022, 0, 14, 0, 0.251658,0.12481) , 
0.640408, 0, 14, 0, 0.48941,-0.0210215)    );
  // itree = 275
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639549,-0.000288612) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265135,0.00136015) , 
0.0895322, 0, 15, 0, 0.587788,-0.0972606) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664551,-0.000404641) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.148403,0.0242406) , 
0.157828, 0, 12, 0, 0.557662,-0.117856) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.832072,-0.000414345) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.210907,0.000506353) , 
2.84215, 0, 11, 0, 0.225528,0.183792) , 
1.01011, 0, 7, 0, 0.312691,0.104629) , 
0.344675, 1, 16, 0, 0.497109,-0.030713)    );
  // itree = 276
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65454,-0.00030243) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.40016,6.85577e-05) , 
0.0899562, 1, 0, 0, 0.59391,-0.0942917) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.715158,-0.000630527) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.218036,0.000585434) , 
0.482218, 1, 8, 0, 0.357259,0.0291113) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.580482,-0.00068014) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0966737,0.000981482) , 
3.02757, 0, 10, 0, 0.116227,0.252273) , 
0.748012, 1, 10, 0, 0.195067,0.179278) , 
0.116474, 0, 15, 0, 0.498947,-0.0291558)    );
  // itree = 277
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65247,-0.000315346) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.24215,0.000694948) , 
-1.36195, 0, 5, 0, 0.631245,-0.104559) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.973514,-0.000814326) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.28697,-0.000982227) , 
0.690515, 0, 14, 0, 0.849844,-0.330245) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.28951,0.000192651) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0399542,0.00107711) , 
0.277099, 1, 0, 0, 0.256535,0.147993) , 
2.1044, 0, 3, 0, 0.281039,0.128241) , 
0.706903, 0, 14, 0, 0.450748,0.0154264)    );
  // itree = 278
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.710727,-0.000364995) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.426751,-0.00027708) , 
-0.314382, 1, 4, 0, 0.659292,-0.177299) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.809663,-0.000555092) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.285296,-0.000224475) , 
-0.61911, 0, 5, 0, 0.757456,-0.269663) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.509352,-0.000138697) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.293755,0.00025591) , 
0.0181085, 1, 6, 0, 0.391198,0.0620069) , 
2.24393, 0, 11, 0, 0.434594,0.0227089) , 
1.06085, 1, 17, 0, 0.492371,-0.0287194)    );
  // itree = 279
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.658427,-0.00028124) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.330655,0.00041) , 
0.64357, 0, 14, 0, 0.590532,-0.0900286) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.953924,-0.000634073) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265072,0.000606151) , 
0.474873, 1, 18, 0, 0.651484,-0.238935) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.374335,-0.00015349) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125461,0.00126414) , 
0.24428, 1, 8, 0, 0.162216,0.206628) , 
0.111276, 0, 15, 0, 0.226295,0.148273) , 
0.116474, 0, 15, 0, 0.503276,-0.0329416)    );
  // itree = 280
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612486,-0.000225476) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175274,0.00214712) , 
0.0893674, 0, 15, 0, 0.552272,-0.0794453) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.786289,-0.000653111) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.472288,-0.000370185) , 
0.897438, 1, 10, 0, 0.630396,-0.134131) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.380771,0.000280478) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164029,0.000413149) , 
0.406787, 1, 1, 0, 0.286481,0.15005) , 
1.71694, 0, 7, 0, 0.355708,0.092847) , 
-0.371528, 0, 5, 0, 0.491435,-0.0261206)    );
  // itree = 281
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.594879,-0.000208608) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.20145,0.00600123) , 
0.061902, 0, 15, 0, 0.569875,-0.0939771) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.926106,-0.000485128) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145805,-7.61275e-05) , 
0.633155, 0, 7, 0, 0.655518,-0.144989) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.811959,-0.000818587) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.161135,0.000991558) , 
0.798979, 0, 16, 0, 0.183232,0.206958) , 
0.800341, 0, 14, 0, 0.240248,0.16447) , 
0.484622, 1, 16, 0, 0.525132,-0.058896)    );
  // itree = 282
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.641162,-0.000325623) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.316206,0.000458137) , 
0.116799, 0, 15, 0, 0.566241,-0.0710043) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.824501,-0.000441006) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.130464,0.00137118) , 
0.370682, 0, 5, 0, 0.555105,-0.126583) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.568858,-0.000417162) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221348,0.000468117) , 
2.54313, 0, 10, 0, 0.264354,0.151073) , 
-0.953415, 1, 3, 0, 0.303589,0.113605) , 
0.309582, 1, 16, 0, 0.460824,0.00308947)    );
  // itree = 283
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701809,-0.000339759) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.445604,0.000137564) , 
0.350411, 0, 2, 0, 0.646955,-0.117601) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683866,-0.000327783) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163068,6.4534e-05) , 
0.370114, 0, 4, 0, 0.470701,-0.0573004) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.485802,-9.28542e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158305,0.000702381) , 
1.09976, 1, 17, 0, 0.242684,0.156246) , 
2.09432, 0, 10, 0, 0.304459,0.0983919) , 
0.695491, 0, 14, 0, 0.481601,-0.0133214)    );
  // itree = 284
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.789384,-0.000625175) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.501546,-0.000141742) , 
1.89672, 0, 7, 0, 0.541259,-0.0496263) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.930538,-0.000700218) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186825,0.00253784) , 
0.86777, 0, 2, 0, 0.733691,-0.247517) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.803887,-0.00133887) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154794,0.00103292) , 
3.67377, 0, 8, 0, 0.172053,0.194588) , 
-1.85639, 1, 3, 0, 0.208041,0.166258) , 
0.116106, 0, 15, 0, 0.454839,0.00636346)    );
  // itree = 285
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668922,-0.000361313) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.343789,0.000440076) , 
0.0882706, 0, 15, 0, 0.614514,-0.127423) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.588537,-0.000244656) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26356,0.00042644) , 
0.0404926, 1, 6, 0, 0.468983,-0.00417597) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.623702,-0.000351911) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.170615,0.0018603) , 
1.13271, 1, 17, 0, 0.221734,0.201588) , 
0.985008, 1, 8, 0, 0.375886,0.0733006) , 
0.986685, 0, 7, 0, 0.490341,-0.0229744)    );
  // itree = 286
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.650697,-0.000272304) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.315876,0.000289396) , 
0.122945, 1, 0, 0, 0.619876,-0.105068) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.514091,-0.000225318) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0599184,0.000866962) , 
0.190117, 1, 12, 0, 0.433588,-0.0366902) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.394877,-2.1857e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145065,0.00150615) , 
0.498878, 1, 10, 0, 0.201364,0.164615) , 
2.09442, 0, 10, 0, 0.266661,0.108012) , 
0.635983, 0, 14, 0, 0.503456,-0.0348371)    );
  // itree = 287
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.825777,-0.000599442) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.513611,-0.000430087) , 
0.137246, 0, 15, 0, 0.724396,-0.216108) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.780456,-0.000293981) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.497765,-2.10334e-05) , 
1.20388, 1, 17, 0, 0.594316,-0.0892143) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.512676,-0.000115347) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.231811,0.000262996) , 
0.0176264, 1, 6, 0, 0.353574,0.0815084) , 
0.307166, 0, 15, 0, 0.419239,0.0349417) , 
1.71925, 0, 7, 0, 0.486608,-0.0204823)    );
  // itree = 288
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.789908,-0.000356554) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.535966,-0.000201908) , 
0.387058, 0, 1, 0, 0.675107,-0.145174) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.804037,-0.000419248) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.391862,1.24251e-05) , 
2.14435, 1, 10, 0, 0.487783,-0.0707722) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.347514,0.000317122) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0557432,0.00140165) , 
0.0716364, 1, 6, 0, 0.290713,0.11307) , 
2.09445, 0, 10, 0, 0.342207,0.0650324) , 
0.697055, 0, 14, 0, 0.511248,-0.0417066)    );
  // itree = 289
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704328,-0.000344485) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.431023,0.00015379) , 
0.357687, 0, 2, 0, 0.647017,-0.117904) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.557713,-0.000215274) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.281358,0.000164579) , 
0.786255, 1, 2, 0, 0.478399,-0.053481) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.510075,-0.000276845) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175446,0.000955607) , 
1.3464, 1, 9, 0, 0.233199,0.154151) , 
0.943029, 0, 7, 0, 0.343454,0.0607884) , 
0.697055, 0, 14, 0, 0.495503,-0.0287151)    );
  // itree = 290
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729128,-0.000328345) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.503147,-0.000193468) , 
0.341664, 0, 1, 0, 0.638814,-0.109503) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.566769,-0.000305266) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340757,0.000191789) , 
-1.11453, 1, 4, 0, 0.39366,0.0291286) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.772218,-0.000754098) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.117012,0.000506419) , 
0.789641, 0, 16, 0, 0.136465,0.234562) , 
0.134907, 1, 0, 0, 0.31501,0.0919501) , 
0.708187, 0, 14, 0, 0.469729,-0.00430746)    );
  // itree = 291
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.759696,-0.000330605) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.554108,-0.000120065) , 
0.452704, 0, 2, 0, 0.681599,-0.15129) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.958554,-0.000775277) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143446,0.0236432) , 
0.89687, 0, 5, 0, 0.763034,-0.375704) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689804,-0.000519378) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.285391,0.000342891) , 
0.598412, 1, 9, 0, 0.311145,0.0910313) , 
0.242955, 0, 6, 0, 0.328149,0.0734684) , 
0.695771, 0, 14, 0, 0.514899,-0.0452858)    );
  // itree = 292
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653382,-0.000253378) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.454437,-6.38292e-05) , 
2.09329, 1, 18, 0, 0.61111,-0.113126) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.920639,-0.000722058) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.481692,-0.000217219) , 
-1.85651, 1, 3, 0, 0.605518,-0.157973) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.306376,0.000589485) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0891558,0.00204861) , 
2.09076, 0, 18, 0, 0.172204,0.184405) , 
1.71941, 0, 7, 0, 0.296038,0.0865589) , 
0.116222, 0, 15, 0, 0.532769,-0.0634749)    );
  // itree = 293
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677278,-0.000336435) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.449787,5.4862e-05) , 
0.29624, 0, 1, 0, 0.611867,-0.0836067) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.675971,-0.000271476) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.382096,0.000205745) , 
0.869548, 0, 2, 0, 0.449649,-0.0124988) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.317708,0.000260314) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.122635,0.000564055) , 
1.63, 0, 17, 0, 0.224055,0.160567) , 
0.0461831, 1, 0, 0, 0.305451,0.0981238) , 
0.695771, 0, 14, 0, 0.458252,0.00749976)    );
  // itree = 294
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712343,-0.000341471) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.460772,0.000162011) , 
0.357687, 0, 2, 0, 0.656503,-0.127276) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.52785,-0.00016215) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0803535,0.0231857) , 
0.0921708, 0, 15, 0, 0.427302,-0.00729313) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.625843,-0.000561676) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.179754,0.00040734) , 
2.54314, 0, 11, 0, 0.202623,0.187895) , 
1.19604, 1, 18, 0, 0.304603,0.0993002) , 
0.695771, 0, 14, 0, 0.490398,-0.0203264)    );
  // itree = 295
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714176,-0.000332016) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.475038,5.76855e-05) , 
0.29624, 0, 1, 0, 0.648775,-0.120043) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.648558,-0.000241069) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.382273,0.000103482) , 
0.0924336, 1, 12, 0, 0.433549,-0.000936154) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.555015,-0.000595065) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.112609,0.00197643) , 
0.355974, 0, 12, 0, 0.143653,0.184862) , 
0.0909793, 0, 15, 0, 0.351067,0.0519278) , 
0.694595, 0, 14, 0, 0.502567,-0.0355861)    );
  // itree = 296
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.872898,-0.000531747) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.666794,-0.000733423) , 
0.634963, 0, 2, 0, 0.783299,-0.254798) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.81408,-0.00062011) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145818,0.000343612) , 
2.23924, 1, 18, 0, 0.755613,-0.275378) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558266,-0.000179868) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.323499,0.000111038) , 
1.20892, 1, 17, 0, 0.400061,0.0500657) , 
2.24389, 0, 11, 0, 0.439786,0.0137039) , 
0.0865503, 1, 16, 0, 0.489366,-0.0250497)    );
  // itree = 297
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682297,-0.000320708) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.324097,0.000366813) , 
0.118164, 0, 15, 0, 0.606673,-0.111526) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.879427,-0.000501911) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.123171,0.00668239) , 
0.756492, 0, 13, 0, 0.646964,-0.167908) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.465494,-0.000128719) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.214879,0.000411806) , 
1.3464, 1, 9, 0, 0.257249,0.155164) , 
0.468876, 0, 15, 0, 0.307971,0.113115) , 
0.309515, 1, 16, 0, 0.493162,-0.0261593)    );
  // itree = 298
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.783259,-0.000581639) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.559594,-0.000144866) , 
1.6528, 0, 7, 0, 0.604244,-0.100334) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.53755,-0.000191335) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.361625,0.000198052) , 
0.484336, 1, 13, 0, 0.416702,-0.00891682) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655872,-0.000445262) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.110214,0.00281431) , 
0.852482, 0, 1, 0, 0.144896,0.211085) , 
0.493555, 0, 7, 0, 0.349928,0.045131) , 
0.143325, 0, 15, 0, 0.512106,-0.0476321)    );
  // itree = 299
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691417,-0.000340432) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.386173,0.000162293) , 
0.357687, 0, 2, 0, 0.624982,-0.0957024) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668449,-0.000338495) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.329452,0.000411839) , 
0.402181, 0, 16, 0, 0.522886,-0.101755) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.381094,3.00234e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0929279,0.00100176) , 
0.390159, 1, 16, 0, 0.278479,0.123071) , 
2.3935, 0, 10, 0, 0.318568,0.0861942) , 
0.695771, 0, 14, 0, 0.472348,-0.00509417)    );
  // itree = 300
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.600408,-0.000296613) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.309454,7.62466e-05) , 
0.577856, 0, 13, 0, 0.552754,-0.0588588) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.782211,-0.00046464) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292428,-4.02712e-05) , 
1.31049, 1, 17, 0, 0.548523,-0.130576) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.445119,6.07798e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.153311,0.000590422) , 
0.0454795, 1, 0, 0, 0.23237,0.178253) , 
2.39359, 0, 10, 0, 0.283517,0.128291) , 
0.308739, 1, 16, 0, 0.446344,0.0151078)    );
  // itree = 301
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.659292,-0.000294884) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.506264,-0.000137584) , 
0.738804, 1, 8, 0, 0.581074,-0.0710127) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.82978,-0.000841433) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.311266,0.000825864) , 
1.68049, 0, 7, 0, 0.446552,-0.0676365) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.617347,-0.000711124) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168278,0.000683025) , 
0.59847, 1, 9, 0, 0.205789,0.157701) , 
0.598427, 1, 10, 0, 0.258256,0.108595) , 
0.622068, 0, 14, 0, 0.479623,-0.0145681)    );
  // itree = 302
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645127,-0.00027737) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.261186,0.0013546) , 
0.0896043, 0, 15, 0, 0.591975,-0.102057) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.737399,-0.00070202) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.268771,0.0182922) , 
0.430141, 1, 16, 0, 0.534749,-0.123723) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.496991,8.77242e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163224,0.000468843) , 
0.307343, 0, 15, 0, 0.260772,0.151009) , 
0.299301, 1, 10, 0, 0.290988,0.120709) , 
0.353659, 1, 16, 0, 0.503182,-0.0363392)    );
  // itree = 303
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706861,-0.000470471) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.314669,0.000803737) , 
0.224542, 0, 2, 0, 0.673655,-0.140573) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.564614,-0.000224155) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.337329,0.000252644) , 
0.957764, 1, 8, 0, 0.478263,-0.0446168) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.439427,-0.000176029) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194654,0.000613193) , 
0.953465, 0, 7, 0, 0.297451,0.136635) , 
0.731894, 0, 2, 0, 0.380734,0.0531497) , 
0.770025, 0, 14, 0, 0.467201,-0.00403522)    );
  // itree = 304
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735163,-0.000418065) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.55098,-0.000106422) , 
1.21173, 0, 7, 0, 0.629848,-0.111577) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.519191,-0.000248129) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.242808,0.00096938) , 
0.331813, 1, 16, 0, 0.382428,-0.00395641) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.324631,0.000383521) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0914211,0.00103976) , 
0.371193, 0, 5, 0, 0.191308,0.17084) , 
1.48801, 1, 17, 0, 0.289664,0.0808852) , 
0.637994, 0, 14, 0, 0.516554,-0.0474798)    );
  // itree = 305
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.826859,-0.000696975) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.568187,-0.000217362) , 
2.43956, 0, 7, 0, 0.601334,-0.1055) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.538081,-0.000222307) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.304579,0.000337341) , 
0.94749, 0, 7, 0, 0.376877,0.0425935) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776856,-0.000880949) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125344,0.00182599) , 
2.84121, 0, 11, 0, 0.148563,0.252465) , 
2.09007, 1, 18, 0, 0.323329,0.0918165) , 
0.308582, 1, 16, 0, 0.49473,-0.0298369)    );
  // itree = 306
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.758859,-0.000566847) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256443,0.000955569) , 
0.570745, 0, 14, 0, 0.7207,-0.214771) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.516369,-0.000193303) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26618,0.000209055) , 
2.09155, 1, 18, 0, 0.461997,0.0239066) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.877096,-0.00112341) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127405,0.00119801) , 
3.65102, 0, 8, 0, 0.14829,0.205921) , 
0.117052, 0, 15, 0, 0.3804,0.0712494) , 
1.71925, 0, 7, 0, 0.45903,0.00516148)    );
  // itree = 307
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.723836,-0.000416407) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.42636,0.00111241) , 
0.961523, 1, 8, 0, 0.608631,-0.135286) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.773752,-0.000704878) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224229,0.00035018) , 
2.39042, 1, 18, 0, 0.719496,-0.237804) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.636053,-0.000436433) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.320661,0.000120569) , 
0.133065, 1, 16, 0, 0.381409,0.0710368) , 
2.39383, 0, 11, 0, 0.416105,0.0393421) , 
0.747987, 1, 10, 0, 0.483094,-0.0214193)    );
  // itree = 308
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.804655,-0.000444634) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.413346,-0.00019407) , 
0.688322, 0, 14, 0, 0.688114,-0.183451) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.531619,-0.000211909) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221661,0.00165326) , 
0.115592, 0, 15, 0, 0.455554,0.00889445) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.496171,-0.000959865) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.100232,0.000342233) , 
2.38238, 0, 11, 0, 0.107988,0.272486) , 
0.077962, 1, 6, 0, 0.412369,0.0416454) , 
0.909086, 1, 17, 0, 0.462895,0.000400319)    );
  // itree = 309
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704251,-0.000361397) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.419134,-0.000308053) , 
1.94469, 1, 10, 0, 0.660882,-0.166621) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718783,-0.000387674) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.277668,-4.51309e-05) , 
1.9418, 1, 18, 0, 0.64099,-0.125553) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.583387,-0.000305219) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251914,0.000235211) , 
0.804853, 0, 14, 0, 0.300068,0.131317) , 
0.134603, 1, 16, 0, 0.349496,0.0940754) , 
1.21979, 0, 7, 0, 0.475609,-0.0115084)    );
  // itree = 310
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664227,-0.000276793) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.461199,-7.01781e-05) , 
1.79244, 1, 18, 0, 0.600432,-0.101048) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.618276,-0.000276061) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.214743,0.00505752) , 
2.0949, 1, 9, 0, 0.486262,-0.11044) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.616274,-0.000413564) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226004,0.000883405) , 
1.11436, 0, 3, 0, 0.305608,0.0973969) , 
0.488783, 1, 13, 0, 0.362172,0.0323222) , 
0.143261, 0, 15, 0, 0.513628,-0.0524581)    );
  // itree = 311
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755963,-0.000595958) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201704,1.36094e-05) , 
0.084037, 1, 0, 0, 0.722176,-0.211801) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.630265,-0.000180718) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.372102,3.88979e-05) , 
0.198835, 0, 15, 0, 0.496134,-0.0369168) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676219,-0.000499911) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.178921,0.00137238) , 
0.488467, 1, 8, 0, 0.240843,0.191096) , 
2.24012, 1, 18, 0, 0.452356,0.00218329) , 
1.70905, 0, 7, 0, 0.510581,-0.0439923)    );
  // itree = 312
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.851324,-0.000517365) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.478958,-0.000671351) , 
0.371428, 1, 5, 0, 0.792867,-0.257038) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.577871,-0.000231526) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.358276,2.50877e-05) , 
0.738332, 0, 13, 0, 0.442513,0.00168878) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.624236,-0.000392435) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256037,0.000929177) , 
2.54309, 0, 10, 0, 0.311627,0.168582) , 
0.357687, 0, 2, 0, 0.4237,0.0256775) , 
0.0888313, 1, 16, 0, 0.480267,-0.0176428)    );
  // itree = 313
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.669593,-0.000262661) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388075,0.000112778) , 
0.136439, 1, 0, 0, 0.626907,-0.120928) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.884298,-0.000578974) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.381297,0.000309743) , 
1.94373, 1, 10, 0, 0.525515,-0.114178) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.43575,-6.07711e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.102469,0.00107335) , 
0.258264, 1, 16, 0, 0.260373,0.128539) , 
1.64559, 0, 11, 0, 0.326681,0.0678391) , 
0.14376, 0, 15, 0, 0.523658,-0.0560097)    );
  // itree = 314
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776572,-0.000555392) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.522072,-8.60757e-05) , 
1.69495, 0, 7, 0, 0.574373,-0.0876637) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.959073,-0.00058018) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154051,0.000223466) , 
0.0847334, 0, 15, 0, 0.630211,-0.259521) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.4191,0.000261547) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0908217,0.00191382) , 
1.19797, 1, 9, 0, 0.138756,0.193875) , 
2.69414, 0, 8, 0, 0.206201,0.131653) , 
0.0886516, 0, 15, 0, 0.517855,-0.0539965)    );
  // itree = 315
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706281,-0.000326168) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.437687,1.88611e-05) , 
0.143172, 0, 15, 0, 0.619943,-0.121022) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.586705,-3.90193e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.285365,0.000415231) , 
0.338259, 0, 1, 0, 0.487699,-0.0403633) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.536985,-0.000377655) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157811,0.000340411) , 
1.34801, 1, 9, 0, 0.224049,0.164713) , 
0.0923662, 1, 0, 0, 0.345288,0.0704089) , 
0.303948, 1, 16, 0, 0.511918,-0.04573)    );
  // itree = 316
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676572,-0.000283435) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134586,-0.000355488) , 
0.148171, 0, 12, 0, 0.663584,-0.131481) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.611615,-0.000287517) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113245,0.000737179) , 
0.0830184, 1, 6, 0, 0.569325,-0.138797) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.367888,0.000104967) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175825,0.000674241) , 
1.74049, 0, 17, 0, 0.271715,0.125371) , 
1.05312, 1, 17, 0, 0.346467,0.0590185) , 
0.706898, 0, 14, 0, 0.49855,-0.0323413)    );
  // itree = 317
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741558,-0.000344574) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.502007,0.000155643) , 
0.357666, 0, 2, 0, 0.687427,-0.153603) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.620428,-0.000341857) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.310884,0.000438837) , 
1.07001, 0, 7, 0, 0.43023,0.000234857) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.242757,0.000497704) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158209,-4.76162e-06) , 
0.641301, 1, 14, 0, 0.228398,0.154538) , 
0.655021, 0, 13, 0, 0.330995,0.0761011) , 
0.706203, 0, 14, 0, 0.512248,-0.0407085)    );
  // itree = 318
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.656877,-0.000238945) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.440487,-0.000133562) , 
0.618969, 1, 4, 0, 0.615649,-0.123001) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.944424,-0.000749856) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.280221,0.000429192) , 
0.0305895, 0, 6, 0, 0.802225,-0.352186) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.484002,0.000307215) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.266231,0.000398997) , 
2.69318, 0, 9, 0, 0.333048,0.0811268) , 
2.54312, 0, 11, 0, 0.362189,0.0542137) , 
0.353659, 1, 16, 0, 0.536435,-0.0676162)    );
  // itree = 319
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712583,-0.00028947) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.493283,-1.06853e-05) , 
0.310245, 0, 1, 0, 0.651512,-0.127277) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.599968,-0.000251041) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224366,0.00145962) , 
0.371883, 1, 4, 0, 0.495189,-0.0878991) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.370639,-0.000137898) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.126857,0.00134859) , 
2.09432, 0, 10, 0, 0.193866,0.170209) , 
1.14234, 0, 7, 0, 0.301584,0.0779398) , 
0.658743, 0, 14, 0, 0.51759,-0.0487385)    );
  // itree = 320
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.607046,-0.000203582) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.417342,-5.93752e-05) , 
0.489611, 0, 2, 0, 0.553936,-0.0753818) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.775199,-0.000483267) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0431427,0.00273772) , 
0.0532305, 1, 6, 0, 0.594569,-0.171836) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.793715,-0.000932622) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.155786,0.00127623) , 
0.803651, 0, 16, 0, 0.178612,0.209599) , 
2.39309, 0, 10, 0, 0.261707,0.1334) , 
0.482697, 1, 16, 0, 0.510818,-0.0445764)    );
  // itree = 321
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720008,-0.000413511) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.480915,-7.99615e-06) , 
0.748101, 1, 10, 0, 0.564604,-0.09272) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.770467,-0.00070246) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.358517,-0.000174305) , 
1.70834, 0, 7, 0, 0.659097,-0.141992) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.532157,-0.00025758) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.254602,0.000275724) , 
0.350397, 1, 13, 0, 0.283424,0.146504) , 
0.126117, 1, 16, 0, 0.359274,0.0882555) , 
0.976671, 1, 8, 0, 0.480088,-0.0182287)    );
  // itree = 322
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702345,-0.000306579) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.420681,0.000248779) , 
0.357687, 0, 2, 0, 0.646943,-0.12017) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.966144,-0.000844092) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0384828,0.0364135) , 
-0.844219, 1, 3, 0, 0.776279,-0.364522) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.422814,3.10175e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.188282,0.000465861) , 
0.0461831, 1, 0, 0, 0.268157,0.117447) , 
0.220808, 1, 13, 0, 0.293278,0.0936186) , 
0.671902, 0, 14, 0, 0.499104,-0.0308021)    );
  // itree = 323
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728699,-0.000378117) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.327021,0.000879173) , 
0.606914, 0, 14, 0, 0.645444,-0.159682) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767524,-0.000281675) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.519472,-0.000130462) , 
0.814348, 0, 2, 0, 0.572059,-0.0532962) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736223,-0.000615984) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.230713,0.000647757) , 
0.250192, 0, 6, 0, 0.251876,0.115024) , 
0.657453, 0, 14, 0, 0.439727,0.0162708) , 
1.20823, 1, 17, 0, 0.511685,-0.045276)    );
  // itree = 324
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700054,-0.000495028) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.528953,-0.000244491) , 
-0.771502, 1, 4, 0, 0.636517,-0.15769) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.809996,-0.000571501) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.482397,-0.00011882) , 
2.54299, 0, 11, 0, 0.50512,-0.0190857) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622718,-0.000418399) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138142,0.00125965) , 
0.598687, 1, 9, 0, 0.163365,0.186593) , 
0.11583, 0, 15, 0, 0.416893,0.034012) , 
1.05365, 1, 17, 0, 0.471193,-0.0133846)    );
  // itree = 325
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.844561,-0.000682099) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.268689,-0.000486745) , 
0.53443, 0, 13, 0, 0.790186,-0.266574) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.789034,-0.000275045) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.528267,-0.00021889) , 
0.638402, 0, 2, 0, 0.629419,-0.0989736) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.505714,-0.000124282) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265901,0.000656591) , 
2.09437, 0, 10, 0, 0.330796,0.0672709) , 
0.703586, 0, 14, 0, 0.469638,-0.0100229) , 
2.22002, 0, 7, 0, 0.502607,-0.0364102)    );
  // itree = 326
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.796329,-0.000507183) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.479986,-0.000113169) , 
0.350131, 0, 2, 0, 0.706876,-0.17233) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.929645,-0.000751357) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.454424,-0.000471717) , 
1.79476, 0, 11, 0, 0.731392,-0.234644) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.435806,-2.72443e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.110261,0.00170623) , 
0.0909793, 0, 15, 0, 0.364899,0.0654743) , 
0.0916097, 1, 16, 0, 0.397764,0.0385614) , 
0.776892, 0, 14, 0, 0.487305,-0.0225278)    );
  // itree = 327
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.619285,-0.000270075) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.295999,0.000371565) , 
0.276335, 0, 2, 0, 0.590551,-0.0740822) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.765584,-0.000431789) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.403107,0.000203505) , 
2.14447, 1, 10, 0, 0.464999,-0.074018) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.816385,-0.000626714) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.195436,0.000981819) , 
0.753387, 0, 16, 0, 0.220351,0.137439) , 
2.09442, 0, 10, 0, 0.292301,0.07525) , 
0.641941, 0, 14, 0, 0.480195,-0.0188274)    );
  // itree = 328
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612757,-0.000285472) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.41119,-5.45584e-05) , 
0.311051, 0, 1, 0, 0.568147,-0.0753268) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.829072,-0.000737421) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0373013,0.00720797) , 
1.06373, 1, 8, 0, 0.728042,-0.269865) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.531604,-0.000179722) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245774,0.000509233) , 
0.220743, 1, 8, 0, 0.295216,0.117507) , 
2.39352, 0, 11, 0, 0.330022,0.0863563) , 
0.308582, 1, 16, 0, 0.471201,-0.00950211)    );
  // itree = 329
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.637979,-0.000285023) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.402285,6.88951e-05) , 
0.31197, 1, 16, 0, 0.573666,-0.0640929) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.841384,-0.000676415) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.232737,0.000294247) , 
1.97758, 1, 10, 0, 0.405563,-0.0240973) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.365079,0.0005475) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.098805,0.000648561) , 
0.866201, 0, 3, 0, 0.158344,0.190208) , 
1.34637, 1, 9, 0, 0.199672,0.154382) , 
0.612262, 0, 14, 0, 0.470414,-0.00377627)    );
  // itree = 330
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.902145,-0.000589391) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.646275,-0.000584991) , 
2.24629, 0, 18, 0, 0.77189,-0.260944) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634567,-0.000252797) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.512508,-3.15344e-05) , 
2.09439, 0, 10, 0, 0.540407,-0.0717936) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738572,-0.00123931) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0723901,0.0196184) , 
0.31917, 1, 14, 0, 0.106643,0.193192) , 
0.0625482, 0, 15, 0, 0.509717,-0.0530455) , 
1.95319, 0, 7, 0, 0.549754,-0.0847941)    );
  // itree = 331
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666786,-0.000276944) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.838843,-0.000777044) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.264405,0.000959943) , 
0.60822, 1, 17, 0, 0.406158,0.0913645) , 
0.131797, 0, 15, 0, 0.634852,-0.108325) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.915962,-0.000824546) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.3899,0.00017127) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.205408,0.000404753) , 
0.121298, 1, 0, 0, 0.318211,0.0651985) , 
0.796309, 0, 16, 0, 0.328334,0.0552699) , 
0.673093, 0, 14, 0, 0.502136,-0.0374916)    );
  // itree = 332
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692906,-0.000326191) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.391408,5.1783e-05) , 
0.686148, 0, 14, 0, 0.596942,-0.0992648) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.625119,-0.000335491) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363123,0.000160155) , 
0.499642, 1, 13, 0, 0.506465,-0.0841334) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.527828,-0.000116287) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.243235,0.000607424) , 
2.30811, 0, 8, 0, 0.276705,0.137893) , 
2.09433, 0, 10, 0, 0.335736,0.0808488) , 
0.309515, 1, 16, 0, 0.494667,-0.0287413)    );
  // itree = 333
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689464,-0.000313561) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388467,-4.44221e-05) , 
0.710005, 0, 14, 0, 0.56063,-0.0720946) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.772142,-0.000292352) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194338,0.000309163) , 
-0.467933, 1, 4, 0, 0.571596,-0.143313) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744931,-0.000588367) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113396,0.000711625) , 
0.250192, 0, 6, 0, 0.152415,0.234534) , 
1.34671, 1, 9, 0, 0.2374,0.157928) , 
0.390667, 1, 16, 0, 0.480569,-0.0151202)    );
  // itree = 334
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.793306,-0.000458658) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.601598,-0.000366765) , 
0.00806877, 1, 6, 0, 0.718962,-0.184535) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.616645,-0.000225281) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.396914,-6.61843e-05) , 
0.979673, 1, 8, 0, 0.518789,-0.0623436) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.474852,0.000151147) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175592,0.000420155) , 
0.618969, 0, 5, 0, 0.305151,0.107149) , 
0.715102, 0, 7, 0, 0.432364,0.00622287) , 
0.781067, 0, 14, 0, 0.513956,-0.0480844)    );
  // itree = 335
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.594441,-0.000270892) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.448668,5.07491e-06) , 
0.31206, 0, 1, 0, 0.552106,-0.064681) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.890577,-0.000995061) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0304361,0.0683795) , 
0.907189, 1, 8, 0, 0.803228,-0.372263) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.475417,-2.88379e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.141342,0.000369102) , 
0.306911, 0, 15, 0, 0.219506,0.179838) , 
0.600852, 1, 9, 0, 0.251956,0.149146) , 
0.0908652, 1, 0, 0, 0.468703,-0.00526471)    );
  // itree = 336
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.710246,-0.00036004) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.484045,-6.81963e-05) , 
0.266194, 1, 16, 0, 0.608048,-0.104203) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.75596,-0.000609083) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.293687,0.000128657) , 
0.748442, 1, 10, 0, 0.514848,-0.0808163) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.322422,9.11353e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.128733,0.000762403) , 
0.598343, 1, 10, 0, 0.175474,0.193192) , 
1.04251, 1, 17, 0, 0.271157,0.115938) , 
0.143039, 0, 15, 0, 0.494217,-0.0298202)    );
  // itree = 337
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.878944,-0.000710652) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.119709,-0.000662553) , 
0.100616, 0, 12, 0, 0.852841,-0.325769) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728034,-0.000422353) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.407807,0.000264169) , 
0.738804, 1, 8, 0, 0.568053,-0.0939881) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.537951,-0.000264615) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.330468,9.75898e-05) , 
2.22972, 0, 10, 0, 0.382187,0.0688759) , 
0.748019, 1, 10, 0, 0.445578,0.0133299) , 
0.615633, 1, 17, 0, 0.481108,-0.0162537)    );
  // itree = 338
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71585,-0.000332522) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.477793,0.000168259) , 
0.357687, 0, 2, 0, 0.662549,-0.129303) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.773463,-0.00051383) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.231012,-0.000529428) , 
0.750158, 0, 2, 0, 0.668934,-0.208192) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.438842,-0.000109253) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.241684,0.000419066) , 
2.32041, 0, 8, 0, 0.26673,0.121946) , 
2.10391, 0, 7, 0, 0.300702,0.094061) , 
0.695491, 0, 14, 0, 0.491133,-0.0234891)    );
  // itree = 339
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.642602,-0.00027474) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.255473,0.000398897) , 
0.11931, 1, 0, 0, 0.61106,-0.086352) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.485698,-2.61539e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.223525,0.000168727) , 
1.79525, 0, 10, 0, 0.345692,0.0396706) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.390486,0.000552967) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.107824,0.000793093) , 
-1.11196, 1, 3, 0, 0.143782,0.210604) , 
0.69475, 0, 7, 0, 0.258452,0.113526) , 
0.659126, 0, 14, 0, 0.473248,-0.00823231)    );
  // itree = 340
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720672,-0.000300415) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.553112,-0.00017922) , 
0.747944, 1, 10, 0, 0.610166,-0.105535) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.793922,-0.00076432) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.16397,-0.000343206) , 
0.0176162, 1, 6, 0, 0.676646,-0.197997) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.443749,0.000107722) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.205883,0.000641106) , 
2.84238, 0, 9, 0, 0.260204,0.115418) , 
2.22008, 0, 7, 0, 0.308895,0.0787733) , 
0.144304, 0, 15, 0, 0.504308,-0.0407745)    );
  // itree = 341
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.921995,-0.000485701) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.636048,-0.000697824) , 
0.773022, 0, 2, 0, 0.786535,-0.253656) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.537327,-0.000162727) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.21096,0.00116953) , 
-1.3619, 0, 5, 0, 0.511442,-0.0316505) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.79802,-0.000987095) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118858,0.00185352) , 
0.330911, 1, 14, 0, 0.149418,0.170565) , 
0.0887553, 0, 15, 0, 0.451483,0.00184069) , 
0.0885324, 1, 16, 0, 0.499499,-0.0347741)    );
  // itree = 342
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.646572,-0.000283443) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.481946,-0.000343514) , 
2.5432, 1, 9, 0, 0.5998,-0.115118) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.684418,-0.000255667) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292186,0.000170028) , 
0.708186, 0, 14, 0, 0.540362,-0.0521335) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.416853,0.000490679) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171457,0.000569032) , 
2.69273, 0, 9, 0, 0.242002,0.161234) , 
0.309914, 1, 16, 0, 0.383445,0.0600837) , 
0.981101, 0, 7, 0, 0.485233,-0.0223435)    );
  // itree = 343
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.753389,-0.00032425) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.469302,-0.000179582) , 
0.341664, 0, 1, 0, 0.648878,-0.11392) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.973652,-0.000837063) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.00812419,0.0252363) , 
0.915818, 0, 5, 0, 0.759094,-0.377506) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.442027,-0.000150379) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180787,0.000690602) , 
0.943065, 0, 7, 0, 0.297527,0.101374) , 
0.23541, 0, 6, 0, 0.318783,0.0793209) , 
0.706898, 0, 14, 0, 0.47713,-0.0133773)    );
  // itree = 344
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704633,-0.000325695) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.384602,0.000312255) , 
0.304019, 0, 2, 0, 0.660033,-0.126158) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.562443,-0.000276426) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271865,3.98495e-05) , 
0.780896, 1, 2, 0, 0.481459,-0.0510325) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817595,-0.000304613) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.218256,0.000631016) , 
2.3522, 0, 5, 0, 0.243297,0.137421) , 
0.926263, 0, 7, 0, 0.352269,0.0511933) , 
0.708187, 0, 14, 0, 0.497399,-0.0324391)    );
  // itree = 345
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.924459,-0.000699567) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.661214,-0.000515138) , 
-2.10442, 1, 3, 0, 0.691717,-0.189019) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.588353,-0.000205098) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.328216,0.00080391) , 
2.2402, 1, 18, 0, 0.545498,-0.0484404) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.453983,0.000258293) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159302,0.000790227) , 
-0.86612, 1, 3, 0, 0.235454,0.133562) , 
0.145352, 0, 15, 0, 0.435899,0.0158969) , 
1.70908, 0, 7, 0, 0.48768,-0.0255806)    );
  // itree = 346
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683689,-0.00028279) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.439671,1.81158e-05) , 
0.329789, 1, 16, 0, 0.630154,-0.108548) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707742,-0.000466477) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.281789,8.5632e-05) , 
0.214928, 0, 0, 0, 0.428677,-0.0441654) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.245828,0.000453481) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0866629,0.00111074) , 
0.618869, 1, 5, 0, 0.200303,0.154367) , 
1.34654, 1, 9, 0, 0.235541,0.123733) , 
0.637994, 0, 14, 0, 0.50445,-0.034555)    );
  // itree = 347
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556771,-0.000181167) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.385492,-1.34283e-05) , 
-0.619103, 0, 5, 0, 0.51406,-0.0491913) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.624318,0.003783) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0365373,0.000502782) , 
0.602116, 0, 4, 0, 0.215651,0.119496) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.462555,0.0034517) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0312725,0.00186435) , 
0.903562, 1, 17, 0, 0.0446161,0.312359) , 
2.54466, 0, 9, 0, 0.0751945,0.277878) , 
0.314847, 1, 0, 0, 0.488836,-0.0303928)    );
  // itree = 348
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.763644,-0.0003218) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.540484,-0.000174221) , 
0.353619, 0, 1, 0, 0.674097,-0.140022) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717527,-0.00047874) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279929,0.00210921) , 
2.39407, 0, 9, 0, 0.570301,-0.13559) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.883312,-0.000932051) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.242277,0.000289423) , 
0.442622, 0, 12, 0, 0.2579,0.128373) , 
0.905887, 1, 17, 0, 0.304693,0.0888347) , 
0.697055, 0, 14, 0, 0.50149,-0.0330869)    );
  // itree = 349
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76887,-0.000279153) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.614543,-0.000211692) , 
0.681578, 0, 2, 0, 0.667758,-0.142407) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735969,-0.000433014) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.359811,0.00032601) , 
0.820631, 0, 1, 0, 0.401732,-0.022429) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.541715,-0.000205772) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.153917,0.000506991) , 
2.28481, 0, 8, 0, 0.224939,0.143483) , 
-0.122926, 1, 3, 0, 0.31779,0.0563472) , 
0.659385, 0, 14, 0, 0.536061,-0.0676136)    );
  // itree = 350
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687171,-0.000276598) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.3765,0.000302207) , 
-1.11424, 0, 5, 0, 0.659648,-0.128592) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.847812,-0.000767976) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.295262,9.2628e-05) , 
0.0211957, 1, 0, 0, 0.707244,-0.252679) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.474763,-0.000149097) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175443,0.000516898) , 
2.39358, 0, 10, 0, 0.224537,0.149783) , 
2.10391, 0, 7, 0, 0.269879,0.111979) , 
0.675636, 0, 14, 0, 0.502165,-0.0313917)    );
  // itree = 351
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672451,-0.000292013) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.452406,-0.000163963) , 
0.327162, 1, 15, 0, 0.629619,-0.100023) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.860342,-0.000894965) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.13033,0.00201568) , 
0.920285, 1, 8, 0, 0.680409,-0.257417) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.477411,-2.60009e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.248269,0.00039621) , 
0.598314, 1, 10, 0, 0.303375,0.0777607) , 
0.598491, 1, 9, 0, 0.32614,0.0575228) , 
0.677134, 0, 14, 0, 0.491987,-0.0285736)    );
  // itree = 352
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730515,-0.000554515) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.502566,-7.88801e-05) , 
0.123696, 1, 16, 0, 0.559105,-0.0867903) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.836273,-0.00091753) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.121199,0.000190666) , 
0.0619451, 0, 0, 0, 0.664023,-0.218139) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.444304,-0.00011057) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164235,0.000729117) , 
0.310903, 1, 16, 0, 0.275556,0.149944) , 
2.39306, 0, 11, 0, 0.300805,0.12602) , 
0.493339, 0, 7, 0, 0.492783,-0.0321482)    );
  // itree = 353
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.699003,-0.000331095) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.455644,0.000134319) , 
0.350397, 0, 2, 0, 0.641921,-0.107948) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.525634,-0.000150151) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0816947,0.00284883) , 
0.230916, 1, 0, 0, 0.465886,-0.018534) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.797274,-0.00133912) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.139381,0.000719999) , 
3.65102, 0, 8, 0, 0.15884,0.179179) , 
0.116836, 0, 15, 0, 0.346884,0.0580934) , 
0.708455, 0, 14, 0, 0.483065,-0.0185466)    );
  // itree = 354
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.790829,-0.000634016) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.507521,-0.000166395) , 
2.21048, 0, 7, 0, 0.555239,-0.0674207) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.6429,-0.000295096) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212994,0.000124181) , 
0.500785, 0, 16, 0, 0.4789,-0.0615065) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.83956,-0.000824041) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.182255,0.000441308) , 
0.796059, 0, 16, 0, 0.193136,0.200494) , 
1.3464, 1, 9, 0, 0.240373,0.157185) , 
0.344087, 1, 16, 0, 0.453346,0.00526317)    );
  // itree = 355
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.699658,-0.000270936) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.496869,-4.00813e-05) , 
0.449437, 0, 2, 0, 0.635455,-0.116018) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.832503,-0.000754193) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318905,0.00210052) , 
0.234878, 1, 8, 0, 0.484542,-0.0943753) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.323548,-2.37572e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.133574,0.000668116) , 
1.09084, 1, 17, 0, 0.177994,0.174156) , 
2.24325, 0, 17, 0, 0.218612,0.138576) , 
0.636907, 0, 14, 0, 0.505195,-0.0364597)    );
  // itree = 356
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679411,-0.000353322) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.49798,6.85734e-06) , 
0.986705, 0, 7, 0, 0.589046,-0.0864306) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.548316,-0.000476815) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0424264,0.000421434) , 
0.0521736, 0, 6, 0, 0.373379,-0.010781) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.620671,-0.00163481) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0995815,0.00052746) , 
0.37664, 0, 12, 0, 0.113348,0.219403) , 
1.49602, 1, 9, 0, 0.166526,0.172329) , 
0.5876, 0, 14, 0, 0.500325,-0.0320961)    );
  // itree = 357
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719894,-0.00032036) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.477163,-3.71982e-06) , 
0.30581, 0, 1, 0, 0.648909,-0.115406) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.850722,-0.000774002) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.179271,-0.000156732) , 
0.0182178, 1, 0, 0, 0.667722,-0.209464) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.557297,-0.000187914) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.222589,0.000362764) , 
0.495273, 0, 15, 0, 0.243438,0.1401) , 
2.03419, 0, 7, 0, 0.285694,0.105286) , 
0.694671, 0, 14, 0, 0.479791,-0.0126492)    );
  // itree = 358
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695008,-0.000311826) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.293422,0.000358433) , 
0.11583, 0, 15, 0, 0.615732,-0.11619) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731381,-0.000521481) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340623,0.000261188) , 
0.343651, 1, 13, 0, 0.367422,0.0580516) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.478419,0.0148569) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0827943,0.000433903) , 
0.912793, 0, 1, 0, 0.0939985,0.264132) , 
0.230916, 1, 0, 0, 0.302852,0.106719) , 
0.30858, 1, 16, 0, 0.500032,-0.033761)    );
  // itree = 359
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.837228,-0.000644971) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.474854,0.000131776) , 
1.60922, 1, 4, 0, 0.804016,-0.286164) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672571,-0.000297049) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.38455,0.000501621) , 
0.303866, 0, 2, 0, 0.622944,-0.0901271) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.491201,-0.000150437) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292588,0.000567903) , 
2.09431, 0, 10, 0, 0.343761,0.0491928) , 
0.707183, 0, 14, 0, 0.467201,-0.012407) , 
2.21046, 0, 7, 0, 0.503516,-0.0419236)    );
  // itree = 360
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746087,-0.000520265) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.527546,-0.000109241) , 
0.133834, 1, 16, 0, 0.579122,-0.0812452) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.854884,-0.000664168) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.342117,0.000304377) , 
-1.60969, 1, 4, 0, 0.438226,-0.0675035) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.310058,-3.80517e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0945576,0.00316897) , 
0.683652, 1, 10, 0, 0.1799,0.174626) , 
1.79496, 0, 10, 0, 0.284308,0.0767642) , 
0.11629, 0, 15, 0, 0.501745,-0.039774)    );
  // itree = 361
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645868,-0.000284077) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306294,0.000604747) , 
0.117079, 0, 15, 0, 0.567566,-0.0833288) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721598,-0.000390239) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0475982,-0.000110806) , 
0.149055, 0, 12, 0, 0.581947,-0.151783) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634839,-0.000325565) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167043,0.000731995) , 
0.839412, 0, 14, 0, 0.201658,0.19433) , 
2.39319, 0, 10, 0, 0.271442,0.130817) , 
0.397804, 1, 16, 0, 0.495827,-0.0314499)    );
  // itree = 362
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612354,-0.000283427) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.336188,0.000142764) , 
0.14376, 0, 15, 0, 0.516559,-0.0328403) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.965866,-0.000748255) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0537905,0.00844632) , 
0.349678, 0, 1, 0, 0.850561,-0.432238) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.841652,-0.000812644) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.162506,0.000498015) , 
0.795732, 0, 16, 0, 0.175682,0.21772) , 
2.86807, 0, 8, 0, 0.209105,0.185531) , 
0.39499, 1, 16, 0, 0.440817,0.0209558)    );
  // itree = 363
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.847487,-0.000463655) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.593896,-0.000208242) , 
2.38404, 0, 17, 0, 0.634595,-0.107794) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689139,-0.000118916) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279512,9.76768e-05) , 
0.243529, 0, 12, 0, 0.434165,-0.0518076) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.708005,-0.0010731) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184895,0.000524873) , 
-2.10345, 1, 4, 0, 0.204035,0.160649) , 
0.481665, 1, 8, 0, 0.272498,0.0974434) , 
0.658369, 0, 14, 0, 0.497954,-0.0303454)    );
  // itree = 364
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.810785,-0.000374149) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.564308,-0.000210696) , 
0.908751, 0, 2, 0, 0.594303,-0.0748482) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.875647,-0.000773283) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.00486046,0.0361194) , 
0.200684, 0, 15, 0, 0.645665,-0.294551) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.429362,5.94911e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.179875,0.000522927) , 
2.23948, 0, 17, 0, 0.210118,0.148316) , 
0.236077, 0, 6, 0, 0.228069,0.130064) , 
0.643027, 0, 14, 0, 0.465433,-0.00274398)    );
  // itree = 365
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664251,-0.000282197) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.327775,0.00057504) , 
0.116223, 0, 15, 0, 0.587397,-0.0995591) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.816392,-0.000434493) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0872285,-4.61487e-05) , 
2.60731, 1, 10, 0, 0.659421,-0.222843) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.291109,8.48203e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0962917,0.000957436) , 
0.798069, 1, 10, 0, 0.153718,0.232503) , 
2.39357, 0, 10, 0, 0.262961,0.134139) , 
0.396622, 1, 16, 0, 0.511655,-0.0450002)    );
  // itree = 366
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.831028,-0.00064481) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.374076,-0.000351408) , 
1.36165, 1, 4, 0, 0.789371,-0.267238) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.70725,-0.000424961) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.360135,0.00156665) , 
0.96344, 1, 8, 0, 0.569598,-0.10502) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556385,-0.000161514) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.288543,0.000264653) , 
0.225844, 0, 15, 0, 0.405734,0.0428594) , 
0.598416, 1, 10, 0, 0.445546,0.00693063) , 
2.2105, 0, 7, 0, 0.484249,-0.0239316)    );
  // itree = 367
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.642079,-0.000258324) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.18962,0.00133931) , 
0.088705, 0, 15, 0, 0.585268,-0.100675) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745326,-0.000464228) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.355359,0.000183499) , 
1.79266, 0, 9, 0, 0.521709,-0.104517) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.397853,0.00011376) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127002,0.00140378) , 
0.441243, 1, 8, 0, 0.202672,0.190313) , 
2.09442, 0, 10, 0, 0.296858,0.103274) , 
0.397804, 1, 16, 0, 0.516374,-0.0519561)    );
  // itree = 368
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714617,-0.000288979) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.527795,-0.00012679) , 
0.536, 0, 2, 0, 0.626674,-0.0989765) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.534935,-0.000195349) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.291184,0.000558341) , 
1.79546, 0, 10, 0, 0.395578,-0.021239) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.514634,-0.000422551) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.16818,0.0007981) , 
2.64891, 0, 8, 0, 0.198392,0.165091) , 
1.49368, 1, 18, 0, 0.306752,0.0626972) , 
0.66057, 0, 14, 0, 0.499227,-0.0345705)    );
  // itree = 369
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.756193,-0.000420989) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.366932,-0.00012273) , 
0.676721, 0, 14, 0, 0.641652,-0.138909) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.822648,-0.000530015) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.468641,-7.21024e-05) , 
2.39289, 0, 10, 0, 0.563585,-0.0956784) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692372,-0.000628099) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.319267,0.000174862) , 
0.242955, 0, 6, 0, 0.329643,0.105077) , 
1.2598, 1, 17, 0, 0.396237,0.047929) , 
1.22641, 0, 7, 0, 0.487007,-0.0211754)    );
  // itree = 370
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.778936,-0.000580483) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.430653,-0.00016263) , 
0.493507, 0, 13, 0, 0.737297,-0.233086) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615174,-0.000215841) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.101729,0.00135934) , 
0.0916218, 0, 15, 0, 0.554191,-0.0829973) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.573842,-0.000177254) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.276642,0.000455273) , 
1.3466, 1, 9, 0, 0.335485,0.0916032) , 
0.976371, 1, 8, 0, 0.468959,-0.014954) , 
1.71693, 0, 7, 0, 0.524943,-0.0604634)    );
  // itree = 371
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745291,-0.000411305) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318848,0.00105266) , 
0.977198, 1, 8, 0, 0.606738,-0.131232) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738268,-0.000394553) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.365721,3.97893e-05) , 
0.167341, 0, 15, 0, 0.593583,-0.0980069) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.753832,-0.000467106) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.269441,0.000198104) , 
0.449944, 1, 9, 0, 0.31214,0.118801) , 
1.23335, 0, 7, 0, 0.417428,0.0376929) , 
0.748008, 1, 10, 0, 0.482007,-0.0199325)    );
  // itree = 372
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687698,-0.000360258) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226836,0.000694577) , 
0.576141, 0, 14, 0, 0.629967,-0.139353) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.753909,-0.000402716) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.3272,0.0022135) , 
2.24124, 1, 18, 0, 0.707215,-0.190084) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.404986,4.90997e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.140822,0.00183539) , 
1.5487, 1, 8, 0, 0.356726,0.0751426) , 
0.134656, 1, 16, 0, 0.4075,0.0367199) , 
0.986685, 0, 7, 0, 0.513854,-0.0474551)    );
  // itree = 373
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645489,-0.00030386) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388176,7.18565e-05) , 
0.317766, 0, 2, 0, 0.6094,-0.106197) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.954982,-0.000498915) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.274478,0.000320012) , 
0.183953, 0, 15, 0, 0.799694,-0.288138) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.536004,-6.25854e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.223992,0.000132604) , 
0.302172, 0, 12, 0, 0.296596,0.117193) , 
2.15312, 0, 7, 0, 0.327796,0.0920568) , 
0.0451829, 1, 0, 0, 0.485266,-0.0188051)    );
  // itree = 374
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.740294,-0.00059666) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.276169,-0.000448707) , 
2.69333, 1, 17, 0, 0.725255,-0.213766) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.625463,-0.000256609) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.360589,6.04935e-05) , 
0.281937, 0, 7, 0, 0.591773,-0.0625073) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.521014,8.17919e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.242443,0.000367096) , 
2.99198, 0, 9, 0, 0.27653,0.104927) , 
0.69314, 0, 14, 0, 0.428926,0.0239855) , 
1.97337, 0, 7, 0, 0.468939,-0.00811739)    );
  // itree = 375
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676133,-0.000352834) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.408111,0.000632887) , 
0.976571, 1, 8, 0, 0.567504,-0.100821) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.916917,-0.000893988) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168374,-0.00032099) , 
0.979415, 0, 7, 0, 0.810451,-0.340036) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.515291,-0.000232986) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306414,7.0884e-05) , 
2.05185, 0, 10, 0, 0.386827,0.0663853) , 
0.598885, 1, 10, 0, 0.406579,0.047435) , 
2.5432, 0, 9, 0, 0.475229,-0.01581)    );
  // itree = 376
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.66239,-0.000412018) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.382365,0.00105311) , 
0.966562, 1, 8, 0, 0.548255,-0.0804879) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.658612,-0.000256232) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.41296,-0.000133142) , 
1.35112, 1, 17, 0, 0.524679,-0.015146) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.602032,-0.000583847) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221677,0.000383039) , 
0.776565, 0, 14, 0, 0.271124,0.13612) , 
0.224906, 0, 15, 0, 0.379458,0.0714896) , 
0.747995, 1, 10, 0, 0.434852,0.0216155)    );
  // itree = 377
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.804631,-0.000626942) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0858112,-0.000725002) , 
0.585037, 0, 14, 0, 0.772546,-0.245686) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.609695,-0.000263249) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.235721,0.000156229) , 
0.317196, 0, 7, 0, 0.553141,-0.0842048) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.588464,-0.000167982) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292155,0.000310235) , 
0.360445, 0, 15, 0, 0.370216,0.0693306) , 
0.738762, 1, 8, 0, 0.456074,-0.00273265) , 
2.22002, 0, 7, 0, 0.488033,-0.0272679)    );
  // itree = 378
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660446,-0.000256668) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.255142,0.00124598) , 
0.227877, 0, 2, 0, 0.643985,-0.120713) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.605251,-0.00040889) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.155189,0.00290156) , 
-0.372718, 0, 5, 0, 0.503732,-0.11363) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.635131,-0.000498715) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186578,0.000737473) , 
2.7685, 0, 8, 0, 0.227281,0.126793) , 
2.3935, 0, 10, 0, 0.280602,0.0804211) , 
0.642489, 0, 14, 0, 0.522624,-0.0535395)    );
  // itree = 379
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.929798,-0.000766967) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.678269,-0.000358541) , 
2.54725, 0, 17, 0, 0.713425,-0.173822) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.470246,-0.000131951) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.293501,0.000154017) , 
-0.371637, 0, 5, 0, 0.414097,0.0166838) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.444107,-0.000398781) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.140967,0.00127125) , 
0.299187, 1, 11, 0, 0.213337,0.214795) , 
0.322651, 0, 1, 0, 0.382925,0.0474447) , 
0.768543, 0, 14, 0, 0.491304,-0.0251141)    );
  // itree = 380
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645342,-0.00035537) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.467416,-5.2175e-05) , 
1.19111, 1, 17, 0, 0.528468,-0.0400629) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.865113,-0.000819634) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0211033,0.0351382) , 
0.497839, 0, 14, 0, 0.637618,-0.290548) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686456,-0.000574608) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0952034,0.000722861) , 
0.222584, 1, 13, 0, 0.123068,0.203011) , 
0.242959, 0, 6, 0, 0.152037,0.175224) , 
0.549745, 0, 14, 0, 0.467528,-0.00521064)    );
  // itree = 381
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718682,-0.000370136) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.426821,-2.57665e-05) , 
0.709825, 0, 14, 0, 0.581724,-0.0996292) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.851203,-0.00050476) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0784658,-2.76412e-05) , 
1.63892, 1, 18, 0, 0.742283,-0.295098) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.577283,-0.000325902) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279901,0.000227171) , 
2.42918, 0, 10, 0, 0.324473,0.0993937) , 
0.149649, 1, 10, 0, 0.364496,0.0616047) , 
0.740007, 0, 7, 0, 0.496216,-0.0361627)    );
  // itree = 382
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.650219,-0.000347718) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.466226,-7.3049e-05) , 
0.941986, 0, 7, 0, 0.552605,-0.0574684) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.770937,-0.000471074) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.29035,4.11231e-05) , 
2.42761, 0, 10, 0, 0.41877,-0.050766) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.309488,-0.00020017) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0856609,0.00287934) , 
1.47396, 0, 7, 0, 0.148451,0.194497) , 
0.489915, 1, 8, 0, 0.23341,0.117413) , 
0.116155, 0, 15, 0, 0.470291,-0.0123699)    );
  // itree = 383
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.586559,-0.000259317) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.477737,3.36072e-05) , 
0.452697, 0, 2, 0, 0.556106,-0.0685749) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.797155,-0.000359289) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.373236,-0.000122347) , 
0.0420882, 1, 8, 0, 0.474193,-0.0648312) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.520361,-0.000341169) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202612,0.00080062) , 
2.54313, 0, 10, 0, 0.239965,0.152431) , 
0.441304, 1, 8, 0, 0.309094,0.0883095) , 
0.35259, 1, 16, 0, 0.476568,-0.0180581)    );
  // itree = 384
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.629524,-0.000253658) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.334,0.000547031) , 
0.265925, 0, 2, 0, 0.60526,-0.0889194) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.959806,-0.000873658) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.028638,0.0321044) , 
-0.8541, 1, 3, 0, 0.734047,-0.342226) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.311838,0.000298568) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.107341,0.000874188) , 
0.46914, 1, 16, 0, 0.252696,0.100017) , 
0.220367, 1, 13, 0, 0.274336,0.0801344) , 
0.636914, 0, 14, 0, 0.489804,-0.0299384)    );
  // itree = 385
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.62166,-0.000252499) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127758,0.000565251) , 
0.0902882, 0, 15, 0, 0.566358,-0.0939213) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.797151,-0.000667762) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.215236,-0.00037483) , 
0.0241424, 1, 0, 0, 0.701633,-0.18631) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714935,-0.000271821) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.269371,0.000321054) , 
0.522698, 0, 15, 0, 0.291222,0.137548) , 
1.93079, 0, 7, 0, 0.38096,0.0667349) , 
0.979673, 1, 8, 0, 0.489838,-0.027613)    );
  // itree = 386
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.699279,-0.000287433) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.471179,-5.10522e-05) , 
0.452685, 0, 2, 0, 0.620908,-0.0902781) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.475674,-0.000229704) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.110362,0.00371788) , 
0.377812, 1, 16, 0, 0.357522,0.0225929) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.431575,0.000294332) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.146089,0.000342917) , 
0.619347, 0, 16, 0, 0.192897,0.175599) , 
2.39384, 0, 9, 0, 0.273357,0.100818) , 
0.671902, 0, 14, 0, 0.47567,-0.0104208)    );
  // itree = 387
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744865,-0.000424741) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.348274,-0.000255723) , 
0.0671747, 1, 0, 0, 0.713256,-0.172482) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.827719,-0.000598828) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.311084,-0.000186678) , 
1.18115, 0, 7, 0, 0.76318,-0.24374) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.471866,-7.21006e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.132085,0.00102531) , 
0.115897, 0, 15, 0, 0.364818,0.0615474) , 
0.0889877, 1, 16, 0, 0.399075,0.0352944) , 
0.776892, 0, 14, 0, 0.489863,-0.0247461)    );
  // itree = 388
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.774979,-0.000489377) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.442531,-0.000217817) , 
0.736861, 0, 7, 0, 0.694742,-0.154363) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709955,-0.000536393) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171917,0.000521987) , 
0.0159501, 1, 0, 0, 0.628817,-0.124931) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.638659,-0.000501026) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.324606,0.000133547) , 
2.86877, 0, 8, 0, 0.343419,0.0736837) , 
0.133459, 1, 16, 0, 0.387892,0.0427336) , 
0.778374, 0, 14, 0, 0.475269,-0.0133899)    );
  // itree = 389
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.636593,-0.000239057) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.452799,5.23148e-05) , 
0.309244, 0, 1, 0, 0.599817,-0.111966) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.758826,-0.000580497) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.37032,6.93949e-05) , 
1.88496, 0, 17, 0, 0.521088,-0.112633) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.797312,-0.000491405) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202096,0.00109276) , 
1.24901, 1, 9, 0, 0.229143,0.160264) , 
2.09439, 0, 10, 0, 0.315321,0.0797086) , 
0.397804, 1, 16, 0, 0.531849,-0.0661738)    );
  // itree = 390
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653369,-0.000280566) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.336732,0.000372006) , 
0.647441, 0, 14, 0, 0.5217,-0.0633694) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.976877,-0.00112561) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.049265,0.011144) , 
2.08253, 0, 10, 0, 0.842445,-0.379159) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.844329,-0.000851916) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279288,0.000328516) , 
0.135834, 1, 2, 0, 0.299825,0.185765) , 
0.519778, 0, 15, 0, 0.31596,0.168966) , 
0.363243, 0, 2, 0, 0.493992,-0.0320792)    );
  // itree = 391
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.569682,-0.0002072) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.13876,0.00493228) , 
0.0619076, 0, 15, 0, 0.540711,-0.0658463) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.834309,-0.000676877) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.370268,0.000181598) , 
0.49409, 0, 15, 0, 0.451001,-0.0144255) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.266404,0.00222775) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.078677,0.00107241) , 
1.95427, 0, 17, 0, 0.103828,0.247133) , 
0.708917, 0, 13, 0, 0.260208,0.129317) , 
0.473739, 1, 16, 0, 0.495739,-0.0345567)    );
  // itree = 392
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655617,-0.000243695) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.446147,-0.000149754) , 
2.09439, 0, 9, 0, 0.599285,-0.0796904) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.685058,-0.000331128) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.109275,0.00720958) , 
0.421116, 0, 13, 0, 0.61217,-0.219408) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.369049,0.000113077) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.126011,0.000564136) , 
0.0461831, 1, 0, 0, 0.195076,0.151906) , 
2.54309, 0, 10, 0, 0.271594,0.0837867) , 
0.636325, 0, 14, 0, 0.486114,-0.023232)    );
  // itree = 393
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.904501,-0.000716835) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.561899,-0.000194749) , 
0.244948, 0, 6, 0, 0.571461,-0.0746284) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.631927,-0.000557767) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318639,7.0126e-06) , 
0.482635, 1, 8, 0, 0.41686,-0.0221707) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.518235,-0.000299988) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.112145,0.00100875) , 
2.53101, 0, 17, 0, 0.138568,0.198025) , 
1.05785, 1, 17, 0, 0.213267,0.13892) , 
0.116408, 0, 15, 0, 0.48344,-0.0221521)    );
  // itree = 394
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.605602,-0.000242928) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.420603,-3.2352e-05) , 
1.79309, 1, 18, 0, 0.544944,-0.0568841) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.965208,-0.00113794) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0329277,-0.000727761) , 
0.600228, 0, 1, 0, 0.807177,-0.342587) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.503467,-0.000648569) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0888172,0.00143002) , 
0.0820955, 1, 16, 0, 0.119564,0.199804) , 
3.61189, 0, 8, 0, 0.147909,0.177446) , 
0.0895322, 0, 15, 0, 0.480521,-0.0188614)    );
  // itree = 395
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.781541,-0.000599941) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.436886,-6.44495e-05) , 
0.548153, 0, 13, 0, 0.724398,-0.205027) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817867,-0.00062304) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.142603,0.044774) , 
1.69708, 1, 8, 0, 0.766578,-0.284017) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.529833,-0.000118695) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252393,0.000720162) , 
0.14341, 0, 15, 0, 0.430651,0.0170406) , 
0.59841, 1, 9, 0, 0.455938,-0.00562093) , 
1.71925, 0, 7, 0, 0.511576,-0.0469478)    );
  // itree = 396
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.785832,-0.000515202) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.505569,-0.000262434) , 
0.115391, 0, 15, 0, 0.738483,-0.209444) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.63454,-0.00018605) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.284344,0.000870128) , 
-1.11416, 0, 5, 0, 0.595579,-0.0956743) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.838986,-0.00123665) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253447,0.000342978) , 
0.321071, 1, 14, 0, 0.269039,0.107151) , 
0.172762, 0, 15, 0, 0.456422,-0.00923891) , 
0.133026, 1, 16, 0, 0.524708,-0.0577079)    );
  // itree = 397
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.838373,-0.000572095) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.508065,-0.000425696) , 
0.197829, 1, 15, 0, 0.787371,-0.250341) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.947597,-0.000696672) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0261308,-0.000383378) , 
0.674606, 1, 0, 0, 0.784189,-0.403973) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.521388,-0.000120841) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.205338,0.000484695) , 
0.597525, 0, 14, 0, 0.430741,0.0199707) , 
0.242955, 0, 6, 0, 0.438835,0.0102623) , 
0.0883573, 1, 16, 0, 0.489277,-0.0274532)    );
  // itree = 398
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.608725,-0.000237243) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253862,0.000582862) , 
-1.3619, 0, 5, 0, 0.584581,-0.0787871) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.66633,-0.000360685) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.313943,0.000348302) , 
0.430107, 0, 16, 0, 0.487394,-0.100144) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639082,-0.000581052) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.231537,0.000555387) , 
0.804959, 0, 1, 0, 0.257359,0.120014) , 
2.09437, 0, 10, 0, 0.31814,0.061843) , 
0.143039, 0, 15, 0, 0.490046,-0.0288903)    );
  // itree = 399
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661783,-0.00035495) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270333,0.000667882) , 
0.575327, 0, 14, 0, 0.609146,-0.118575) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.613024,-0.000244143) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238835,0.000998072) , 
0.954776, 1, 8, 0, 0.488691,-0.0362623) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.403953,7.52357e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.214834,0.000229396) , 
0.137216, 1, 12, 0, 0.254805,0.162838) , 
0.654055, 0, 7, 0, 0.340301,0.0900576) , 
0.981117, 0, 7, 0, 0.472655,-0.0126533)    );
  // itree = 400
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.662999,-0.000278756) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.456295,-3.41869e-05) , 
0.49335, 0, 7, 0, 0.616447,-0.0947214) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.370958,0.000108787) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0845489,0.00098538) , 
0.26078, 1, 12, 0, 0.323366,0.0407704) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.576382,0.00821575) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0901239,0.00094537) , 
0.908548, 0, 1, 0, 0.100969,0.220165) , 
0.476698, 1, 16, 0, 0.26204,0.0902384) , 
0.637994, 0, 14, 0, 0.497463,-0.032625)    );
  // itree = 401
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679949,-0.000402655) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.337276,-2.37163e-05) , 
0.085971, 1, 0, 0, 0.620928,-0.131204) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.909174,-0.000625152) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.273869,0.00108274) , 
2.09204, 0, 10, 0, 0.688008,-0.272832) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664704,-0.000552001) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.278298,0.000122715) , 
2.54301, 0, 11, 0, 0.298575,0.132653) , 
2.70877, 0, 8, 0, 0.323127,0.107089) , 
0.986728, 0, 7, 0, 0.473478,-0.0132179)    );
  // itree = 402
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688568,-0.000403479) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.136638,0.000603368) , 
0.577984, 0, 14, 0, 0.629579,-0.125418) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.829484,-0.000442159) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.55055,-5.41028e-05) , 
0.282115, 0, 1, 0, 0.688365,-0.158184) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705023,-0.000208928) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.307684,0.000136539) , 
2.7088, 0, 8, 0, 0.338327,0.0756349) , 
0.808816, 0, 14, 0, 0.410878,0.0271719) , 
1.23334, 0, 7, 0, 0.489344,-0.0275743)    );
  // itree = 403
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730815,-0.000357144) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.413874,0.000114766) , 
0.259865, 0, 1, 0, 0.662063,-0.121603) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.607843,-0.000313119) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.391691,-2.45129e-05) , 
0.366637, 1, 13, 0, 0.414765,0.0112689) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.662642,-0.000644293) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.105446,0.000760644) , 
0.249267, 0, 6, 0, 0.153032,0.194613) , 
0.230916, 1, 0, 0, 0.375806,0.0385597) , 
0.740709, 0, 14, 0, 0.481556,-0.0206079)    );
  // itree = 404
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.827146,-0.000718621) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.575002,-0.000222645) , 
0.615988, 1, 17, 0, 0.604291,-0.0967011) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719625,-0.00045511) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.300489,0.000811076) , 
1.0458, 0, 18, 0, 0.643166,-0.19804) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.448167,-8.43709e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118536,0.000659651) , 
0.173268, 0, 15, 0, 0.291657,0.121405) , 
1.0472, 1, 9, 0, 0.340844,0.0767055) , 
0.26457, 1, 16, 0, 0.476464,-0.0125625)    );
  // itree = 405
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7197,-0.000497274) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198308,-0.000350897) , 
0.178216, 0, 1, 0, 0.703809,-0.17505) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.577274,-0.000149683) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.327447,0.000290395) , 
0.893667, 1, 8, 0, 0.476354,-0.0278144) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65898,-0.000333859) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271115,5.43153e-05) , 
0.495609, 0, 15, 0, 0.296232,0.134234) , 
0.371267, 1, 5, 0, 0.417689,0.0249642) , 
0.13294, 1, 16, 0, 0.484201,-0.0215312)    );
  // itree = 406
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677712,-0.00028249) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.377922,0.000275478) , 
0.357687, 0, 2, 0, 0.623963,-0.101) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677649,-0.000532398) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335474,0.000832414) , 
0.592412, 0, 14, 0, 0.504281,-0.118573) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.267938,0.000419243) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0865818,0.000834721) , 
0.826007, 1, 2, 0, 0.222635,0.125466) , 
-1.11416, 1, 4, 0, 0.278049,0.0774513) , 
0.644626, 0, 14, 0, 0.501685,-0.0379184)    );
  // itree = 407
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.623984,-0.000253087) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.269373,0.00125972) , 
0.0885232, 0, 15, 0, 0.574111,-0.0913128) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.431573,-8.42982e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0960203,0.0576245) , 
0.367969, 0, 2, 0, 0.392459,0.00528581) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.772703,-0.00310375) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134382,0.0005771) , 
-2.4581, 1, 5, 0, 0.141921,0.237696) , 
0.371505, 0, 5, 0, 0.25959,0.128541) , 
0.397804, 1, 16, 0, 0.500442,-0.0398173)    );
  // itree = 408
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.726091,-0.000350992) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.328686,-2.18058e-05) , 
0.115378, 0, 15, 0, 0.635802,-0.139514) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.86633,-0.000613327) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.107028,0.0085153) , 
-0.868136, 0, 5, 0, 0.821385,-0.333721) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.46927,-5.16703e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.122499,0.000976144) , 
0.145773, 0, 15, 0, 0.350813,0.082362) , 
2.54307, 0, 11, 0, 0.388169,0.0493317) , 
0.981101, 0, 7, 0, 0.510238,-0.0437584)    );
  // itree = 409
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.737318,-0.000406166) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.485867,-2.69308e-05) , 
0.748026, 1, 10, 0, 0.57991,-0.108113) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.836729,-0.000599768) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.41724,-0.000305576) , 
0.146289, 0, 15, 0, 0.713959,-0.191099) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.453785,7.75394e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0924077,0.00170847) , 
0.119379, 0, 15, 0, 0.352196,0.0850074) , 
1.96224, 0, 7, 0, 0.423919,0.0302665) , 
0.985011, 1, 8, 0, 0.514045,-0.0496839)    );
  // itree = 410
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.73457,-0.00058294) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.15554,-6.6729e-05) , 
0.0721162, 1, 0, 0, 0.687424,-0.176331) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702339,-0.000271083) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.493517,-0.000146153) , 
0.887944, 0, 7, 0, 0.595124,-0.0645308) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.40351,9.8951e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.189208,0.000738023) , 
1.34718, 1, 18, 0, 0.296602,0.0852923) , 
0.702336, 0, 14, 0, 0.42881,0.0189395) , 
1.69495, 0, 7, 0, 0.478937,-0.0189098)    );
  // itree = 411
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65024,-0.000281399) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.332775,0.000292152) , 
0.117723, 0, 15, 0, 0.576209,-0.0834661) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.636144,-0.00039008) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0898225,0.000865521) , 
0.78763, 1, 2, 0, 0.499007,-0.0728157) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.555975,-0.000300353) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199281,0.000767667) , 
0.770298, 0, 14, 0, 0.256758,0.136213) , 
1.01007, 0, 7, 0, 0.315615,0.0854277) , 
0.344089, 1, 16, 0, 0.488173,-0.0264093)    );
  // itree = 412
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706534,-0.000314889) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.505982,2.84678e-05) , 
0.293382, 0, 1, 0, 0.645873,-0.107588) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719766,-0.0003523) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.40428,0.000176284) , 
0.234274, 1, 8, 0, 0.469138,-0.0528087) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.716535,-0.000729812) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202063,0.000247538) , 
0.346645, 1, 14, 0, 0.214523,0.162599) , 
1.79417, 0, 17, 0, 0.321399,0.0721805) , 
0.708981, 0, 14, 0, 0.47574,-0.0133289)    );
  // itree = 413
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661547,-0.000313099) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.189924,0.00101249) , 
0.572763, 0, 14, 0, 0.594862,-0.108531) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.520764,-0.000209166) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.247725,0.00100366) , 
0.535912, 0, 2, 0, 0.423977,0.00559444) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.866898,-0.000973927) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187423,0.000208816) , 
2.11779, 0, 3, 0, 0.21095,0.205159) , 
1.64475, 1, 18, 0, 0.338952,0.0852455) , 
0.736831, 0, 7, 0, 0.49579,-0.0335131)    );
  // itree = 414
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.649413,-0.000330841) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238836,0.000405451) , 
0.539255, 0, 14, 0, 0.611457,-0.124965) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.781646,-0.000399041) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.216585,0.0013178) , 
2.08948, 1, 18, 0, 0.72089,-0.198329) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.524218,-0.000103105) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.315103,0.000206348) , 
1.49602, 1, 9, 0, 0.360939,0.0602255) , 
0.134656, 1, 16, 0, 0.417881,0.0193238) , 
0.982443, 0, 7, 0, 0.506628,-0.0468268)    );
  // itree = 415
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.765378,-0.000561139) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.371371,0.000118734) , 
0.0157337, 1, 0, 0, 0.718566,-0.181793) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.734616,-0.000388499) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0414681,0.00644708) , 
0.0614501, 0, 15, 0, 0.689131,-0.196032) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.52546,-0.000108249) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249187,0.000384461) , 
0.172793, 0, 15, 0, 0.399082,0.0378627) , 
1.76166, 0, 7, 0, 0.436455,0.00772479) , 
0.132035, 1, 16, 0, 0.502798,-0.0368432)    );
  // itree = 416
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700965,-0.000384705) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.471888,-1.26581e-05) , 
0.897631, 1, 10, 0, 0.569297,-0.0960999) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.801733,-0.000693206) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.28965,-0.000320875) , 
0.0156092, 1, 0, 0, 0.681538,-0.157312) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.517715,-0.00022075) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251426,0.000363708) , 
1.79488, 0, 11, 0, 0.293834,0.130499) , 
1.93082, 0, 7, 0, 0.372899,0.071805) , 
0.979718, 1, 8, 0, 0.488574,-0.0270877)    );
  // itree = 417
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.73531,-0.000581251) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.344492,-6.15471e-05) , 
0.534797, 0, 13, 0, 0.669902,-0.157166) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.531948,-0.000155913) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233641,0.000110781) , 
0.164442, 0, 7, 0, 0.504887,-0.0184287) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.669671,-0.000393521) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.107431,0.00118309) , 
2.66682, 0, 8, 0, 0.175524,0.156093) , 
0.116475, 0, 15, 0, 0.422663,0.0251399) , 
1.72668, 0, 7, 0, 0.467734,-0.00809348)    );
  // itree = 418
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707982,-0.000314383) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.468968,-2.81754e-05) , 
0.305196, 0, 1, 0, 0.633712,-0.0957028) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.775574,-0.000459564) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.416307,-0.000446634) , 
0.136087, 1, 12, 0, 0.65507,-0.194051) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.644361,-0.00041366) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.248959,0.000363315) , 
2.87006, 0, 8, 0, 0.272851,0.110062) , 
1.82992, 0, 7, 0, 0.331474,0.0634186) , 
0.708182, 0, 14, 0, 0.472427,-0.0107896)    );
  // itree = 419
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703697,-0.000380945) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322825,0.000106838) , 
0.116474, 0, 15, 0, 0.631489,-0.115125) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.794734,-0.000424762) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.434409,-0.0001047) , 
2.3936, 0, 11, 0, 0.465405,0.0078846) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.467311,-0.000258091) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.117663,0.000707912) , 
2.68091, 0, 8, 0, 0.142174,0.193466) , 
0.143156, 0, 15, 0, 0.341808,0.0788474) , 
0.221227, 1, 16, 0, 0.468399,-0.00591894)    );
  // itree = 420
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.791984,-0.000531022) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.299162,-5.45863e-05) , 
0.602176, 0, 14, 0, 0.741664,-0.220164) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.543855,-0.000120368) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335096,0.000318381) , 
0.267463, 0, 1, 0, 0.516348,-0.063084) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.563874,-0.000526049) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.287633,0.000498614) , 
0.354041, 1, 13, 0, 0.31841,0.111729) , 
-0.619081, 0, 5, 0, 0.468007,-0.0203907) , 
1.70907, 0, 7, 0, 0.526152,-0.0628376)    );
  // itree = 421
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663122,-0.000258174) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.275284,0.000333593) , 
0.133711, 1, 0, 0, 0.600834,-0.122017) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.878402,-0.000867355) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.536428,-0.000394455) , 
1.04739, 1, 9, 0, 0.621326,-0.113784) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.421326,-6.12985e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233598,0.000336964) , 
0.897538, 1, 11, 0, 0.32356,0.114744) , 
1.72668, 0, 7, 0, 0.374296,0.0758051) , 
1.50607, 1, 17, 0, 0.502929,-0.036522)    );
  // itree = 422
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712579,-0.000310396) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.512105,-0.000147407) , 
0.979678, 1, 8, 0, 0.650122,-0.111942) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.898558,-0.00050499) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.380868,-0.000662844) , 
0.0884971, 0, 15, 0, 0.792582,-0.298209) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.804002,-0.000545033) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271814,0.000321427) , 
0.236077, 0, 6, 0, 0.297068,0.0801735) , 
2.19388, 0, 7, 0, 0.345308,0.0433371) , 
0.694671, 0, 14, 0, 0.500026,-0.0354796)    );
  // itree = 423
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67593,-0.000233338) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.541838,-0.000168053) , 
0.724693, 0, 2, 0, 0.597893,-0.125286) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.898311,-0.000415367) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.548808,-8.16864e-05) , 
0.405264, 1, 13, 0, 0.650644,-0.145959) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.636544,-0.000523851) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.302963,0.000234968) , 
2.75688, 0, 8, 0, 0.346279,0.0754343) , 
0.386831, 0, 15, 0, 0.423407,0.0193317) , 
0.977115, 1, 8, 0, 0.525607,-0.065374)    );
  // itree = 424
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.616854,-0.000243533) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.470532,-8.71418e-05) , 
0.541179, 0, 2, 0, 0.5638,-0.0769787) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7925,-0.000727368) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.114786,0.0184875) , 
0.51393, 1, 1, 0, 0.651761,-0.213765) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.61547,-0.000588569) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.16815,0.000461338) , 
0.233886, 0, 6, 0, 0.199379,0.182698) , 
1.30407, 0, 7, 0, 0.251189,0.137292) , 
0.397802, 1, 16, 0, 0.489222,-0.0258612)    );
  // itree = 425
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64077,-0.000266487) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.371643,0.000232846) , 
0.135721, 0, 15, 0, 0.599644,-0.077598) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.807397,-0.000453154) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.36175,0.000126726) , 
2.14422, 1, 10, 0, 0.461366,-0.0895672) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.508893,-0.000174763) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.121862,0.00107047) , 
-1.11419, 1, 4, 0, 0.209413,0.13572) , 
2.09432, 0, 10, 0, 0.283022,0.0699011) , 
0.643347, 0, 14, 0, 0.483328,-0.023412)    );
  // itree = 426
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736078,-0.00037652) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.501257,-0.000102056) , 
1.17713, 0, 7, 0, 0.593866,-0.0924413) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.818082,-0.00124959) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227015,0.000336178) , 
1.51064, 0, 17, 0, 0.697059,-0.310722) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.290598,0.000148003) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0472484,0.00198024) , 
0.737031, 0, 7, 0, 0.194684,0.151234) , 
2.54278, 0, 11, 0, 0.224493,0.123823) , 
0.115994, 0, 15, 0, 0.506712,-0.0414131)    );
  // itree = 427
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.796341,-0.000333024) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.539739,-0.000189493) , 
0.387876, 0, 1, 0, 0.679881,-0.139646) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817519,-0.000448832) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.471758,-8.92329e-05) , 
2.14424, 1, 10, 0, 0.538897,-0.125743) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.595717,-0.000440209) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236264,0.000686591) , 
1.82762, 0, 7, 0, 0.282726,0.0997783) , 
2.09435, 0, 10, 0, 0.35757,0.0338886) , 
0.706903, 0, 14, 0, 0.516424,-0.0516389)    );
  // itree = 428
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729113,-0.000430319) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.430916,0.0011967) , 
0.977585, 1, 8, 0, 0.608686,-0.138837) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.616544,-0.0002889) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.305535,7.94307e-05) , 
0.711272, 0, 7, 0, 0.503631,-0.00713797) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.868582,-0.00123437) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.12337,0.000744831) , 
3.63651, 0, 8, 0, 0.147516,0.193789) , 
0.117052, 0, 15, 0, 0.410959,0.0451493) , 
0.448791, 1, 11, 0, 0.459792,-0.000289818)    );
  // itree = 429
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.758002,-0.000538927) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.550349,-9.78608e-05) , 
0.113762, 1, 16, 0, 0.601606,-0.112024) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.749395,-0.000447449) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.146806,0.01315) , 
0.552072, 0, 2, 0, 0.562553,-0.149058) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.643989,-0.000383048) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229859,0.000689993) , 
0.79315, 0, 14, 0, 0.28508,0.106408) , 
0.616365, 1, 18, 0, 0.33326,0.0620495) , 
0.396657, 1, 16, 0, 0.536717,-0.069931)    );
  // itree = 430
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.786928,-0.000665495) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.559223,-0.000343257) , 
1.71957, 0, 7, 0, 0.685864,-0.153663) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.881011,-0.00062856) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.460172,-3.24161e-05) , 
0.236077, 0, 6, 0, 0.478218,-0.0360361) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.454661,-0.000174624) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211125,0.000195267) , 
1.25804, 0, 7, 0, 0.289563,0.144397) , 
1.65825, 1, 17, 0, 0.411002,0.0282503) , 
0.126083, 1, 16, 0, 0.466599,-0.00854553)    );
  // itree = 431
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.756903,-0.000535743) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.49372,-0.00012597) , 
1.69637, 0, 7, 0, 0.544618,-0.0510262) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.821274,-0.00109386) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0276897,0.000368229) , 
1.796, 1, 9, 0, 0.551837,-0.219907) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755666,-0.00112072) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.150018,0.000711583) , 
0.910518, 0, 13, 0, 0.180002,0.16591) , 
0.81164, 0, 1, 0, 0.210872,0.13388) , 
0.115897, 0, 15, 0, 0.458915,-0.00354391)    );
  // itree = 432
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.586258,-0.00024015) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378152,1.40167e-05) , 
0.481444, 0, 7, 0, 0.530188,-0.0444082) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.991136,-0.000476254) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363582,-0.0024824) , 
0.152427, 1, 10, 0, 0.880918,-0.344108) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.621906,-0.00109195) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.107671,0.00142332) , 
0.331439, 1, 14, 0, 0.121797,0.184496) , 
0.0403148, 1, 16, 0, 0.158021,0.159273) , 
0.088705, 0, 15, 0, 0.469183,-0.0110213)    );
  // itree = 433
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.812666,-0.000412446) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.498238,-0.00035321) , 
0.145472, 0, 0, 0, 0.625028,-0.176942) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655232,-0.000259782) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.427549,4.97805e-05) , 
0.311351, 1, 16, 0, 0.567982,-0.0639988) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.39393,-0.000170759) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0773222,0.0015369) , 
0.982536, 0, 7, 0, 0.238491,0.136108) , 
0.144066, 0, 15, 0, 0.45358,0.00547949) , 
1.34657, 1, 9, 0, 0.483145,-0.025978)    );
  // itree = 434
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.626371,-0.000279279) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.358213,1.08112e-05) , 
0.0908652, 1, 0, 0, 0.561844,-0.0625435) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.971063,-0.000781783) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.358065,0.000277523) , 
1.79835, 1, 10, 0, 0.469572,-0.0825436) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.488186,-0.00211068) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.115267,0.000787903) , 
-2.35237, 1, 5, 0, 0.12171,0.208462) , 
1.7944, 0, 11, 0, 0.190555,0.15087) , 
0.115522, 0, 15, 0, 0.471697,-0.010728)    );
  // itree = 435
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.784708,-0.000534507) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.547936,-0.000126235) , 
1.69638, 0, 7, 0, 0.593349,-0.0933669) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.782691,-0.00087892) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.106565,0.0140375) , 
0.447156, 0, 13, 0, 0.719357,-0.245183) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.48424,0.00070748) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158635,0.000825553) , 
0.354562, 1, 13, 0, 0.207746,0.131703) , 
0.618641, 1, 17, 0, 0.257609,0.0949704) , 
0.116222, 0, 15, 0, 0.510142,-0.0466907)    );
  // itree = 436
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.669655,-0.000324732) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.416059,-0.000129226) , 
0.0318232, 1, 0, 0, 0.590253,-0.092248) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.697873,-0.000382825) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221825,1.3839e-05) , 
0.673811, 0, 14, 0, 0.465551,-0.0383994) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.399127,0.000329162) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167605,0.00056705) , 
0.632277, 0, 1, 0, 0.219442,0.171252) , 
0.441243, 1, 8, 0, 0.291754,0.109652) , 
0.308582, 1, 16, 0, 0.475128,-0.0143796)    );
  // itree = 437
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.771511,-0.000308121) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.475794,-4.51605e-05) , 
0.408705, 0, 2, 0, 0.691041,-0.14928) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.855247,-0.000612845) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.345448,-0.00063167) , 
0.118296, 0, 15, 0, 0.724954,-0.21787) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.516068,-7.64062e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.284777,0.000250484) , 
0.299225, 1, 10, 0, 0.312227,0.0737934) , 
0.0924299, 1, 16, 0, 0.340933,0.053508) , 
0.708182, 0, 14, 0, 0.516419,-0.0481363)    );
  // itree = 438
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.858718,-0.000712367) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.689324,-0.000453846) , 
2.99188, 0, 9, 0, 0.721141,-0.188302) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615808,-0.000219111) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.323533,0.00035201) , 
0.397826, 1, 16, 0, 0.536317,-0.0410898) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736152,-0.000492203) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234044,0.000336692) , 
0.22106, 1, 13, 0, 0.256856,0.116815) , 
0.172999, 0, 15, 0, 0.405981,0.0325544) , 
0.132973, 1, 16, 0, 0.482047,-0.0207505)    );
  // itree = 439
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.642558,-0.000241531) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167893,0.00121145) , 
0.224665, 0, 2, 0, 0.624408,-0.100405) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.91465,-0.00136213) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340159,-0.000234681) , 
0.649506, 1, 17, 0, 0.427607,-0.0435875) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.762913,-0.000885863) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152679,0.000509986) , 
0.795984, 0, 16, 0, 0.163108,0.174293) , 
1.94425, 0, 11, 0, 0.198179,0.145403) , 
0.638, 0, 14, 0, 0.492207,-0.0241642)    );
  // itree = 440
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663846,-0.000257142) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265258,0.000260545) , 
0.112837, 1, 0, 0, 0.629604,-0.103393) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.47415,-9.27808e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138449,0.000142188) , 
0.589572, 1, 14, 0, 0.415544,-0.0484762) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.474538,-0.00054596) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.115529,0.00093194) , 
1.74159, 0, 7, 0, 0.161053,0.17678) , 
1.94478, 0, 10, 0, 0.25122,0.09697) , 
0.643027, 0, 14, 0, 0.50114,-0.0353684)    );
  // itree = 441
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634391,-0.000268569) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.326927,0.000475244) , 
0.117553, 0, 15, 0, 0.558987,-0.0732411) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.589059,-8.23539e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.106036,-0.000338955) , 
0.632429, 1, 7, 0, 0.499905,-0.0947702) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.640291,-0.000603852) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186339,0.000578113) , 
2.64742, 0, 8, 0, 0.211589,0.165733) , 
1.34731, 1, 9, 0, 0.261225,0.120885) , 
0.397802, 1, 16, 0, 0.488061,-0.0270005)    );
  // itree = 442
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.921621,-0.000470907) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.685308,-0.000651738) , 
0.771933, 0, 2, 0, 0.80003,-0.253278) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.855074,-0.000627857) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0820073,0.000148338) , 
1.39655, 1, 8, 0, 0.790376,-0.294043) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.495718,-8.2715e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.297501,0.00064179) , 
2.23942, 1, 18, 0, 0.458846,-0.0106657) , 
0.598413, 1, 9, 0, 0.483067,-0.0313684) , 
0.0881708, 1, 16, 0, 0.529493,-0.0638719)    );
  // itree = 443
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.856335,-0.000700545) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.37593,0.00138075) , 
2.39239, 1, 10, 0, 0.830171,-0.308688) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.659931,-0.000300086) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.444103,-6.55329e-05) , 
0.932874, 0, 7, 0, 0.547353,-0.0515324) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.533986,-0.000383488) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.19528,0.000953725) , 
0.807051, 0, 1, 0, 0.221175,0.115451) , 
0.116223, 0, 15, 0, 0.462093,-0.00788471) , 
0.615633, 1, 17, 0, 0.48736,-0.0285333)    );
  // itree = 444
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729802,-0.000301171) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.498495,-8.65629e-05) , 
0.452685, 0, 2, 0, 0.647527,-0.107886) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.910686,-0.000573801) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.149839,-0.000463218) , 
0.706211, 0, 1, 0, 0.707711,-0.243653) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.447597,-3.84642e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202725,0.000444481) , 
0.171556, 0, 15, 0, 0.291827,0.0893911) , 
2.45191, 0, 7, 0, 0.310866,0.0741452) , 
0.694595, 0, 14, 0, 0.486583,-0.0208644)    );
  // itree = 445
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.658114,-0.000320947) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0474236,0.000887413) , 
0.508379, 0, 14, 0, 0.628445,-0.132349) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647855,-0.000268642) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.326283,0.000115593) , 
-0.36863, 0, 4, 0, 0.581062,-0.0521322) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.586911,-0.000238369) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.246644,0.000303617) , 
0.149881, 1, 10, 0, 0.272416,0.116266) , 
0.734922, 0, 14, 0, 0.377073,0.0591651) , 
0.981111, 0, 7, 0, 0.499824,-0.0343558)    );
  // itree = 446
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.555759,-0.000268881) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.403067,5.32241e-05) , 
0.740007, 0, 7, 0, 0.49221,-0.0240257) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.598146,-0.004528) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.00738745,0.0517253) , 
0.228293, 1, 7, 0, 0.314464,0.0394831) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.283366,0.0317722) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0451507,0.00187583) , 
0.321279, 1, 18, 0, 0.0506962,0.224461) , 
0.173025, 0, 15, 0, 0.0621169,0.216452) , 
0.477454, 0, 14, 0, 0.464734,-0.00866314)    );
  // itree = 447
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712819,-0.000400764) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.503208,-0.000228012) , 
0.747993, 1, 11, 0, 0.600547,-0.106826) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.951626,-0.000689025) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.405372,1.80535e-05) , 
0.0484247, 1, 16, 0, 0.442184,-0.00489674) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.404177,-0.000123722) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160419,0.000613393) , 
0.305282, 1, 16, 0, 0.262552,0.160245) , 
1.47239, 1, 17, 0, 0.344176,0.0852054) , 
0.982457, 0, 7, 0, 0.468882,-0.00820402)    );
  // itree = 448
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741226,-0.000493131) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.418939,-0.000324352) , 
0.569466, 0, 13, 0, 0.712512,-0.177178) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701141,-0.000423732) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245296,0.00201344) , 
0.324093, 0, 2, 0, 0.652437,-0.195024) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.543089,-0.000161922) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.315271,0.000212114) , 
0.927393, 0, 7, 0, 0.419027,0.0223758) , 
1.94471, 0, 11, 0, 0.450256,-0.00671086) , 
0.132002, 1, 16, 0, 0.507517,-0.0439306)    );
  // itree = 449
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.70977,-0.000292868) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.549312,-0.00016216) , 
0.538177, 0, 1, 0, 0.605013,-0.112086) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.654244,-0.000471059) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.108639,0.00340851) , 
0.540316, 1, 1, 0, 0.524413,-0.108245) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.604797,-0.000266249) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.200867,0.000680661) , 
0.898608, 1, 9, 0, 0.241407,0.148931) , 
0.950669, 0, 7, 0, 0.321064,0.0765444) , 
0.353659, 1, 16, 0, 0.517672,-0.0540641)    );
  // itree = 450
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.726285,-0.000270155) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.569472,-0.000221913) , 
1.63536, 1, 17, 0, 0.670117,-0.130658) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.58974,3.29621e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.230582,0.000172878) , 
0.89644, 0, 11, 0, 0.505253,-0.108856) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.317875,-4.28647e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.153641,0.000918706) , 
0.550705, 0, 2, 0, 0.251654,0.124244) , 
0.782597, 0, 2, 0, 0.365738,0.0193819) , 
0.694595, 0, 14, 0, 0.521864,-0.0575788)    );
  // itree = 451
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.791717,-0.000561864) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.532755,-0.000131275) , 
0.0152233, 1, 0, 0, 0.756736,-0.216668) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.782114,-0.000425709) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.390254,0.000389526) , 
0.290863, 0, 1, 0, 0.658395,-0.122987) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.456862,-1.1024e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.288967,0.000109276) , 
0.13579, 1, 12, 0, 0.336955,0.071004) , 
0.771629, 0, 14, 0, 0.411894,0.0257776) , 
0.132002, 1, 16, 0, 0.502143,-0.0376727)    );
  // itree = 452
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.591894,-0.000237236) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.651301,-0.000386068) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229755,0.00131988) , 
0.863954, 0, 14, 0, 0.410875,0.0826097) , 
0.357672, 0, 2, 0, 0.559733,-0.0749775) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.77744,-0.000848723) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.309356,-0.000257121) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.106339,0.000488282) , 
1.49937, 1, 9, 0, 0.142649,0.22258) , 
0.795502, 0, 16, 0, 0.158616,0.206837) , 
0.138549, 1, 0, 0, 0.488382,-0.0248481)    );
  // itree = 453
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776914,-0.000386) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.441366,-0.00025043) , 
0.169286, 0, 15, 0, 0.63842,-0.136785) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.799098,-0.00061248) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270326,0.000225635) , 
1.14689, 1, 8, 0, 0.718266,-0.231356) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.754903,-0.000611909) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.348667,8.26155e-05) , 
0.242955, 0, 6, 0, 0.361709,0.0705482) , 
2.39348, 0, 11, 0, 0.389844,0.0467255) , 
1.22075, 0, 7, 0, 0.482169,-0.0214332)    );
  // itree = 454
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.582508,-0.000209878) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0527073,0.00186422) , 
0.496775, 0, 14, 0, 0.546182,-0.0778592) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.936503,-0.000664184) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.349999,-0.000508232) , 
0.336672, 1, 12, 0, 0.868773,-0.315723) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.406854,6.39639e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252639,9.04921e-05) , 
1.47755, 0, 8, 0, 0.31502,0.119994) , 
0.0427721, 1, 16, 0, 0.357114,0.0868725) , 
1.79313, 1, 18, 0, 0.482869,-0.0226959)    );
  // itree = 455
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615838,-0.000265461) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.376115,0.000135758) , 
0.311791, 0, 2, 0, 0.593546,-0.0943696) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.572977,-0.000143558) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.213703,0.000289083) , 
0.394642, 0, 16, 0, 0.481305,-0.0761199) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.560778,-7.98688e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209795,0.000520634) , 
0.360565, 0, 15, 0, 0.300108,0.101913) , 
1.7749, 0, 17, 0, 0.365699,0.0374678) , 
0.30858, 1, 16, 0, 0.501223,-0.0409496)    );
  // itree = 456
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639309,-0.000279974) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.400404,7.16984e-05) , 
0.335216, 1, 16, 0, 0.558092,-0.0615893) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.8779,-0.000885126) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.136271,0.00124575) , 
0.0215484, 1, 6, 0, 0.790559,-0.304333) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.455125,-0.000337699) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.148932,0.000995106) , 
2.68709, 0, 8, 0, 0.174525,0.161318) , 
0.615901, 1, 17, 0, 0.254498,0.100868) , 
0.116222, 0, 15, 0, 0.478778,-0.0191471)    );
  // itree = 457
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71579,-0.000309629) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.343543,-6.12811e-05) , 
0.694778, 0, 14, 0, 0.618792,-0.10741) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.948433,-0.000789023) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0151744,0.0167997) , 
0.730988, 0, 5, 0, 0.752037,-0.393285) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.716537,-0.000373101) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.308427,9.80079e-05) , 
0.149617, 1, 11, 0, 0.326628,0.0787885) , 
0.247517, 0, 6, 0, 0.341959,0.0617765) , 
0.0461831, 1, 0, 0, 0.496189,-0.0324815)    );
  // itree = 458
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.818708,-0.000734317) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.518359,-0.000203008) , 
0.615633, 1, 17, 0, 0.546896,-0.0505171) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.585299,-9.66781e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.361883,-0.000101273) , 
-0.866456, 1, 5, 0, 0.431394,-0.00989545) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.835503,-0.00143896) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174828,0.000288981) , 
0.323926, 1, 14, 0, 0.183888,0.20257) , 
0.820363, 0, 7, 0, 0.299643,0.103204) , 
0.0461831, 1, 0, 0, 0.430242,0.0220083)    );
  // itree = 459
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.766736,-0.000428647) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.400712,0.00120422) , 
0.985513, 1, 8, 0, 0.64418,-0.16589) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.93067,-0.000791963) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.584123,-0.000193498) , 
0.250076, 0, 6, 0, 0.596688,-0.0912446) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.465633,-0.000321044) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186037,0.000595881) , 
1.34643, 1, 9, 0, 0.246006,0.135586) , 
0.171046, 0, 15, 0, 0.456993,-0.000885807) , 
0.598473, 1, 10, 0, 0.507469,-0.0453804)    );
  // itree = 460
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660691,-0.000280958) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270993,0.00091394) , 
0.21122, 0, 2, 0, 0.644419,-0.104715) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.529053,-0.000131948) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.200243,0.000599249) , 
0.117738, 0, 15, 0, 0.400583,-0.00413516) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.61865,-0.000485426) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.173664,0.000666517) , 
2.87008, 0, 8, 0, 0.216386,0.149446) , 
-0.371334, 0, 5, 0, 0.340604,0.0458742) , 
0.697055, 0, 14, 0, 0.491283,-0.0288117)    );
  // itree = 461
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.604358,-0.00023826) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.392018,9.72186e-05) , 
2.24062, 1, 18, 0, 0.569408,-0.0707118) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668495,-0.000387802) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.263727,0.000330674) , 
0.237155, 1, 8, 0, 0.368023,-0.0153948) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.607308,-0.000639361) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.1212,0.001642) , 
0.0796444, 1, 16, 0, 0.164922,0.175044) , 
1.79531, 0, 10, 0, 0.243498,0.101367) , 
0.117052, 0, 15, 0, 0.485159,-0.0262289)    );
  // itree = 462
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.644054,-0.000225206) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.255193,0.000182992) , 
0.487696, 1, 16, 0, 0.618359,-0.099834) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.941033,-0.000798721) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0428749,0.0162656) , 
0.757005, 0, 5, 0, 0.766227,-0.406105) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.476189,-0.000235191) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.161708,0.000466903) , 
1.58221, 0, 7, 0, 0.214703,0.124679) , 
0.242956, 0, 6, 0, 0.243172,0.0972803) , 
0.622762, 0, 14, 0, 0.507886,-0.0417942)    );
  // itree = 463
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674464,-0.000267171) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.415753,0.00024697) , 
0.350411, 0, 2, 0, 0.627268,-0.0994385) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.468616,-0.000128737) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.219638,0.000889788) , 
0.928284, 1, 8, 0, 0.356281,0.00093218) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639755,-0.00125562) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0688092,0.000807766) , 
0.17868, 1, 18, 0, 0.0736537,0.237635) , 
0.487582, 1, 16, 0, 0.290109,0.056352) , 
0.643027, 0, 14, 0, 0.510284,-0.0453838)    );
  // itree = 464
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717306,-0.000377444) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.246137,0.000303518) , 
0.0869044, 0, 15, 0, 0.654578,-0.150791) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653208,-0.000314792) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.285968,4.29946e-05) , 
0.0196731, 1, 6, 0, 0.445697,0.0131724) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677134,-0.000224832) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.230904,0.000256751) , 
0.526107, 0, 15, 0, 0.251704,0.158411) , 
0.732279, 1, 8, 0, 0.343571,0.0896318) , 
1.22804, 0, 7, 0, 0.467221,-0.00595574)    );
  // itree = 465
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65573,-0.000274603) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.284753,-2.09759e-05) , 
0.243969, 0, 7, 0, 0.625786,-0.0897917) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.490309,-0.000284108) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.267922,0.000333626) , 
1.94491, 1, 9, 0, 0.347472,0.0266622) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.357306,-0.000495045) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.112292,0.00266024) , 
2.29481, 0, 8, 0, 0.159817,0.20076) , 
0.561016, 0, 2, 0, 0.29996,0.0707421) , 
0.679259, 0, 14, 0, 0.479061,-0.0175004)    );
  // itree = 466
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.723374,-0.000354855) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118703,8.78786e-05) , 
0.196833, 1, 0, 0, 0.700132,-0.204252) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.762294,-0.000453078) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.219364,0.000542463) , 
0.115223, 0, 15, 0, 0.702185,-0.163608) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722101,-0.000622352) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.393521,7.85013e-05) , 
0.233886, 0, 6, 0, 0.402172,0.0270658) , 
0.132814, 1, 16, 0, 0.458416,-0.0086799) , 
1.05464, 1, 17, 0, 0.523095,-0.0610119)    );
  // itree = 467
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.89074,-0.000466204) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.644928,-0.000646914) , 
0.773496, 0, 2, 0, 0.747957,-0.204791) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691445,-0.000360523) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.357112,0.00108804) , 
0.950845, 1, 8, 0, 0.550898,-0.0943136) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.545532,-0.000181672) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.261295,0.000482928) , 
0.198182, 0, 15, 0, 0.40447,0.0372525) , 
0.748002, 1, 10, 0, 0.448595,-0.00239431) , 
0.088928, 1, 16, 0, 0.488212,-0.0291789)    );
  // itree = 468
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.614583,-0.000264885) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.450114,-9.72042e-05) , 
0.979673, 1, 8, 0, 0.543103,-0.0669707) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.844538,-0.000536237) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.426991,-6.57205e-05) , 
2.99135, 0, 9, 0, 0.500785,-0.0150564) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.713951,-0.000914665) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0823082,0.000625869) , 
0.599277, 1, 9, 0, 0.136104,0.2217) , 
0.201773, 0, 15, 0, 0.317215,0.10412) , 
0.493397, 0, 7, 0, 0.483069,-0.0215003)    );
  // itree = 469
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718227,-0.00037754) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.358386,0.000238245) , 
0.0895505, 0, 15, 0, 0.662838,-0.15856) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.597166,-0.000218009) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143367,0.00219497) , 
0.118493, 0, 15, 0, 0.495106,-0.0460176) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.489301,-0.000369852) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.241346,0.000389467) , 
1.13981, 1, 9, 0, 0.298246,0.130677) , 
2.39359, 0, 9, 0, 0.401402,0.0380885) , 
1.23336, 0, 7, 0, 0.502561,-0.0380022)    );
  // itree = 470
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.819056,-0.000605165) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.525596,-0.000403357) , 
1.36165, 1, 4, 0, 0.78015,-0.252724) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.800541,-0.000640572) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271123,-0.00011312) , 
2.09235, 1, 18, 0, 0.721833,-0.241182) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.596262,-0.000255913) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.384047,1.76081e-05) , 
0.341935, 1, 11, 0, 0.423355,0.0218023) , 
2.39356, 0, 11, 0, 0.44609,0.00177079) , 
2.17213, 0, 7, 0, 0.484233,-0.0272878)    );
  // itree = 471
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.733778,-0.000324116) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0755752,0.000672042) , 
0.314784, 1, 0, 0, 0.697272,-0.203964) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.62127,-0.000217215) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.223565,0.000325779) , 
0.122945, 1, 0, 0, 0.594032,-0.0631646) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.573611,-0.00050113) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.21876,0.000481226) , 
1.94449, 0, 11, 0, 0.271629,0.0859263) , 
0.66057, 0, 14, 0, 0.459457,-0.000932114) , 
0.244283, 1, 8, 0, 0.505911,-0.0405913)    );
  // itree = 472
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.768724,-0.000283552) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.567079,-0.000184823) , 
0.715663, 0, 1, 0, 0.593598,-0.0911535) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.914091,-0.000694757) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292664,-0.000849823) , 
0.0894252, 1, 16, 0, 0.849745,-0.356982) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.541334,-0.000119964) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158498,0.000725881) , 
0.767006, 1, 17, 0, 0.200832,0.142534) , 
2.71341, 0, 7, 0, 0.260473,0.0966246) , 
0.117482, 0, 15, 0, 0.509672,-0.0438456)    );
  // itree = 473
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.564207,-0.000220387) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279478,0.000119505) , 
0.566848, 0, 13, 0, 0.51502,-0.0355105) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.833183,-0.000508648) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.102212,0.00240972) , 
0.25827, 0, 15, 0, 0.596331,-0.170321) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.422652,-0.000488737) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.116111,0.000528838) , 
1.21752, 0, 4, 0, 0.139893,0.226781) , 
0.851537, 0, 3, 0, 0.213488,0.162753) , 
0.42961, 1, 16, 0, 0.452253,0.00576028)    );
  // itree = 474
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.657234,-0.000330653) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209826,0.000270727) , 
0.0885381, 0, 15, 0, 0.593627,-0.0997678) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.959625,-0.000767831) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0211575,0.0189123) , 
0.423199, 0, 3, 0, 0.799914,-0.425219) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.459704,-4.86114e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.255583,0.000251085) , 
0.467171, 0, 7, 0, 0.366382,0.0623936) , 
0.236077, 0, 6, 0, 0.385972,0.0403593) , 
0.981101, 0, 7, 0, 0.482881,-0.0250353)    );
  // itree = 475
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761465,-0.00030259) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.5489,-0.000166352) , 
0.535977, 0, 2, 0, 0.653638,-0.110618) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.56004,-0.000267068) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.11674,0.000488372) , 
0.54053, 0, 14, 0, 0.480978,-0.0521944) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.332662,0.000161169) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.161568,0.000964077) , 
0.371347, 0, 5, 0, 0.239536,0.130476) , 
0.943013, 0, 7, 0, 0.348448,0.0480752) , 
0.708187, 0, 14, 0, 0.493481,-0.0273389)    );
  // itree = 476
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.86618,-0.000668549) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.53876,-0.00016235) , 
0.0568619, 1, 16, 0, 0.577524,-0.086713) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.638167,-0.000497565) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.100614,0.0067779) , 
0.748705, 1, 2, 0, 0.467044,-0.0835203) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.626946,-0.000305921) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.136518,0.000811065) , 
0.833846, 0, 14, 0, 0.184926,0.191451) , 
0.904638, 0, 7, 0, 0.258573,0.11967) , 
0.394988, 1, 16, 0, 0.501315,-0.0374004)    );
  // itree = 477
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.816828,-0.000633796) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.604094,-0.000316276) , 
1.70914, 0, 7, 0, 0.723732,-0.184691) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.533103,-9.66153e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.347761,-0.000263334) , 
1.57524, 1, 7, 0, 0.496069,-0.0381107) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.898713,-0.000896095) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.315255,0.000148302) , 
0.785113, 0, 0, 0, 0.327102,0.0901369) , 
0.782952, 0, 7, 0, 0.411802,0.0258483) , 
0.132943, 1, 16, 0, 0.487108,-0.0249802)    );
  // itree = 478
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.600663,-0.000226741) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.106922,0.000441736) , 
0.572642, 1, 16, 0, 0.571474,-0.0975672) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.877119,-0.000711176) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.374034,-0.000653255) , 
0.0966697, 1, 16, 0, 0.777777,-0.23259) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.565726,-0.000183506) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.293557,0.000273404) , 
0.442096, 0, 15, 0, 0.331669,0.094218) , 
2.45277, 0, 7, 0, 0.382082,0.0572866) , 
0.985011, 1, 8, 0, 0.493729,-0.0340004)    );
  // itree = 479
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.770784,-0.000545348) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209192,0.00173113) , 
0.49346, 0, 7, 0, 0.743036,-0.199498) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.577754,-0.00020144) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.423386,8.79924e-06) , 
0.954416, 1, 8, 0, 0.511192,-0.0322107) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.667154,-0.00124616) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0978356,0.00151374) , 
0.39005, 0, 12, 0, 0.129773,0.167222) , 
0.0885266, 0, 15, 0, 0.450342,-0.000394274) , 
0.0887996, 1, 16, 0, 0.486584,-0.0250475)    );
  // itree = 480
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.809587,-0.000478164) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.580302,-0.000246151) , 
0.244981, 1, 8, 0, 0.626035,-0.12964) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.914542,-0.000593982) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.351908,-0.000282281) , 
1.26985, 1, 17, 0, 0.69914,-0.217087) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.455476,-3.61189e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202278,0.000288258) , 
0.226686, 0, 15, 0, 0.307022,0.117927) , 
2.24382, 0, 11, 0, 0.350188,0.0810478) , 
0.982437, 0, 7, 0, 0.49054,-0.0261509)    );
  // itree = 481
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.697491,-0.000294757) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.34433,0.000128652) , 
0.115759, 0, 15, 0, 0.639186,-0.128036) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.944391,-0.00160989) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.537612,-0.000295451) , 
0.446088, 1, 13, 0, 0.655141,-0.235158) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.819494,-0.000657554) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.325297,0.000156657) , 
0.247495, 0, 6, 0, 0.348585,0.0608358) , 
1.19824, 1, 9, 0, 0.390997,0.0198851) , 
0.0461831, 1, 0, 0, 0.529717,-0.0627922)    );
  // itree = 482
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720918,-0.000341428) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.402736,-2.86994e-06) , 
0.685775, 0, 14, 0, 0.634362,-0.120038) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.756378,-0.000575692) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.296932,-4.06359e-05) , 
0.523582, 1, 14, 0, 0.528575,-0.12117) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.523281,-0.000183195) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.215587,0.000307175) , 
0.361675, 0, 15, 0, 0.286495,0.113308) , 
1.34668, 1, 9, 0, 0.328977,0.0721596) , 
0.265443, 1, 16, 0, 0.49499,-0.0323225)    );
  // itree = 483
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.889069,-0.0004542) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.655585,-0.000494226) , 
0.818049, 0, 2, 0, 0.746228,-0.207827) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672371,-0.000218453) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0696776,0.000275971) , 
0.272596, 1, 0, 0, 0.626581,-0.174421) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.567206,-0.000158347) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220186,0.000300539) , 
0.705932, 0, 14, 0, 0.366232,0.0724035) , 
2.24397, 0, 10, 0, 0.423146,0.0184463) , 
0.129574, 1, 16, 0, 0.50371,-0.0379779)    );
  // itree = 484
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.813563,-0.000543782) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199018,0.00169631) , 
0.493488, 0, 7, 0, 0.790869,-0.245555) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64628,-0.000224752) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.356938,0.00017873) , 
0.407104, 1, 16, 0, 0.57943,-0.0756277) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.55288,-0.00018283) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.235796,0.000597647) , 
0.450929, 1, 18, 0, 0.272583,0.0808984) , 
0.143236, 0, 15, 0, 0.469826,-0.0197176) , 
0.0885641, 1, 16, 0, 0.515931,-0.0521501)    );
  // itree = 485
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.577173,-0.000233098) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.324636,2.79777e-07) , 
0.750514, 0, 18, 0, 0.537479,-0.0469254) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.922289,-0.000823695) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0184652,0.0397186) , 
0.228998, 1, 7, 0, 0.785388,-0.416439) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718699,-0.000749616) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.200187,0.000225025) , 
0.299001, 1, 11, 0, 0.240378,0.140548) , 
0.245097, 0, 6, 0, 0.2747,0.105471) , 
0.090959, 1, 0, 0, 0.460659,-0.00237411)    );
  // itree = 486
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653042,-0.000254261) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.372589,0.000487069) , 
0.272278, 0, 2, 0, 0.626511,-0.0933371) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.851612,-0.000999966) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184815,0.00147552) , 
2.84223, 0, 9, 0, 0.599378,-0.226052) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.532506,-0.000288276) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204748,0.000388078) , 
1.19699, 1, 9, 0, 0.255095,0.0962752) , 
0.34085, 0, 12, 0, 0.287651,0.065795) , 
0.6583, 0, 14, 0, 0.491677,-0.0300175)    );
  // itree = 487
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.809228,-0.000491621) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.545896,-0.000600426) , 
0.985013, 1, 8, 0, 0.746113,-0.198749) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.524498,-0.000173326) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.267911,9.91505e-05) , 
0.184916, 0, 7, 0, 0.497571,-0.0063697) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.638362,-0.00126658) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.148809,0.000686347) , 
0.398592, 0, 12, 0, 0.167597,0.158069) , 
0.116474, 0, 15, 0, 0.409186,0.0376758) , 
0.0872057, 1, 16, 0, 0.453665,0.00646481)    );
  // itree = 488
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663565,-0.000266899) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.404089,6.61498e-05) , 
0.34543, 1, 16, 0, 0.584476,-0.0811442) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.773312,-0.000584464) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.305633,0.00016971) , 
0.299082, 1, 11, 0, 0.394485,-0.0304876) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639938,-0.000896663) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.131296,0.00159224) , 
0.400809, 0, 12, 0, 0.15669,0.175846) , 
0.730282, 1, 8, 0, 0.2597,0.0864643) , 
0.11583, 0, 15, 0, 0.502599,-0.0388893)    );
  // itree = 489
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.629,-0.000295523) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378545,0.00032008) , 
0.331905, 1, 16, 0, 0.547543,-0.086841) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.618936,-0.000290465) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.449162,-9.09575e-05) , 
0.533252, 1, 14, 0, 0.477411,0.00198804) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.635366,-0.00155848) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0583987,0.000962812) , 
2.10479, 0, 3, 0, 0.0799637,0.223582) , 
0.0904411, 0, 15, 0, 0.410524,0.0392802) , 
2.39359, 0, 9, 0, 0.481386,-0.0259456)    );
  // itree = 490
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769287,-0.000510351) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.513827,-9.25278e-05) , 
1.69637, 0, 7, 0, 0.565152,-0.075055) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.763519,-0.000726636) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.319638,0.000249213) , 
0.0650177, 1, 16, 0, 0.424803,-0.0313003) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.467404,-0.000202906) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0663641,0.00177474) , 
2.83753, 0, 18, 0, 0.096848,0.191274) , 
1.71941, 0, 7, 0, 0.173639,0.139158) , 
0.0890677, 0, 15, 0, 0.506061,-0.0427236)    );
  // itree = 491
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692165,-0.000328339) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.339783,0.000260755) , 
0.0882664, 0, 15, 0, 0.638764,-0.145301) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.630801,-0.000232605) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.23337,0.00078269) , 
0.145455, 0, 15, 0, 0.51507,-0.0578501) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.885978,-0.000729263) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.185534,0.00122322) , 
0.138396, 1, 2, 0, 0.202311,0.193414) , 
0.985008, 1, 8, 0, 0.410062,0.0265111) , 
0.982427, 0, 7, 0, 0.519905,-0.0560088)    );
  // itree = 492
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.811309,-0.000571531) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.54391,-0.00013807) , 
1.91009, 0, 7, 0, 0.58292,-0.0820375) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.823245,-0.000752369) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0177625,0.00510682) , 
-0.126102, 1, 5, 0, 0.6221,-0.263672) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.598504,-0.000580556) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.179105,0.000987979) , 
0.759688, 1, 17, 0, 0.234869,0.111126) , 
0.812882, 0, 1, 0, 0.267041,0.079988) , 
0.115897, 0, 15, 0, 0.501619,-0.0403352)    );
  // itree = 493
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.732858,-0.000216667) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.459715,-0.000201489) , 
0.303896, 0, 15, 0, 0.541316,-0.0463219) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.940914,-0.00135123) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0189681,0.0250401) , 
0.615819, 1, 8, 0, 0.790477,-0.40442) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.543168,-0.00014551) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211889,0.0002795) , 
0.461578, 1, 18, 0, 0.24535,0.142655) , 
2.8423, 0, 11, 0, 0.262415,0.125529) , 
0.353661, 1, 16, 0, 0.450501,0.00963604)    );
  // itree = 494
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.658497,-0.000273662) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271593,0.000190104) , 
0.165345, 0, 12, 0, 0.599058,-0.121158) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628198,-0.000287999) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.338232,9.3426e-05) , 
2.54325, 1, 9, 0, 0.548567,-0.0634898) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.505728,0.000248899) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183106,0.000426101) , 
0.307767, 0, 15, 0, 0.29656,0.110724) , 
0.982427, 0, 7, 0, 0.423626,0.0228825) , 
0.73876, 1, 8, 0, 0.50595,-0.0447103)    );
  // itree = 495
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612103,-0.000261019) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.310217,0.000485129) , 
0.116084, 0, 15, 0, 0.536116,-0.0495698) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.805392,-0.000614322) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.303489,-0.000259784) , 
0.0988824, 1, 15, 0, 0.6391,-0.251688) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709618,-0.000306671) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.18107,0.000532784) , 
0.406858, 0, 12, 0, 0.228108,0.152527) , 
2.03679, 0, 17, 0, 0.288164,0.0934616) , 
0.397802, 1, 16, 0, 0.472656,-0.0129632)    );
  // itree = 496
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.648015,-0.000261273) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.348729,0.000258695) , 
0.399376, 1, 16, 0, 0.582583,-0.0776266) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.867452,-0.00200362) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.319359,-0.000489127) , 
0.866664, 0, 5, 0, 0.626614,-0.179656) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.560857,-0.000275711) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172603,0.00071046) , 
0.226803, 1, 13, 0, 0.186764,0.145823) , 
2.70179, 0, 7, 0, 0.207959,0.130139) , 
0.116867, 0, 15, 0, 0.492058,-0.0274217)    );
  // itree = 497
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.837441,-0.000369431) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.585242,-0.000215147) , 
0.908759, 0, 2, 0, 0.613502,-0.0759303) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.6204,-0.000470097) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.181463,0.00238752) , 
0.926815, 0, 7, 0, 0.481537,-0.0843787) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.360433,-9.75888e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154302,0.000561779) , 
1.9446, 0, 10, 0, 0.222769,0.13576) , 
2.16716, 0, 8, 0, 0.270002,0.0955789) , 
0.678821, 0, 14, 0, 0.461092,0.000167774)    );
  // itree = 498
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703946,-0.000286605) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.32894,-2.64283e-05) , 
0.681868, 0, 14, 0, 0.598354,-0.0896125) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.944473,-0.00100277) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0679896,0.012429) , 
0.335485, 1, 16, 0, 0.595045,-0.253971) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.345244,-3.50339e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.155115,0.000555662) , 
1.49079, 1, 18, 0, 0.255239,0.133487) , 
0.814151, 0, 1, 0, 0.277904,0.107645) , 
0.30858, 1, 16, 0, 0.479458,-0.0164244)    );
  // itree = 499
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.835258,-0.000628482) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.581356,-0.0002336) , 
0.457122, 1, 18, 0, 0.617914,-0.126041) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.893372,-0.000472583) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.466567,-4.02966e-05) , 
0.715885, 1, 10, 0, 0.633115,-0.157116) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.654538,-0.000437378) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.272049,8.73012e-05) , 
1.96486, 0, 7, 0, 0.312014,0.119185) , 
0.246335, 1, 8, 0, 0.378493,0.0619808) , 
1.20931, 1, 17, 0, 0.465759,-0.00655107)    );
  // itree = 500
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.66133,-0.000264096) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.254241,0.000181835) , 
0.526453, 0, 13, 0, 0.622099,-0.116659) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.657434,-0.000462699) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.188151,0.000262917) , 
0.298622, 1, 3, 0, 0.566185,-0.154328) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.564425,0.000118006) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238436,0.000339482) , 
0.809835, 0, 1, 0, 0.259969,0.132381) , 
2.39359, 0, 10, 0, 0.308465,0.0869749) , 
0.309515, 1, 16, 0, 0.507639,-0.0423431)    );
  // itree = 501
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.763987,-0.000294731) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.59294,-0.000166115) , 
1.33963, 1, 17, 0, 0.675688,-0.135123) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.933729,-0.000688123) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.508051,-0.000211775) , 
-2.10386, 1, 3, 0, 0.562231,-0.137174) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.486928,-0.000257961) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127857,0.00104546) , 
2.09412, 0, 10, 0, 0.237514,0.114559) , 
1.35614, 0, 7, 0, 0.32724,0.0449999) , 
0.677134, 0, 14, 0, 0.529928,-0.0597757)    );
  // itree = 502
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.650546,-0.00027432) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212939,0.000895209) , 
0.0890491, 0, 15, 0, 0.59804,-0.0923271) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704823,-0.000629057) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363956,-0.000124701) , 
1.07856, 0, 7, 0, 0.44755,-0.0256158) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.395128,-0.000147587) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187393,0.000724478) , 
1.49629, 1, 9, 0, 0.227976,0.157275) , 
0.441337, 1, 8, 0, 0.290226,0.105425) , 
0.30858, 1, 16, 0, 0.480922,-0.0170857)    );
  // itree = 503
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670155,-0.000282388) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221838,0.000436346) , 
0.0882706, 0, 15, 0, 0.610024,-0.119144) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.696335,-0.00021202) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.376824,-9.42771e-05) , 
0.104687, 1, 8, 0, 0.451741,-0.00535198) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.788064,-0.000972311) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.162857,0.000437538) , 
0.691044, 0, 0, 0, 0.17768,0.217134) , 
0.732349, 1, 8, 0, 0.317004,0.104029) , 
0.740007, 0, 7, 0, 0.501894,-0.0367885)    );
  // itree = 504
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.621346,-0.00022461) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.361451,0.00021448) , 
-1.11424, 0, 5, 0, 0.591551,-0.0880687) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.573188,-0.000325171) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0327277,0.00104265) , 
0.388373, 0, 13, 0, 0.396154,-0.0665138) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.389462,-0.000142775) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134144,0.00247478) , 
0.59839, 1, 10, 0, 0.216709,0.129552) , 
0.479663, 1, 13, 0, 0.270486,0.0707937) , 
0.116155, 0, 15, 0, 0.510719,-0.0480731)    );
  // itree = 505
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634759,-0.00023805) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.387161,0.000619886) , 
0.323515, 0, 2, 0, 0.604988,-0.0932628) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612282,-0.000439291) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279377,-1.04802e-05) , 
0.732564, 0, 7, 0, 0.523841,-0.0679948) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.411109,-0.000222658) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168032,0.000697549) , 
1.49765, 1, 9, 0, 0.219362,0.129694) , 
0.0176264, 1, 6, 0, 0.35147,0.0439204) , 
0.17026, 0, 15, 0, 0.49092,-0.0315384)    );
  // itree = 506
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.762737,-0.000317295) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.566781,-0.000182789) , 
1.33725, 1, 17, 0, 0.663102,-0.119053) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.68098,-0.000468708) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.294856,0.00152261) , 
0.98697, 1, 8, 0, 0.508457,-0.118603) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.42776,8.34283e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234377,0.00028902) , 
0.371505, 0, 5, 0, 0.326065,0.0523577) , 
0.598487, 1, 10, 0, 0.367062,0.0139302) , 
0.697055, 0, 14, 0, 0.517182,-0.0535045)    );
  // itree = 507
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.590684,-0.000222207) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.101739,0.00421361) , 
0.0614996, 0, 15, 0, 0.560708,-0.0874368) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.635739,-0.000192375) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.197809,0.000418893) , 
0.365046, 0, 2, 0, 0.529362,-0.0592668) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.375248,1.65868e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.13982,0.000428721) , 
0.618777, 0, 5, 0, 0.230777,0.143952) , 
0.0449691, 1, 0, 0, 0.370767,0.048674) , 
0.491214, 0, 7, 0, 0.509411,-0.0506777)    );
  // itree = 508
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.627024,-0.000161958) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.516589,-0.000152578) , 
0.479961, 1, 13, 0, 0.537247,-0.0647935) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.779082,-0.00131604) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.098912,0.0349661) , 
0.504282, 0, 0, 0, 0.239252,0.0596828) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.481258,0.00467173) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0538603,0.00180133) , 
2.20491, 0, 7, 0, 0.0633029,0.210163) , 
1.97844, 0, 17, 0, 0.0973485,0.181046) , 
0.49612, 0, 14, 0, 0.501843,-0.0450078)    );
  // itree = 509
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.657478,-0.000250732) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.47932,2.7094e-05) , 
0.457977, 0, 2, 0, 0.611111,-0.113235) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701272,-0.000401822) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.196829,0.000189077) , 
0.598805, 0, 14, 0, 0.529245,-0.105916) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.733595,-0.000662773) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.266547,0.000662405) , 
0.242955, 0, 6, 0, 0.290841,0.0928624) , 
0.865799, 0, 7, 0, 0.367932,0.0285842) , 
0.351284, 1, 16, 0, 0.532909,-0.0676287)    );
  // itree = 510
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682287,-0.000206682) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.534245,-0.000236123) , 
0.491113, 0, 1, 0, 0.604074,-0.134709) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558295,-0.000176358) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211671,0.00126986) , 
0.117361, 0, 15, 0, 0.474607,-0.00284095) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.552885,0.00423203) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0846737,0.000313798) , 
2.98966, 0, 10, 0, 0.0956559,0.242937) , 
0.132624, 1, 0, 0, 0.415693,0.0353691) , 
0.732839, 1, 8, 0, 0.506404,-0.0465281)    );
  // itree = 511
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712047,-0.000505976) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.473337,-7.68012e-05) , 
0.116157, 1, 16, 0, 0.523921,-0.0502409) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.96347,-0.000666065) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.19234,-0.000630313) , 
0.715898, 0, 2, 0, 0.725772,-0.300272) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.275155,7.94446e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0645542,0.000747156) , 
2.54354, 0, 9, 0, 0.142696,0.211822) , 
2.54083, 0, 11, 0, 0.171993,0.186092) , 
0.486108, 1, 16, 0, 0.474797,-0.0172523)    );
  // itree = 512
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.5735,-0.000185124) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.410237,-0.000120097) , 
-0.123859, 0, 5, 0, 0.511493,-0.0620185) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.619892,-0.00041143) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.214394,0.000499082) , 
0.253793, 1, 15, 0, 0.510559,0.0217168) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76296,-0.000512143) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158088,0.00140792) , 
0.154876, 1, 18, 0, 0.189937,0.252443) , 
0.826968, 0, 14, 0, 0.343888,0.141657) , 
0.357683, 0, 2, 0, 0.489274,-0.0350181)    );
  // itree = 513
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.790101,-0.000514493) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.35034,-0.00033412) , 
0.0865603, 0, 15, 0, 0.729057,-0.201243) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.532644,-0.000134309) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.29865,0.000895035) , 
2.24059, 1, 18, 0, 0.490027,-0.0320168) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.132626,0.00028863) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0674091,0.00276089) , 
0.688095, 0, 2, 0, 0.100281,0.24568) , 
0.574584, 1, 16, 0, 0.459307,-0.0101282) , 
1.71926, 0, 7, 0, 0.514302,-0.0490917)    );
  // itree = 514
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639313,-0.000275498) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.19143,0.000418403) , 
0.0882664, 0, 15, 0, 0.576026,-0.0935867) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722329,-0.000546104) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0263034,0.0346623) , 
1.96627, 0, 11, 0, 0.653055,-0.207304) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.397106,4.98036e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174861,0.000252396) , 
0.311539, 0, 7, 0, 0.311671,0.105215) , 
2.54282, 0, 10, 0, 0.355782,0.0648344) , 
0.727016, 0, 7, 0, 0.488736,-0.0307997)    );
  // itree = 515
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.626485,-0.000256188) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.326176,6.47502e-05) , 
0.315883, 0, 2, 0, 0.599463,-0.0962294) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.667165,-0.000369347) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.155857,0.000208941) , 
0.115519, 1, 8, 0, 0.538798,-0.109867) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.447948,-0.000285515) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.207381,0.000493545) , 
1.34727, 1, 9, 0, 0.243199,0.139025) , 
0.220625, 1, 8, 0, 0.295923,0.0946318) , 
0.308647, 1, 16, 0, 0.485847,-0.0247893)    );
  // itree = 516
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.724046,-0.000560669) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.51572,-0.000100423) , 
1.96485, 0, 7, 0, 0.549065,-0.0662514) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.978139,-0.00084847) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0201738,0.0164848) , 
0.620106, 0, 14, 0, 0.802927,-0.384527) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.328108,0.00011217) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0886766,0.000653673) , 
0.0858539, 0, 6, 0, 0.228792,0.132654) , 
0.299801, 1, 10, 0, 0.269765,0.0957461) , 
0.136298, 1, 0, 0, 0.489893,-0.0319308)    );
  // itree = 517
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.713511,-0.000261564) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.477245,-1.89397e-05) , 
0.45723, 0, 2, 0, 0.637866,-0.108707) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761187,-0.00078658) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0729854,0.027871) , 
0.932784, 1, 2, 0, 0.580278,-0.238883) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.870718,-0.00088388) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22379,0.000373049) , 
0.79045, 0, 16, 0, 0.239844,0.0991852) , 
0.819337, 0, 1, 0, 0.270271,0.0689697) , 
0.642024, 0, 14, 0, 0.514627,-0.0491393)    );
  // itree = 518
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760745,-0.000300811) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.49115,9.22637e-05) , 
0.29624, 0, 1, 0, 0.694975,-0.147108) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.506172,-2.02417e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292878,0.00038443) , 
1.3504, 1, 18, 0, 0.3811,0.00227278) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.372814,-0.000171268) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.119899,7.19503e-05) , 
0.255803, 0, 12, 0, 0.207702,0.165968) , 
-0.619194, 0, 4, 0, 0.339348,0.0416886) , 
0.697055, 0, 14, 0, 0.531322,-0.0602272)    );
  // itree = 519
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746387,-0.000546603) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.583635,-0.000456383) , 
-0.371455, 1, 4, 0, 0.674569,-0.163937) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.591273,-0.00023015) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.3894,0.000161449) , 
0.727314, 1, 8, 0, 0.486887,-0.0295278) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7683,-0.000898657) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174128,0.000247155) , 
0.773152, 0, 0, 0, 0.195803,0.185048) , 
0.576441, 1, 1, 0, 0.442288,0.00334887) , 
1.71925, 0, 7, 0, 0.484333,-0.0269315)    );
  // itree = 520
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.838936,-0.00068672) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.586199,-0.00022722) , 
0.612718, 1, 17, 0, 0.622678,-0.105302) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.588263,-0.000256684) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.13647,0.000591645) , 
0.569486, 0, 14, 0, 0.482987,-0.043168) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.520013,-0.000122555) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221023,0.000144346) , 
0.299272, 1, 11, 0, 0.264516,0.134042) , 
0.971192, 0, 7, 0, 0.338064,0.0743843) , 
0.221227, 1, 16, 0, 0.460287,-0.0027788)    );
  // itree = 521
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.697937,-0.000383094) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.492647,-0.000137037) , 
0.907224, 1, 17, 0, 0.531202,-0.0497445) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755958,-0.000350556) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.104823,0.00159891) , 
2.10866, 0, 10, 0, 0.461489,-0.069276) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.398161,-0.00014574) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0946651,0.000456706) , 
0.959073, 0, 2, 0, 0.128312,0.223388) , 
0.352317, 1, 8, 0, 0.239422,0.125789) , 
0.130115, 1, 0, 0, 0.468578,-0.0120704)    );
  // itree = 522
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721678,-0.000327206) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279281,0.000383753) , 
0.619573, 0, 14, 0, 0.62821,-0.13153) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.724904,-0.000267834) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.440817,-7.95716e-05) , 
0.149599, 1, 10, 0, 0.466132,-0.0261501) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.865207,-0.00112469) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.242591,0.000687111) , 
0.521951, 0, 15, 0, 0.273691,0.195147) , 
0.368496, 0, 2, 0, 0.435238,0.00937691) , 
1.21326, 1, 17, 0, 0.501274,-0.0388424)    );
  // itree = 523
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755835,-0.000294467) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.551496,-7.97831e-05) , 
0.452678, 0, 2, 0, 0.680343,-0.134578) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.77953,-0.000723434) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.348134,0.00025841) , 
0.560915, 0, 2, 0, 0.544149,-0.145895) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.410862,-2.55417e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229469,0.000345579) , 
1.79058, 0, 17, 0, 0.301926,0.0644207) , 
0.325134, 0, 12, 0, 0.334312,0.0363005) , 
0.697055, 0, 14, 0, 0.513109,-0.0519933)    );
  // itree = 524
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622171,-0.000191054) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234268,0.000105202) , 
0.241197, 0, 7, 0, 0.584079,-0.116407) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.748637,-0.000567673) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.364192,-0.000372103) , 
0.370896, 1, 4, 0, 0.653997,-0.136268) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.642627,-0.000199896) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.25864,0.000304468) , 
2.70879, 0, 8, 0, 0.294395,0.13015) , 
1.71926, 0, 7, 0, 0.370466,0.0737914) , 
-0.371429, 0, 5, 0, 0.523407,-0.0623852)    );
  // itree = 525
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.632952,-0.000219008) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.473027,-0.00011265) , 
1.64235, 1, 17, 0, 0.573109,-0.0889897) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.594657,-0.000344286) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.111801,0.00534933) , 
1.33744, 0, 11, 0, 0.424426,-0.0447471) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.466771,-0.000158501) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0999741,0.000785572) , 
0.788313, 0, 1, 0, 0.148913,0.215115) , 
1.33782, 1, 18, 0, 0.275204,0.0959977) , 
0.133711, 1, 0, 0, 0.512256,-0.051202)    );
  // itree = 526
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707393,-0.000328679) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164495,0.000541385) , 
0.573846, 0, 14, 0, 0.645765,-0.143565) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.873728,-0.000608015) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.103131,0.000368304) , 
0.418342, 0, 7, 0, 0.790713,-0.285696) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.535184,-6.45964e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245048,0.000215096) , 
0.26488, 1, 16, 0, 0.353133,0.0724674) , 
2.39349, 0, 11, 0, 0.400291,0.0338684) , 
0.975823, 0, 7, 0, 0.521446,-0.053705)    );
  // itree = 527
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.523438,-0.000179166) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.30041,0.000229077) , 
-1.1143, 0, 5, 0, 0.493426,-0.0268721) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.946293,-0.00251279) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194954,-0.00050605) , 
0.236141, 0, 1, 0, 0.561655,-0.126681) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.124026,0.000217054) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0528573,0.0255032) , 
0.709349, 0, 2, 0, 0.0860539,0.255627) , 
0.392657, 0, 12, 0, 0.117091,0.230678) , 
0.572642, 1, 16, 0, 0.467102,-0.00885695)    );
  // itree = 528
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.726853,-0.000371366) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.540026,-9.31322e-05) , 
1.22075, 0, 7, 0, 0.618448,-0.0911284) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.952067,-0.000633646) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212857,0.00131733) , 
0.203872, 0, 0, 0, 0.475258,-0.135036) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.799782,-0.000634028) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.213115,0.000352407) , 
-2.10365, 1, 3, 0, 0.223677,0.11099) , 
0.451305, 1, 18, 0, 0.251494,0.0837874) , 
0.637994, 0, 14, 0, 0.497822,-0.0336295)    );
  // itree = 529
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670036,-0.000208893) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229158,0.0015792) , 
0.0885266, 0, 15, 0, 0.616955,-0.139842) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76708,-0.000697609) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.155611,0.000441004) , 
2.39005, 1, 18, 0, 0.716824,-0.222561) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.55938,-3.89737e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.273888,0.000163131) , 
0.866626, 0, 4, 0, 0.348271,0.0823497) , 
2.30805, 0, 11, 0, 0.431399,0.0135759) , 
1.19678, 1, 11, 0, 0.556818,-0.0901205)    );
  // itree = 530
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72168,-0.000405751) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.348703,0.000993265) , 
0.956998, 1, 8, 0, 0.583332,-0.109221) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660438,-0.000424019) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292381,-0.000183257) , 
2.09155, 1, 18, 0, 0.582587,-0.118165) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.56174,-0.000159834) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.24779,0.000295031) , 
0.251703, 0, 15, 0, 0.378007,0.0619432) , 
1.34635, 1, 9, 0, 0.425016,0.0205577) , 
0.748033, 1, 10, 0, 0.476194,-0.0213952)    );
  // itree = 531
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741108,-0.000373209) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.517385,-7.88453e-05) , 
1.0538, 1, 17, 0, 0.57342,-0.0868886) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.920142,-0.000796948) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168392,0.00120577) , 
1.48942, 1, 18, 0, 0.810143,-0.376491) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.648701,-0.000639985) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.206211,0.000194339) , 
0.288068, 0, 12, 0, 0.234122,0.153235) , 
1.05281, 1, 9, 0, 0.283413,0.107905) , 
0.568605, 0, 13, 0, 0.514282,-0.0471662)    );
  // itree = 532
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.877635,-0.000647548) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.573622,-0.000742249) , 
2.09471, 0, 9, 0, 0.836699,-0.303088) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615064,-0.000244857) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.423904,0.000112004) , 
0.985053, 1, 8, 0, 0.537061,-0.0613205) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.414151,0.00033497) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.136508,0.000155103) , 
1.45158, 1, 17, 0, 0.277469,0.105334) , 
0.572721, 0, 13, 0, 0.480759,-0.0251753) , 
0.615633, 1, 17, 0, 0.506529,-0.0452965)    );
  // itree = 533
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.684123,-0.000247788) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388392,-3.22416e-05) , 
0.142754, 0, 15, 0, 0.583542,-0.0992906) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.589164,-0.000234623) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118022,0.00123617) , 
0.363208, 1, 4, 0, 0.486796,-0.00192384) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.557795,-0.000310018) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145269,0.000330612) , 
0.805958, 0, 14, 0, 0.217346,0.170381) , 
0.307851, 0, 15, 0, 0.291982,0.122654) , 
0.49061, 0, 7, 0, 0.513227,-0.0457648)    );
  // itree = 534
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.633636,-0.000229703) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.364385,-1.39714e-06) , 
0.589056, 0, 13, 0, 0.585956,-0.0790787) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.954501,-0.00157932) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.14562,0.0587797) , 
0.923494, 1, 17, 0, 0.834073,-0.389338) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.477895,-0.00035643) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.15907,0.000635378) , 
1.94449, 0, 11, 0, 0.204369,0.127915) , 
3.63653, 0, 8, 0, 0.228883,0.107779) , 
0.115759, 0, 15, 0, 0.499395,-0.0337808)    );
  // itree = 535
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676034,-0.000256469) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335147,0.000314137) , 
0.116155, 0, 15, 0, 0.601392,-0.100742) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.868025,-0.000673482) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.24694,0.000485971) , 
1.14717, 1, 18, 0, 0.586595,-0.15035) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.584631,-0.000326018) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158354,0.000404625) , 
0.800513, 0, 14, 0, 0.208944,0.168764) , 
2.06865, 0, 17, 0, 0.259907,0.125701) , 
0.352614, 1, 16, 0, 0.502245,-0.0349963)    );
  // itree = 536
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694003,-0.000360854) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.489072,-5.72942e-05) , 
1.20452, 0, 7, 0, 0.561749,-0.0724662) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.671979,-0.000707218) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.193146,0.00160139) , 
1.19846, 1, 10, 0, 0.465939,-0.0611117) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.399597,-0.000279792) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0819418,0.00165617) , 
1.94431, 0, 11, 0, 0.117985,0.16852) , 
0.913799, 1, 17, 0, 0.190089,0.120935) , 
0.0905465, 0, 15, 0, 0.503757,-0.0422889)    );
  // itree = 537
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714568,-0.000339553) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.460995,-7.574e-05) , 
0.735837, 0, 7, 0, 0.63572,-0.089002) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.422701,7.88392e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.181129,0.000152917) , 
0.782625, 1, 2, 0, 0.368934,0.0490695) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679361,-0.000836026) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.114523,0.000207813) , 
0.253401, 0, 6, 0, 0.13344,0.168156) , 
0.560621, 0, 14, 0, 0.281813,0.0931257) , 
0.695771, 0, 14, 0, 0.461467,0.000671956)    );
  // itree = 538
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700858,-0.000280956) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.381804,0.000288531) , 
0.116799, 0, 15, 0, 0.63059,-0.121684) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745961,-0.000231002) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256162,0.000354076) , 
0.672498, 0, 14, 0, 0.501063,-0.0802727) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.509725,0.000182566) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152794,0.000242863) , 
0.306407, 0, 15, 0, 0.253819,0.133693) , 
0.866664, 0, 5, 0, 0.333428,0.0647988) , 
0.309515, 1, 16, 0, 0.520528,-0.052615)    );
  // itree = 539
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.758395,-0.000606438) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0934461,-0.000238425) , 
0.0724273, 1, 0, 0, 0.728417,-0.199342) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.693162,-0.000282813) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.4859,-0.0001065) , 
0.16289, 0, 0, 0, 0.517268,-0.0418875) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.469243,-0.000195157) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.214642,0.000593938) , 
0.845749, 0, 7, 0, 0.28915,0.086858) , 
0.395297, 1, 16, 0, 0.45162,-0.00483687) , 
1.97336, 0, 7, 0, 0.489144,-0.0312045)    );
  // itree = 540
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720134,-0.000332726) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.46734,-0.000232263) , 
0.251334, 0, 12, 0, 0.605199,-0.114778) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.649161,-0.000275437) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.25326,0.00251102) , 
0.985482, 1, 8, 0, 0.520417,-0.0692615) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672857,-0.000425346) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270953,0.000320264) , 
1.13271, 1, 17, 0, 0.308502,0.110272) , 
2.54319, 0, 9, 0, 0.397538,0.0348407) , 
0.986676, 0, 7, 0, 0.495368,-0.035645)    );
  // itree = 541
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.81062,-0.000605492) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.147171,0.0159988) , 
0.360452, 0, 13, 0, 0.791508,-0.250779) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.973282,-0.000811377) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0230766,0.0204953) , 
0.888941, 0, 5, 0, 0.787635,-0.422715) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.467214,-7.38046e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0998236,0.000139104) , 
0.105145, 0, 7, 0, 0.450013,0.0006968) , 
0.236077, 0, 6, 0, 0.458931,-0.0104883) , 
2.2075, 0, 7, 0, 0.493599,-0.0355364)    );
  // itree = 542
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.696008,-0.000247659) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.491499,-0.000190844) , 
0.68252, 0, 2, 0, 0.596304,-0.120931) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.886947,-0.000619406) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.484875,-6.79964e-05) , 
2.13378, 0, 7, 0, 0.557647,-0.0477846) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695715,-0.000434658) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.178292,0.000464129) , 
0.775146, 0, 14, 0, 0.233693,0.139413) , 
0.17026, 0, 15, 0, 0.420669,0.0313684) , 
0.731441, 1, 8, 0, 0.503471,-0.0404325)    );
  // itree = 543
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.77529,-0.000298139) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.553716,-0.000154316) , 
0.536008, 0, 2, 0, 0.664104,-0.116791) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776171,-0.000300143) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.386442,-4.75354e-05) , 
0.299209, 1, 10, 0, 0.425195,-0.0411226) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.521076,-0.000588222) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.240335,0.000401679) , 
2.70877, 0, 8, 0, 0.268023,0.117663) , 
0.167907, 1, 12, 0, 0.336792,0.0481881) , 
0.705803, 0, 14, 0, 0.496852,-0.0324889)    );
  // itree = 544
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.949879,-0.000578195) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.60531,-0.00075794) , 
0.00181362, 0, 0, 0, 0.871569,-0.310019) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721815,-0.000522475) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.476742,-0.000127076) , 
1.0474, 1, 9, 0, 0.509812,-0.0454146) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.605649,-0.000150582) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.216207,0.000273386) , 
0.29919, 1, 11, 0, 0.284485,0.125547) , 
0.449048, 0, 7, 0, 0.452388,-0.00184545) , 
0.0438572, 1, 16, 0, 0.474618,-0.0181888)    );
  // itree = 545
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.81432,-0.000487451) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.606578,-0.000570912) , 
2.54298, 0, 9, 0, 0.722334,-0.18639) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575859,-0.000294594) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172843,0.00210349) , 
-1.11304, 0, 3, 0, 0.54922,-0.103792) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.471303,-0.000104276) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251513,0.000491226) , 
2.24655, 0, 9, 0, 0.40853,0.0352607) , 
2.09437, 0, 10, 0, 0.440723,0.00344265) , 
1.95166, 0, 7, 0, 0.47936,-0.0226026)    );
  // itree = 546
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.648962,-0.000231125) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.504822,-8.60913e-05) , 
2.24394, 0, 9, 0, 0.596838,-0.0773102) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.9214,-0.000692472) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0251526,-0.000718215) , 
0.260377, 1, 6, 0, 0.768617,-0.416313) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.371559,-0.000100113) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157528,0.000548469) , 
1.49563, 0, 11, 0, 0.225977,0.10276) , 
0.242955, 0, 6, 0, 0.251418,0.0784243) , 
0.62241, 0, 14, 0, 0.49088,-0.0295385)    );
  // itree = 547
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.733276,-0.000341677) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.521392,-0.000119516) , 
1.16609, 0, 7, 0, 0.600487,-0.0906977) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704413,-0.000587386) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158517,0.0108976) , 
0.985351, 1, 8, 0, 0.549897,-0.126375) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.421688,-4.15939e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.170232,0.000511468) , 
-1.36191, 1, 5, 0, 0.213024,0.137682) , 
0.598593, 1, 10, 0, 0.317781,0.0555687) , 
0.143345, 0, 15, 0, 0.498828,-0.0381013)    );
  // itree = 548
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760933,-0.000502113) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.529315,-0.000130139) , 
0.0933989, 1, 16, 0, 0.574966,-0.0855593) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.925837,-0.000858144) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.024472,0.0200975) , 
0.842231, 0, 5, 0, 0.688391,-0.348101) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.5658,3.00824e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.131887,0.000507188) , 
0.701186, 0, 14, 0, 0.2686,0.117188) , 
0.233886, 0, 6, 0, 0.29249,0.0907094) , 
0.390647, 1, 16, 0, 0.502601,-0.0404027)    );
  // itree = 549
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746504,-0.000264125) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.493217,-0.000109912) , 
0.35099, 0, 1, 0, 0.656238,-0.114254) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.614994,-0.000317532) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0815638,0.000649441) , 
0.571441, 0, 2, 0, 0.526834,-0.129898) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.304431,0.000309853) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.240465,0.000200867) , 
0.596775, 1, 14, 0, 0.281867,0.0688229) , 
2.2437, 0, 10, 0, 0.336464,0.0245335) , 
0.67569, 0, 14, 0, 0.518172,-0.054331)    );
  // itree = 550
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.777515,-0.000467621) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.585516,-0.000507164) , 
-0.123879, 1, 5, 0, 0.702304,-0.180711) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.539767,-0.000172946) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0827516,0.0016723) , 
0.0898002, 0, 15, 0, 0.476957,-0.0245589) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.459532,0.000570747) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.146275,0.00114105) , 
0.19871, 1, 16, 0, 0.240384,0.177425) , 
2.24057, 1, 18, 0, 0.434388,0.0117859) , 
1.70906, 0, 7, 0, 0.487445,-0.0263354)    );
  // itree = 551
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687524,-0.000283515) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.396397,0.000483598) , 
0.257617, 0, 2, 0, 0.661308,-0.112391) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.472515,-0.000144838) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.177948,0.00213707) , 
0.335981, 0, 1, 0, 0.435042,-0.0388169) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558431,-0.000433015) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.217105,0.000884994) , 
2.67771, 0, 8, 0, 0.254689,0.116348) , 
1.79292, 1, 18, 0, 0.370937,0.0163351) , 
0.705803, 0, 14, 0, 0.506044,-0.0435599)    );
  // itree = 552
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.593257,-0.000257846) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.420212,-4.85652e-05) , 
1.79441, 1, 18, 0, 0.535649,-0.0360629) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.902587,-0.00168129) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163605,0.0284854) , 
0.937946, 1, 8, 0, 0.77137,-0.300591) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704661,-0.00115598) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.190796,0.000527531) , 
0.332206, 1, 14, 0, 0.19874,0.131155) , 
0.908205, 0, 13, 0, 0.224159,0.11199) , 
0.116222, 0, 15, 0, 0.453023,0.00320936)    );
  // itree = 553
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.891305,-0.000479294) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.62071,-0.000582704) , 
0.772195, 0, 2, 0, 0.742567,-0.188392) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.832585,-0.000415868) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.491364,-0.000214034) , 
2.14424, 1, 10, 0, 0.564386,-0.121583) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.533539,-0.000140939) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.364129,2.68717e-05) , 
2.84584, 0, 9, 0, 0.405329,0.038276) , 
2.09437, 0, 10, 0, 0.442951,0.000464091) , 
0.0865536, 1, 16, 0, 0.478277,-0.0218025)    );
  // itree = 554
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674872,-0.000262434) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.469339,-2.67028e-05) , 
0.452693, 0, 2, 0, 0.626744,-0.120113) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.724073,-0.000440302) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125493,0.000158598) , 
0.616484, 1, 5, 0, 0.650551,-0.233783) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.422846,-0.000171504) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202703,0.000655773) , 
0.948545, 0, 7, 0, 0.267407,0.118416) , 
2.39355, 0, 10, 0, 0.339014,0.0525916) , 
0.309582, 1, 16, 0, 0.518098,-0.0549)    );
  // itree = 555
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628719,-0.000227272) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.235055,0.000253272) , 
0.0883576, 0, 15, 0, 0.573456,-0.094551) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.752499,-0.000227984) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0896887,0.000959303) , 
0.679832, 0, 14, 0, 0.551167,-0.0853071) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.503289,0.00031646) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.134116,0.000389098) , 
2.40481, 0, 8, 0, 0.161173,0.231311) , 
0.598448, 1, 11, 0, 0.311052,0.109631) , 
0.49335, 0, 7, 0, 0.507891,-0.043533)    );
  // itree = 556
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.631402,-0.000272498) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.307893,0.000224847) , 
0.614693, 0, 13, 0, 0.54727,-0.074918) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817763,-0.000584183) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.277733,-0.000303175) , 
0.171827, 0, 15, 0, 0.621757,-0.102039) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.627418,-0.00047574) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.284711,0.000272917) , 
2.10457, 0, 5, 0, 0.311897,0.106607) , 
1.93712, 0, 7, 0, 0.367055,0.0694666) , 
0.976674, 1, 8, 0, 0.47251,-0.0150217)    );
  // itree = 557
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.678666,-0.000278007) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388244,5.92639e-05) , 
0.710214, 0, 14, 0, 0.525146,-0.0568298) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.961501,-0.00120971) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0467969,-0.000749909) , 
2.67981, 0, 18, 0, 0.7814,-0.351744) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.651709,-0.000971989) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.141963,0.000165022) , 
2.54069, 0, 11, 0, 0.165611,0.226905) , 
0.523447, 0, 15, 0, 0.199378,0.195174) , 
0.246682, 0, 7, 0, 0.488981,-0.0288537)    );
  // itree = 558
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.83425,-0.000638823) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.496361,-0.000224063) , 
0.0241424, 1, 0, 0, 0.767732,-0.234778) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738392,-0.000366132) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.304372,0.00223909) , 
0.967603, 1, 8, 0, 0.601928,-0.131201) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.479702,-5.37864e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.302241,6.38258e-05) , 
-0.371493, 1, 3, 0, 0.376181,0.0611713) , 
0.598401, 1, 11, 0, 0.454523,-0.00558857) , 
1.95319, 0, 7, 0, 0.505969,-0.0432338)    );
  // itree = 559
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628531,-0.0002344) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.348422,0.000227445) , 
0.350413, 0, 2, 0, 0.592465,-0.0796021) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.860592,-0.00114548) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157206,8.22738e-05) , 
0.710962, 1, 8, 0, 0.676646,-0.2685) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.557737,-0.000110009) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.217438,0.000250245) , 
0.148984, 1, 11, 0, 0.250597,0.11682) , 
0.598492, 1, 9, 0, 0.279519,0.0906629) , 
0.14376, 0, 15, 0, 0.485471,-0.0213896)    );
  // itree = 560
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.587893,-0.000215041) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.237249,0.000455239) , 
0.274439, 0, 2, 0, 0.567045,-0.0641227) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.848248,-0.0006273) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113236,0.0030564) , 
-0.86832, 1, 4, 0, 0.559892,-0.163982) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.841942,-0.00125464) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167132,0.000585074) , 
3.67377, 0, 8, 0, 0.187863,0.139197) , 
0.299361, 1, 10, 0, 0.245523,0.0922086) , 
0.116474, 0, 15, 0, 0.485518,-0.0244826)    );
  // itree = 561
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.809395,-0.000549211) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.426193,-4.7022e-05) , 
0.533983, 0, 13, 0, 0.755753,-0.223607) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575233,-0.000194127) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.182349,0.000987773) , 
0.118576, 0, 15, 0, 0.480561,-0.0262781) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.435605,-0.000209606) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265161,0.000157953) , 
2.09442, 0, 10, 0, 0.303832,0.117348) , 
1.50933, 1, 17, 0, 0.396758,0.0418285) , 
1.72669, 0, 7, 0, 0.486424,-0.0244693)    );
  // itree = 562
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.659972,-0.000311146) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.345692,-0.000178666) , 
0.819268, 1, 2, 0, 0.612035,-0.115968) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.623538,-0.000228158) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22415,0.000610848) , 
0.147132, 0, 15, 0, 0.508934,-0.050025) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668872,-0.000436937) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209441,0.00148651) , 
0.328261, 1, 13, 0, 0.262577,0.122229) , 
0.985066, 1, 8, 0, 0.418909,0.0129203) , 
0.981101, 0, 7, 0, 0.50806,-0.0465774)    );
  // itree = 563
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660857,-0.000257254) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.394154,0.000206812) , 
0.391241, 1, 16, 0, 0.599301,-0.0923207) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.886872,-0.000688425) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.215605,-0.000803111) , 
0.0899687, 1, 16, 0, 0.79802,-0.289677) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.313678,-5.96846e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164842,0.00109164) , 
0.0960188, 0, 6, 0, 0.194777,0.123233) , 
2.70179, 0, 7, 0, 0.24652,0.0878163) , 
0.115669, 0, 15, 0, 0.51259,-0.0480444)    );
  // itree = 564
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.808652,-0.00069486) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.502471,-0.000168509) , 
0.236077, 0, 6, 0, 0.509086,-0.0234872) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.803482,-0.000483637) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0539198,0.0012761) , 
0.083321, 0, 15, 0, 0.368206,-0.0640022) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.474701,-0.000494377) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0791013,0.00203932) , 
0.759798, 1, 17, 0, 0.126486,0.168748) , 
0.245001, 1, 8, 0, 0.161997,0.134555) , 
0.0909793, 0, 15, 0, 0.448957,0.00389173)    );
  // itree = 565
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.639295,-0.000232623) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.436122,-8.10416e-05) , 
0.371364, 1, 4, 0, 0.585171,-0.0926029) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.876194,-0.000592361) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209068,0.000692965) , 
0.35091, 0, 2, 0, 0.692234,-0.179084) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.387561,0.00082419) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.108012,0.000377172) , 
1.11416, 0, 5, 0, 0.178592,0.17616) , 
0.797899, 0, 14, 0, 0.254307,0.123794) , 
0.397802, 1, 16, 0, 0.509836,-0.0433309)    );
  // itree = 566
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.939806,-0.000455485) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.652182,-0.00059366) , 
0.771764, 0, 2, 0, 0.805463,-0.243543) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.871737,-0.000566472) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.395445,-0.00045805) , 
-0.858041, 1, 4, 0, 0.653711,-0.172149) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.53913,-0.000224535) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.323633,6.88114e-05) , 
1.06013, 1, 17, 0, 0.372093,0.0635753) , 
2.24392, 0, 11, 0, 0.397321,0.0424589) , 
0.0881708, 1, 16, 0, 0.467356,-0.00661789)    );
  // itree = 567
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.646344,-0.000284786) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.260165,0.000597147) , 
0.573147, 0, 14, 0, 0.582581,-0.0981285) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.890774,-0.000652588) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160318,-0.00019239) , 
0.446319, 0, 7, 0, 0.76682,-0.276067) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.434243,-9.83562e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22344,0.000307364) , 
0.683724, 1, 11, 0, 0.30595,0.110793) , 
2.39343, 0, 11, 0, 0.353774,0.0706494) , 
0.720781, 0, 7, 0, 0.49545,-0.0338566)    );
  // itree = 568
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.710009,-0.000395728) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.469218,-3.18254e-05) , 
0.748046, 1, 10, 0, 0.557981,-0.0856738) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.910989,-0.000600146) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.532573,-0.000522383) , 
0.181983, 0, 15, 0, 0.788257,-0.243618) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.818805,-0.00115152) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.300113,0.000216398) , 
3.57652, 0, 8, 0, 0.317902,0.102969) , 
2.21046, 0, 7, 0, 0.396091,0.0453548) , 
0.985013, 1, 8, 0, 0.490082,-0.0307184)    );
  // itree = 569
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.726405,-0.000503092) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0279566,0.00689948) , 
0.529217, 0, 14, 0, 0.699155,-0.173016) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.62952,-0.000173398) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.342316,6.63864e-06) , 
2.09155, 1, 18, 0, 0.576665,-0.0473878) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.846003,-0.000938345) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.228542,0.000312599) , 
0.429087, 0, 12, 0, 0.244437,0.0999281) , 
0.670632, 0, 14, 0, 0.424585,0.0200471) , 
1.71927, 0, 7, 0, 0.479736,-0.0187321)    );
  // itree = 570
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.80946,-0.000340636) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.582616,-0.000240719) , 
0.908231, 0, 2, 0, 0.62722,-0.112019) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689372,-0.000437666) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256576,-0.000183186) , 
-0.373121, 0, 5, 0, 0.589054,-0.1882) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.462285,-9.69177e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.213697,0.000148963) , 
0.451356, 1, 8, 0, 0.288728,0.108324) , 
2.39351, 0, 10, 0, 0.339931,0.0577691) , 
0.264641, 1, 16, 0, 0.494211,-0.0334102)    );
  // itree = 571
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.77929,-0.000450851) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.425448,9.28183e-05) , 
0.304019, 0, 2, 0, 0.708252,-0.1577) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666098,-0.000331645) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.33563,0.000267722) , 
0.732944, 1, 8, 0, 0.493336,-0.0571345) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.858626,-0.000707174) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.316839,6.33294e-05) , 
0.449022, 1, 10, 0, 0.338761,0.0782877) , 
2.54325, 0, 9, 0, 0.402896,0.0221) , 
0.775619, 0, 14, 0, 0.491832,-0.0302675)    );
  // itree = 572
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686336,-0.000255105) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.496381,-0.00014372) , 
2.24401, 0, 9, 0, 0.625648,-0.114067) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.635912,-0.000328958) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198851,-8.26658e-05) , 
0.293158, 0, 5, 0, 0.448572,-0.0525618) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.444796,0.00040607) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.150906,0.000448231) , 
0.349715, 0, 12, 0, 0.201064,0.175607) , 
0.415887, 1, 8, 0, 0.268619,0.11333) , 
0.308606, 1, 16, 0, 0.498851,-0.0333078)    );
  // itree = 573
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.61409,-0.000210621) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.301278,0.000383911) , 
-1.36196, 0, 5, 0, 0.591077,-0.0861508) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.751405,-0.00118864) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227917,0.0305739) , 
0.457098, 0, 2, 0, 0.656525,-0.26072) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.626858,-0.00129042) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154234,0.000428299) , 
0.330491, 1, 14, 0, 0.163142,0.161096) , 
2.39289, 0, 11, 0, 0.202061,0.127823) , 
0.116474, 0, 15, 0, 0.501315,-0.0367782)    );
  // itree = 574
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.667647,-0.000245487) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.536665,-0.000166378) , 
0.205429, 1, 15, 0, 0.590891,-0.0822774) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.725762,-0.00048578) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.32613,-0.000290596) , 
0.544264, 0, 1, 0, 0.569678,-0.103227) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.5216,-0.000181772) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.14924,0.000510016) , 
2.84167, 0, 10, 0, 0.171201,0.168128) , 
1.717, 0, 7, 0, 0.267303,0.102684) , 
0.143499, 0, 15, 0, 0.480305,-0.0190671)    );
  // itree = 575
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.613563,-0.000238241) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.421115,-5.92799e-05) , 
1.94377, 1, 18, 0, 0.562353,-0.0610356) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.956453,-0.00153272) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.00388218,0.0406484) , 
1.92973, 1, 9, 0, 0.796003,-0.496568) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.367408,-6.89938e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125687,0.00083155) , 
1.2024, 1, 17, 0, 0.21027,0.118621) , 
0.336572, 1, 14, 0, 0.22565,0.102467) , 
0.11583, 0, 15, 0, 0.476554,-0.0193715)    );
  // itree = 576
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670777,-0.000261788) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.502255,-0.000106591) , 
1.22465, 1, 8, 0, 0.627608,-0.0864615) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.862259,-0.000754165) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.272465,-9.18075e-05) , 
0.0182353, 1, 0, 0, 0.693462,-0.243188) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.445022,-0.000237573) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.18661,0.000386788) , 
2.39358, 0, 10, 0, 0.226868,0.124071) , 
2.10387, 0, 7, 0, 0.268212,0.0915286) , 
0.678821, 0, 14, 0, 0.47169,-0.00924322)    );
  // itree = 577
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707272,-0.000339894) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.122928,-0.000152251) , 
0.720035, 1, 1, 0, 0.68248,-0.167001) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.667083,-0.000161455) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.440048,-4.11873e-05) , 
0.361458, 0, 15, 0, 0.493121,-0.0283603) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.397691,-0.000263087) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.126796,0.00135956) , 
2.09433, 0, 10, 0, 0.206563,0.135848) , 
0.138549, 1, 0, 0, 0.422451,0.0121361) , 
1.22807, 0, 7, 0, 0.524401,-0.0580982)    );
  // itree = 578
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.835013,-0.000519143) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.560339,-9.3126e-05) , 
0.350195, 0, 2, 0, 0.725476,-0.170936) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.799228,-0.000436618) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.488443,-0.000592408) , 
0.516405, 0, 1, 0, 0.723203,-0.205542) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.501848,-0.000167734) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.3125,0.000154392) , 
0.734759, 1, 8, 0, 0.39791,0.0320659) , 
0.759123, 1, 17, 0, 0.432935,0.00648266) , 
0.813467, 0, 14, 0, 0.492055,-0.0293724)    );
  // itree = 579
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.659556,-0.000248245) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.446273,-0.000219628) , 
0.838775, 1, 13, 0, 0.606046,-0.0592366) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.884181,-0.000853304) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163377,-0.000342877) , 
0.0863149, 0, 0, 0, 0.662135,-0.239878) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.580483,-0.000459808) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239225,0.00027683) , 
2.17682, 0, 7, 0, 0.261763,0.109339) , 
2.5427, 0, 11, 0, 0.283176,0.0906618) , 
0.697055, 0, 14, 0, 0.442594,0.016649)    );
  // itree = 580
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.665418,-0.000290279) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.420069,8.49928e-05) , 
0.350417, 0, 2, 0, 0.620406,-0.107629) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746553,-0.000262548) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.377149,7.43774e-05) , 
-0.643253, 0, 4, 0, 0.469882,-0.0672881) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.545469,-9.05866e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.144191,0.000166492) , 
0.307012, 0, 15, 0, 0.245913,0.151663) , 
-0.5512, 1, 4, 0, 0.328779,0.0706537) , 
0.0454795, 1, 0, 0, 0.493175,-0.0298483)    );
  // itree = 581
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.587602,-0.000197401) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.604119,-0.000526099) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.114449,0.00242118) , 
1.95348, 0, 7, 0, 0.217568,0.0924464) , 
0.0887553, 0, 15, 0, 0.533337,-0.0611309) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.521127,0.000799951) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.300507,0.00941144) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0527974,0.000548008) , 
0.949537, 1, 17, 0, 0.0655288,0.246277) , 
2.99155, 0, 10, 0, 0.0746895,0.238254) , 
0.277099, 1, 0, 0, 0.50268,-0.0411194)    );
  // itree = 582
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.844325,-0.000658798) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.665718,-0.00039457) , 
0.615696, 1, 17, 0, 0.727326,-0.199227) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67341,-0.000270148) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.334212,0.000949162) , 
0.965989, 1, 8, 0, 0.551991,-0.0579245) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.740506,-0.00068089) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259382,7.04848e-05) , 
0.243364, 0, 6, 0, 0.276998,0.11911) , 
0.740997, 0, 13, 0, 0.417429,0.0287037) , 
1.71929, 0, 7, 0, 0.486309,-0.0219579)    );
  // itree = 583
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.723267,-0.000535708) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.525576,-0.000116163) , 
1.70773, 0, 7, 0, 0.583628,-0.0755161) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722477,-0.000176782) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.332603,-0.000115002) , 
0.705273, 0, 13, 0, 0.633351,-0.0981577) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.414269,0.000202911) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172685,0.000106559) , 
0.125446, 0, 6, 0, 0.217611,0.144108) , 
0.731417, 0, 14, 0, 0.316937,0.0862278) , 
0.0454795, 1, 0, 0, 0.462514,-0.00206228)    );
  // itree = 584
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.919269,-0.000453777) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.641509,-0.000582784) , 
0.774584, 0, 2, 0, 0.776432,-0.214805) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.641086,-0.000188326) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.320825,2.28383e-05) , 
0.902776, 0, 18, 0, 0.591353,-0.0798317) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.937756,-0.000912961) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.310283,0.000146802) , 
-2.03409, 1, 3, 0, 0.331417,0.0543674) , 
0.197248, 0, 15, 0, 0.45474,-0.00930122) , 
0.0881741, 1, 16, 0, 0.499923,-0.0381656)    );
  // itree = 585
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.554002,-0.000167148) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.419853,0.000141656) , 
0.443187, 0, 2, 0, 0.517733,-0.050194) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.98699,-0.00149993) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165139,-0.000464758) , 
0.0881659, 1, 15, 0, 0.939646,-0.533874) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72886,-0.0010107) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.125261,-9.72023e-05) , 
2.81643, 0, 18, 0, 0.161227,0.213254) , 
2.34517, 0, 3, 0, 0.20851,0.167873) , 
0.669133, 1, 1, 0, 0.491112,-0.031421)    );
  // itree = 586
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.791425,-0.000455244) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.625269,-0.000437241) , 
0.448857, 1, 11, 0, 0.681333,-0.142149) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.601326,-0.000200916) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.285106,0.000216967) , 
0.170349, 0, 15, 0, 0.457971,-0.0252827) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.905335,-0.000739056) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.207919,0.000936539) , 
0.709889, 0, 16, 0, 0.252014,0.203085) , 
0.357672, 0, 2, 0, 0.432825,0.00259989) , 
0.13294, 1, 16, 0, 0.487008,-0.0289602)    );
  // itree = 587
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.621155,-0.000282353) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.409548,0.00013875) , 
0.311808, 0, 2, 0, 0.589,-0.0845185) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.725693,-0.000181987) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.359976,3.50009e-05) , 
2.24441, 0, 9, 0, 0.569752,-0.0751162) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.5674,-0.00037734) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209285,0.000316773) , 
2.39335, 0, 10, 0, 0.275424,0.0911134) , 
0.253169, 0, 15, 0, 0.368554,0.0385156) , 
0.0454795, 1, 0, 0, 0.485636,-0.0268297)    );
  // itree = 588
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728997,-0.000422929) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.584379,-0.000248763) , 
1.11405, 0, 4, 0, 0.622241,-0.130771) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.53676,2.28934e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.360729,-3.63243e-05) , 
0.618933, 0, 5, 0, 0.428756,-0.00406759) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.513848,-0.000341138) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.137545,0.00128208) , 
2.39315, 0, 11, 0, 0.180157,0.27973) , 
0.311796, 0, 2, 0, 0.402966,0.025374) , 
0.986705, 0, 7, 0, 0.507713,-0.0492159)    );
  // itree = 589
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.734743,-0.000295132) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530884,1.54231e-05) , 
0.305472, 0, 1, 0, 0.671508,-0.121224) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.58093,-0.000380035) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.260567,0.000121221) , 
0.0347469, 1, 6, 0, 0.466988,-0.0521875) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.353072,-6.37467e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168988,0.000905498) , 
1.34629, 0, 11, 0, 0.240657,0.110604) , 
0.943114, 0, 7, 0, 0.339945,0.0391898) , 
0.706203, 0, 14, 0, 0.502696,-0.0395512)    );
  // itree = 590
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.627043,-0.00023247) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.273588,0.000273881) , 
0.120632, 1, 0, 0, 0.59485,-0.065771) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.864528,-0.000745915) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378371,-4.69661e-05) , 
0.300926, 1, 10, 0, 0.483972,-0.1089) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689389,-0.000660572) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.17765,0.000497364) , 
0.236078, 0, 6, 0, 0.203228,0.116328) , 
1.06724, 1, 17, 0, 0.26587,0.0660732) , 
0.636914, 0, 14, 0, 0.480641,-0.0199999)    );
  // itree = 591
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742721,-0.000503774) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253153,5.64481e-05) , 
0.244161, 1, 16, 0, 0.699672,-0.166236) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.569981,-0.00019287) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.242774,-0.000113356) , 
-0.866284, 0, 3, 0, 0.540007,-0.08318) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.585354,-0.000135239) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.298927,0.000127253) , 
0.362845, 0, 15, 0, 0.366738,0.0668117) , 
0.492556, 1, 8, 0, 0.422948,0.0181536) , 
1.72668, 0, 7, 0, 0.478093,-0.0185918)    );
  // itree = 592
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744467,-0.000314248) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.429778,-0.00034494) , 
0.359956, 0, 1, 0, 0.698035,-0.184282) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760301,-0.000543007) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192365,-9.05751e-05) , 
-0.86859, 0, 3, 0, 0.702096,-0.254908) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.544802,-0.000120245) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256648,0.000288973) , 
0.17361, 0, 15, 0, 0.418481,0.0287415) , 
2.54316, 0, 10, 0, 0.454721,-0.0075033) , 
1.05497, 1, 17, 0, 0.521498,-0.0560199)    );
  // itree = 593
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.590884,-0.000218902) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.385614,-0.000111654) , 
1.34638, 1, 11, 0, 0.549668,-0.0553136) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.946502,-0.00086505) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0582297,-0.000418368) , 
-0.2715, 1, 4, 0, 0.850341,-0.450653) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.570454,-0.000516221) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171873,0.000267797) , 
1.19857, 1, 9, 0, 0.222815,0.149042) , 
0.299661, 1, 10, 0, 0.281251,0.093197) , 
0.0899562, 1, 0, 0, 0.46894,-0.0106481)    );
  // itree = 594
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.630108,-0.000239157) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.19427,0.000943438) , 
0.0896043, 0, 15, 0, 0.574601,-0.072144) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.923694,-0.00130043) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.12183,0.00279611) , 
0.643174, 0, 14, 0, 0.688065,-0.265533) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.73367,-0.000596971) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211971,0.000229537) , 
0.426479, 0, 12, 0, 0.236041,0.14131) , 
0.523416, 0, 15, 0, 0.258194,0.121372) , 
0.351159, 1, 16, 0, 0.478178,-0.013171)    );
  // itree = 595
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.751105,-0.000268091) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.379914,3.7139e-05) , 
0.681212, 0, 14, 0, 0.564783,-0.105909) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.834507,-0.000637298) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.489933,-0.000111675) , 
2.39354, 0, 10, 0, 0.586994,-0.0677138) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.812493,-0.0010978) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.26723,0.000897623) , 
0.522794, 0, 15, 0, 0.290674,0.160657) , 
0.735866, 0, 7, 0, 0.457919,0.0317633) , 
0.443199, 0, 2, 0, 0.538212,-0.0716774)    );
  // itree = 596
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730296,-0.000260789) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.558549,-0.000162434) , 
0.208955, 1, 15, 0, 0.614644,-0.0991227) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704773,-0.000372891) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.400849,3.86868e-05) , 
2.09394, 0, 10, 0, 0.506335,-0.0803379) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.499345,-0.000331913) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239623,0.000118992) , 
0.451129, 1, 18, 0, 0.266926,0.104775) , 
1.93621, 0, 17, 0, 0.350355,0.0402669) , 
0.170181, 0, 15, 0, 0.499768,-0.0385352)    );
  // itree = 597
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.775928,-0.000539894) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.351232,-6.27016e-05) , 
0.540965, 0, 13, 0, 0.70737,-0.173787) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.53887,-0.000136314) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.426183,-3.84534e-05) , 
0.359022, 0, 1, 0, 0.504101,-0.0511984) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.252911,0.000921821) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.117031,0.00113233) , 
0.829842, 1, 13, 0, 0.223417,0.179774) , 
2.24128, 1, 18, 0, 0.455858,-0.0114995) , 
1.72668, 0, 7, 0, 0.505298,-0.0434005)    );
  // itree = 598
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.725423,-0.000536816) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.393567,-7.73519e-05) , 
0.541615, 0, 13, 0, 0.660073,-0.130617) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.597511,-0.000249902) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.350262,0.000125187) , 
1.04723, 1, 11, 0, 0.499492,-0.0361447) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.732183,-0.000659804) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.281957,0.000283102) , 
0.481848, 0, 0, 0, 0.299431,0.107163) , 
0.973658, 1, 8, 0, 0.417254,0.022764) , 
1.72669, 0, 7, 0, 0.46211,-0.00557013)    );
  // itree = 599
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.864695,-0.000189425) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.535403,-0.000162011) , 
0.471487, 0, 15, 0, 0.560873,-0.0764255) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.576384,-0.000401441) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.196216,0.000333527) , 
-0.603047, 0, 3, 0, 0.359868,0.0301239) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.316578,0.000803208) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0462752,0.000604531) , 
0.279207, 0, 15, 0, 0.128087,0.211135) , 
-0.469193, 1, 3, 0, 0.196854,0.157431) , 
0.486092, 1, 16, 0, 0.511449,-0.0446744)    );
  // itree = 600
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668791,-0.000332878) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.350363,0.000103746) , 
0.542389, 0, 13, 0, 0.60985,-0.117479) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.734835,-0.00056263) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.260735,-5.958e-05) , 
1.82865, 0, 17, 0, 0.585714,-0.126185) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.496047,-0.00010769) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22012,0.000195416) , 
0.199145, 0, 15, 0, 0.349252,0.0863747) , 
1.3464, 1, 9, 0, 0.391053,0.0487989) , 
1.19933, 1, 17, 0, 0.46697,-0.00889527)    );
  // itree = 601
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728034,-0.000466533) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.235458,0.000403406) , 
0.227885, 0, 2, 0, 0.713111,-0.162122) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.766901,-0.000338124) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.487076,3.31338e-06) , 
0.755356, 1, 13, 0, 0.531095,-0.0515125) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.379442,-0.000105803) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.142278,0.00058706) , 
0.559959, 0, 7, 0, 0.300999,0.0947163) , 
0.74318, 0, 13, 0, 0.401738,0.0306955) , 
0.130679, 1, 16, 0, 0.472431,-0.0130812)    );
  // itree = 602
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705358,-0.000279059) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.377248,7.55579e-05) , 
0.693964, 0, 14, 0, 0.521869,-0.0626303) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.852515,-0.000644205) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.359629,-2.56967e-05) , 
1.35394, 1, 17, 0, 0.738198,-0.227492) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.644712,-0.00107041) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.320003,0.000330893) , 
1.71928, 0, 7, 0, 0.3638,0.108879) , 
0.448781, 1, 9, 0, 0.389532,0.0857599) , 
0.313744, 0, 1, 0, 0.493376,-0.0306814)    );
  // itree = 603
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.673256,-0.000285056) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.524093,-0.000176807) , 
0.123799, 0, 3, 0, 0.605745,-0.0967489) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.637005,-0.000292038) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.310505,0.000384593) , 
1.34833, 1, 18, 0, 0.482758,-0.0794204) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.611323,-0.000139874) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221881,0.00015021) , 
0.760163, 0, 14, 0, 0.293094,0.101661) , 
1.79489, 0, 10, 0, 0.373472,0.0249199) , 
0.0454795, 1, 0, 0, 0.497623,-0.0401123)    );
  // itree = 604
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.569115,-0.000206205) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118728,0.00135103) , 
0.229094, 0, 2, 0, 0.55549,-0.0512926) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.910587,-0.000702884) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.269381,0.000547439) , 
1.93265, 1, 10, 0, 0.492607,-0.130785) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64333,-0.00222376) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172493,0.000583215) , 
0.39863, 0, 12, 0, 0.194539,0.124686) , 
1.34642, 1, 9, 0, 0.248193,0.0787004) , 
0.116475, 0, 15, 0, 0.474028,-0.0168325)    );
  // itree = 605
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.739373,-0.000340749) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.280938,-2.365e-05) , 
0.606545, 0, 14, 0, 0.661041,-0.155691) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731871,-0.000218439) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.469999,-0.000132575) , 
0.307708, 0, 15, 0, 0.548248,-0.0505553) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.554555,-0.000143972) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.188821,0.000334677) , 
0.741145, 0, 14, 0, 0.275532,0.112802) , 
0.307351, 1, 16, 0, 0.422449,0.0247985) , 
1.058, 1, 17, 0, 0.484526,-0.0221609)    );
  // itree = 606
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.638065,-0.000243876) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.493256,-0.000148293) , 
0.589515, 0, 2, 0, 0.575303,-0.0739016) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.83711,-0.000481798) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167073,-0.000301058) , 
1.19451, 1, 18, 0, 0.689293,-0.237844) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.385047,-3.56188e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220532,0.000540206) , 
1.74117, 0, 17, 0, 0.27813,0.0983776) , 
2.24383, 0, 11, 0, 0.317301,0.0663466) , 
0.338617, 1, 16, 0, 0.486705,-0.0257403)    );
  // itree = 607
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.669855,-0.000227515) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.393026,0.000235118) , 
0.350411, 0, 2, 0, 0.635642,-0.118385) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.578579,-0.00041547) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.237733,0.000187447) , 
0.261163, 1, 16, 0, 0.399426,-0.034877) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.657462,-0.0016844) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174673,0.000839343) , 
2.19573, 0, 7, 0, 0.219012,0.149545) , 
0.492252, 0, 1, 0, 0.303353,0.0633308) , 
0.142612, 0, 15, 0, 0.525673,-0.0582476)    );
  // itree = 608
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647265,-0.000219149) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.41811,0.000193805) , 
0.298608, 0, 1, 0, 0.593347,-0.0998578) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720664,-0.000433709) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.264321,0.00299387) , 
1.36872, 1, 18, 0, 0.511985,-0.112636) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.499685,-0.000350438) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201509,0.000268816) , 
0.0192455, 1, 6, 0, 0.266831,0.125721) , 
0.243407, 1, 8, 0, 0.314702,0.0791778) , 
0.612061, 0, 13, 0, 0.520479,-0.0530389)    );
  // itree = 609
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692907,-0.000280381) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.436372,-0.000106501) , 
0.324532, 1, 12, 0, 0.614904,-0.0660238) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.871404,-0.000779577) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.33492,-0.000445268) , 
0.37254, 0, 4, 0, 0.678609,-0.233353) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.475933,7.325e-07) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.268316,0.000151147) , 
0.500275, 0, 0, 0, 0.281692,0.0951259) , 
2.54308, 0, 11, 0, 0.302919,0.0775594) , 
0.706898, 0, 14, 0, 0.447499,0.0110199)    );
  // itree = 610
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.801152,-0.000383407) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.633298,-0.000333066) , 
0.586945, 0, 1, 0, 0.708624,-0.193158) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735664,-0.000350592) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.485199,-9.47357e-05) , 
0.804639, 0, 14, 0, 0.569864,-0.0666515) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.520904,-0.000374341) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192551,0.000614126) , 
1.3465, 1, 9, 0, 0.25564,0.0925669) , 
0.14376, 0, 15, 0, 0.459781,-0.010872) , 
0.907411, 1, 17, 0, 0.503582,-0.0429577)    );
  // itree = 611
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705752,-0.00035517) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233427,9.51523e-05) , 
0.608789, 0, 14, 0, 0.634855,-0.118755) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660141,-0.00027635) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226906,0.00256843) , 
-0.616904, 0, 5, 0, 0.579439,-0.11912) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628049,-0.000680416) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.302073,4.99057e-05) , 
2.10459, 0, 5, 0, 0.317168,0.102725) , 
0.44885, 1, 10, 0, 0.370197,0.05787) , 
1.2264, 0, 7, 0, 0.470524,-0.00908541)    );
  // itree = 612
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688847,-0.000280541) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.428087,-1.46393e-05) , 
0.985053, 1, 8, 0, 0.581652,-0.0830703) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694213,-0.000665393) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.359014,6.92905e-05) , 
0.541603, 1, 14, 0, 0.571653,-0.185517) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679675,-0.000702233) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172042,0.000234005) , 
0.245114, 0, 6, 0, 0.201556,0.162688) , 
1.49922, 1, 9, 0, 0.288353,0.0810255) , 
0.090959, 1, 0, 0, 0.499636,-0.0371838)    );
  // itree = 613
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.790976,-0.000459834) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.366046,-0.000236616) , 
0.115565, 0, 15, 0, 0.730374,-0.181308) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.979762,-0.000662382) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.457259,-6.5931e-05) , 
0.230048, 0, 0, 0, 0.619816,-0.214481) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.560868,-0.000194307) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.376076,3.34443e-05) , 
-0.86806, 1, 4, 0, 0.419542,0.0185236) , 
0.449966, 1, 18, 0, 0.440587,-0.00596128) , 
0.132973, 1, 16, 0, 0.51094,-0.0485306)    );
  // itree = 614
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712365,-0.000293564) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.516604,-0.00014074) , 
0.747995, 1, 10, 0, 0.597279,-0.0962371) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.774373,-0.000629594) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.37322,-4.14927e-05) , 
1.82225, 0, 17, 0, 0.551606,-0.141296) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.369982,-4.7672e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.151219,0.000499479) , 
0.0202463, 1, 6, 0, 0.221438,0.149699) , 
1.34726, 1, 9, 0, 0.282464,0.0959138) , 
0.353659, 1, 16, 0, 0.503585,-0.0390503)    );
  // itree = 615
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.573218,-0.000188622) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.453906,-1.27429e-05) , 
0.489611, 0, 2, 0, 0.53675,-0.0638076) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612984,-0.000697514) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.111373,0.000195754) , 
2.39259, 0, 10, 0, 0.264108,0.0385328) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.485782,0.00407399) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.116323,0.000908367) , 
0.227504, 0, 6, 0, 0.132089,0.211291) , 
0.116876, 1, 12, 0, 0.163514,0.170169) , 
0.528631, 1, 16, 0, 0.502217,-0.0421593)    );
  // itree = 616
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.963054,-0.000260019) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.594284,-0.000333563) , 
0.4567, 0, 15, 0, 0.644357,-0.145113) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682136,-0.000257238) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.386506,-0.000219316) , 
0.344859, 0, 16, 0, 0.579939,-0.128713) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.564934,-0.000142338) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.301118,0.000167325) , 
0.251094, 0, 15, 0, 0.399725,0.0403757) , 
0.244973, 1, 8, 0, 0.430993,0.0110376) , 
1.05476, 1, 17, 0, 0.485367,-0.0287562)    );
  // itree = 617
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.722296,-0.000293278) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.496812,0.000176758) , 
0.350411, 0, 2, 0, 0.670059,-0.11764) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.788725,-0.000830319) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.473363,0.000366008) , 
1.11458, 0, 5, 0, 0.617902,-0.171484) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.342584,4.96892e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.116115,0.000545245) , 
0.487459, 1, 16, 0, 0.287131,0.083082) , 
1.36182, 0, 3, 0, 0.327321,0.0521508) , 
0.706203, 0, 14, 0, 0.498589,-0.0326947)    );
  // itree = 618
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.621081,-0.000232982) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72162,-0.000955089) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.383056,0.000116313) , 
2.92914, 0, 8, 0, 0.406981,0.104972) , 
0.408723, 0, 2, 0, 0.580389,-0.076003) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.923124,-0.000867572) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.542312,-0.0003468) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.206693,0.000283067) , 
1.25419, 0, 4, 0, 0.243131,0.132575) , 
0.790896, 0, 16, 0, 0.26819,0.107507) , 
0.353659, 1, 16, 0, 0.484986,-0.0199251)    );
  // itree = 619
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.77077,-0.000458637) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.358502,-0.000255059) , 
0.114724, 0, 15, 0, 0.713229,-0.159149) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.54411,-0.000165875) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.273375,0.000123738) , 
-0.728062, 0, 3, 0, 0.503417,-0.0103289) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.780011,-0.000647014) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163136,0.000496059) , 
2.69268, 0, 11, 0, 0.195637,0.138936) , 
0.145517, 0, 15, 0, 0.385877,0.0466749) , 
0.132664, 1, 16, 0, 0.46468,-0.00287272)    );
  // itree = 620
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.759583,-0.000263734) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.546586,-0.000118465) , 
0.546522, 0, 2, 0, 0.659218,-0.111136) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.848756,-0.00066242) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.435358,-2.24015e-05) , 
0.225143, 0, 15, 0, 0.538739,-0.113659) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.471902,9.73567e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.169016,0.000253588) , 
0.72953, 0, 1, 0, 0.220703,0.119701) , 
0.219983, 1, 16, 0, 0.309759,0.0543565) , 
0.677618, 0, 14, 0, 0.509957,-0.040451)    );
  // itree = 621
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.696305,-0.000272309) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.493914,4.70309e-05) , 
0.735826, 0, 7, 0, 0.625547,-0.111423) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.918913,-0.000915641) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.385,0.000765291) , 
0.323015, 0, 12, 0, 0.599685,-0.256467) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.329671,-8.00914e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0693241,0.000287102) , 
1.70973, 1, 9, 0, 0.150202,0.153381) , 
2.99199, 0, 9, 0, 0.219962,0.0897724) , 
0.586077, 0, 14, 0, 0.542425,-0.0701896)    );
  // itree = 622
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.66566,-0.00025304) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.472503,2.45529e-05) , 
0.976675, 1, 8, 0, 0.587666,-0.0997361) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.611421,-0.000334028) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227541,-0.000186663) , 
0.697691, 1, 8, 0, 0.449572,-0.0567645) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760092,-0.000634948) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.149515,0.000849927) , 
0.551403, 1, 17, 0, 0.191644,0.177028) , 
2.09338, 0, 10, 0, 0.28519,0.0922354) , 
0.566848, 0, 13, 0, 0.52586,-0.0605097)    );
  // itree = 623
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.826774,-0.000379399) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.46656,-0.000221452) , 
0.687949, 0, 14, 0, 0.719824,-0.197978) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.73268,-0.000404614) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.465015,-5.13676e-05) , 
0.134603, 1, 16, 0, 0.523657,-0.0421552) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.537531,-0.0011456) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.080248,0.00156831) , 
0.89983, 0, 1, 0, 0.0893237,0.185352) , 
0.0889957, 0, 15, 0, 0.460151,-0.00889061) , 
0.90688, 1, 17, 0, 0.505885,-0.0421928)    );
  // itree = 624
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634109,-0.0001944) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.339083,0.000378603) , 
0.317758, 0, 2, 0, 0.603615,-0.095572) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.96855,-0.000908905) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0168603,0.0436494) , 
-0.883499, 1, 3, 0, 0.771081,-0.393135) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.410582,-0.000369789) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0833194,0.000407954) , 
1.794, 0, 11, 0, 0.149012,0.149707) , 
0.229835, 1, 13, 0, 0.203438,0.102213) , 
0.5732, 0, 14, 0, 0.527614,-0.0580092)    );
  // itree = 625
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718064,-0.00037178) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.287555,-0.00018098) , 
-0.866664, 0, 5, 0, 0.677379,-0.123246) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688243,-0.000306538) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.371799,-0.000127702) , 
1.46066, 0, 8, 0, 0.517942,-0.086794) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.488883,-0.000207173) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.264758,0.000209345) , 
1.23294, 1, 17, 0, 0.338061,0.0765817) , 
2.09437, 0, 10, 0, 0.381346,0.0372682) , 
0.779586, 0, 14, 0, 0.46028,-0.00553137)    );
  // itree = 626
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.847594,-0.000665224) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.241008,0.00153818) , 
2.39184, 1, 10, 0, 0.810898,-0.274689) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.620408,-0.000239594) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.408107,1.07425e-06) , 
0.010605, 1, 6, 0, 0.563649,-0.0664908) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.589068,-0.00035411) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322513,0.000104824) , 
0.599265, 1, 10, 0, 0.359626,0.0451015) , 
0.0202463, 1, 6, 0, 0.462523,-0.0111792) , 
0.610887, 1, 17, 0, 0.484354,-0.0276921)    );
  // itree = 627
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67085,-0.000257285) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.473487,-8.7962e-05) , 
1.94491, 0, 9, 0, 0.6352,-0.117434) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.641419,-0.000351334) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.385129,1.44103e-05) , 
0.598334, 1, 10, 0, 0.422774,-0.0116064) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.344611,0.00313407) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0765475,0.00293809) , 
0.325157, 0, 12, 0, 0.114414,0.243552) , 
2.23409, 1, 18, 0, 0.378992,0.024622) , 
0.0461831, 1, 0, 0, 0.520368,-0.0537649)    );
  // itree = 628
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.673132,-0.000205798) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.492697,-0.000190196) , 
0.359168, 0, 15, 0, 0.529405,-0.0386491) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.983384,-0.00109713) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0261984,-0.00109206) , 
0.455428, 1, 8, 0, 0.861682,-0.425948) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.287303,-3.74403e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.196991,0.000152099) , 
0.527382, 1, 14, 0, 0.234017,0.131436) , 
2.69201, 0, 11, 0, 0.254354,0.113376) , 
0.0923662, 1, 0, 0, 0.448486,0.0060764)    );
  // itree = 629
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74955,-0.000506498) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.532696,-0.000146813) , 
1.04741, 1, 9, 0, 0.563657,-0.0840884) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.778305,-0.000738667) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.330009,0.000112217) , 
0.470825, 1, 1, 0, 0.406835,-0.0362376) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.403,9.63789e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129632,0.000474403) , 
0.199781, 0, 15, 0, 0.274985,0.159426) , 
0.201281, 1, 12, 0, 0.326244,0.0833586) , 
0.487923, 0, 7, 0, 0.504427,-0.0423137)    );
  // itree = 630
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.621825,-0.000226639) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.416115,0.000116604) , 
2.24077, 1, 18, 0, 0.587548,-0.0868106) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.80794,-0.00049334) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.314231,0.000307417) , 
2.14418, 1, 10, 0, 0.433707,-0.0948732) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.580332,-0.00023902) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.140973,0.00099098) , 
0.340788, 0, 12, 0, 0.222488,0.103631) , 
2.09415, 0, 10, 0, 0.279244,0.0502916) , 
0.115897, 0, 15, 0, 0.509369,-0.0520448)    );
  // itree = 631
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776561,-0.000439045) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.237836,-0.000326723) , 
0.0883759, 0, 15, 0, 0.734536,-0.182785) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.85962,-0.000468124) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.437825,-1.06943e-07) , 
0.811399, 0, 14, 0, 0.483424,-0.0461719) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615578,-0.000497109) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.203967,0.000546295) , 
1.39516, 0, 7, 0, 0.267472,0.183109) , 
0.299704, 0, 1, 0, 0.449452,-0.0101027) , 
0.133065, 1, 16, 0, 0.517343,-0.0512259)    );
  // itree = 632
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.643921,-0.000245324) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.308121,0.000419053) , 
0.116474, 0, 15, 0, 0.563196,-0.0734755) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71298,-0.0003602) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.207147,0.00125013) , 
-0.202783, 1, 3, 0, 0.531753,-0.133887) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.696404,-0.00036469) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.19808,0.000382025) , 
1.41507, 0, 4, 0, 0.23137,0.130593) , 
0.19846, 1, 8, 0, 0.279881,0.0878803) , 
0.394988, 1, 16, 0, 0.492116,-0.0329934)    );
  // itree = 633
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.640149,-0.000229498) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.207596,0.0012505) , 
0.227889, 0, 2, 0, 0.620099,-0.0752076) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.610442,-0.000327892) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0613207,0.00129021) , 
0.0915474, 0, 15, 0, 0.481799,-0.0899333) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.330985,-5.94506e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.141344,0.000481884) , 
0.962154, 1, 10, 0, 0.225524,0.119725) , 
2.24415, 0, 10, 0, 0.283606,0.0722079) , 
0.673088, 0, 14, 0, 0.474576,-0.011455)    );
  // itree = 634
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.784335,-0.000590602) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.484514,-0.000396467) , 
-0.371448, 0, 3, 0, 0.711865,-0.171646) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.783044,-0.000426341) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.529356,-0.000185339) , 
2.14426, 1, 10, 0, 0.572323,-0.122567) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.487078,-0.000145727) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.29575,0.000131638) , 
2.54626, 0, 9, 0, 0.391739,0.0483308) , 
2.09438, 0, 10, 0, 0.435159,0.0072398) , 
1.97335, 0, 7, 0, 0.469961,-0.0152588)    );
  // itree = 635
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.607315,-0.000230508) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.487462,-0.000102542) , 
0.500386, 0, 2, 0, 0.566693,-0.0695263) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727976,-0.00041468) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143109,0.00192975) , 
0.349084, 0, 2, 0, 0.588838,-0.0748691) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.384987,1.3953e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.115237,0.000397095) , 
0.299245, 0, 12, 0, 0.17001,0.178033) , 
0.741122, 0, 14, 0, 0.263746,0.121432) , 
0.344802, 1, 16, 0, 0.467705,-0.00713054)    );
  // itree = 636
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.843231,-0.000530573) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.425289,-0.000158794) , 
0.22477, 1, 15, 0, 0.803063,-0.241891) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615936,-0.000343568) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.23662,0.000276576) , 
0.402799, 0, 7, 0, 0.558185,-0.112169) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.495806,-9.1484e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.304535,6.57982e-05) , 
0.71726, 1, 8, 0, 0.386821,0.0499601) , 
2.09435, 0, 10, 0, 0.429765,0.00933001) , 
0.0888223, 1, 16, 0, 0.488952,-0.0305015)    );
  // itree = 637
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676176,-0.000224994) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.342221,0.000351803) , 
0.621884, 0, 14, 0, 0.630594,-0.11384) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.845366,-0.000695816) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.386577,-0.000444956) , 
0.00391303, 1, 0, 0, 0.741086,-0.204669) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.602058,-0.000123237) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191466,0.000475675) , 
-1.49259, 1, 3, 0, 0.228176,0.117778) , 
0.0865984, 1, 16, 0, 0.301231,0.0718506) , 
0.142866, 0, 15, 0, 0.520832,-0.0519581)    );
  // itree = 638
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.740461,-0.000523049) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204804,-9.10915e-05) , 
0.0724273, 1, 0, 0, 0.695751,-0.166003) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.715636,-0.000363235) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.484605,-7.24034e-05) , 
2.69279, 0, 9, 0, 0.559804,-0.0943596) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.474893,5.74793e-07) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.332432,0.000225785) , 
0.141846, 1, 12, 0, 0.365217,0.0556733) , 
0.738808, 1, 8, 0, 0.459773,-0.0172326) , 
1.7077, 0, 7, 0, 0.506444,-0.0466557)    );
  // itree = 639
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721577,-0.000374321) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.472427,-0.000106627) , 
0.788295, 0, 14, 0, 0.558852,-0.0590255) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.970395,-0.000969142) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0726111,0.00443998) , 
0.720518, 0, 13, 0, 0.865087,-0.433215) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.21599,2.82487e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184842,0.000171432) , 
0.527995, 1, 14, 0, 0.196748,0.162851) , 
0.600853, 1, 9, 0, 0.236625,0.127286) , 
0.0908652, 1, 0, 0, 0.471098,-0.00828602)    );
  // itree = 640
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655411,-0.000255358) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.521821,-5.30651e-06) , 
0.455762, 0, 2, 0, 0.619267,-0.110215) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.96521,-0.000799033) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0126939,0.0339581) , 
0.933703, 1, 18, 0, 0.736882,-0.357412) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.484682,-0.000110266) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.255156,0.00027661) , 
0.748019, 1, 10, 0, 0.326119,0.0663131) , 
0.244195, 1, 13, 0, 0.347811,0.0439365) , 
0.308606, 1, 16, 0, 0.514529,-0.0507375)    );
  // itree = 641
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.63139,-0.000239697) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378949,0.000169771) , 
0.399443, 1, 16, 0, 0.573638,-0.0609413) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.822667,-0.000648486) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.327443,-0.000422678) , 
1.97484, 0, 7, 0, 0.689678,-0.173015) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.398386,-0.000114987) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.151634,0.000765393) , 
1.49602, 0, 11, 0, 0.229416,0.113801) , 
0.0865352, 1, 16, 0, 0.286707,0.0780996) , 
0.143261, 0, 15, 0, 0.471626,-0.0115084)    );
  // itree = 642
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.766058,-0.000345845) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.53077,-0.000225917) , 
0.734756, 1, 8, 0, 0.664919,-0.129809) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.928876,-0.000864416) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0326719,0.0319655) , 
0.203007, 0, 15, 0, 0.748213,-0.408693) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.600468,-0.000303986) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322074,1.99959e-05) , 
-1.35479, 1, 4, 0, 0.356495,0.0586736) , 
0.23541, 0, 6, 0, 0.370749,0.0416679) , 
0.211825, 1, 16, 0, 0.495036,-0.030781)    );
  // itree = 643
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.611932,-0.000209052) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.348114,-1.90313e-05) , 
0.401032, 1, 15, 0, 0.586124,-0.0782562) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.908234,-0.00292084) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.139012,-0.000486387) , 
0.188496, 0, 12, 0, 0.807983,-0.302006) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.339411,-4.95531e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.113579,0.00211938) , 
0.734756, 1, 8, 0, 0.210491,0.107614) , 
2.71341, 0, 7, 0, 0.2522,0.0790197) , 
0.115759, 0, 15, 0, 0.504238,-0.0396885)    );
  // itree = 644
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.841834,-0.000662512) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.51543,-0.000312454) , 
0.0211864, 1, 0, 0, 0.781628,-0.243308) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.606818,-0.000226247) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.501457,-0.000134515) , 
0.727871, 0, 2, 0, 0.542629,-0.0770888) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.580784,-0.000168703) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.245575,0.000557814) , 
0.362636, 0, 15, 0, 0.346178,0.0815499) , 
0.985011, 1, 8, 0, 0.464506,-0.0140025) , 
2.22004, 0, 7, 0, 0.494669,-0.0358131)    );
  // itree = 645
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.70042,-0.00028266) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.464238,0.000178451) , 
0.350403, 0, 2, 0, 0.648019,-0.0968474) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.899515,-0.000800753) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0234279,0.0128656) , 
0.685062, 0, 5, 0, 0.676694,-0.347037) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.454823,-0.000184054) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.231217,0.000210444) , 
1.64525, 0, 11, 0, 0.280895,0.0901037) , 
0.242955, 0, 6, 0, 0.291644,0.0782314) , 
0.697055, 0, 14, 0, 0.476617,-0.0126414)    );
  // itree = 646
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.646151,-0.000238274) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.464431,8.53753e-05) , 
0.449426, 0, 2, 0, 0.602795,-0.10025) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660048,-0.000302822) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0920337,0.00171229) , 
0.603055, 0, 14, 0, 0.511488,-0.0955828) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653368,-0.000323791) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158677,0.000406797) , 
0.800104, 0, 14, 0, 0.216518,0.153192) , 
-0.848439, 1, 4, 0, 0.297219,0.0851295) , 
0.351159, 1, 16, 0, 0.51098,-0.0445498)    );
  // itree = 647
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700113,-0.000260945) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.484679,-0.000134306) , 
1.46571, 1, 8, 0, 0.667035,-0.113065) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.748451,-0.000475683) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.432444,-0.000147875) , 
2.14424, 1, 10, 0, 0.486586,-0.0914953) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.410641,-3.90964e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.195332,0.000240825) , 
0.898839, 1, 18, 0, 0.266203,0.108845) , 
2.09435, 0, 10, 0, 0.325494,0.0549462) , 
0.710494, 0, 14, 0, 0.489923,-0.0259398)    );
  // itree = 648
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.599212,-0.000201278) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.116638,0.0014216) , 
0.318357, 1, 0, 0, 0.578216,-0.0723695) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.988481,-0.000659569) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.189043,0.000585532) , 
0.952894, 0, 2, 0, 0.8837,-0.411936) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.522738,-0.000511622) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.14489,0.000570363) , 
2.69414, 0, 8, 0, 0.183455,0.135805) , 
-2.10413, 1, 3, 0, 0.228495,0.100574) , 
0.116474, 0, 15, 0, 0.493575,-0.0305129)    );
  // itree = 649
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682501,-0.000242069) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.457055,0.00027187) , 
0.267752, 0, 1, 0, 0.638907,-0.100211) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.818358,-0.000872798) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.401911,-0.000186984) , 
-1.85487, 1, 3, 0, 0.445122,-0.0446286) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.365309,-0.000178334) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.126412,0.000769825) , 
1.49541, 0, 11, 0, 0.202674,0.12223) , 
1.35621, 0, 7, 0, 0.259849,0.0828805) , 
0.659385, 0, 14, 0, 0.49934,-0.0327974)    );
  // itree = 650
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.588703,-0.000210199) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.165787,0.000885466) , 
0.524357, 1, 16, 0, 0.565616,-0.0858792) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.858527,-0.000330382) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.228733,0.000343549) , 
0.825895, 0, 13, 0, 0.392109,0.010521) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.462428,0.000148365) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.161947,0.000197295) , 
-1.11467, 1, 4, 0, 0.199397,0.214716) , 
0.492953, 0, 1, 0, 0.273899,0.135775) , 
0.493339, 0, 7, 0, 0.493261,-0.0309017)    );
  // itree = 651
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682436,-0.000223315) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.341275,0.000138074) , 
2.24062, 1, 18, 0, 0.636239,-0.118935) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.894043,-0.000731904) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.149238,0.0403264) , 
0.0155919, 1, 0, 0, 0.842884,-0.328684) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761409,-0.00065819) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.23618,0.000253108) , 
2.35209, 0, 5, 0, 0.252435,0.100675) , 
2.7135, 0, 7, 0, 0.298653,0.0670668) , 
0.142958, 0, 15, 0, 0.525602,-0.0579764)    );
  // itree = 652
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817045,-0.000430876) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198875,0.00327955) , 
0.0879713, 0, 15, 0, 0.752246,-0.220163) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704846,-0.000312254) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199413,0.000374648) , 
0.613485, 0, 14, 0, 0.605668,-0.112036) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.494292,-8.24339e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.330308,0.000105254) , 
0.523109, 1, 13, 0, 0.374469,0.0571556) , 
1.25873, 1, 17, 0, 0.467009,-0.0105653) , 
2.38296, 0, 17, 0, 0.497723,-0.0331339)    );
  // itree = 653
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.591764,-0.000197484) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.453165,-7.97885e-05) , 
2.244, 0, 9, 0, 0.541147,-0.0609964) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.871592,-0.000548174) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.147617,0.000415738) , 
0.441508, 1, 11, 0, 0.695276,-0.241193) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741989,-0.000739225) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.170572,0.000380601) , 
2.54117, 0, 11, 0, 0.203325,0.150788) , 
1.32915, 0, 4, 0, 0.245799,0.116945) , 
0.44061, 1, 16, 0, 0.483106,-0.0260277)    );
  // itree = 654
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.754596,-0.000415167) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.324702,0.00112099) , 
0.977453, 1, 8, 0, 0.605123,-0.125455) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.763947,-0.000533599) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.346994,-0.000635392) , 
2.36126, 0, 7, 0, 0.721179,-0.176988) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.499966,-0.000147343) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224475,0.000437725) , 
0.171556, 0, 15, 0, 0.379023,0.0589622) , 
2.22002, 0, 7, 0, 0.41163,0.0364763) , 
0.598398, 1, 10, 0, 0.462813,-0.00635812)    );
  // itree = 655
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.593386,-0.000198897) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.392251,-0.000106925) , 
-0.86663, 0, 5, 0, 0.558922,-0.077812) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.960843,-0.00124162) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0649586,0.0134186) , 
0.779005, 0, 2, 0, 0.744627,-0.338347) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.406122,-0.000121044) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191261,0.000546981) , 
2.5434, 0, 9, 0, 0.282264,0.13085) , 
2.99137, 0, 10, 0, 0.296819,0.116079) , 
0.493397, 0, 7, 0, 0.493026,-0.0290653)    );
  // itree = 656
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.856288,-0.000186706) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.531549,-0.00015842) , 
0.471193, 0, 15, 0, 0.555691,-0.0742457) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.963432,-0.00404839) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.00540751,0.124371) , 
-0.131809, 0, 4, 0, 0.866757,-0.489059) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.329339,-0.000439425) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.122111,0.000450595) , 
0.207264, 0, 6, 0, 0.141494,0.20132) , 
-2.34906, 1, 5, 0, 0.154456,0.188981) , 
0.484639, 1, 16, 0, 0.503769,-0.0401823)    );
  // itree = 657
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731874,-0.000251703) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.557972,-6.79095e-05) , 
0.536001, 0, 2, 0, 0.65552,-0.118511) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.823102,-0.00105044) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.305098,0.00573155) , 
1.81956, 1, 18, 0, 0.591631,-0.201373) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.313746,5.43116e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.149614,0.000556645) , 
1.34588, 1, 18, 0, 0.228891,0.0983622) , 
1.3621, 0, 3, 0, 0.271557,0.0631066) , 
0.641403, 0, 14, 0, 0.53396,-0.061012)    );
  // itree = 658
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689656,-0.000336512) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.502652,-0.000229853) , 
1.64554, 1, 10, 0, 0.636077,-0.125733) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745197,-0.000329314) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.434439,-0.000108076) , 
2.99168, 0, 9, 0, 0.471983,-0.0243404) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.44425,-5.79918e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184777,0.000844697) , 
1.49588, 0, 11, 0, 0.263459,0.129499) , 
0.976371, 1, 8, 0, 0.390555,0.0357339) , 
1.23335, 0, 7, 0, 0.481161,-0.0238526)    );
  // itree = 659
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.637102,-0.000205223) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663799,-0.000466568) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.393302,0.000312331) , 
2.24396, 0, 10, 0, 0.451686,0.054825) , 
0.443202, 0, 2, 0, 0.582967,-0.0698407) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.85742,-0.000944612) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682019,-0.000987765) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159474,0.000227018) , 
2.10453, 0, 5, 0, 0.186648,0.116634) , 
0.790865, 0, 16, 0, 0.210138,0.0949611) , 
0.586612, 0, 14, 0, 0.497891,-0.0322347)    );
  // itree = 660
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.593469,-0.000207875) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.33096,0.000577409) , 
0.272282, 0, 2, 0, 0.577199,-0.0706094) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.908992,-0.000629022) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.405451,-0.000170069) , 
0.413478, 0, 16, 0, 0.64402,-0.274983) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.782326,-0.00110016) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.181244,0.000499246) , 
0.911194, 0, 13, 0, 0.216534,0.117598) , 
2.69414, 0, 8, 0, 0.263328,0.0746246) , 
0.118164, 0, 15, 0, 0.493534,-0.031896)    );
  // itree = 661
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.617653,-0.000235669) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.472313,0.00010093) , 
0.410411, 0, 2, 0, 0.586497,-0.0831467) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.901207,-0.000761067) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.298569,0.000172184) , 
0.112338, 0, 0, 0, 0.691535,-0.249406) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.327715,0.000409471) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.10936,6.62841e-05) , 
2.09502, 0, 9, 0, 0.254968,0.119181) , 
2.54265, 0, 11, 0, 0.273738,0.103333) , 
0.34732, 1, 16, 0, 0.488957,-0.0249892)    );
  // itree = 662
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.835901,-0.00046971) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.519625,-0.000503334) , 
-0.371364, 0, 4, 0, 0.781768,-0.220724) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676853,-0.000357739) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.460735,2.13139e-05) , 
0.748108, 1, 10, 0, 0.531519,-0.0778315) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.520199,-0.000172745) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.203996,0.00126785) , 
0.839488, 0, 7, 0, 0.388513,0.0426425) , 
0.977111, 1, 8, 0, 0.46881,-0.0250026) , 
0.0872057, 1, 16, 0, 0.511785,-0.0518789)    );
  // itree = 663
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.609223,-0.000267684) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.3594,0.000188234) , 
0.253284, 0, 1, 0, 0.563662,-0.0635747) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727985,-0.000440885) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.260568,0.000620991) , 
1.47459, 1, 18, 0, 0.569985,-0.135265) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.488235,-0.000153451) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0781192,0.000570864) , 
0.17123, 0, 15, 0, 0.29332,0.112693) , 
2.3937, 0, 10, 0, 0.337604,0.073004) , 
0.0202463, 1, 6, 0, 0.456171,0.00136842)    );
  // itree = 664
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.772293,-0.000339306) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.463484,-0.000222524) , 
1.49599, 1, 10, 0, 0.694489,-0.171993) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.878143,-0.000466746) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.294398,-0.000425234) , 
0.731801, 0, 14, 0, 0.667013,-0.181531) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.479265,-0.000113784) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236961,0.000365605) , 
0.896567, 1, 11, 0, 0.368697,0.0578451) , 
2.54313, 0, 10, 0, 0.406216,0.0277385) , 
1.22804, 0, 7, 0, 0.523967,-0.0538462)    );
  // itree = 665
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.792057,-0.000507676) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.166522,-6.41337e-07) , 
0.740149, 0, 7, 0, 0.751855,-0.187301) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.939708,-0.000793439) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0259815,0.0116387) , 
0.358771, 0, 3, 0, 0.749657,-0.405385) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.607992,-0.000236274) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.398053,-2.78806e-05) , 
0.453644, 1, 18, 0, 0.420822,0.019428) , 
0.242955, 0, 6, 0, 0.427889,0.010299) , 
0.087209, 1, 16, 0, 0.468864,-0.0146935)    );
  // itree = 666
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556918,-0.000196079) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.308954,-8.81388e-05) , 
0.817551, 1, 2, 0, 0.499064,-0.0512078) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704863,-0.000694776) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.273891,2.0709e-05) , 
0.177697, 0, 1, 0, 0.53715,-0.0190068) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.516859,-0.000162783) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211422,0.000398396) , 
1.09798, 1, 17, 0, 0.281984,0.180837) , 
0.399542, 0, 12, 0, 0.343823,0.132405) , 
0.452698, 0, 2, 0, 0.461826,-0.00716426)    );
  // itree = 667
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.712253,-0.000276531) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.513995,-0.000129808) , 
1.22232, 1, 17, 0, 0.582428,-0.0684344) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.861398,-0.000628386) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199922,-0.000842065) , 
0.633722, 1, 1, 0, 0.80313,-0.27248) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.505535,-0.000552818) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201467,0.00030272) , 
0.812517, 0, 1, 0, 0.22015,0.128968) , 
2.71342, 0, 7, 0, 0.257788,0.10305) , 
0.14376, 0, 15, 0, 0.473575,-0.0109347)    );
  // itree = 668
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.944496,-0.000243129) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.644975,-0.000325143) , 
0.439606, 0, 15, 0, 0.688405,-0.179058) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729211,-0.000396828) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.28718,0.000730073) , 
0.256629, 0, 2, 0, 0.669781,-0.117359) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.751564,-0.000596273) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.352786,8.12021e-05) , 
0.224892, 1, 13, 0, 0.367187,0.0372289) , 
0.776569, 0, 14, 0, 0.450098,-0.0051283) , 
1.06394, 1, 17, 0, 0.516217,-0.0533854)    );
  // itree = 669
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72871,-0.000268767) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.562725,-0.000187206) , 
0.285373, 1, 12, 0, 0.642619,-0.0904612) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.90159,-0.000620639) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.41204,-0.000135587) , 
0.250076, 0, 6, 0, 0.446951,-0.0580268) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.518438,-0.000265549) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171113,0.000384074) , 
0.307007, 0, 15, 0, 0.234036,0.138435) , 
1.49575, 0, 11, 0, 0.302099,0.0756322) , 
0.706623, 0, 14, 0, 0.465096,-0.003872)    );
  // itree = 670
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.618405,-0.00020681) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.393569,-1.8112e-05) , 
0.40103, 1, 15, 0, 0.595038,-0.0877461) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.502405,-0.000352386) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238469,0.000514301) , 
-0.124055, 1, 5, 0, 0.389511,-0.0120007) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.374561,-0.000958197) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0715308,0.00231145) , 
2.54253, 0, 10, 0, 0.102383,0.172932) , 
0.982514, 0, 7, 0, 0.249504,0.0781749) , 
0.115759, 0, 15, 0, 0.5115,-0.0476326)    );
  // itree = 671
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.804339,-0.000525012) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.557387,-0.000331518) , 
0.00635048, 1, 0, 0, 0.723395,-0.172095) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.623347,-0.000188592) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292697,0.00129851) , 
0.319777, 0, 2, 0, 0.57687,-0.0477202) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.541466,-0.000403556) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168007,0.00034903) , 
1.73549, 0, 7, 0, 0.214791,0.12021) , 
0.665202, 0, 14, 0, 0.409192,0.030048) , 
0.129527, 1, 16, 0, 0.483173,-0.0175485)    );
  // itree = 672
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.68083,-0.000382794) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.551334,-0.000132524) , 
-0.866676, 1, 4, 0, 0.58491,-0.0653201) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.96099,-0.000910344) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0112918,0.0256773) , 
-0.870563, 1, 3, 0, 0.776941,-0.401631) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694491,-0.000708312) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.216255,0.000374238) , 
0.232818, 0, 6, 0, 0.237664,0.081244) , 
0.220367, 1, 13, 0, 0.270368,0.0519599) , 
0.613291, 0, 14, 0, 0.492933,-0.0310254)    );
  // itree = 673
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.625204,-0.000222452) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.285071,0.00062881) , 
0.323404, 0, 2, 0, 0.591505,-0.0749216) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.671744,-0.000586077) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.119006,0.0143717) , 
0.0162715, 1, 0, 0, 0.609218,-0.0872957) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.543303,-0.000473986) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.169957,0.00026707) , 
2.69259, 0, 11, 0, 0.182596,0.164951) , 
0.126249, 1, 16, 0, 0.269517,0.113558) , 
0.17026, 0, 15, 0, 0.454499,0.0052761)    );
  // itree = 674
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.775581,-0.000361357) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.361986,0.000949478) , 
2.24385, 1, 10, 0, 0.742494,-0.207555) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556679,-0.000153548) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.173652,-7.28597e-05) , 
0.450193, 0, 18, 0, 0.539638,-0.0337647) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.781688,-0.000634492) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.263225,0.000163776) , 
0.848558, 0, 14, 0, 0.295509,0.0801545) , 
0.172999, 0, 15, 0, 0.425427,0.0195301) , 
0.907356, 1, 17, 0, 0.490375,-0.0269861)    );
  // itree = 675
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.633494,-0.00032223) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0861782,-5.18852e-05) , 
0.766101, 1, 1, 0, 0.615799,-0.10369) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.596637,-0.000273598) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378782,2.59495e-05) , 
2.5432, 0, 9, 0, 0.471333,-0.0176509) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.404145,0.000225608) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.190084,0.00071119) , 
0.598886, 1, 18, 0, 0.2639,0.126598) , 
0.985008, 1, 8, 0, 0.39169,0.0377332) , 
1.22806, 0, 7, 0, 0.472651,-0.0133571)    );
  // itree = 676
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.768993,-0.0003865) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.283484,0.000150275) , 
0.194952, 0, 1, 0, 0.729347,-0.166168) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.644502,-0.00033513) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.461966,-0.000131916) , 
0.218102, 1, 12, 0, 0.590669,-0.119063) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.45039,-7.84157e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256414,0.000237694) , 
0.73876, 1, 8, 0, 0.341697,0.0659703) , 
1.05365, 1, 17, 0, 0.403151,0.0202981) , 
0.776888, 0, 14, 0, 0.501155,-0.0357248)    );
  // itree = 677
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.593,-0.000209534) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.422762,-4.37213e-05) , 
1.94203, 1, 18, 0, 0.54738,-0.102063) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645024,-0.000364513) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363521,0.000168263) , 
0.731867, 0, 7, 0, 0.555418,-0.0364854) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817653,-0.00103096) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212826,0.000760394) , 
2.99193, 0, 10, 0, 0.233798,0.17452) , 
0.0438044, 1, 0, 0, 0.449172,0.0332195) , 
0.545173, 0, 2, 0, 0.510738,-0.0515877)    );
  // itree = 678
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.716908,-0.000340295) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.522415,-0.000141966) , 
0.0954844, 0, 6, 0, 0.544614,-0.0643309) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.886972,-0.00070699) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0932355,0.0172749) , 
0.186217, 1, 15, 0, 0.664854,-0.16645) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.287012,-0.000119873) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0776111,0.000419817) , 
2.8426, 0, 9, 0, 0.113851,0.217186) , 
0.832419, 0, 14, 0, 0.166367,0.180622) , 
0.473737, 1, 16, 0, 0.490767,-0.0294597)    );
  // itree = 679
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.610839,-0.000226397) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706609,-0.000457449) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.373984,0.000193952) , 
1.69638, 0, 7, 0, 0.460259,0.0224806) , 
0.976675, 1, 8, 0, 0.548855,-0.0530446) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.771185,-0.00127712) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.505507,-0.000732785) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0961372,0.00128104) , 
0.6108, 1, 17, 0, 0.125753,0.159633) , 
0.330871, 1, 14, 0, 0.154496,0.131092) , 
0.0896043, 0, 15, 0, 0.488617,-0.024918)    );
  // itree = 680
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.819053,-0.000558578) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.435598,-0.000521073) , 
-0.867132, 0, 5, 0, 0.785374,-0.241256) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.893064,-0.000593847) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.515718,-0.000200459) , 
1.9524, 1, 10, 0, 0.592673,-0.14274) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.547551,-0.00013097) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220358,0.000379552) , 
0.145844, 0, 15, 0, 0.43153,0.0183988) , 
1.34639, 1, 9, 0, 0.459047,-0.00911743) , 
2.18104, 0, 7, 0, 0.495835,-0.035287)    );
  // itree = 681
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622743,-0.00019887) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.169912,0.00125871) , 
0.226801, 0, 2, 0, 0.609696,-0.0977383) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.785098,-0.000695943) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168558,0.0152808) , 
0.0241424, 1, 0, 0, 0.661,-0.180776) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647551,-0.000496796) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.156686,0.000634395) , 
0.220359, 1, 13, 0, 0.174039,0.12965) , 
1.96245, 0, 7, 0, 0.282587,0.0604535) , 
0.116799, 0, 15, 0, 0.528377,-0.058412)    );
  // itree = 682
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.724035,-0.00026533) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.440749,0.000173556) , 
0.250141, 0, 1, 0, 0.676155,-0.118991) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.766955,-0.00057278) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.404185,0.000160963) , 
2.36592, 0, 17, 0, 0.437446,-0.0399819) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.343698,-2.46922e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.23111,0.000106728) , 
0.534369, 1, 14, 0, 0.275424,0.091039) , 
1.34643, 1, 10, 0, 0.363549,0.0197758) , 
0.708182, 0, 14, 0, 0.513561,-0.046815)    );
  // itree = 683
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634561,-0.000244676) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201449,0.000163802) , 
0.101231, 1, 6, 0, 0.59299,-0.111188) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695928,-0.000434791) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.296853,-0.000416135) , 
0.75611, 0, 18, 0, 0.662456,-0.133494) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.377204,9.51321e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145804,0.00247155) , 
0.304019, 0, 2, 0, 0.354561,0.0662518) , 
1.71925, 0, 7, 0, 0.422425,0.0222255) , 
0.738757, 1, 8, 0, 0.500678,-0.0389829)    );
  // itree = 684
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.596828,-0.000206689) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.140078,0.000284974) , 
0.226139, 1, 0, 0, 0.563478,-0.0540484) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.847781,-0.000644525) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.294313,-0.000209879) , 
0.424243, 0, 16, 0, 0.478636,-0.139686) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.283029,-4.86218e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.131718,0.000871127) , 
2.69272, 0, 9, 0, 0.177544,0.139296) , 
2.69414, 0, 8, 0, 0.205581,0.113317) , 
0.116084, 0, 15, 0, 0.474899,-0.0126255)    );
  // itree = 685
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.680589,-0.000224262) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.51856,-3.30166e-05) , 
-0.371361, 0, 5, 0, 0.633307,-0.114911) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.936957,-0.00049247) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.610408,-0.000667521) , 
0.863493, 0, 2, 0, 0.765867,-0.241875) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.614284,-0.000383258) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.222497,0.000582179) , 
0.136964, 0, 15, 0, 0.258346,0.0882463) , 
0.0865536, 1, 16, 0, 0.334863,0.0384751) , 
0.143345, 0, 15, 0, 0.532944,-0.0633289)    );
  // itree = 686
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.800624,-0.000554019) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.44079,-0.000261108) , 
0.0255844, 1, 0, 0, 0.712803,-0.183628) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.779737,-0.000354874) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530584,-0.000168323) , 
0.035184, 1, 8, 0, 0.554193,-0.0848072) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.518609,-7.41314e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.254565,0.000285349) , 
1.05259, 1, 17, 0, 0.302536,0.10914) , 
0.73876, 1, 8, 0, 0.43004,0.010875) , 
1.72668, 0, 7, 0, 0.486798,-0.0281672)    );
  // itree = 687
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.708514,-0.00025284) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.310062,0.000864801) , 
-1.36189, 0, 5, 0, 0.687621,-0.13105) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718797,-0.000458843) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.341493,-0.000278985) , 
-1.11433, 0, 4, 0, 0.665753,-0.189593) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.894527,-0.000956751) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.300472,0.000258413) , 
0.434177, 0, 12, 0, 0.319191,0.0469163) , 
1.83226, 0, 7, 0, 0.371313,0.0113463) , 
0.706898, 0, 14, 0, 0.525596,-0.0581095)    );
  // itree = 688
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755373,-0.000406037) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.531783,-0.000176307) , 
0.245005, 1, 8, 0, 0.574419,-0.0825145) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.629636,-0.000206718) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.364637,-6.74145e-05) , 
2.84298, 0, 9, 0, 0.436689,-0.0341429) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.43442,0.000867873) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.162388,0.00041336) , 
0.334306, 0, 15, 0, 0.237376,0.195589) , 
0.535977, 0, 2, 0, 0.361481,0.0525434) , 
0.740007, 0, 7, 0, 0.488214,-0.0278386)    );
  // itree = 689
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.783878,-0.000409025) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.533204,-8.11764e-05) , 
0.598341, 1, 10, 0, 0.606002,-0.119529) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755784,-0.00081083) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.441159,-9.60522e-05) , 
1.79498, 0, 11, 0, 0.509838,-0.0364772) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.762067,-0.000953775) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.148873,0.00131269) , 
-1.85662, 1, 3, 0, 0.175607,0.19356) , 
0.736861, 0, 7, 0, 0.398823,0.0399297) , 
0.985008, 1, 8, 0, 0.524063,-0.0564632)    );
  // itree = 690
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.652572,-0.000297349) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.460805,-0.000217895) , 
-0.371454, 0, 5, 0, 0.59961,-0.0743861) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668966,-0.000501098) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0617202,0.00174344) , 
1.04504, 1, 9, 0, 0.573218,-0.134162) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.393236,-3.99316e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249417,9.40569e-05) , 
1.49558, 1, 18, 0, 0.324567,0.0799973) , 
2.54313, 0, 10, 0, 0.351604,0.0567108) , 
0.221227, 1, 16, 0, 0.455043,0.00203268)    );
  // itree = 691
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7377,-0.000346744) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.393294,-8.76657e-05) , 
0.577856, 0, 13, 0, 0.663858,-0.147642) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.94785,-0.000878531) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.00997728,0.0508802) , 
0.125477, 0, 12, 0, 0.800713,-0.416353) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.576647,-0.000430218) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.37466,2.70164e-05) , 
1.19677, 1, 9, 0, 0.40253,0.039062) , 
0.227719, 1, 13, 0, 0.416787,0.0227566) , 
1.058, 1, 17, 0, 0.480112,-0.0209174)    );
  // itree = 692
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.659116,-0.00037852) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.499123,-0.000109542) , 
1.34643, 1, 9, 0, 0.526087,-0.0498048) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.462067,0.00360342) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0896266,0.0469748) , 
0.59462, 1, 2, 0, 0.289801,-0.042865) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.371421,0.0131443) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0484323,0.000627723) , 
2.83983, 0, 10, 0, 0.067949,0.189351) , 
2.44396, 0, 8, 0, 0.0823766,0.174249) , 
0.504665, 0, 14, 0, 0.488485,-0.0308174)    );
  // itree = 693
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76338,-0.000513421) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.241987,-6.57094e-05) , 
0.0721162, 1, 0, 0, 0.721895,-0.181149) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.489855,-0.000124482) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.195644,0.000790736) , 
1.52686, 1, 5, 0, 0.462626,-0.0172787) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.651467,-0.000639636) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220236,0.000442472) , 
0.354052, 1, 13, 0, 0.276206,0.131293) , 
-0.618966, 0, 5, 0, 0.416053,0.0198388) , 
1.69495, 0, 7, 0, 0.485644,-0.0258938)    );
  // itree = 694
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691973,-0.000249314) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.272669,5.80867e-05) , 
0.632099, 0, 14, 0, 0.640704,-0.120348) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.711532,-0.00058099) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.131654,0.013682) , 
0.769819, 1, 13, 0, 0.59232,-0.188887) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.600162,-0.000136428) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.232972,7.54465e-05) , 
1.15413, 0, 3, 0, 0.280449,0.118439) , 
0.4487, 1, 11, 0, 0.321521,0.0779664) , 
0.0454795, 1, 0, 0, 0.503913,-0.0353572)    );
  // itree = 695
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.849599,-0.000632755) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.391373,-0.000575895) , 
2.24404, 1, 10, 0, 0.808981,-0.258905) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.593158,-0.000197832) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.343342,5.3693e-05) , 
0.589439, 0, 13, 0, 0.546064,-0.0373172) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672168,-0.000450566) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198224,0.000442718) , 
0.0863636, 1, 16, 0, 0.248379,0.104632) , 
0.143039, 0, 15, 0, 0.440613,0.0129663) , 
0.612152, 1, 17, 0, 0.4642,-0.00444139)    );
  // itree = 696
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.816897,-0.00041513) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.647861,-0.000470513) , 
0.772568, 0, 2, 0, 0.702622,-0.144248) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.765582,-0.000444037) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363941,0.00133873) , 
0.274326, 0, 2, 0, 0.688494,-0.138139) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.563574,-0.000198436) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.315759,6.81688e-05) , 
2.39358, 0, 10, 0, 0.353916,0.057511) , 
0.803171, 0, 14, 0, 0.410658,0.0243299) , 
0.12626, 1, 16, 0, 0.474152,-0.0123311)    );
  // itree = 697
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65986,-0.000227829) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252826,0.000794828) , 
0.0886516, 0, 15, 0, 0.609866,-0.104597) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.833074,-0.000508922) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233716,0.0309095) , 
0.274418, 0, 2, 0, 0.736933,-0.219324) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.420677,-7.22437e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225982,0.000519973) , 
0.486405, 1, 13, 0, 0.288272,0.0694032) , 
0.802352, 0, 14, 0, 0.358373,0.0242913) , 
0.347296, 1, 16, 0, 0.529409,-0.0633635)    );
  // itree = 698
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.852815,-0.000436276) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.645872,-0.000408747) , 
0.448857, 1, 11, 0, 0.729287,-0.178396) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.63347,-0.000252456) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.408561,0.000646884) , 
0.931213, 1, 8, 0, 0.532532,-0.0576537) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.454118,-0.000155309) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265699,7.21594e-05) , 
0.436882, 1, 13, 0, 0.328186,0.0663667) , 
0.695846, 0, 13, 0, 0.4374,8.31553e-05) , 
0.132973, 1, 16, 0, 0.506649,-0.0422598)    );
  // itree = 699
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755322,-0.000348676) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.522019,-0.000269544) , 
1.04969, 1, 18, 0, 0.627366,-0.115762) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.671631,-0.000309776) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.223775,0.00122392) , 
0.946424, 1, 8, 0, 0.523973,-0.0590846) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.570129,-9.20206e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292958,0.000121937) , 
0.451451, 1, 18, 0, 0.323648,0.0919272) , 
0.747959, 1, 10, 0, 0.388781,0.0428274) , 
1.2264, 0, 7, 0, 0.475781,-0.0150018)    );
  // itree = 700
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.784793,-0.00048613) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.570614,-0.000543387) , 
-0.619127, 0, 4, 0, 0.730807,-0.183367) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.659598,-0.000263461) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.375698,0.00044303) , 
0.318414, 0, 2, 0, 0.589344,-0.044945) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.533373,-0.000203026) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.275505,9.15264e-05) , 
1.05603, 1, 17, 0, 0.32506,0.0658428) , 
0.735206, 0, 14, 0, 0.414212,0.0284702) , 
1.97336, 0, 7, 0, 0.459128,-0.00158335)    );
  // itree = 701
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.785798,-0.00038764) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.35556,0.000898135) , 
0.97759, 1, 8, 0, 0.654286,-0.162848) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.826603,-0.000495405) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.325073,0.000957136) , 
0.0769732, 0, 15, 0, 0.778748,-0.227418) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.527842,-0.00020762) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.327585,0.000107829) , 
1.49594, 1, 9, 0, 0.38251,0.04689) , 
1.95166, 0, 7, 0, 0.457332,-0.00490816) , 
0.747998, 1, 10, 0, 0.527619,-0.0612721)    );
  // itree = 702
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.529419,-0.000149591) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175012,-1.23852e-05) , 
0.930494, 1, 2, 0, 0.510893,-0.0532692) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.873444,-0.00226599) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221312,-0.000615089) , 
0.216275, 1, 1, 0, 0.815487,-0.244908) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.585238,0.000145919) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175685,0.000959778) , 
2.41757, 0, 8, 0, 0.234065,0.2344) , 
1.83364, 0, 7, 0, 0.295301,0.183919) , 
0.270276, 0, 2, 0, 0.498724,-0.0398806)    );
  // itree = 703
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736192,-0.000269753) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.471357,4.38659e-05) , 
0.308288, 0, 1, 0, 0.659516,-0.105626) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.82532,-0.00113488) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.412922,-8.95146e-05) , 
0.353876, 0, 12, 0, 0.453585,-0.0485278) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.336501,0.000140059) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.122237,0.000682549) , 
0.695628, 0, 2, 0, 0.233005,0.110304) , 
0.926263, 0, 7, 0, 0.331864,0.0391191) , 
0.694671, 0, 14, 0, 0.501459,-0.0358021)    );
  // itree = 704
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.637733,-0.000205239) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234271,0.000273157) , 
0.230916, 1, 0, 0, 0.609209,-0.0993163) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628971,-0.000472272) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172352,0.00156935) , 
0.351398, 0, 16, 0, 0.46108,-0.12792) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.573683,-0.000281319) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.10352,0.000890928) , 
0.747023, 0, 14, 0, 0.155975,0.159331) , 
2.0944, 0, 10, 0, 0.242709,0.077672) , 
0.116155, 0, 15, 0, 0.523426,-0.0578906)    );
  // itree = 705
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612179,-0.000207915) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.450289,2.03693e-05) , 
-0.618921, 0, 5, 0, 0.572284,-0.0755653) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.915374,-0.000645705) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.240656,-0.000187963) , 
0.0851616, 0, 15, 0, 0.506223,-0.170523) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.593333,-0.000598037) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0820997,0.0018719) , 
0.0801208, 1, 16, 0, 0.125974,0.156649) , 
2.64871, 0, 8, 0, 0.169235,0.119427) , 
0.0890491, 0, 15, 0, 0.512727,-0.046752)    );
  // itree = 706
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.753476,-0.000442282) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167729,-0.000242432) , 
0.246798, 0, 7, 0, 0.739833,-0.181678) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677633,-0.000220283) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.345727,0.000527791) , 
0.350403, 0, 2, 0, 0.611695,-0.0698422) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.594694,0.000324996) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.275123,0.000149559) , 
0.149853, 1, 10, 0, 0.295775,0.0675363) , 
0.701186, 0, 14, 0, 0.42935,0.00945066) , 
0.129242, 1, 16, 0, 0.502779,-0.0357509)    );
  // itree = 707
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.651846,-0.000241396) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.354149,4.53802e-05) , 
0.14413, 0, 15, 0, 0.564185,-0.0636132) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.882114,-0.000745003) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.343149,-0.00026414) , 
1.98069, 1, 10, 0, 0.515702,-0.145938) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.673394,-0.00056403) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.169825,0.000236257) , 
3.05616, 0, 9, 0, 0.198317,0.157616) , 
1.34798, 1, 9, 0, 0.248826,0.109308) , 
0.0923662, 1, 0, 0, 0.477541,-0.0161035)    );
  // itree = 708
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.673936,-0.000254798) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340135,6.66286e-05) , 
0.686532, 0, 14, 0, 0.565212,-0.0668352) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69606,-0.000406162) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.236434,0.00109627) , 
0.307106, 1, 0, 0, 0.445918,-0.0826177) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.528443,-0.000436457) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.170158,0.000228453) , 
1.19949, 1, 9, 0, 0.221306,0.151952) , 
0.0958828, 0, 6, 0, 0.305461,0.0640659) , 
0.090959, 1, 0, 0, 0.487225,-0.0275336)    );
  // itree = 709
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.610358,-0.000211619) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388058,0.000155472) , 
-1.11429, 0, 5, 0, 0.584029,-0.0555028) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695973,-0.000513406) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.308722,-0.000118135) , 
1.94481, 0, 10, 0, 0.45772,-0.116936) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.31004,-8.8614e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.126084,0.000715812) , 
0.688044, 1, 8, 0, 0.202423,0.116678) , 
2.40796, 0, 8, 0, 0.231,0.0905289) , 
0.638, 0, 14, 0, 0.46382,-0.00577805)    );
  // itree = 710
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.667214,-0.000188746) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.46138,-6.03346e-05) , 
0.752141, 0, 18, 0, 0.641714,-0.118039) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701611,-0.000405701) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.465365,-0.000165836) , 
0.909099, 0, 2, 0, 0.514028,-0.0460028) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.511099,-0.000342394) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.098351,0.000544542) , 
2.393, 0, 10, 0, 0.174308,0.146146) , 
0.248754, 1, 16, 0, 0.34088,0.0519318) , 
0.170186, 0, 15, 0, 0.516548,-0.0473206)    );
  // itree = 711
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.615899,-0.000216491) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.358006,-7.15242e-05) , 
1.496, 1, 11, 0, 0.567572,-0.104689) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.568556,-0.000248874) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.280724,0.000361525) , 
0.897477, 0, 10, 0, 0.49767,-0.0283604) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.368451,0.000376701) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.148495,0.00149242) , 
0.219022, 0, 0, 0, 0.191423,0.172097) , 
0.735826, 0, 7, 0, 0.390008,0.0421108) , 
0.985008, 1, 8, 0, 0.494083,-0.0439325)    );
  // itree = 712
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.684898,-0.000321002) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191811,0.00239307) , 
0.0609589, 0, 15, 0, 0.65488,-0.138193) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.53395,-0.000132942) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138325,0.00116434) , 
0.225915, 1, 0, 0, 0.492808,-0.00876678) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.474116,-0.00077965) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0768343,0.000895605) , 
2.54283, 0, 10, 0, 0.132861,0.151861) , 
0.119003, 0, 15, 0, 0.401081,0.0321667) , 
1.22803, 0, 7, 0, 0.499268,-0.03374)    );
  // itree = 713
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.751624,-0.0004724) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252594,0.00106616) , 
0.281576, 1, 16, 0, 0.720345,-0.182341) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.585178,-0.000290425) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0871323,0.00432857) , 
-1.11301, 0, 3, 0, 0.557456,-0.110508) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.459481,-8.76447e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.213025,0.000789547) , 
1.3962, 1, 10, 0, 0.394752,0.044201) , 
2.0943, 0, 10, 0, 0.432853,0.00797183) , 
1.68634, 0, 7, 0, 0.495878,-0.0337494)    );
  // itree = 714
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.820928,-0.000318394) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.575472,-0.000245473) , 
0.439461, 0, 15, 0, 0.595862,-0.0938744) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.486369,-0.000108996) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.130352,0.000136583) , 
1.92894, 1, 17, 0, 0.458582,0.0242719) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.35539,-0.000118616) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0916498,0.000775438) , 
0.454101, 1, 18, 0, 0.121468,0.186235) , 
0.146939, 0, 15, 0, 0.33956,0.0814548) , 
0.976608, 0, 7, 0, 0.46377,-0.00351357)    );
  // itree = 715
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.750934,-0.000406835) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.498431,-8.06537e-05) , 
0.598512, 1, 10, 0, 0.565721,-0.0898195) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.81313,-0.000821792) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.447992,-7.1507e-05) , 
0.586798, 0, 1, 0, 0.623482,-0.151125) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.555555,-0.000180705) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251632,0.000598691) , 
0.305509, 0, 15, 0, 0.35998,0.0667289) , 
1.79517, 0, 11, 0, 0.407508,0.0274345) , 
0.985011, 1, 8, 0, 0.498457,-0.039969)    );
  // itree = 716
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64017,-0.000235482) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.455928,-0.000110101) , 
1.19679, 1, 11, 0, 0.58705,-0.0758407) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.740595,-0.000449766) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.31866,6.06922e-05) , 
1.98106, 0, 17, 0, 0.470571,-0.0978406) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.626243,-0.000419136) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.228267,0.000412004) , 
2.24382, 0, 11, 0, 0.270169,0.125446) , 
0.49199, 1, 13, 0, 0.332812,0.0556488) , 
0.309515, 1, 16, 0, 0.488705,-0.0249774)    );
  // itree = 717
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738219,-0.00038331) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363016,0.000864432) , 
0.985112, 1, 8, 0, 0.611134,-0.135445) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.715653,-0.00028787) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.33133,0.000170888) , 
0.171125, 0, 15, 0, 0.563093,-0.0763798) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.55822,-0.000464082) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.311827,9.03911e-05) , 
2.57164, 0, 10, 0, 0.345541,0.0840525) , 
1.20144, 1, 17, 0, 0.41991,0.0292098) , 
0.748041, 1, 10, 0, 0.486495,-0.0281241)    );
  // itree = 718
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.66637,-0.000259953) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.445122,4.85661e-05) , 
0.252396, 0, 1, 0, 0.628296,-0.109528) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705096,-0.000258334) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.406918,-7.9127e-05) , 
0.897675, 1, 11, 0, 0.527474,-0.047945) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.52634,-0.000391573) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.141736,0.00081886) , 
2.39314, 0, 10, 0, 0.209886,0.11372) , 
0.173161, 0, 15, 0, 0.367418,0.0335298) , 
0.0454795, 1, 0, 0, 0.513512,-0.046584)    );
  // itree = 719
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.654681,-0.000244234) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201822,0.000782055) , 
0.0895322, 0, 15, 0, 0.59989,-0.0876551) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.822292,-0.000502879) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.343606,-9.57656e-05) , 
0.677796, 1, 10, 0, 0.475099,-0.072856) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.32683,0.000226663) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0943973,0.00157172) , 
0.279728, 0, 7, 0, 0.275866,0.0961109) , 
0.44132, 1, 8, 0, 0.332276,0.0482704) , 
0.309674, 1, 16, 0, 0.497455,-0.0356267)    );
  // itree = 720
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.632458,-0.000221308) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.243494,0.000430329) , 
0.116337, 0, 15, 0, 0.545213,-0.0701535) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.864518,-0.000497508) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.477271,-0.000204425) , 
0.116226, 0, 6, 0, 0.546113,-0.0474487) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.563929,-0.00041985) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180634,0.00040368) , 
2.24395, 0, 11, 0, 0.248437,0.159177) , 
1.22083, 0, 7, 0, 0.360903,0.0811107) , 
1.04716, 1, 11, 0, 0.469332,-0.00787758)    );
  // itree = 721
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.635772,-0.00023199) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.526188,-4.3327e-05) , 
0.543909, 0, 2, 0, 0.594126,-0.0966857) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.814243,-0.000612379) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.355628,0.000489925) , 
0.973442, 0, 7, 0, 0.553546,-0.112424) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.919607,-0.00116052) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174477,0.000407392) , 
2.83915, 0, 11, 0, 0.195431,0.149449) , 
0.0461831, 1, 0, 0, 0.288814,0.0811621) , 
0.394988, 1, 16, 0, 0.520765,-0.0539523)    );
  // itree = 722
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.723993,-0.000343181) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.145198,0.000443204) , 
0.572957, 0, 14, 0, 0.669145,-0.147065) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.806725,-0.000498793) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.381394,-0.000176258) , 
0.469866, 0, 7, 0, 0.728928,-0.260823) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.78293,-0.000247908) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.329152,6.36862e-05) , 
0.442827, 0, 12, 0, 0.356513,0.0672738) , 
2.54282, 0, 10, 0, 0.412323,0.0181054) , 
1.23338, 0, 7, 0, 0.510731,-0.0451837)    );
  // itree = 723
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744321,-0.000401478) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.538,-5.51793e-05) , 
0.748083, 1, 10, 0, 0.605763,-0.126149) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.606371,-0.000126754) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.526618,-0.000114333) , 
0.612593, 1, 14, 0, 0.546792,-0.0616039) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.569263,-0.000165493) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.111119,0.000580737) , 
0.226061, 0, 15, 0, 0.290513,0.101063) , 
0.0414624, 1, 0, 0, 0.435581,0.00898462) , 
0.738804, 1, 8, 0, 0.514908,-0.0540054)    );
  // itree = 724
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.817612,-0.000609615) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.592528,-0.000346365) , 
0.897605, 1, 10, 0, 0.700195,-0.184337) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.763713,-0.00029666) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.47789,-8.64904e-05) , 
0.149643, 1, 10, 0, 0.500223,-0.0518086) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622411,0.00015924) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.235116,0.000326976) , 
0.408728, 0, 12, 0, 0.275165,0.131775) , 
-0.6191, 0, 5, 0, 0.446542,-0.00801998) , 
1.72668, 0, 7, 0, 0.496603,-0.0428176)    );
  // itree = 725
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721089,-0.000265738) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.539904,-0.000137294) , 
0.486093, 1, 8, 0, 0.595716,-0.0991213) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.888851,-0.000831896) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.010894,0.0295526) , 
0.202164, 0, 15, 0, 0.699052,-0.374845) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.363478,-0.000185216) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138311,0.00072483) , 
1.79579, 0, 17, 0, 0.221093,0.126367) , 
0.247597, 0, 6, 0, 0.25105,0.094953) , 
0.135683, 1, 0, 0, 0.531313,-0.0628576)    );
  // itree = 726
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.806805,-0.000503951) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.585265,-4.74345e-05) , 
0.266885, 1, 15, 0, 0.749224,-0.183897) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.762398,-0.000420702) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.487447,8.30319e-05) , 
0.566721, 0, 2, 0, 0.699153,-0.156577) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.5494,-0.000218227) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317843,7.62338e-05) , 
-1.11541, 1, 4, 0, 0.361788,0.0512852) , 
0.133459, 1, 16, 0, 0.424037,0.0129311) , 
0.804585, 0, 14, 0, 0.50378,-0.0353353)    );
  // itree = 727
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.585484,-0.000216323) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.403399,1.57353e-06) , 
1.7929, 1, 18, 0, 0.525777,-0.0702736) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.86951,-0.000739728) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.514121,0.00204921) , 
0.720805, 1, 8, 0, 0.742796,-0.203151) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69798,-0.00133697) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.286331,0.000289224) , 
1.96488, 0, 7, 0, 0.323888,0.1442) , 
0.45563, 0, 12, 0, 0.376022,0.100971) , 
0.312091, 0, 1, 0, 0.494651,-0.034681)    );
  // itree = 728
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.821448,-0.000366786) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.555531,-0.000178359) , 
0.0956203, 0, 6, 0, 0.57346,-0.0727993) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.625131,-0.000465551) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0728843,0.00156304) , 
1.01666, 1, 4, 0, 0.587634,-0.18569) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.568404,7.44182e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204031,0.000401574) , 
-0.96635, 1, 3, 0, 0.242833,0.124467) , 
2.39317, 0, 10, 0, 0.305347,0.0682342) , 
0.347296, 1, 16, 0, 0.488439,-0.0280763)    );
  // itree = 729
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.875166,-0.000645127) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.314691,0.0017306) , 
2.39331, 1, 10, 0, 0.845847,-0.292108) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.597215,-0.000196869) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.451391,-0.0001907) , 
0.638142, 0, 2, 0, 0.529458,-0.0602654) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.47015,-8.69262e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.146944,0.00155093) , 
0.116222, 0, 15, 0, 0.379,0.0552256) , 
0.738757, 1, 8, 0, 0.44651,0.00340495) , 
0.614281, 1, 17, 0, 0.477417,-0.0194667)    );
  // itree = 730
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.8946,-0.000648904) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.697053,-0.000607973) , 
-0.89078, 0, 4, 0, 0.816279,-0.27046) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.864742,-0.000298861) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234305,0.00193858) , 
0.260218, 0, 12, 0, 0.70394,-0.203548) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.536452,-0.000262617) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.382998,-1.79913e-05) , 
2.09434, 0, 10, 0, 0.416579,0.0264511) , 
0.471286, 0, 15, 0, 0.438207,0.00914046) , 
0.611366, 1, 17, 0, 0.461945,-0.00841447)    );
  // itree = 731
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.902292,-0.000601682) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.592958,-0.000662888) , 
1.34635, 1, 10, 0, 0.818955,-0.260723) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.52601,-0.000165864) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.120329,0.0017395) , 
0.0891881, 0, 15, 0, 0.466099,-0.0112768) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.58827,-0.000507875) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.185881,0.00059633) , 
1.68067, 0, 7, 0, 0.259044,0.154399) , 
-1.1143, 0, 5, 0, 0.437709,0.0114393) , 
0.614281, 1, 17, 0, 0.463796,-0.00718346)    );
  // itree = 732
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64415,-0.000214836) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.262712,0.000369775) , 
0.117052, 0, 15, 0, 0.557687,-0.0795533) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.832228,-0.00055136) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.282826,0.0120702) , 
0.38045, 1, 1, 0, 0.666734,-0.204227) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.611448,-0.000522519) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.168256,0.000742536) , 
1.91017, 0, 7, 0, 0.239638,0.184347) , 
0.467739, 0, 15, 0, 0.292788,0.135991) , 
2.2398, 1, 18, 0, 0.513773,-0.0438215)    );
  // itree = 733
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.834106,-0.000624813) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0190781,0.00447444) , 
0.0959542, 1, 0, 0, 0.813099,-0.261105) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.732391,-0.000525292) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.456701,-8.03271e-05) , 
2.54308, 0, 11, 0, 0.470234,-0.0211684) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.852487,-0.0307178) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.149042,0.00152517) , 
0.101722, 1, 1, 0, 0.181074,0.293273) , 
0.224666, 0, 2, 0, 0.46165,-0.0118339) , 
0.619382, 1, 17, 0, 0.485478,-0.0287345)    );
  // itree = 734
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.97676,-0.000799708) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0402215,0.00756851) , 
0.523226, 0, 5, 0, 0.845439,-0.482077) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.611432,-0.000234889) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.435338,-2.57968e-05) , 
0.979678, 1, 8, 0, 0.538772,-0.0492737) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.648462,-0.000479378) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.197539,0.000263362) , 
0.495984, 0, 15, 0, 0.248184,0.114931) , 
0.411123, 1, 16, 0, 0.472683,-0.011928) , 
0.250076, 0, 6, 0, 0.480478,-0.0217606)    );
  // itree = 735
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.661336,-0.000228395) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199999,-2.35676e-05) , 
0.246705, 0, 7, 0, 0.626691,-0.0748912) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.846764,-0.000906551) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0664085,0.00163822) , 
0.917574, 1, 8, 0, 0.677018,-0.285664) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.343636,-0.000190832) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157753,0.000196633) , 
0.299184, 1, 11, 0, 0.183033,0.15347) , 
0.598653, 1, 9, 0, 0.213908,0.126023) , 
0.676721, 0, 14, 0, 0.453841,0.00924025)    );
  // itree = 736
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.833153,-0.000389375) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.640502,-0.000296078) , 
0.478181, 0, 16, 0, 0.662003,-0.156732) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.792953,-0.000346726) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.505153,-0.00027446) , 
0.141724, 0, 6, 0, 0.567824,-0.137171) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.470777,-5.78901e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.266513,0.00018243) , 
1.79505, 1, 18, 0, 0.402057,0.0396125) , 
2.09431, 0, 10, 0, 0.440403,-0.00128141) , 
1.0538, 1, 17, 0, 0.496292,-0.0404869)    );
  // itree = 737
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.872608,-0.000438673) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.716217,-0.000520672) , 
0.726314, 0, 2, 0, 0.779075,-0.205694) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.606476,-0.000185893) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186932,0.000945184) , 
0.277659, 0, 2, 0, 0.581731,-0.0666855) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.531231,-0.000370909) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.273782,0.000220801) , 
2.39362, 0, 10, 0, 0.31504,0.0683214) , 
0.197799, 0, 15, 0, 0.443375,0.00335422) , 
0.0888869, 1, 16, 0, 0.491339,-0.0265142)    );
  // itree = 738
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.568047,-0.000188565) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.810364,-0.00158647) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.255798,0.000630962) , 
1.32375, 1, 18, 0, 0.289669,0.16014) , 
-1.3619, 0, 5, 0, 0.545488,-0.0485593) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.695256,-0.00128516) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.379603,-0.000817273) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0979506,0.000673379) , 
0.364674, 0, 12, 0, 0.115449,0.162874) , 
0.331749, 1, 14, 0, 0.130139,0.148208) , 
0.0895322, 0, 15, 0, 0.483474,-0.0191805)    );
  // itree = 739
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660401,-0.000211536) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211689,0.000924013) , 
0.116222, 0, 15, 0, 0.568845,-0.0928326) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.873636,-0.000558304) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378431,0.000491708) , 
0.841007, 1, 10, 0, 0.63944,-0.146886) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.62276,-0.000439062) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249219,2.99928e-05) , 
1.95166, 0, 7, 0, 0.308563,0.131492) , 
0.244285, 1, 8, 0, 0.375708,0.075001) , 
-0.123798, 0, 5, 0, 0.497138,-0.0305202)    );
  // itree = 740
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.662921,-0.000204348) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.369441,0.000183906) , 
0.143583, 0, 15, 0, 0.563644,-0.0949975) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.831927,-0.000591782) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.135692,0.0569749) , 
-0.296585, 1, 5, 0, 0.758768,-0.198606) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.579266,-0.00123485) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.195598,0.000483488) , 
-2.41956, 1, 5, 0, 0.218248,0.179315) , 
0.0779502, 1, 16, 0, 0.306478,0.117626) , 
2.38951, 1, 18, 0, 0.530802,-0.0678435)    );
  // itree = 741
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.896237,-0.000434839) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.608375,-0.00052034) , 
0.771933, 0, 2, 0, 0.737187,-0.170982) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.773621,-0.000522536) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0973382,-0.000526691) , 
0.400265, 1, 16, 0, 0.698552,-0.200171) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.546383,-0.000312196) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340365,2.24069e-06) , 
-1.36168, 1, 4, 0, 0.366866,0.0635686) , 
2.39352, 0, 11, 0, 0.391222,0.0442016) , 
0.0881708, 1, 16, 0, 0.43848,0.0148081)    );
  // itree = 742
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.563638,-0.000202786) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.162236,0.000446118) , 
0.27444, 0, 2, 0, 0.541634,-0.0342123) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.675331,-0.000846306) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187015,0.000332321) , 
1.20609, 1, 9, 0, 0.258873,0.0435343) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.439256,-0.000843604) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0906246,0.000877391) , 
1.97342, 0, 7, 0, 0.133968,0.184531) , 
0.773549, 0, 2, 0, 0.178846,0.13387) , 
0.116084, 0, 15, 0, 0.449673,0.00839371)    );
  // itree = 743
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.72514,-0.000252361) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.534334,-0.000122361) , 
0.324148, 1, 12, 0, 0.660807,-0.103637) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.833605,-0.000451034) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.302829,-0.000676919) , 
0.649904, 0, 14, 0, 0.659976,-0.168928) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.649581,-0.000670803) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.254746,0.00018958) , 
0.236077, 0, 6, 0, 0.266962,0.0945161) , 
2.12181, 0, 7, 0, 0.298635,0.0732854) , 
0.708187, 0, 14, 0, 0.479191,-0.0149168)    );
  // itree = 744
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.835129,-0.000490632) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.099617,0.0018164) , 
0.491364, 0, 7, 0, 0.811911,-0.237437) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.759854,-0.000435509) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.500687,-0.00021207) , 
2.14423, 1, 10, 0, 0.540277,-0.104357) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.622937,-0.000319112) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.353222,2.74705e-05) , 
0.457531, 1, 18, 0, 0.385055,0.049684) , 
2.09435, 0, 10, 0, 0.421444,0.0135723) , 
0.0885291, 1, 16, 0, 0.48836,-0.0294449)    );
  // itree = 745
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.671161,-0.000227386) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.353673,0.000243609) , 
0.263123, 0, 1, 0, 0.619446,-0.0741559) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.853276,-0.000307481) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.316279,-1.96255e-06) , 
0.034131, 1, 8, 0, 0.551119,-0.20091) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.439655,-9.83128e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.1751,0.000242964) , 
0.454703, 1, 18, 0, 0.208556,0.123651) , 
0.23907, 1, 8, 0, 0.265677,0.069532) , 
0.659385, 0, 14, 0, 0.48588,-0.0199064)    );
  // itree = 746
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7168,-0.000268794) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.511893,0.000127349) , 
0.29624, 0, 1, 0, 0.65708,-0.0988985) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.763136,-0.000393027) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.147444,0.000550696) , 
2.24513, 0, 9, 0, 0.620946,-0.155253) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.401748,-0.00012122) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184181,0.000539559) , 
0.926297, 0, 7, 0, 0.284229,0.0685485) , 
0.307817, 0, 15, 0, 0.342827,0.0296015) , 
0.695771, 0, 14, 0, 0.502808,-0.035816)    );
  // itree = 747
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702404,-0.000257424) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.314505,0.000438829) , 
0.273338, 0, 2, 0, 0.663958,-0.105029) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.630895,-0.000217227) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.304677,0.00012231) , 
0.199028, 0, 15, 0, 0.403603,0.00728187) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.789406,-0.000980195) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.140792,0.000274416) , 
0.799831, 0, 16, 0, 0.157362,0.159703) , 
0.400154, 1, 16, 0, 0.320685,0.0586075) , 
0.708187, 0, 14, 0, 0.486953,-0.0206512)    );
  // itree = 748
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729245,-0.000406603) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.461628,-7.90133e-05) , 
0.598516, 1, 10, 0, 0.535811,-0.0672003) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.808425,-0.000547113) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.45338,-0.000313742) , 
2.09463, 1, 9, 0, 0.663744,-0.115311) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.563558,-0.000296024) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.241048,0.000310116) , 
-1.60891, 1, 4, 0, 0.272469,0.132425) , 
1.71693, 0, 7, 0, 0.382917,0.062494) , 
0.979676, 1, 8, 0, 0.469562,-0.0110035)    );
  // itree = 749
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714199,-0.000481778) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0693878,0.0114564) , 
1.49331, 1, 9, 0, 0.671139,-0.195999) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692891,-0.000198727) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.333265,3.83293e-05) , 
0.675948, 0, 14, 0, 0.544992,-0.0716413) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.478917,-0.000168492) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.286894,0.000120878) , 
1.85892, 0, 17, 0, 0.384209,0.0585067) , 
-0.123814, 1, 4, 0, 0.468582,-0.00979041) , 
2.54311, 0, 10, 0, 0.491594,-0.0309449)    );
  // itree = 750
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71495,-0.000252054) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.499527,-0.000152004) , 
1.34636, 1, 10, 0, 0.652607,-0.0942969) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707386,-0.000218621) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.264495,-0.000128517) , 
0.14255, 0, 15, 0, 0.485085,-0.0527927) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.409034,-0.000292114) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.171357,0.000594674) , 
2.09437, 0, 10, 0, 0.232079,0.116667) , 
1.17878, 0, 7, 0, 0.317204,0.0596516) , 
0.705384, 0, 14, 0, 0.480282,-0.0152006)    );
  // itree = 751
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.766433,-0.000527259) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.503867,-0.000112421) , 
1.9623, 0, 7, 0, 0.558303,-0.0586188) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.468876,0.00014176) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164635,-9.33007e-05) , 
0.767471, 1, 8, 0, 0.344777,0.0343616) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.696628,-0.0007646) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.116645,0.000256084) , 
0.240873, 0, 6, 0, 0.147849,0.203778) , 
-0.353629, 1, 4, 0, 0.232643,0.13083) , 
0.0904555, 1, 0, 0, 0.4695,-0.00695852)    );
  // itree = 752
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.654511,-0.000305342) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.542425,-0.000109505) , 
0.527639, 1, 14, 0, 0.570903,-0.119914) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687618,-0.000435741) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.470378,-7.31089e-05) , 
1.71694, 0, 7, 0, 0.524565,-0.0327271) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.625059,-0.000193265) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.147843,0.000282504) , 
-1.77467, 1, 5, 0, 0.17942,0.162392) , 
0.138549, 1, 0, 0, 0.455947,0.00606424) , 
0.86657, 0, 5, 0, 0.489076,-0.0302414)    );
  // itree = 753
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.811617,-0.000464166) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.468075,-0.000381096) , 
0.114219, 0, 15, 0, 0.722694,-0.177163) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.590375,-0.000189031) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.205561,0.000353763) , 
0.230916, 1, 0, 0, 0.535064,-0.0663715) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.680146,-0.000367958) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.296976,0.000301078) , 
0.125364, 0, 6, 0, 0.330004,0.0783058) , 
0.974852, 1, 8, 0, 0.453221,-0.00862841) , 
1.71925, 0, 7, 0, 0.509414,-0.0437728)    );
  // itree = 754
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.948181,-0.000536387) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.69935,-0.000446028) , 
0.149592, 1, 10, 0, 0.770162,-0.195104) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.59471,-0.000299127) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.45047,-3.73896e-05) , 
2.09437, 0, 10, 0, 0.485312,-0.0411501) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.638071,-0.000898583) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.190421,0.00157009) , 
0.464901, 0, 15, 0, 0.219859,0.238712) , 
0.274442, 0, 2, 0, 0.471758,-0.02686) , 
0.0887963, 1, 16, 0, 0.510822,-0.048885)    );
  // itree = 755
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.819861,-0.000519834) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.274434,0.00253805) , 
2.39348, 1, 10, 0, 0.793209,-0.245849) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653213,-0.000208098) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.325408,0.000531987) , 
0.303987, 0, 2, 0, 0.611729,-0.0733175) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.50481,-0.000296003) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.203938,0.000378842) , 
2.39352, 0, 10, 0, 0.256777,0.0773367) , 
0.66057, 0, 14, 0, 0.47138,-0.0137483) , 
0.759688, 1, 17, 0, 0.511084,-0.0423828)    );
  // itree = 756
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.895644,-0.000607359) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.594523,-0.000656183) , 
1.79433, 1, 10, 0, 0.847276,-0.280211) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.799012,-0.000391772) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.459071,-0.000302172) , 
0.482763, 0, 16, 0, 0.599707,-0.150681) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.626063,-0.000349829) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.358154,1.06146e-05) , 
1.71925, 0, 7, 0, 0.400362,0.0458152) , 
2.39353, 0, 10, 0, 0.429701,0.0168952) , 
0.615696, 1, 17, 0, 0.464181,-0.00763733)    );
  // itree = 757
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.696513,-0.000396256) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.518074,-0.000118053) , 
1.34642, 1, 9, 0, 0.548145,-0.0843134) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.767285,-0.000512083) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.157643,0.000364246) , 
1.49652, 1, 10, 0, 0.643064,-0.139532) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.646497,-0.00022437) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.169919,0.000530877) , 
0.467425, 0, 15, 0, 0.241039,0.158038) , 
1.05196, 1, 17, 0, 0.361658,0.0687588) , 
2.24042, 1, 18, 0, 0.513701,-0.0560411)    );
  // itree = 758
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64981,-0.000250374) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.49475,-7.12899e-05) , 
0.72783, 1, 8, 0, 0.566867,-0.0805811) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.721177,-0.000495157) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.051226,0.00066443) , 
0.737723, 0, 8, 0, 0.587575,-0.194983) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.418217,9.73975e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.104763,0.000614785) , 
0.34469, 0, 12, 0, 0.154235,0.178592) , 
2.54317, 0, 10, 0, 0.212313,0.128523) , 
0.486092, 1, 16, 0, 0.519779,-0.0528101)    );
  // itree = 759
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.79104,-0.000401425) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.586355,-0.000416488) , 
0.635116, 0, 2, 0, 0.697043,-0.140256) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.802762,-0.000406697) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.246422,-0.000171417) , 
2.40828, 1, 7, 0, 0.730341,-0.196269) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.613307,-0.000154099) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.342677,5.47252e-06) , 
0.858923, 0, 1, 0, 0.351067,0.0694729) , 
2.05244, 0, 7, 0, 0.380097,0.0491326) , 
0.132943, 1, 16, 0, 0.453576,0.00522581)    );
  // itree = 760
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687828,-0.000249817) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.242023,0.00048605) , 
0.265929, 0, 2, 0, 0.650307,-0.0907974) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647089,-0.000469059) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.072324,0.000488672) , 
0.426897, 0, 7, 0, 0.564672,-0.134239) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.893725,-0.000924958) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257189,8.33096e-05) , 
0.442622, 0, 12, 0, 0.276579,0.0919028) , 
1.34646, 1, 9, 0, 0.326437,0.0527664) , 
0.711778, 0, 14, 0, 0.478324,-0.0145616)    );
  // itree = 761
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700678,-0.000290069) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.339411,5.71452e-05) , 
0.608437, 0, 14, 0, 0.624958,-0.120425) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.659549,-0.000187966) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.299089,6.34662e-05) , 
0.128106, 1, 5, 0, 0.562027,-0.0943816) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676638,-0.000339862) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.237313,0.00016304) , 
0.132217, 1, 16, 0, 0.298483,0.106273) , 
0.492506, 1, 8, 0, 0.396399,0.0317222) , 
0.969364, 0, 7, 0, 0.508655,-0.043004)    );
  // itree = 762
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742182,-0.000406028) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.502594,-7.06266e-05) , 
0.598516, 1, 10, 0, 0.566413,-0.0866706) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.914461,-0.000280989) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.480476,-0.000123568) , 
0.465644, 0, 15, 0, 0.564416,-0.0803151) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.317957,3.86839e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.178356,0.000803386) , 
2.54313, 1, 9, 0, 0.271441,0.132601) , 
1.20343, 1, 17, 0, 0.377588,0.0554599) , 
0.977111, 1, 8, 0, 0.487179,-0.0270304)    );
  // itree = 763
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.679146,-0.000408279) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.488801,-9.62558e-05) , 
1.34642, 1, 9, 0, 0.520276,-0.0614457) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.972038,-0.00358483) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154342,0.0565165) , 
0.206716, 1, 1, 0, 0.934271,-0.355213) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65509,-0.00119437) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.154334,0.000729176) , 
0.463026, 0, 15, 0, 0.189128,0.28407) , 
2.1622, 0, 7, 0, 0.242893,0.237944) , 
0.257621, 0, 2, 0, 0.507329,-0.0474716)    );
  // itree = 764
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719896,-0.000234485) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.532461,-5.39841e-08) , 
0.449437, 0, 2, 0, 0.656658,-0.10966) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.536474,-0.000121247) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186344,0.000151398) , 
2.04657, 1, 17, 0, 0.408138,-0.0667607) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.458659,6.92291e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.141617,0.000253674) , 
0.149557, 1, 11, 0, 0.164753,0.157841) , 
1.79507, 0, 17, 0, 0.265917,0.0644847) , 
0.659126, 0, 14, 0, 0.513197,-0.0457224)    );
  // itree = 765
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.665271,-0.000220478) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.415468,-0.000147084) , 
0.618993, 1, 4, 0, 0.622311,-0.106394) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.574069,-0.00023336) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.303209,0.000119702) , 
0.219308, 1, 12, 0, 0.465781,-0.0650581) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.915885,-0.000609333) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.20818,0.000411092) , 
2.0202, 0, 7, 0, 0.237855,0.138382) , 
1.35016, 1, 18, 0, 0.353188,0.0354388) , 
0.308739, 1, 16, 0, 0.519784,-0.0523601)    );
  // itree = 766
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.770926,-0.00044831) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239107,0.000647255) , 
0.0605895, 0, 15, 0, 0.741733,-0.189709) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.626066,-0.000269023) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.461089,-1.6476e-05) , 
2.09436, 0, 10, 0, 0.494919,-0.0370014) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.980364,-0.00115531) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225596,0.000232858) , 
3.6389, 0, 8, 0, 0.255646,0.122909) , 
0.58605, 1, 1, 0, 0.457199,-0.0117925) , 
1.72668, 0, 7, 0, 0.515878,-0.0484843)    );
  // itree = 767
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.646274,-0.000228493) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.469151,0.000102298) , 
0.449444, 0, 2, 0, 0.603866,-0.0955044) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.480457,-0.000170887) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.206582,0.000582412) , 
2.08909, 1, 18, 0, 0.42093,-0.0291651) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.729693,-0.00111915) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194195,0.000633979) , 
2.8422, 0, 11, 0, 0.207319,0.151289) , 
0.543245, 0, 7, 0, 0.3228,0.0537328) , 
0.351159, 1, 16, 0, 0.516204,-0.0489588)    );
  // itree = 768
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.819418,-0.000592111) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0778171,-0.000272729) , 
0.192831, 1, 16, 0, 0.785271,-0.227891) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664172,-0.000303827) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.459174,-6.20669e-05) , 
0.246254, 1, 8, 0, 0.496037,-0.0348405) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.866121,-0.000863526) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.199703,0.000198066) , 
2.35221, 0, 5, 0, 0.233652,0.15013) , 
0.31715, 0, 7, 0, 0.451253,-0.00326985) , 
2.22002, 0, 7, 0, 0.486569,-0.0270191)    );
  // itree = 769
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736239,-0.000482052) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175316,0.000492132) , 
0.278373, 0, 2, 0, 0.701434,-0.204653) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.710182,-0.000238446) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.499306,-3.01925e-05) , 
0.541201, 0, 2, 0, 0.611657,-0.0619316) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.447431,-0.000243795) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.233514,0.000425288) , 
2.09267, 0, 10, 0, 0.27367,0.0660532) , 
0.678849, 0, 14, 0, 0.458132,-0.00379637) , 
1.19679, 1, 9, 0, 0.498931,-0.0374784)    );
  // itree = 770
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.640061,-0.000286581) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.392854,9.26386e-05) , 
1.04715, 1, 11, 0, 0.54199,-0.0702646) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.598967,-0.000222419) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202042,0.000446051) , 
2.23763, 1, 18, 0, 0.515461,-0.0901842) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.56564,-0.000733278) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271512,0.000196762) , 
2.76408, 0, 8, 0, 0.308006,0.12729) , 
0.541274, 0, 1, 0, 0.381191,0.0505697) , 
0.979676, 1, 8, 0, 0.474907,-0.019854)    );
  // itree = 771
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.827784,-0.000400182) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.533301,-0.000202488) , 
0.449444, 0, 2, 0, 0.685723,-0.121978) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.918554,-0.000840025) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.608767,-0.000411297) , 
0.55437, 0, 16, 0, 0.722967,-0.271611) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.489637,-0.000198216) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322985,7.82783e-05) , 
0.747998, 1, 10, 0, 0.375505,0.0385944) , 
2.54308, 0, 11, 0, 0.393049,0.0229314) , 
0.778374, 0, 14, 0, 0.472382,-0.0163478)    );
  // itree = 772
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.883162,-0.000605336) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.645933,-0.000355223) , 
0.0506001, 1, 16, 0, 0.72412,-0.162592) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.495151,-9.5629e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0520173,0.00160186) , 
0.491951, 0, 14, 0, 0.455178,-0.0204322) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.389693,-2.74195e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.111215,0.000675463) , 
0.0351952, 1, 6, 0, 0.29979,0.119815) , 
0.620983, 1, 4, 0, 0.419981,0.0113347) , 
0.132002, 1, 16, 0, 0.493746,-0.0308489)    );
  // itree = 773
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702836,-0.00022432) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.480805,0.000244641) , 
0.263353, 0, 1, 0, 0.662856,-0.115791) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.543914,-0.000331625) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.196665,0.0017303) , 
0.377812, 1, 16, 0, 0.432078,-0.0802136) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.502891,-0.000280467) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164698,0.000464837) , 
1.33215, 1, 9, 0, 0.256373,0.0758408) , 
2.54319, 0, 9, 0, 0.328591,0.0116999) , 
0.658743, 0, 14, 0, 0.535598,-0.0672541)    );
  // itree = 774
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.816806,-0.000381603) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.667107,-0.000466309) , 
0.676899, 0, 1, 0, 0.712136,-0.174203) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558812,-0.000166273) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.361085,0.000432879) , 
0.311597, 0, 1, 0, 0.51947,-0.0629958) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.889154,-0.000425337) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.332625,0.000126294) , 
0.0465001, 1, 16, 0, 0.359398,0.0737124) , 
1.64475, 1, 18, 0, 0.453528,-0.00667914) , 
1.71931, 0, 7, 0, 0.506472,-0.0409753)    );
  // itree = 775
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.814523,-0.000395054) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.620279,-0.000414009) , 
0.681607, 0, 2, 0, 0.710469,-0.15328) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.739405,-0.000433989) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.375104,7.70818e-06) , 
0.813152, 0, 14, 0, 0.413116,0.017795) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.990959,-0.00117416) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129475,0.00197726) , 
2.02152, 0, 7, 0, 0.175573,0.274999) , 
0.274439, 0, 2, 0, 0.40008,0.0319101) , 
0.133065, 1, 16, 0, 0.471256,-0.0105566)    );
  // itree = 776
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674907,-0.00020719) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.475855,-4.34511e-05) , 
-0.619087, 0, 5, 0, 0.632643,-0.116016) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.823847,-0.000621573) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.275967,0.00283369) , 
-0.866149, 1, 4, 0, 0.588815,-0.184075) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.495185,-0.000514702) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.173969,0.000744436) , 
2.68532, 0, 8, 0, 0.201953,0.109856) , 
0.299399, 1, 10, 0, 0.267314,0.0601961) , 
0.116222, 0, 15, 0, 0.54569,-0.0740754)    );
  // itree = 777
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683384,-0.000336664) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.428323,5.46359e-05) , 
1.04733, 1, 10, 0, 0.558218,-0.0814479) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.912319,-0.000832897) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.420031,-0.000168791) , 
1.68093, 0, 7, 0, 0.64886,-0.158858) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556927,-0.000547404) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.300458,0.000157555) , 
2.75565, 0, 8, 0, 0.329739,0.0936719) , 
1.1968, 1, 9, 0, 0.386595,0.0486802) , 
0.976728, 1, 8, 0, 0.486034,-0.0267165)    );
  // itree = 778
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.578069,-0.000206263) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363584,0.000217902) , 
2.2425, 1, 18, 0, 0.541994,-0.0483947) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.871091,-0.00123029) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.509742,-0.000432568) , 
-0.819498, 0, 4, 0, 0.718332,-0.263112) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.408694,-0.000136105) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0931436,0.00137098) , 
-1.85717, 1, 5, 0, 0.118361,0.150507) , 
0.617677, 1, 17, 0, 0.181168,0.107208) , 
0.088705, 0, 15, 0, 0.485231,-0.0239165)    );
  // itree = 779
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.745862,-0.000279385) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.48696,-0.000100892) , 
0.979722, 1, 8, 0, 0.642491,-0.119652) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.56791,-0.000132024) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202231,0.000112693) , 
-0.74052, 0, 3, 0, 0.52654,-0.0533556) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.336591,-0.00029479) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0827303,0.00139739) , 
1.4958, 0, 11, 0, 0.169997,0.127343) , 
0.146898, 0, 15, 0, 0.376784,0.022542) , 
0.0461831, 1, 0, 0, 0.526775,-0.0577262)    );
  // itree = 780
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.73343,-0.000256999) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.497248,-1.45307e-06) , 
0.403565, 0, 2, 0, 0.662993,-0.102111) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.498,-4.6141e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.366627,2.25339e-05) , 
0.474992, 1, 14, 0, 0.385013,0.0097858) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742743,-0.000764782) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0904621,0.000366388) , 
2.54118, 0, 11, 0, 0.13588,0.170486) , 
0.440324, 1, 16, 0, 0.31544,0.0546627) , 
0.697055, 0, 14, 0, 0.493849,-0.0258138)    );
  // itree = 781
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.740049,-0.000442822) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.579372,-0.000120591) , 
0.258673, 1, 15, 0, 0.681845,-0.11947) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689782,-0.000283204) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.265399,-1.35989e-05) , 
0.944557, 1, 2, 0, 0.518286,-0.079975) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.435645,-0.000194161) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.221152,0.00017977) , 
0.944065, 0, 7, 0, 0.316743,0.101421) , 
0.91042, 0, 2, 0, 0.35033,0.0711915) , 
0.781067, 0, 14, 0, 0.441744,0.0186173)    );
  // itree = 782
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.843484,-0.000392564) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.640057,-0.000411309) , 
0.772568, 0, 2, 0, 0.718804,-0.152065) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.644084,-0.000246728) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.374564,4.71767e-06) , 
0.768717, 0, 14, 0, 0.439544,0.00482594) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.662364,-0.00182049) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0581957,0.00107209) , 
0.296222, 0, 12, 0, 0.0762046,0.218013) , 
0.323282, 1, 0, 0, 0.412961,0.020423) , 
0.13294, 1, 16, 0, 0.485878,-0.0207002)    );
  // itree = 783
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.609432,-0.000229353) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.438406,0.000109385) , 
0.307783, 0, 1, 0, 0.572436,-0.0652222) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.922969,-0.000720781) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0514978,-0.000729805) , 
0.650405, 1, 16, 0, 0.72066,-0.390066) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.43041,-0.000175357) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.22056,0.000366887) , 
1.82937, 0, 17, 0, 0.283393,0.0887992) , 
0.242955, 0, 6, 0, 0.303152,0.0671598) , 
0.344087, 1, 16, 0, 0.482023,-0.0207747)    );
  // itree = 784
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.780177,-0.000223799) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.518062,-0.000203367) , 
0.633269, 0, 8, 0, 0.587091,-0.106955) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.748042,-0.000506875) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.471894,-0.000208884) , 
2.04684, 0, 7, 0, 0.669813,-0.136543) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64958,-0.000299911) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.2976,0.000242326) , 
1.94448, 0, 11, 0, 0.353332,0.0658404) , 
1.71926, 0, 7, 0, 0.429033,0.0174308) , 
0.738804, 1, 8, 0, 0.500335,-0.0386808)    );
  // itree = 785
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.929706,-0.000586423) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.313155,0.000341487) , 
0.22395, 1, 15, 0, 0.913281,-0.317755) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.555044,-0.000162047) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.410933,1.64001e-05) , 
0.345354, 0, 1, 0, 0.513618,-0.0458676) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.507717,-0.00273323) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0535312,0.00120543) , 
0.903338, 0, 1, 0, 0.0747252,0.219755) , 
0.316594, 1, 0, 0, 0.488174,-0.0304683) , 
0.0429108, 1, 16, 0, 0.517254,-0.0501208)    );
  // itree = 786
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.874356,-0.000546402) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.609413,-0.000481858) , 
1.64567, 1, 10, 0, 0.826657,-0.252824) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.758643,-0.000489113) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0793706,-0.000647914) , 
0.863916, 1, 4, 0, 0.714214,-0.216401) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.540039,-0.000141893) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.304559,8.95488e-05) , 
0.0461831, 1, 0, 0, 0.422246,0.0218927) , 
2.39356, 0, 11, 0, 0.444068,0.00408249) , 
2.22004, 0, 7, 0, 0.493766,-0.0292893)    );
  // itree = 787
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691592,-0.000231668) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.517118,-0.000189278) , 
0.728393, 0, 2, 0, 0.594615,-0.115629) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.796064,-0.00051352) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.472397,-0.000389146) , 
2.39401, 1, 9, 0, 0.702832,-0.150286) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.723381,0.000252017) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.339598,0.000114728) , 
0.858841, 0, 1, 0, 0.35397,0.0680572) , 
1.96224, 0, 7, 0, 0.414957,0.0298873) , 
0.738757, 1, 8, 0, 0.498249,-0.0375761)    );
  // itree = 788
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769514,-0.000379987) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.552005,-0.000134575) , 
1.77425, 0, 17, 0, 0.659391,-0.181268) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.614123,-0.000263054) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.336734,0.000195687) , 
0.0228485, 1, 0, 0, 0.555822,-0.0463603) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668048,-0.000290556) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.264133,9.26695e-05) , 
0.786358, 0, 14, 0, 0.316104,0.0712131) , 
0.0436213, 1, 0, 0, 0.444794,0.00809493) , 
0.246311, 1, 8, 0, 0.486304,-0.0285342)    );
  // itree = 789
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.603243,-0.000204552) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.299555,0.000111481) , 
-1.11429, 0, 5, 0, 0.570247,-0.0621374) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744722,-0.000625724) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.334374,-0.000261482) , 
0.898491, 0, 7, 0, 0.531655,-0.136695) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.568998,0.000135195) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.208515,0.000367592) , 
0.228284, 1, 10, 0, 0.247009,0.117179) , 
2.39361, 0, 10, 0, 0.289725,0.0790818) , 
0.347358, 1, 16, 0, 0.479819,-0.0166143)    );
  // itree = 790
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718056,-0.000452458) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.490023,-8.66773e-05) , 
0.108463, 1, 16, 0, 0.545685,-0.0479773) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.490421,-8.38933e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0584316,0.000290285) , 
0.318302, 1, 3, 0, 0.396444,-0.0223787) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.39418,-5.92761e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0693777,0.000199678) , 
0.334015, 0, 15, 0, 0.121603,0.239652) , 
0.519652, 0, 1, 0, 0.281016,0.087669) , 
0.090959, 1, 0, 0, 0.468898,-0.00862297)    );
  // itree = 791
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761709,-0.000471696) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.341233,0.000222515) , 
0.0157337, 1, 0, 0, 0.718695,-0.155635) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.478349,-0.000107743) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.381881,-0.000110842) , 
0.200456, 0, 16, 0, 0.461971,-0.0200606) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.443393,1.61849e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229504,0.00023518) , 
0.434496, 1, 8, 0, 0.295735,0.10113) , 
0.587214, 0, 7, 0, 0.400171,0.0249932) , 
0.132433, 1, 16, 0, 0.477792,-0.019024)    );
  // itree = 792
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746689,-0.000217606) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.604088,-0.000229488) , 
0.22768, 0, 16, 0, 0.644093,-0.117853) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.62124,-0.000292397) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.132482,-7.19954e-05) , 
0.252797, 1, 15, 0, 0.554782,-0.147956) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.478128,-0.000248927) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201417,0.000135545) , 
0.298854, 1, 11, 0, 0.248979,0.133506) , 
2.09435, 0, 10, 0, 0.335555,0.0538208) , 
0.265519, 1, 16, 0, 0.504865,-0.0403852)    );
  // itree = 793
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717918,-0.000316341) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.271753,0.000155215) , 
0.0891265, 0, 15, 0, 0.658389,-0.137383) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.515324,-0.000112171) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.251183,0.000159465) , 
0.0404926, 1, 6, 0, 0.423403,-0.00123642) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.403112,0.00042404) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143115,0.000536921) , 
-0.371105, 1, 5, 0, 0.263579,0.197571) , 
0.304007, 0, 2, 0, 0.405898,0.0205386) , 
1.22805, 0, 7, 0, 0.502417,-0.0398297)    );
  // itree = 794
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.673709,-0.000212271) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.413056,0.00021211) , 
2.24075, 1, 18, 0, 0.633651,-0.109479) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.861418,-0.000553852) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.392072,-0.000469895) , 
2.54377, 0, 9, 0, 0.770961,-0.211679) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.933793,-0.00089599) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.289301,0.00021277) , 
-2.03208, 1, 3, 0, 0.309199,0.059765) , 
0.0867666, 1, 16, 0, 0.381099,0.0174989) , 
0.170414, 0, 15, 0, 0.522286,-0.0534873)    );
  // itree = 795
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.724111,-0.000362492) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.103586,0.000216634) , 
0.243992, 0, 7, 0, 0.689179,-0.118171) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.54517,-0.000196883) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318028,-1.73277e-05) , 
0.0454795, 1, 0, 0, 0.41243,0.010238) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.438926,0.000366506) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.150743,0.00106979) , 
2.20458, 0, 8, 0, 0.219247,0.19026) , 
0.429324, 0, 2, 0, 0.383881,0.0368419) , 
0.783002, 0, 14, 0, 0.466664,-0.0051905)    );
  // itree = 796
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730744,-0.000296654) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.366194,-0.00024037) , 
0.115941, 0, 15, 0, 0.637438,-0.123197) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.477909,-0.000132111) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0733524,8.54065e-05) , 
0.934453, 1, 2, 0, 0.445856,-0.0199633) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.635568,-0.000363036) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.291893,0.00028707) , 
0.853563, 0, 14, 0, 0.365092,0.0999566) , 
0.541201, 0, 2, 0, 0.413003,0.0288183) , 
1.06394, 1, 17, 0, 0.467568,-0.00814005)    );
  // itree = 797
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.783235,-0.000466368) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.421672,0.000201018) , 
0.0159501, 1, 0, 0, 0.746315,-0.180952) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.811806,-0.000398637) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.466844,-2.52926e-05) , 
1.89176, 0, 17, 0, 0.629809,-0.18918) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.610942,-0.000189643) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.319978,9.4674e-05) , 
1.05884, 1, 17, 0, 0.387337,0.0403983) , 
0.235912, 1, 8, 0, 0.431214,-0.00114496) , 
0.132539, 1, 16, 0, 0.511831,-0.0471475)    );
  // itree = 798
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.840751,-0.000612019) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.67226,-0.000337245) , 
0.612302, 1, 17, 0, 0.725204,-0.183858) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.753162,-0.000412229) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.367812,-0.000162004) , 
1.48311, 1, 17, 0, 0.614674,-0.157169) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.492819,-6.81225e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.195502,0.000190002) , 
0.0923662, 1, 0, 0, 0.398539,0.0475421) , 
2.39356, 0, 10, 0, 0.430703,0.0170782) , 
1.70905, 0, 7, 0, 0.494228,-0.0262644)    );
  // itree = 799
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.715548,-0.00045685) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.119789,-0.000307109) , 
0.72122, 1, 1, 0, 0.689189,-0.136827) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.863374,-0.000443301) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.409354,-0.000166845) , 
2.14446, 1, 10, 0, 0.526115,-0.0970031) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.613114,-0.00020329) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.344649,0.000111791) , 
1.0647, 1, 17, 0, 0.397754,0.0436405) , 
2.09435, 0, 10, 0, 0.426267,0.0123991) , 
1.71693, 0, 7, 0, 0.478765,-0.0173969)    );
  // itree = 800
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.662688,-0.000261401) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.235542,0.000295466) , 
0.610904, 0, 14, 0, 0.571812,-0.0765901) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.811976,-0.000202172) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.105475,-0.000309431) , 
2.24388, 0, 9, 0, 0.682949,-0.199328) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.503887,7.56659e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.232468,0.000105554) , 
0.340788, 0, 12, 0, 0.308384,0.0987947) , 
0.700826, 0, 7, 0, 0.339331,0.0741631) , 
0.735881, 0, 7, 0, 0.481008,-0.0177079)    );
  // itree = 801
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.82139,-0.000463381) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.539969,-7.2811e-05) , 
0.350123, 0, 2, 0, 0.716865,-0.155078) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.670193,-0.00021548) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.32123,0.000145178) , 
0.650575, 0, 14, 0, 0.495386,-0.0575189) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.535817,-0.000335875) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.258846,0.000672034) , 
1.20126, 1, 17, 0, 0.340095,0.103972) , 
0.508489, 0, 2, 0, 0.45533,-0.0158641) , 
0.810024, 0, 14, 0, 0.507392,-0.0435761)    );
  // itree = 802
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634202,-0.000209135) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.351825,0.000381091) , 
0.322825, 0, 2, 0, 0.603923,-0.0779497) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.808675,-0.000599878) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.384937,-0.00033329) , 
1.96286, 0, 7, 0, 0.684106,-0.172378) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.471575,-0.000168846) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.179939,0.000534025) , 
0.240875, 1, 8, 0, 0.226885,0.104607) , 
0.0881708, 1, 16, 0, 0.287707,0.0677604) , 
0.144066, 0, 15, 0, 0.496164,-0.0282951)    );
  // itree = 803
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.753768,-0.000342862) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.416769,-0.000109822) , 
0.688606, 0, 14, 0, 0.636804,-0.117855) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.690272,-0.000463421) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.108978,-0.000208885) , 
0.299015, 0, 9, 0, 0.647757,-0.177485) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.402394,3.08694e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.122536,0.000213459) , 
0.117022, 0, 7, 0, 0.37877,0.0474447) , 
2.54317, 0, 10, 0, 0.409667,0.0216083) , 
1.22809, 0, 7, 0, 0.492644,-0.0293397)    );
  // itree = 804
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.862295,-0.000611827) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.547972,-0.000129583) , 
0.61224, 1, 17, 0, 0.582668,-0.0823345) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.929893,-0.000810048) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0135646,0.0155969) , 
0.499102, 0, 3, 0, 0.64235,-0.329335) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.492222,-1.67839e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.188246,0.000275832) , 
-0.886237, 1, 3, 0, 0.22552,0.135768) , 
0.236077, 0, 6, 0, 0.249861,0.108608) , 
0.396602, 1, 16, 0, 0.507826,-0.0393952)    );
  // itree = 805
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.624903,-0.000255611) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0430394,-0.000142368) , 
0.232903, 1, 0, 0, 0.607658,-0.10161) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.538242,-0.000162981) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158438,6.93737e-05) , 
-0.866626, 0, 5, 0, 0.49367,-0.0424437) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.452506,-0.000494327) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.237954,0.00154979) , 
0.369842, 1, 13, 0, 0.257964,0.119504) , 
0.964771, 1, 8, 0, 0.403758,0.0193324) , 
0.981101, 0, 7, 0, 0.49885,-0.0370706)    );
  // itree = 806
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.658902,-0.000234745) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.212218,0.000779927) , 
0.0896043, 0, 15, 0, 0.602542,-0.0836608) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.8692,-0.000845658) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.250799,0.00851643) , 
2.73428, 1, 9, 0, 0.538235,-0.162374) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.433931,-0.00023262) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.182813,0.000223542) , 
1.08567, 0, 7, 0, 0.237913,0.138727) , 
0.149594, 1, 11, 0, 0.257501,0.119088) , 
0.308582, 1, 16, 0, 0.476468,-0.00957866)    );
  // itree = 807
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74669,-0.00029332) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.491846,-6.57869e-05) , 
0.736852, 0, 7, 0, 0.67426,-0.109491) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.800626,-0.00084727) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.351963,0.00117591) , 
0.0367734, 0, 6, 0, 0.496873,-0.135518) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728027,-0.00061575) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.222364,0.000161728) , 
0.0913974, 1, 16, 0, 0.256158,0.10521) , 
0.299177, 1, 11, 0, 0.290573,0.0707931) , 
0.697055, 0, 14, 0, 0.495697,-0.0255889)    );
  // itree = 808
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.637741,-0.000213239) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.394739,0.000148462) , 
2.24263, 1, 18, 0, 0.599899,-0.0867207) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.96323,-0.000655298) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0768082,0.0281166) , 
0.0536995, 1, 16, 0, 0.8768,-0.321768) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.570353,-0.000779739) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.136468,0.00043968) , 
2.99158, 0, 10, 0, 0.150507,0.158217) , 
3.20673, 0, 7, 0, 0.189038,0.132753) , 
0.116038, 0, 15, 0, 0.50794,-0.0375981)    );
  // itree = 809
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.898869,-0.000637321) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.424878,-0.000166446) , 
1.34919, 1, 18, 0, 0.801341,-0.293736) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.859308,-0.000291782) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.567542,-0.000318801) , 
1.11429, 0, 5, 0, 0.691656,-0.152264) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.577304,-0.000219144) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.352733,7.53109e-06) , 
0.246307, 1, 8, 0, 0.392733,0.044566) , 
0.912446, 1, 17, 0, 0.447328,0.00861722) , 
0.598391, 1, 9, 0, 0.476901,-0.0166405)    );
  // itree = 810
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707192,-0.000209306) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.431904,-9.83763e-05) , 
0.171046, 0, 15, 0, 0.597076,-0.0850621) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.933801,-0.00133883) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0505145,0.106437) , 
0.426604, 0, 16, 0, 0.849156,-0.36258) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.507929,-0.00049068) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.240348,0.000267136) , 
2.54242, 0, 10, 0, 0.272792,0.0964305) , 
3.01148, 0, 8, 0, 0.294684,0.0789962) , 
0.353661, 1, 16, 0, 0.505714,-0.035495)    );
  // itree = 811
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687434,-0.000221866) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.362765,0.000279503) , 
0.265324, 0, 1, 0, 0.635296,-0.0844926) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.85199,-0.00129364) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.15073,0.00860835) , 
1.39453, 1, 17, 0, 0.694982,-0.291624) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.761051,-0.000667567) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225908,0.00019205) , 
2.69224, 0, 11, 0, 0.248099,0.0904877) , 
2.10441, 0, 5, 0, 0.273998,0.0683426) , 
0.659385, 0, 14, 0, 0.496098,-0.0256092)    );
  // itree = 812
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.623116,-0.000206127) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.485471,0.000116888) , 
0.407097, 0, 2, 0, 0.58927,-0.0948399) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.594222,-0.00014375) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138912,-0.000169669) , 
1.65878, 1, 18, 0, 0.468449,-0.0523818) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.3344,0.000424968) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0754492,0.000504767) , 
0.687435, 0, 13, 0, 0.12517,0.194276) , 
0.399164, 1, 16, 0, 0.265045,0.0937716) , 
0.136439, 1, 0, 0, 0.529392,-0.0600071)    );
  // itree = 813
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.61589,-0.000210464) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.396969,-5.75314e-05) , 
0.610468, 0, 13, 0, 0.552486,-0.0721779) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.938308,-0.000866179) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.000217707,0.0343749) , 
0.315639, 0, 13, 0, 0.857799,-0.501621) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.583689,-6.04074e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183438,0.000258057) , 
0.73698, 0, 14, 0, 0.32522,0.0873506) , 
0.249637, 0, 6, 0, 0.345383,0.0650528) , 
0.493372, 0, 7, 0, 0.495889,-0.0346758)    );
  // itree = 814
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.627638,-0.000193978) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.449109,-0.000123582) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.172194,0.00100854) , 
2.09275, 0, 18, 0, 0.294676,0.0516939) , 
0.115917, 0, 15, 0, 0.551945,-0.0694398) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.757034,-0.00455566) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.384129,-0.00267148) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0655716,0.000447871) , 
0.908447, 0, 1, 0, 0.0755236,0.227469) , 
2.38763, 0, 11, 0, 0.0873608,0.216437) , 
0.271367, 1, 0, 0, 0.522125,-0.0510907)    );
  // itree = 815
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.775362,-0.000369323) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.555885,-0.000145445) , 
1.11432, 0, 4, 0, 0.605637,-0.0813389) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.779398,-0.000717617) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0922951,0.000185812) , 
0.92681, 1, 8, 0, 0.628724,-0.272414) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717317,-0.00064091) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.228571,0.000334484) , 
0.610887, 1, 17, 0, 0.267591,0.0948488) , 
0.812517, 0, 1, 0, 0.294018,0.0679734) , 
0.142866, 0, 15, 0, 0.498733,-0.0301156)    );
  // itree = 816
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.668934,-0.000254125) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.533369,-8.18349e-05) , 
0.897585, 1, 11, 0, 0.607744,-0.0743618) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.983296,-0.000893349) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0293635,-0.000243893) , 
0.501058, 1, 1, 0, 0.738752,-0.372928) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.617253,-0.000769557) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.192223,0.000304086) , 
0.242955, 0, 6, 0, 0.204055,0.109914) , 
0.224408, 1, 13, 0, 0.231447,0.0851786) , 
0.635983, 0, 14, 0, 0.487134,-0.0232261)    );
  // itree = 817
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764097,-0.000426889) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.353863,-0.000221721) , 
0.115223, 0, 15, 0, 0.699141,-0.134045) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.784883,-0.000406824) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378877,-0.000101423) , 
1.04674, 1, 11, 0, 0.694299,-0.207129) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.432222,-8.40188e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256204,0.000213183) , 
0.557172, 0, 7, 0, 0.365808,0.0595062) , 
-1.35933, 1, 4, 0, 0.41768,0.0174021) , 
0.129696, 1, 16, 0, 0.480522,-0.0164115)    );
  // itree = 818
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.846471,-0.000670438) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.391188,-0.000296675) , 
0.457072, 0, 2, 0, 0.751251,-0.255482) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.599451,-0.000201572) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388738,-1.67431e-05) , 
-0.619028, 0, 3, 0, 0.551198,-0.0503649) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704829,-0.000661357) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.230492,0.000139919) , 
0.216135, 1, 13, 0, 0.251443,0.114005) , 
0.0908652, 1, 0, 0, 0.462224,-0.0015765) , 
0.598413, 1, 9, 0, 0.481184,-0.0182324)    );
  // itree = 819
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.754204,-0.000422504) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.537039,-3.67422e-05) , 
0.26506, 1, 15, 0, 0.684362,-0.115635) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.846055,-0.000433677) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.325095,2.42789e-06) , 
0.518017, 0, 2, 0, 0.802931,-0.241199) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.836167,-0.00095663) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.347107,3.01303e-05) , 
0.773152, 0, 0, 0, 0.353708,0.0509195) , 
0.0883737, 1, 16, 0, 0.399428,0.0211888) , 
0.767274, 0, 14, 0, 0.485363,-0.0200767)    );
  // itree = 820
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.79053,-0.000732647) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.61321,-0.000235) , 
1.94471, 0, 11, 0, 0.646673,-0.0995301) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.65014,-0.00022237) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.39177,0.000125539) , 
1.64835, 1, 18, 0, 0.561502,-0.0482718) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.439074,-0.000197164) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.243536,0.000214258) , 
0.748015, 1, 10, 0, 0.305713,0.0772852) , 
0.308779, 0, 15, 0, 0.376936,0.0423246) , 
0.175833, 1, 16, 0, 0.462323,-0.00258079)    );
  // itree = 821
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.787053,-0.000478367) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.563269,-0.000277739) , 
0.00684467, 1, 0, 0, 0.710495,-0.146285) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.898341,-0.000785731) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.515241,-0.000411848) , 
0.422187, 0, 16, 0, 0.68075,-0.261174) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69906,-0.000401604) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.380412,1.71655e-05) , 
2.39341, 0, 11, 0, 0.403018,0.0298915) , 
2.8688, 0, 8, 0, 0.418791,0.0133615) , 
0.13294, 1, 16, 0, 0.487684,-0.0243431)    );
  // itree = 822
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717119,-0.000232384) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.413179,1.02197e-06) , 
0.31004, 1, 16, 0, 0.618947,-0.0918921) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.840479,-0.000716765) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.190702,0.0173295) , 
0.0235089, 1, 0, 0, 0.75462,-0.253829) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.633657,-0.000448169) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184959,0.000422765) , 
0.0885238, 1, 16, 0, 0.228835,0.118876) , 
0.610887, 1, 17, 0, 0.278041,0.0839966) , 
0.145351, 0, 15, 0, 0.502039,-0.0315742)    );
  // itree = 823
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.568791,-0.000182387) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.393396,0.000380178) , 
0.357681, 0, 2, 0, 0.54463,-0.0613622) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.864822,-0.000671379) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.121003,0.000208368) , 
2.09594, 0, 10, 0, 0.616113,-0.225015) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.843594,-0.00393579) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.109958,0.000743605) , 
-2.35044, 1, 5, 0, 0.121181,0.20045) , 
0.832294, 0, 3, 0, 0.193579,0.138214) , 
0.530235, 1, 16, 0, 0.510575,-0.0420016)    );
  // itree = 824
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688175,-0.000294349) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318043,0.000119971) , 
0.534764, 0, 13, 0, 0.627625,-0.127523) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.573938,-0.00016614) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.331325,2.80014e-05) , 
0.622624, 0, 13, 0, 0.519149,-0.0285958) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.651657,-0.000536364) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.13735,0.000750285) , 
0.220559, 1, 13, 0, 0.159648,0.138294) , 
0.115713, 0, 15, 0, 0.429652,0.0129516) , 
1.20823, 1, 17, 0, 0.496986,-0.0348264)    );
  // itree = 825
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.733404,-0.000303378) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.493921,-0.000278003) , 
1.64544, 1, 10, 0, 0.688809,-0.124107) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.831549,-0.000493113) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.405229,-0.000102716) , 
0.61125, 1, 17, 0, 0.442883,-0.0232243) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676991,-0.00112377) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167525,0.000574169) , 
1.98222, 0, 7, 0, 0.201915,0.193545) , 
0.553172, 0, 2, 0, 0.379414,0.0338715) , 
0.76822, 0, 14, 0, 0.47332,-0.0140776)    );
  // itree = 826
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741036,-0.000313868) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.12186,0.00203937) , 
0.226058, 0, 7, 0, 0.702608,-0.204098) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.848686,-0.000500661) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.510145,-0.000170983) , 
0.0983263, 0, 6, 0, 0.526169,-0.0224581) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.671098,-0.000125855) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.202084,0.000345085) , 
0.800513, 0, 14, 0, 0.272274,0.110545) , 
0.308606, 1, 16, 0, 0.4242,0.0309586) , 
0.244119, 1, 8, 0, 0.483495,-0.0191035)    );
  // itree = 827
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.929394,-0.00042322) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.632416,-0.000473176) , 
0.773196, 0, 2, 0, 0.791147,-0.211886) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.93674,-0.000757404) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.00630951,-0.000774863) , 
0.262261, 1, 6, 0, 0.821606,-0.460681) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647721,-0.000399774) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.440496,-7.42623e-06) , 
2.54309, 0, 10, 0, 0.464587,-0.0178511) , 
0.250076, 0, 6, 0, 0.472134,-0.0272116) , 
0.0887996, 1, 16, 0, 0.518018,-0.0537734)    );
  // itree = 828
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.756393,-0.000489609) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.329498,4.80435e-06) , 
0.535682, 0, 13, 0, 0.692779,-0.143389) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.781344,-0.000434022) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.33214,-0.000283563) , 
0.504946, 1, 2, 0, 0.633523,-0.162246) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.449278,-9.0805e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.285318,0.000244043) , 
0.545807, 0, 2, 0, 0.386803,0.0518087) , 
2.54313, 0, 10, 0, 0.415406,0.0269927) , 
1.6883, 0, 7, 0, 0.474027,-0.00901668)    );
  // itree = 829
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653661,-0.000219075) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.315413,0.000380763) , 
0.116223, 0, 15, 0, 0.572758,-0.0732978) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.68223,-0.000452005) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0739976,0.00022703) , 
0.61841, 1, 5, 0, 0.592666,-0.178896) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.339456,2.74866e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.12412,0.000667377) , 
2.54615, 0, 9, 0, 0.211723,0.141239) , 
2.39288, 0, 10, 0, 0.281487,0.0826116) , 
0.397825, 1, 16, 0, 0.502582,-0.0357343)    );
  // itree = 830
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755284,-0.000436415) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.45228,-0.000387693) , 
0.498727, 0, 9, 0, 0.698686,-0.193956) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.946206,-0.000804534) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0286879,0.0144562) , 
0.469459, 0, 3, 0, 0.763468,-0.416976) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.641002,-0.000407709) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.38386,2.16754e-05) , 
1.71693, 0, 7, 0, 0.432538,0.0244087) , 
0.236077, 0, 6, 0, 0.439637,0.0149409) , 
1.04727, 1, 9, 0, 0.475557,-0.0140253)    );
  // itree = 831
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.844134,-0.000613179) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0813568,0.00143935) , 
2.11563, 0, 7, 0, 0.824131,-0.255473) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.836131,-0.00044467) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.555418,-0.00030341) , 
2.54315, 0, 9, 0, 0.747029,-0.168028) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.456052,-9.71786e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.280922,0.000580046) , 
2.23852, 1, 18, 0, 0.421969,0.0198768) , 
0.0890868, 1, 16, 0, 0.460037,-0.00212854) , 
0.612718, 1, 17, 0, 0.485208,-0.019643)    );
  // itree = 832
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.566531,-0.000193954) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363756,1.01184e-05) , 
0.48182, 0, 7, 0, 0.51596,-0.0606475) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736924,-0.000484756) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.403009,0.000233967) , 
0.405121, 0, 12, 0, 0.552651,-0.0131464) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.827558,-0.0011477) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.127129,0.00137431) , 
0.520552, 0, 15, 0, 0.172837,0.246264) , 
0.217254, 1, 16, 0, 0.378389,0.105874) , 
0.350417, 0, 2, 0, 0.496794,-0.0374488)    );
  // itree = 833
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.759706,-0.000339753) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.489025,0.000147667) , 
0.357687, 0, 2, 0, 0.682999,-0.11483) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.752499,-0.000522871) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.24222,-0.000207563) , 
0.299321, 0, 11, 0, 0.722913,-0.203772) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.480456,-0.000224564) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.279995,0.000109654) , 
0.598434, 1, 10, 0, 0.326788,0.059985) , 
0.0948241, 1, 16, 0, 0.36011,0.0377975) , 
0.743276, 0, 14, 0, 0.482667,-0.0201343)    );
  // itree = 834
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.675462,-0.000439811) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.547529,-0.000118838) , 
0.52027, 1, 14, 0, 0.557767,-0.0766343) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.951758,-0.0010153) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0189698,0.0406058) , 
0.186832, 1, 0, 0, 0.648034,-0.334802) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.837905,-0.0240291) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0587885,0.00212745) , 
0.0738743, 1, 16, 0, 0.0640539,0.180569) , 
0.217508, 1, 13, 0, 0.103994,0.145322) , 
0.496926, 0, 14, 0, 0.523053,-0.0596545)    );
  // itree = 835
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.902797,-0.00076604) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.569007,-0.000168523) , 
0.23541, 0, 6, 0, 0.580686,-0.09776) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704679,-0.000357232) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0656769,-8.93877e-05) , 
1.72883, 0, 17, 0, 0.675795,-0.115019) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664224,-0.000187651) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.334755,0.000121023) , 
0.149623, 1, 10, 0, 0.36103,0.059715) , 
0.130759, 1, 16, 0, 0.426074,0.0236076) , 
1.49671, 1, 17, 0, 0.507387,-0.0402223)    );
  // itree = 836
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67252,-0.000230767) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.48581,8.85205e-06) , 
1.79222, 1, 18, 0, 0.614037,-0.092487) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.780375,-0.000569321) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.533475,0.000179064) , 
0.897594, 1, 10, 0, 0.65846,-0.148491) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.321316,8.54757e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.115642,0.000263027) , 
0.61783, 1, 4, 0, 0.277645,0.0836953) , 
1.72675, 0, 7, 0, 0.36976,0.0275317) , 
0.172563, 0, 15, 0, 0.503371,-0.0381142)    );
  // itree = 837
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.801028,-0.000411371) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.614779,-0.000361272) , 
0.543904, 0, 2, 0, 0.731002,-0.159683) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.878441,-0.000479302) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.374893,8.21517e-05) , 
0.561468, 0, 8, 0, 0.790016,-0.256528) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.438754,-5.53772e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.107368,0.00430533) , 
0.287506, 0, 2, 0, 0.423746,0.00358622) , 
0.876271, 0, 14, 0, 0.446124,-0.0123061) , 
0.129571, 1, 16, 0, 0.511677,-0.0462191)    );
  // itree = 838
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.648283,-0.000244524) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.428625,8.58374e-05) , 
0.979673, 1, 8, 0, 0.562841,-0.067731) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.932371,-0.000622678) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.553237,-0.00051703) , 
1.10882, 0, 5, 0, 0.783244,-0.238439) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.864696,-0.00138533) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249551,0.000135171) , 
0.329581, 1, 14, 0, 0.264348,0.107821) , 
0.628396, 1, 17, 0, 0.324829,0.0674618) , 
0.61375, 0, 13, 0, 0.495575,-0.0295231)    );
  // itree = 839
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.79357,-0.000403479) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.500378,-4.38842e-05) , 
0.748227, 1, 10, 0, 0.612215,-0.123218) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.7775,-0.000384883) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.123949,0.00154229) , 
0.120172, 0, 15, 0, 0.619124,-0.186663) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.644379,-0.000409454) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.326536,0.000190973) , 
1.69638, 0, 7, 0, 0.400615,0.0466459) , 
0.409159, 1, 13, 0, 0.433696,0.0113243) , 
0.734756, 1, 8, 0, 0.518817,-0.0528278)    );
  // itree = 840
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687284,-0.000204245) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.491927,-5.89628e-05) , 
1.19679, 1, 11, 0, 0.627681,-0.109554) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.973827,-0.00155665) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.131908,0.0487099) , 
0.923691, 1, 17, 0, 0.872707,-0.431173) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.377113,-0.000193526) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.108539,0.00154988) , 
0.697868, 1, 8, 0, 0.225262,0.0897008) , 
3.66418, 0, 8, 0, 0.24867,0.0708685) , 
0.115897, 0, 15, 0, 0.540072,-0.0678489)    );
  // itree = 841
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744445,-0.00044975) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.355644,-0.000293792) , 
1.64551, 1, 10, 0, 0.666976,-0.124744) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.68192,-0.000151739) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.367347,7.63296e-05) , 
0.37155, 1, 4, 0, 0.609988,-0.0917089) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.580743,-0.000359254) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317835,8.96323e-05) , 
2.39341, 0, 10, 0, 0.359233,0.0523568) , 
0.306885, 0, 15, 0, 0.430693,0.0113012) , 
1.68829, 0, 7, 0, 0.4777,-0.0157643)    );
  // itree = 842
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.623857,-0.000195404) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.39064,0.000223759) , 
-1.11429, 0, 5, 0, 0.596401,-0.0781222) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.657763,-0.000448101) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.129524,0.0010855) , 
0.0824561, 0, 15, 0, 0.479,-0.124454) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.777557,-0.000478715) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.151693,0.000732748) , 
-2.10356, 1, 3, 0, 0.173889,0.137378) , 
0.245086, 1, 8, 0, 0.227416,0.0914433) , 
0.116222, 0, 15, 0, 0.508897,-0.03791)    );
  // itree = 843
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.760604,-0.000472145) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.495094,-0.000100946) , 
0.0889828, 1, 16, 0, 0.537615,-0.0553576) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.904904,-0.000305096) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.35221,5.43542e-05) , 
0.0663065, 0, 0, 0, 0.559556,-0.0605444) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.720918,-0.000764933) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.204384,0.00035216) , 
0.526157, 0, 15, 0, 0.22707,0.144189) , 
0.826244, 0, 13, 0, 0.338581,0.0755248) , 
0.4883, 0, 7, 0, 0.483516,-0.0197829)    );
  // itree = 844
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.680641,-0.000244226) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.256497,3.79951e-05) , 
0.396602, 1, 16, 0, 0.593061,-0.108007) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.89265,-0.00162193) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.471385,-0.000336082) , 
0.706383, 1, 14, 0, 0.829902,-0.333443) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.437423,-2.44968e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.218654,4.81925e-05) , 
0.68073, 1, 2, 0, 0.367702,0.0691341) , 
2.10473, 0, 3, 0, 0.38075,0.0577692) , 
0.732504, 1, 8, 0, 0.483785,-0.0226822)    );
  // itree = 845
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.563236,-0.000188578) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.424852,0.000297075) , 
0.357673, 0, 2, 0, 0.542287,-0.0558102) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.6309,-0.000322618) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.108263,0.00129285) , 
0.448794, 0, 11, 0, 0.50092,-0.0822201) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.309655,-0.000455223) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0930753,0.000410685) , 
2.99214, 0, 9, 0, 0.106385,0.207962) , 
0.0461832, 1, 0, 0, 0.193013,0.144247) , 
0.477341, 1, 16, 0, 0.489951,-0.0258333)    );
  // itree = 846
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.87704,-0.000456329) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.627724,-0.00042861) , 
2.69288, 0, 9, 0, 0.772137,-0.196893) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755813,-0.000630792) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.496964,-8.03238e-05) , 
2.86411, 0, 8, 0, 0.511144,-0.0461833) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.600377,-0.00179797) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0515564,0.0108101) , 
0.896367, 0, 1, 0, 0.0691966,0.161718) , 
0.0646928, 0, 15, 0, 0.477338,-0.0302798) , 
0.0864034, 1, 16, 0, 0.514827,-0.051468)    );
  // itree = 847
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.903858,-0.000421983) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.677662,-0.000463123) , 
0.773478, 0, 2, 0, 0.77674,-0.199797) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.532816,-0.000144557) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.408384,-5.40862e-05) , 
0.491237, 0, 1, 0, 0.460676,0.00478587) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.828298,-0.00360392) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.144106,0.00027182) , 
-2.35166, 1, 5, 0, 0.158311,0.173683) , 
0.486738, 1, 16, 0, 0.412538,0.0316749) , 
0.0885641, 1, 16, 0, 0.466904,-0.00287775)    );
  // itree = 848
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.825119,-0.000582194) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.594263,-0.000319472) , 
0.897605, 1, 10, 0, 0.712021,-0.172966) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.630925,-0.000266087) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.214464,-4.35253e-06) , 
1.07967, 0, 17, 0, 0.596816,-0.146577) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.553751,-0.000111804) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191748,0.000644005) , 
0.670676, 0, 14, 0, 0.396716,0.0455194) , 
2.09438, 0, 10, 0, 0.447328,-0.00306894) , 
1.72669, 0, 7, 0, 0.499571,-0.0366018)    );
  // itree = 849
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.635194,-0.000184596) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.310377,0.000244244) , 
0.11583, 0, 15, 0, 0.557122,-0.0751523) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.928105,-0.000913171) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.32093,0.00120145) , 
0.704844, 0, 16, 0, 0.556317,-0.151533) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.0809306,0.000766566) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0572359,0.0255154) , 
0.669301, 1, 14, 0, 0.0767863,0.224332) , 
0.372578, 0, 12, 0, 0.124365,0.187039) , 
0.574377, 1, 16, 0, 0.529847,-0.0586274)    );
  // itree = 850
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.963424,-0.000866948) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0233739,0.0358264) , 
0.252185, 1, 7, 0, 0.880876,-0.509751) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.562638,-0.000143902) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.386062,-0.000113662) , 
0.866632, 1, 3, 0, 0.53402,-0.0592013) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.464828,-0.000422125) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0944686,0.00204353) , 
0.520897, 0, 15, 0, 0.126985,0.196752) , 
0.564731, 1, 16, 0, 0.506929,-0.042166) , 
0.250192, 0, 6, 0, 0.514882,-0.0521101)    );
  // itree = 851
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.965211,-0.000240497) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.646338,-0.000300507) , 
0.439573, 0, 15, 0, 0.710775,-0.181977) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.808316,-0.000647332) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0892264,0.000151535) , 
2.38955, 1, 18, 0, 0.761151,-0.244138) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.508902,-0.000124307) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.322114,0.000150405) , 
0.73876, 1, 8, 0, 0.407912,0.0345631) , 
2.39352, 0, 11, 0, 0.438899,0.0101149) , 
1.05464, 1, 17, 0, 0.517557,-0.0454601)    );
  // itree = 852
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.648186,-0.000206889) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.488833,1.98742e-05) , 
0.455829, 0, 2, 0, 0.606029,-0.0921797) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.87425,-0.000917109) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0226953,0.000421061) , 
1.8906, 0, 17, 0, 0.655193,-0.340975) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.483789,-0.000284838) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.169199,0.000662878) , 
0.299225, 1, 10, 0, 0.215962,0.101149) , 
0.812882, 0, 1, 0, 0.255218,0.0616349) , 
0.116291, 0, 15, 0, 0.520255,-0.0545716)    );
  // itree = 853
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628407,-0.000203441) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.331595,0.000132204) , 
0.14443, 0, 15, 0, 0.525002,-0.0599476) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.830117,-0.000583462) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.525975,-0.000248185) , 
-0.371499, 1, 4, 0, 0.735747,-0.167169) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.657971,-0.000480602) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.205212,0.000408563) , 
1.8956, 0, 7, 0, 0.258254,0.144882) , 
0.123991, 1, 16, 0, 0.378385,0.0663741) , 
-0.619057, 0, 5, 0, 0.486755,-0.0269952)    );
  // itree = 854
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.797361,-0.000464724) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.263755,0.00192513) , 
0.491336, 0, 7, 0, 0.773605,-0.191863) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707608,-0.000208336) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.502635,-6.50074e-06) , 
1.04698, 1, 11, 0, 0.606449,-0.0858412) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.66531,-0.000388293) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.31183,9.74342e-05) , 
0.807645, 0, 14, 0, 0.367973,0.0495104) , 
0.307708, 0, 15, 0, 0.433167,0.012508) , 
0.0887996, 1, 16, 0, 0.482686,-0.0172189)    );
  // itree = 855
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683839,-0.000261676) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.478412,0.000127844) , 
0.985057, 1, 8, 0, 0.593821,-0.0910952) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.840098,-0.0010111) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.294053,0.00137711) , 
0.104772, 1, 12, 0, 0.622614,-0.226841) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.759888,-0.000808077) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.21717,6.40016e-05) , 
0.299898, 1, 10, 0, 0.247131,0.117133) , 
1.19844, 1, 9, 0, 0.297033,0.0714188) , 
0.0404926, 1, 6, 0, 0.517106,-0.0490879)    );
  // itree = 856
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.842347,-0.000619569) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.316199,0.00166571) , 
-0.371374, 0, 5, 0, 0.763288,-0.254899) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.687104,-0.000307148) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0935489,0.000399439) , 
0.0983656, 1, 6, 0, 0.630644,-0.146678) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.554619,-0.000154687) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.240851,0.000149988) , 
0.304085, 1, 16, 0, 0.430236,0.0285793) , 
0.24417, 1, 8, 0, 0.465689,-0.00242414) , 
0.598405, 1, 9, 0, 0.487434,-0.0208719)    );
  // itree = 857
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.845034,-0.000313629) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.565156,-0.000228658) , 
0.439014, 0, 15, 0, 0.59259,-0.0903862) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.78661,-0.00036497) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.390977,-0.000115405) , 
2.84294, 0, 9, 0, 0.493046,-0.128353) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.725415,-0.000476049) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317626,0.000125508) , 
2.3934, 0, 11, 0, 0.355723,0.0865515) , 
0.168133, 1, 12, 0, 0.39816,0.0201393) , 
0.982427, 0, 7, 0, 0.487818,-0.0308278)    );
  // itree = 858
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727362,-0.000288892) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.588833,-0.000154392) , 
0.16343, 0, 0, 0, 0.606323,-0.104462) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.961697,-0.000734702) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.209529,-0.000821922) , 
0.372975, 0, 1, 0, 0.806669,-0.439573) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.678574,-0.000388416) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.219018,0.000459198) , 
0.800104, 0, 14, 0, 0.282789,0.0792537) , 
2.86804, 0, 8, 0, 0.303201,0.0590392) , 
0.39499, 1, 16, 0, 0.534639,-0.0657964)    );
  // itree = 859
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.777931,-0.000494611) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.467804,-0.000185323) , 
0.577472, 0, 13, 0, 0.709285,-0.156851) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718907,-0.000331994) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.431328,1.78042e-05) , 
0.74806, 1, 10, 0, 0.541642,-0.0733668) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.557562,-0.000129837) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.187152,0.00092946) , 
0.308641, 0, 15, 0, 0.331591,0.0842888) , 
0.976368, 1, 8, 0, 0.46009,-0.0121575) , 
1.72673, 0, 7, 0, 0.509304,-0.0407331)    );
  // itree = 860
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.64458,-0.000194996) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.288179,0.000228863) , 
0.118164, 0, 15, 0, 0.560356,-0.0636067) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.642492,-0.000415495) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0590324,0.000122678) , 
0.152189, 0, 12, 0, 0.344835,-0.0399154) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755702,-0.00375106) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138692,0.00036354) , 
-2.35236, 1, 5, 0, 0.145513,0.200135) , 
0.446408, 1, 13, 0, 0.198588,0.136215) , 
0.440736, 1, 16, 0, 0.496366,-0.0282619)    );
  // itree = 861
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.879611,-0.000447992) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.712484,-0.000432762) , 
0.0111851, 0, 6, 0, 0.793483,-0.210973) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.797589,-0.000565431) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253986,0.000309427) , 
2.24095, 1, 18, 0, 0.741614,-0.234735) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.546401,-9.47222e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.332376,3.5297e-05) , 
1.3679, 1, 17, 0, 0.426907,0.0160718) , 
2.24389, 0, 11, 0, 0.460104,-0.0103849) , 
0.0864192, 1, 16, 0, 0.506027,-0.038016)    );
  // itree = 862
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.732174,-0.000245626) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.534816,-9.05484e-05) , 
1.04721, 1, 11, 0, 0.66979,-0.106819) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.840826,-0.000493738) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.403863,-9.81311e-05) , 
0.244668, 0, 12, 0, 0.455402,-0.0992187) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.495091,-0.000317861) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238195,0.000300324) , 
-1.11405, 1, 4, 0, 0.286869,0.0878675) , 
0.479649, 1, 13, 0, 0.337587,0.0315661) , 
0.706898, 0, 14, 0, 0.499481,-0.0358738)    );
  // itree = 863
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.619795,-0.000193122) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.797365,-0.000556388) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.281881,0.000366681) , 
0.803451, 0, 1, 0, 0.322931,0.153895) , 
-1.11424, 0, 5, 0, 0.588316,-0.0707818) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.845629,-0.00133155) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.630422,-0.000736918) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163608,0.000558495) , 
0.610887, 1, 17, 0, 0.199014,0.117473) , 
0.331655, 1, 14, 0, 0.215457,0.100451) , 
0.115897, 0, 15, 0, 0.50043,-0.030421)    );
  // itree = 864
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.830597,-0.000540768) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.492328,-7.78544e-05) , 
1.36125, 1, 4, 0, 0.791015,-0.223035) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.608877,-0.000211954) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.103897,0.000928721) , 
0.092029, 0, 15, 0, 0.546174,-0.0631877) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.525256,-0.000416444) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.299948,0.0002408) , 
0.350699, 1, 13, 0, 0.321004,0.0916941) , 
0.985013, 1, 8, 0, 0.457399,-0.00212445) , 
2.21047, 0, 7, 0, 0.49371,-0.0261682)    );
  // itree = 865
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.768532,-0.000254249) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.437566,-8.80602e-05) , 
0.717279, 0, 14, 0, 0.608931,-0.111264) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.934018,-0.000845294) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0232488,0.0288447) , 
0.200765, 0, 15, 0, 0.813616,-0.46309) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694893,-0.000392651) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.371883,6.22051e-05) , 
1.71926, 0, 7, 0, 0.426575,0.0180771) , 
0.236077, 0, 6, 0, 0.438121,0.00372311) , 
1.34908, 1, 17, 0, 0.511731,-0.04583)    );
  // itree = 866
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.8364,-0.000629511) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160228,-0.000298158) , 
0.0444209, 1, 6, 0, 0.806149,-0.237457) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.910884,-0.000660986) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239614,0.00525188) , 
0.144546, 1, 15, 0, 0.848248,-0.347972) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663906,-0.000305236) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.371311,-6.42336e-07) , 
0.801691, 0, 14, 0, 0.431314,0.0166852) , 
-2.10472, 1, 3, 0, 0.444283,0.00534255) , 
0.615988, 1, 17, 0, 0.469604,-0.0116469)    );
  // itree = 867
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.946766,-0.000240048) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.637277,-0.000297625) , 
0.439631, 0, 15, 0, 0.687926,-0.16433) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.774494,-0.000331063) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.363585,-0.000106814) , 
0.738763, 0, 14, 0, 0.57904,-0.107313) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.482777,-4.91624e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292273,2.9646e-05) , 
0.747988, 1, 10, 0, 0.358378,0.0713319) , 
0.246254, 1, 8, 0, 0.397122,0.039965) , 
1.05464, 1, 17, 0, 0.47789,-0.0167756)    );
  // itree = 868
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.771277,-0.000460306) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.545855,-0.000111487) , 
1.0472, 1, 9, 0, 0.577897,-0.0758393) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.893562,-0.00073739) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186617,0.00136341) , 
0.0813717, 0, 15, 0, 0.555677,-0.219823) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.708136,-0.00229566) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0986956,0.000876341) , 
-2.35237, 1, 5, 0, 0.113502,0.154812) , 
2.6941, 0, 8, 0, 0.166993,0.109491) , 
0.0891881, 0, 15, 0, 0.517454,-0.0485779)    );
  // itree = 869
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707663,-0.000349451) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.460467,-9.45139e-07) , 
0.576611, 0, 13, 0, 0.64821,-0.120012) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.71626,-0.000284646) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.230292,0.00356095) , 
0.986659, 1, 8, 0, 0.565971,-0.104633) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.496698,-0.000159864) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.313573,6.52879e-05) , 
1.48892, 1, 9, 0, 0.357119,0.0632951) , 
2.84239, 0, 9, 0, 0.403039,0.0263731) , 
1.23335, 0, 7, 0, 0.494869,-0.0284557)    );
  // itree = 870
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.773085,-0.000196386) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.542918,-0.000191571) , 
0.308641, 0, 15, 0, 0.607563,-0.0878533) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74744,-0.000396005) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164021,-2.86206e-05) , 
0.631048, 0, 14, 0, 0.516885,-0.0888523) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.585645,-0.000503913) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.214702,0.00039805) , 
0.856445, 0, 1, 0, 0.22813,0.137627) , 
0.948554, 0, 7, 0, 0.317271,0.0677111) , 
0.309515, 1, 16, 0, 0.496766,-0.0284786)    );
  // itree = 871
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.665266,-0.000227158) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.447804,0.000294788) , 
0.357682, 0, 2, 0, 0.622248,-0.0789635) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.911095,-0.000878025) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.022931,0.0490302) , 
0.123659, 0, 12, 0, 0.678709,-0.323841) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.521794,-0.000378826) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211002,0.000323015) , 
0.299296, 1, 10, 0, 0.250933,0.0758283) , 
0.238597, 1, 13, 0, 0.276089,0.0523251) , 
0.644627, 0, 14, 0, 0.499762,-0.0325079)    );
  // itree = 872
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.667654,-0.000300801) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.407766,1.72998e-05) , 
2.39368, 0, 9, 0, 0.555466,-0.0809651) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.779392,-0.000530222) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.141247,3.84056e-05) , 
2.11419, 0, 7, 0, 0.733315,-0.161945) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.527838,-0.000123579) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.216164,0.000810231) , 
0.305849, 0, 15, 0, 0.33174,0.0835828) , 
1.9622, 0, 7, 0, 0.413193,0.0337815) , 
0.985008, 1, 8, 0, 0.494605,-0.0318793)    );
  // itree = 873
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663058,-0.000203238) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.243003,0.000809077) , 
0.0891881, 0, 15, 0, 0.610308,-0.0964817) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.860927,-0.000740889) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.282311,-3.99557e-05) , 
0.213762, 1, 15, 0, 0.668937,-0.159522) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.412375,-0.000326705) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164722,0.000697679) , 
0.922795, 0, 7, 0, 0.235556,0.117239) , 
0.804853, 0, 14, 0, 0.29247,0.0808926) , 
0.352592, 1, 16, 0, 0.515625,-0.0436424)    );
  // itree = 874
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.61668,-0.000191996) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689888,-0.000445752) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.384428,0.000397127) , 
0.877209, 0, 14, 0, 0.475837,0.0417324) , 
0.413118, 0, 2, 0, 0.58459,-0.0690724) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.831704,-0.00149842) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.84026,-0.00133028) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211097,0.000326772) , 
3.61591, 0, 8, 0, 0.235409,0.085075) , 
0.321626, 1, 14, 0, 0.249679,0.0700361) , 
0.116799, 0, 15, 0, 0.498495,-0.033312)    );
  // itree = 875
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755998,-0.00018449) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.528789,-0.000160537) , 
0.305705, 0, 15, 0, 0.59528,-0.0802786) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.750395,-0.000614397) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.264075,0.0144732) , 
0.959716, 0, 7, 0, 0.573461,-0.195833) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.540426,-0.000750504) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234634,0.000228045) , 
0.242955, 0, 6, 0, 0.246524,0.116113) , 
2.20624, 0, 8, 0, 0.291272,0.0734168) , 
0.353659, 1, 16, 0, 0.504641,-0.0344548)    );
  // itree = 876
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.728537,-0.000297109) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.091793,0.00037121) , 
0.0983656, 1, 6, 0, 0.682799,-0.193279) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.825661,-0.000442428) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.580958,-0.000445805) , 
-0.37152, 0, 4, 0, 0.778604,-0.193076) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.813637,-0.000831688) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.386302,-9.31815e-06) , 
0.232818, 0, 6, 0, 0.394464,0.0435276) , 
0.0872057, 1, 16, 0, 0.451427,0.00844226) , 
0.246311, 1, 8, 0, 0.494133,-0.0287902)    );
  // itree = 877
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682728,-0.000235522) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.330904,0.000121858) , 
0.961708, 1, 8, 0, 0.563902,-0.12381) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736226,-0.000452762) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.493699,0.000198385) , 
0.274322, 0, 2, 0, 0.670093,-0.103907) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741973,-0.000448647) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.33077,3.99627e-05) , 
2.54256, 0, 11, 0, 0.360403,0.0772951) , 
0.815727, 0, 14, 0, 0.443671,0.0285742) , 
0.727899, 0, 2, 0, 0.490982,-0.0313894)    );
  // itree = 878
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.793787,-0.000413717) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.534688,-0.000134957) , 
0.448811, 1, 11, 0, 0.590577,-0.101662) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.689119,-0.000418596) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.317232,-0.000248683) , 
0.351646, 1, 15, 0, 0.671667,-0.131152) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.51662,-0.00017422) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257383,0.00026019) , 
-0.866479, 1, 4, 0, 0.328247,0.0830326) , 
1.71925, 0, 7, 0, 0.415044,0.0288992) , 
0.73876, 1, 8, 0, 0.49669,-0.0318291)    );
  // itree = 879
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664611,-0.0002107) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318133,0.000240624) , 
0.116223, 0, 15, 0, 0.589411,-0.0750676) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.643226,-0.000455779) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.16168,-0.000361418) , 
0.366028, 0, 8, 0, 0.585389,-0.179688) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731812,-0.000990909) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211295,0.000328169) , 
0.772355, 0, 0, 0, 0.22098,0.129103) , 
2.3935, 0, 10, 0, 0.285701,0.0742608) , 
0.35259, 1, 16, 0, 0.497096,-0.0296784)    );
  // itree = 880
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.851992,-0.000590256) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.523083,-0.000598306) , 
0.472848, 0, 17, 0, 0.810926,-0.240448) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.855401,-0.000716866) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.538614,-0.00012926) , 
0.22107, 1, 13, 0, 0.552071,-0.0654623) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.912349,-0.000930372) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.364476,-4.26915e-05) , 
0.792807, 0, 16, 0, 0.371681,0.0567829) , 
1.93654, 0, 17, 0, 0.432076,0.015855) , 
0.614281, 1, 17, 0, 0.45953,-0.00271863)    );
  // itree = 881
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.612844,-0.000300469) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.487363,-9.27665e-05) , 
2.09432, 0, 10, 0, 0.515191,-0.0596201) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.952169,-0.00348785) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.059327,-0.00302631) , 
0.0893926, 1, 16, 0, 0.925246,-0.34582) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688742,-0.000682446) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.181949,0.00072614) , 
0.966676, 0, 13, 0, 0.214053,0.258651) , 
2.20762, 0, 7, 0, 0.263396,0.216712) , 
0.257607, 0, 2, 0, 0.503828,-0.0471489)    );
  // itree = 882
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.845564,-0.000611697) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.291386,0.00182886) , 
2.39239, 1, 10, 0, 0.815868,-0.248348) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.604365,-0.000328329) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.469388,-7.43111e-05) , 
2.09436, 0, 10, 0, 0.500312,-0.0340728) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.456454,5.88449e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.155496,0.000375202) , 
0.305958, 0, 12, 0, 0.278064,0.131806) , 
2.24128, 1, 18, 0, 0.460371,-0.00426175) , 
0.612152, 1, 17, 0, 0.485318,-0.0213906)    );
  // itree = 883
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.918072,-0.000415692) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.626337,-0.000466749) , 
0.771764, 0, 2, 0, 0.779983,-0.190463) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701941,-0.000203199) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.396132,-9.00232e-05) , 
0.307426, 0, 15, 0, 0.490282,-0.0290021) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.804358,-0.000603193) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.230786,0.000195453) , 
0.877864, 0, 14, 0, 0.272704,0.139404) , 
1.79473, 1, 18, 0, 0.415738,0.0286956) , 
0.0890126, 1, 16, 0, 0.471961,-0.00513312)    );
  // itree = 884
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.867722,-0.000285113) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.584212,-0.000234927) , 
0.46647, 0, 15, 0, 0.601001,-0.0919966) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.846337,-0.000470608) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.447613,6.11093e-05) , 
0.611219, 1, 10, 0, 0.537403,-0.0891097) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.455498,-0.0002644) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211452,0.00016913) , 
1.64556, 1, 9, 0, 0.27304,0.123887) , 
0.492506, 1, 8, 0, 0.370999,0.0449614) , 
0.986676, 0, 7, 0, 0.479917,-0.0198955)    );
  // itree = 885
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735726,-0.000369329) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.533589,-0.000126911) , 
1.20331, 1, 17, 0, 0.613905,-0.0972992) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.792256,-0.000581501) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0389061,-0.000383217) , 
0.681547, 1, 2, 0, 0.640459,-0.202245) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.427972,-0.000138565) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.252653,0.000116481) , 
1.85937, 0, 10, 0, 0.322604,0.0790747) , 
0.449354, 1, 10, 0, 0.348777,0.0559101) , 
0.0196731, 1, 6, 0, 0.491099,-0.0263339)    );
  // itree = 886
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688665,-0.00019964) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.451885,-1.01826e-05) , 
-0.619155, 0, 5, 0, 0.641192,-0.110804) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.711882,-0.000466479) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.262929,0.000110558) , 
1.19685, 1, 10, 0, 0.552286,-0.114256) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.633859,-0.000788402) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.170804,0.000511953) , 
0.221231, 1, 13, 0, 0.187813,0.134799) , 
1.05464, 1, 17, 0, 0.296388,0.0606068) , 
0.143039, 0, 15, 0, 0.528555,-0.054809)    );
  // itree = 887
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686586,-0.000277347) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143954,0.000381394) , 
0.573846, 0, 14, 0, 0.624071,-0.104536) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709367,-0.000524828) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0444187,-0.000190771) , 
2.38344, 1, 18, 0, 0.650601,-0.202012) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.776115,-0.000765112) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.354029,0.000116158) , 
0.242955, 0, 6, 0, 0.367609,0.0501727) , 
2.54317, 0, 10, 0, 0.399752,0.0215287) , 
0.981101, 0, 7, 0, 0.506426,-0.0384206)    );
  // itree = 888
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.604475,-0.000221211) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.399333,-2.06656e-06) , 
1.79171, 1, 18, 0, 0.539149,-0.0851194) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69276,-0.000420722) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.456555,0.000287732) , 
0.276375, 1, 15, 0, 0.629278,-0.0678941) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.451159,-0.000154066) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174175,0.000977136) , 
0.960476, 0, 7, 0, 0.281995,0.138198) , 
0.788945, 0, 14, 0, 0.437587,0.0458628) , 
0.541196, 0, 2, 0, 0.501926,-0.0371127)    );
  // itree = 889
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.604657,-0.000184872) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.10598,0.000511876) , 
0.503823, 0, 14, 0, 0.571365,-0.0826638) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.871367,-0.00099154) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.142258,0.00283746) , 
0.196603, 1, 12, 0, 0.667872,-0.221678) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.42507,-0.000175925) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.215864,0.000492348) , 
0.747831, 1, 10, 0, 0.286085,0.113958) , 
0.59968, 1, 9, 0, 0.306425,0.0960763) , 
0.491328, 0, 7, 0, 0.50549,-0.0382216)    );
  // itree = 890
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.908309,-0.000530854) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.565823,-0.000717946) , 
0.527048, 0, 17, 0, 0.84019,-0.253779) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628043,-0.000162607) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.412749,-8.39543e-05) , 
2.09439, 0, 9, 0, 0.566498,-0.0601845) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.604692,-0.000472947) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194537,0.000681186) , 
2.67741, 0, 8, 0, 0.236556,0.0720634) , 
0.115759, 0, 15, 0, 0.482356,-0.0264586) , 
0.611224, 1, 17, 0, 0.50801,-0.0427557)    );
  // itree = 891
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.703429,-0.000217382) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.445371,-5.75223e-05) , 
0.149734, 0, 15, 0, 0.670849,-0.104957) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.640898,-0.000403042) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.341606,-2.35636e-05) , 
0.480293, 1, 13, 0, 0.510321,-0.106852) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.597979,-0.000311642) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257532,0.000303427) , 
0.457081, 1, 18, 0, 0.307831,0.0660653) , 
2.09442, 0, 10, 0, 0.360792,0.020839) , 
0.708187, 0, 14, 0, 0.50884,-0.0392267)    );
  // itree = 892
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.84682,-0.000619815) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.155614,-4.96361e-05) , 
2.24001, 1, 18, 0, 0.787434,-0.278098) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.772923,-0.000264415) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.505078,-0.00017245) , 
0.438991, 0, 15, 0, 0.531721,-0.0401216) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.475772,-5.76689e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.180457,0.000244691) , 
0.199563, 0, 15, 0, 0.328147,0.0787536) , 
0.735837, 0, 7, 0, 0.447372,0.00913344) , 
2.54308, 0, 11, 0, 0.470146,-0.0101031)    );
  // itree = 893
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.85486,-0.000460358) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.652241,-0.000392004) , 
2.24629, 0, 18, 0, 0.737039,-0.175341) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.481187,-0.000126085) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.261323,0.000676296) , 
2.24128, 1, 18, 0, 0.441328,0.00435217) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.643275,-0.00226156) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.14715,0.000247142) , 
0.523636, 0, 15, 0, 0.167319,0.212383) , 
0.163738, 0, 7, 0, 0.416743,0.0230176) , 
1.71925, 0, 7, 0, 0.490662,-0.0227603)    );
  // itree = 894
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.63041,-0.000250673) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.135384,1.27487e-05) , 
0.393584, 0, 13, 0, 0.604221,-0.0988893) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.499035,-0.000228089) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.430069,-6.13288e-05) , 
0.572472, 1, 14, 0, 0.455976,-0.0390818) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.635815,-0.00125769) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229924,0.000298821) , 
-2.35253, 1, 5, 0, 0.248722,0.146128) , 
1.7929, 1, 18, 0, 0.384086,0.0251626) , 
0.964747, 0, 7, 0, 0.490487,-0.0347972)    );
  // itree = 895
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746882,-0.000483569) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.219589,-0.000271589) , 
0.399388, 0, 13, 0, 0.715718,-0.159073) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.660995,-0.000206863) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.420339,1.481e-05) , 
1.12735, 1, 17, 0, 0.474131,-0.0313771) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.45024,-5.79715e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.116324,-0.000104502) , 
0.176376, 0, 12, 0, 0.354414,0.134442) , 
1.40344, 1, 7, 0, 0.460257,-0.0121596) , 
1.96486, 0, 7, 0, 0.493654,-0.031366)    );
  // itree = 896
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.675891,-0.00040931) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.266789,-0.000225066) , 
0.0239388, 1, 6, 0, 0.641827,-0.0830169) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.57077,-0.000157228) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378539,-3.59297e-05) , 
0.127415, 1, 4, 0, 0.501826,-0.00227021) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.524365,-5.58021e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.175151,0.000202725) , 
1.19906, 0, 3, 0, 0.222471,0.122419) , 
0.173628, 0, 15, 0, 0.369748,0.0566828) , 
0.132973, 1, 16, 0, 0.42744,0.0270604)    );
  // itree = 897
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.799945,-0.000439812) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.48744,-0.00034647) , 
0.139381, 0, 15, 0, 0.687667,-0.138978) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.640471,-0.000268626) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.335686,0.000111521) , 
0.878928, 1, 13, 0, 0.561259,-0.109028) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.601468,-0.000340343) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.340632,8.17773e-05) , 
2.41494, 0, 10, 0, 0.387428,0.0413442) , 
0.598416, 1, 10, 0, 0.430312,0.00424827) , 
1.70905, 0, 7, 0, 0.480021,-0.0234164)    );
  // itree = 898
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.794468,-0.000418071) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.488431,-0.000103338) , 
0.598511, 1, 10, 0, 0.570823,-0.0864352) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.837726,-0.000499864) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.471506,-0.000241882) , 
0.168958, 0, 15, 0, 0.689883,-0.140346) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.550099,-0.000108182) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.24494,0.00037322) , 
0.280999, 0, 15, 0, 0.359348,0.0652624) , 
1.9622, 0, 7, 0, 0.418289,0.0285983) , 
0.738757, 1, 8, 0, 0.48758,-0.023658)    );
  // itree = 899
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645958,-0.000190788) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.364696,0.000207964) , 
-1.11424, 0, 5, 0, 0.616539,-0.0927745) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.883824,-0.00081487) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198219,-0.000312797) , 
0.0142168, 1, 6, 0, 0.779148,-0.25282) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.299866,4.19265e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.133117,0.00130453) , 
0.500382, 0, 2, 0, 0.255627,0.0867407) , 
0.61224, 1, 17, 0, 0.30847,0.0524665) , 
0.14466, 0, 15, 0, 0.509062,-0.0421039)    );
  // itree = 900
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.69275,-0.000232302) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.408598,-3.52451e-05) , 
0.456857, 0, 2, 0, 0.640093,-0.145933) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.723555,-0.000470651) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.438545,-0.000127525) , 
0.444244, 1, 18, 0, 0.56067,-0.0948396) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.617935,-0.000377246) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.302621,0.000214239) , 
1.71925, 0, 7, 0, 0.362028,0.0679226) , 
-1.1143, 1, 4, 0, 0.403921,0.0335961) , 
0.738804, 1, 8, 0, 0.523393,-0.0572219)    );
  // itree = 901
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.878751,-0.00035505) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.52057,-8.57217e-05) , 
0.332722, 0, 12, 0, 0.554967,-0.116441) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764129,-0.000503872) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.494945,-0.000158322) , 
0.468817, 0, 15, 0, 0.514881,-0.013676) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746177,-0.000818027) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.18453,0.000112593) , 
0.149647, 1, 11, 0, 0.204204,0.161209) , 
0.0884162, 1, 0, 0, 0.438307,0.0294282) , 
0.767974, 0, 2, 0, 0.476592,-0.0184422)    );
  // itree = 902
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.780761,-0.000637194) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.136825,0.00032075) , 
2.39073, 1, 18, 0, 0.722229,-0.225188) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.621627,-0.000301353) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.379265,0.000321061) , 
0.974953, 1, 8, 0, 0.524495,-0.0542717) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.502644,-0.000156255) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.287877,0.00014462) , 
1.20126, 1, 17, 0, 0.35795,0.0792254) , 
2.39435, 0, 9, 0, 0.44956,0.00579418) , 
2.39352, 0, 11, 0, 0.468902,-0.0105908)    );
  // itree = 903
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.549286,-0.000182397) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.505401,8.28422e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.219576,0.000398831) , 
-0.866484, 0, 3, 0, 0.465221,0.0249546) , 
0.443213, 0, 2, 0, 0.52745,-0.0525767) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.93406,-0.00445271) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.212029,0.000165395) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0646861,0.00244461) , 
0.68343, 0, 2, 0, 0.139017,0.169144) , 
-2.35059, 1, 5, 0, 0.173063,0.137932) , 
0.57035, 1, 16, 0, 0.502176,-0.0389901)    );
  // itree = 904
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.768445,-0.000306271) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.372181,-6.08589e-05) , 
0.643027, 0, 14, 0, 0.685105,-0.147867) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.725986,-0.000305416) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.225549,0.00165431) , 
0.985351, 1, 8, 0, 0.586629,-0.126301) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.440629,-0.000149718) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.302406,0.000276865) , 
1.88777, 0, 10, 0, 0.357013,0.0529135) , 
0.748022, 1, 10, 0, 0.438122,-0.0103922) , 
1.23335, 0, 7, 0, 0.532252,-0.0627866)    );
  // itree = 905
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.733056,-0.000390616) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.263601,0.000562439) , 
0.227884, 0, 2, 0, 0.718773,-0.149362) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704642,-0.000350451) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.268225,0.000568314) , 
0.319347, 0, 2, 0, 0.609421,-0.0580104) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.523401,-0.00013864) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.237087,0.000118577) , 
0.360228, 0, 15, 0, 0.292923,0.103925) , 
0.769414, 0, 14, 0, 0.364998,0.0670483) , 
0.132943, 1, 16, 0, 0.454888,0.0120612)    );
  // itree = 906
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.746203,-0.00026866) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.447251,-0.00058595) , 
0.781793, 1, 14, 0, 0.715168,-0.179548) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.647762,-0.000204821) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.338946,0.000136874) , 
0.145366, 0, 15, 0, 0.551586,-0.0758638) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.753755,-0.000372147) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.301865,0.000333261) , 
1.96494, 0, 7, 0, 0.363876,0.0527121) , 
0.985008, 1, 8, 0, 0.476182,-0.0242142) , 
0.906163, 1, 17, 0, 0.518893,-0.0519747)    );
  // itree = 907
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663391,-0.0002585) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.327797,-0.000108382) , 
0.115688, 0, 15, 0, 0.574574,-0.0671546) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769141,-0.000459797) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160589,0.000564739) , 
0.257621, 0, 2, 0, 0.654244,-0.114737) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.90446,-0.00100792) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.280515,8.28459e-05) , 
0.785113, 0, 0, 0, 0.292485,0.092522) , 
0.809109, 0, 14, 0, 0.363527,0.0518206) , 
0.969354, 0, 7, 0, 0.462972,-0.00424056)    );
  // itree = 908
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.871524,-0.00055327) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.564967,-0.000345589) , 
0.414766, 0, 2, 0, 0.810839,-0.278679) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.838045,-0.000576389) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.594729,-0.000199105) , 
0.609871, 1, 17, 0, 0.641295,-0.111368) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.468836,-0.000104566) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.27339,0.000193052) , 
1.04694, 1, 10, 0, 0.368372,0.0474368) , 
1.21071, 0, 7, 0, 0.473178,-0.0135464) , 
2.54308, 0, 11, 0, 0.495234,-0.0308645)    );
  // itree = 909
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74522,-0.000503389) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.518238,-0.000104649) , 
2.24392, 0, 11, 0, 0.539446,-0.0570527) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664212,-0.00557784) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0885277,-0.000855842) , 
0.927122, 0, 2, 0, 0.278324,0.0055718) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.0874073,0.0321213) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0369914,0.00172057) , 
0.40686, 1, 1, 0, 0.0475942,0.186525) , 
1.35476, 0, 3, 0, 0.0609902,0.176019) , 
0.497618, 0, 14, 0, 0.503342,-0.0394654)    );
  // itree = 910
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.789177,-0.000183152) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.430227,0.000522703) , 
2.24404, 0, 9, 0, 0.671359,-0.168499) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.785498,-0.000403564) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.514568,-0.000313182) , 
0.13411, 0, 15, 0, 0.71785,-0.145185) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.442583,3.17409e-06) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.281547,-4.45589e-05) , 
-0.373847, 0, 4, 0, 0.391931,0.0237011) , 
0.132542, 1, 16, 0, 0.476604,-0.0201751) , 
0.386965, 0, 15, 0, 0.50712,-0.0434163)    );
  // itree = 911
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.750966,-0.000424077) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.437807,-6.28359e-05) , 
0.801401, 0, 14, 0, 0.495802,-0.0323772) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.934208,-0.00288566) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0245159,0.0824379) , 
0.863428, 1, 13, 0, 0.805992,-0.273766) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.862559,-0.00332489) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.198499,0.000680056) , 
0.517649, 0, 15, 0, 0.214468,0.251221) , 
0.160357, 1, 18, 0, 0.261207,0.20974) , 
0.265929, 0, 2, 0, 0.483573,-0.0197553)    );
  // itree = 912
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.89406,-0.000392966) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.713553,-0.000475809) , 
0.909778, 0, 2, 0, 0.770187,-0.199305) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.60406,-0.000147772) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.253541,-2.68658e-05) , 
0.299187, 0, 11, 0, 0.557832,-0.055216) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.628993,-0.000341583) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270311,4.77988e-05) , 
-1.35754, 1, 4, 0, 0.310135,0.0816152) , 
0.0194905, 1, 6, 0, 0.435164,0.0125478) , 
1.95166, 0, 7, 0, 0.489426,-0.0217653)    );
  // itree = 913
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.685293,-0.000209098) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.392328,-5.85813e-06) , 
0.708182, 0, 14, 0, 0.552224,-0.0585251) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.818931,-0.000368172) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.110428,0.00279056) , 
0.226859, 0, 15, 0, 0.574013,-0.121731) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677316,-0.00109827) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.141537,0.000221728) , 
2.8418, 0, 11, 0, 0.153748,0.178749) , 
-1.14455, 1, 4, 0, 0.211583,0.137398) , 
0.441946, 1, 16, 0, 0.490095,-0.0227911)    );
  // itree = 914
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.581248,-0.000177048) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.43329,-0.000155505) , 
0.830903, 1, 13, 0, 0.542556,-0.0434779) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.926077,-0.000812642) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0316211,0.00847673) , 
0.757497, 0, 5, 0, 0.714682,-0.3867) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.805984,-0.0010614) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.239595,0.000105473) , 
2.69204, 0, 11, 0, 0.254368,0.103253) , 
0.245114, 0, 6, 0, 0.274532,0.0817899) , 
0.090959, 1, 0, 0, 0.464907,-0.00718686)    );
  // itree = 915
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.583285,-0.000223866) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318353,-5.91485e-06) , 
1.79255, 1, 18, 0, 0.505403,-0.0619194) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.895463,-0.000589534) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.176907,4.40625e-05) , 
0.313334, 1, 16, 0, 0.67408,-0.194198) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556864,-0.000332789) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.295703,0.000160812) , 
1.23337, 0, 7, 0, 0.371815,0.103945) , 
0.46855, 0, 15, 0, 0.388265,0.0877193) , 
0.546515, 0, 2, 0, 0.462222,-0.00675711)    );
  // itree = 916
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744908,-0.000399643) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.311891,-0.000568679) , 
2.992, 1, 9, 0, 0.727432,-0.176261) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736904,-0.000209453) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.449447,-9.24417e-05) , 
0.414142, 0, 15, 0, 0.498371,-0.0473718) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.511156,-0.000161472) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.281446,0.000115037) , 
2.24383, 0, 10, 0, 0.324479,0.0968243) , 
1.49007, 1, 17, 0, 0.413348,0.0231311) , 
1.72669, 0, 7, 0, 0.484865,-0.0222703)    );
  // itree = 917
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701645,-0.000296641) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.432912,0.000111518) , 
1.04725, 1, 11, 0, 0.599754,-0.11449) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.731577,-0.000335945) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.185726,5.61423e-05) , 
2.09326, 0, 10, 0, 0.565111,-0.16941) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.398709,-1.11035e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.138967,7.51622e-05) , 
0.773235, 1, 2, 0, 0.349169,0.0898184) , 
0.361001, 1, 13, 0, 0.371878,0.0625573) , 
0.738757, 1, 8, 0, 0.481565,-0.0226636)    );
  // itree = 918
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.798752,-0.000393386) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.123126,0.00289698) , 
0.240939, 1, 16, 0, 0.760127,-0.203194) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.830857,-0.000509565) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.515788,-0.000115733) , 
2.54315, 0, 11, 0, 0.537626,-0.0295011) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.863569,-0.00135694) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.163744,0.000382377) , 
3.61029, 0, 8, 0, 0.188383,0.122067) , 
0.117277, 0, 15, 0, 0.448921,0.00899594) , 
2.38219, 0, 17, 0, 0.484252,-0.0150938)    );
  // itree = 919
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.846327,-0.000419739) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.511684,-0.000157906) , 
0.296154, 0, 1, 0, 0.717112,-0.141668) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.59774,-0.000174175) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.238175,0.000246646) , 
0.118453, 0, 15, 0, 0.49408,-0.0470702) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.626031,-0.000414023) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229662,0.000261024) , 
1.87012, 0, 7, 0, 0.287525,0.121152) , 
1.7929, 1, 18, 0, 0.424154,0.00987878) , 
0.80651, 0, 14, 0, 0.48898,-0.0236556)    );
  // itree = 920
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.667536,-0.00021207) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.467213,0.000104654) , 
0.45783, 0, 2, 0, 0.619913,-0.105508) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.645467,-0.000368256) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.37555,0.00019705) , 
0.36966, 1, 8, 0, 0.454691,-0.0110906) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.401683,-0.00124526) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0726622,0.00032838) , 
0.89961, 0, 1, 0, 0.0815154,0.177169) , 
0.143583, 0, 15, 0, 0.313438,0.0601687) , 
0.353683, 1, 16, 0, 0.529943,-0.0568709)    );
  // itree = 921
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.878283,-0.0002965) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.181937,0.00188747) , 
0.259031, 0, 12, 0, 0.701333,-0.216742) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702421,-0.000373497) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.440983,-7.04829e-05) , 
0.133259, 1, 16, 0, 0.503952,-0.0200274) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.505543,-0.0018325) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0844095,0.00232372) , 
0.896447, 0, 1, 0, 0.10099,0.148422) , 
0.0739511, 0, 15, 0, 0.4589,-0.00119462) , 
0.471269, 0, 15, 0, 0.475972,-0.0163734)    );
  // itree = 922
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.683476,-0.000358044) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.206586,0.000513332) , 
0.586285, 0, 14, 0, 0.605363,-0.126521) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.837827,-0.000481319) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.479103,-0.000121351) , 
2.14412, 1, 10, 0, 0.567186,-0.116983) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.477268,-0.000158309) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.334734,2.32048e-05) , 
2.69407, 0, 9, 0, 0.385615,0.0614376) , 
2.0942, 0, 10, 0, 0.429758,0.0180611) , 
-0.866647, 1, 4, 0, 0.476328,-0.0202823)    );
  // itree = 923
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.561023,-0.000166327) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.270815,-0.000141631) , 
-1.36153, 0, 3, 0, 0.545171,-0.0630212) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.783504,-0.000351615) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.305643,-4.55368e-05) , 
0.778107, 0, 14, 0, 0.447272,-0.0199806) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.480056,-0.000337857) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159313,0.00128505) , 
0.421054, 0, 7, 0, 0.222371,0.157566) , 
2.39374, 0, 9, 0, 0.341972,0.0631479) , 
0.491214, 0, 7, 0, 0.489931,-0.0287221)    );
  // itree = 924
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.752724,-0.000281896) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744446,-0.000422816) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.343515,8.56813e-05) , 
2.99201, 0, 9, 0, 0.394896,-0.00633545) , 
0.707108, 0, 14, 0, 0.607972,-0.110552) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.880975,-0.00121791) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.652884,-0.00054854) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.381084,2.58187e-05) , 
2.83405, 0, 8, 0, 0.406918,0.0314801) , 
0.232818, 0, 6, 0, 0.414655,0.0224407) , 
0.73476, 1, 8, 0, 0.506103,-0.0404711)    );
  // itree = 925
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.786824,-0.000478121) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.386407,3.88466e-05) , 
0.535259, 0, 13, 0, 0.727892,-0.16996) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.808411,-0.000427096) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.463704,4.68142e-05) , 
0.722188, 1, 10, 0, 0.581044,-0.107052) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.502393,-4.60607e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.210811,0.000116734) , 
0.0202463, 1, 6, 0, 0.375461,0.0573567) , 
0.492509, 1, 8, 0, 0.444966,0.00177188) , 
1.71693, 0, 7, 0, 0.505278,-0.0348366)    );
  // itree = 926
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.673367,-0.000241963) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.254435,0.00062802) , 
0.571909, 0, 14, 0, 0.61497,-0.106457) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.778079,-0.000208511) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.458634,0.000149759) , 
0.524275, 0, 1, 0, 0.550015,-0.0613236) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.6142,-0.000462942) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.177379,0.00013079) , 
2.24272, 0, 11, 0, 0.206565,0.152379) , 
0.0454326, 1, 0, 0, 0.371938,0.0494802) , 
0.740007, 0, 7, 0, 0.521441,-0.0464453)    );
  // itree = 927
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.61905,-0.000224469) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.496664,-0.000178961) , 
0.197049, 1, 15, 0, 0.574238,-0.0575742) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.918613,-0.000811864) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0174118,0.00719097) , 
0.74827, 0, 5, 0, 0.691498,-0.37187) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.44704,-0.000104898) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.167535,0.000163323) , 
0.968504, 0, 7, 0, 0.276578,0.113724) , 
0.247515, 0, 6, 0, 0.28923,0.0989172) , 
0.0461831, 1, 0, 0, 0.448105,0.0116829)    );
  // itree = 928
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.769485,-0.000404185) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.433487,-0.000176756) , 
0.115497, 0, 15, 0, 0.717286,-0.142251) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.705127,-0.000352889) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.161235,0.0100365) , 
3.00722, 1, 9, 0, 0.587279,-0.145211) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.764898,-0.000387864) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.367851,7.74016e-06) , 
2.23901, 0, 7, 0, 0.388136,0.043887) , 
0.299216, 1, 10, 0, 0.411511,0.0216913) , 
0.130557, 1, 16, 0, 0.481678,-0.015929)    );
  // itree = 929
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692906,-0.000250562) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.531703,-7.87836e-05) , 
0.976675, 1, 8, 0, 0.638363,-0.075748) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.847441,-0.000743406) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.277596,-0.000282188) , 
0.374557, 0, 3, 0, 0.69648,-0.237887) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.591754,-0.000594614) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.25234,0.000151023) , 
2.86957, 0, 8, 0, 0.273068,0.0859582) , 
0.598653, 1, 9, 0, 0.30086,0.0647018) , 
0.697055, 0, 14, 0, 0.470287,-0.00580433)    );
  // itree = 930
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.763062,-0.000270224) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.577038,-0.000271505) , 
0.618958, 0, 5, 0, 0.659327,-0.127794) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.658558,-0.000500306) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.403864,-4.19305e-05) , 
2.54313, 0, 10, 0, 0.43225,0.00844855) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.556351,-7.13804e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160373,0.000963481) , 
-0.906271, 1, 3, 0, 0.17874,0.200641) , 
2.24145, 1, 18, 0, 0.38428,0.0448156) , 
1.23334, 0, 7, 0, 0.490548,-0.0218739)    );
  // itree = 931
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.694632,-0.000212763) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.535205,-0.000114981) , 
1.5052, 1, 17, 0, 0.623835,-0.0794477) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.803508,-0.000986258) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259114,0.000128397) , 
0.790039, 0, 1, 0, 0.28257,0.0373759) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.919686,-0.0259233) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.055531,0.000545557) , 
2.94663, 0, 18, 0, 0.0600637,0.23076) , 
0.869551, 1, 2, 0, 0.24095,0.0735489) , 
0.641403, 0, 14, 0, 0.496883,-0.0287189)    );
  // itree = 932
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.609094,-0.000193372) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.502418,4.19449e-06) , 
0.536008, 0, 2, 0, 0.569334,-0.0818852) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.848352,-0.000605609) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0315536,0.035561) , 
0.378159, 0, 7, 0, 0.646397,-0.253595) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.538187,-0.0007617) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.130823,0.00046679) , 
0.233886, 0, 6, 0, 0.164516,0.159211) , 
-0.865753, 1, 3, 0, 0.222101,0.109881) , 
0.48609, 1, 16, 0, 0.523249,-0.0564335)    );
  // itree = 933
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.727667,-0.000314456) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.76843,-0.00072671) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.388223,0.000400069) , 
0.748833, 1, 9, 0, 0.46769,0.0610701) , 
0.26491, 0, 1, 0, 0.659006,-0.0868071) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.853967,-0.000932773) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.659959,-0.000479271) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.321069,5.04981e-05) , 
0.116469, 1, 16, 0, 0.358841,0.0424955) , 
0.795507, 0, 16, 0, 0.365191,0.0357266) , 
0.746995, 0, 14, 0, 0.46793,-0.00712004)    );
  // itree = 934
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702261,-0.000200824) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.519038,-0.000112766) , 
1.34635, 1, 10, 0, 0.643696,-0.0910116) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.886243,-0.000788034) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.28102,3.55981e-05) , 
1.978, 1, 10, 0, 0.480631,-0.132609) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.431393,-3.15793e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.222704,0.00025629) , 
0.687798, 0, 1, 0, 0.268753,0.0661933) , 
1.34654, 1, 9, 0, 0.303176,0.0338945) , 
0.657988, 0, 14, 0, 0.513027,-0.0430809)    );
  // itree = 935
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.676587,-0.000205472) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.318333,0.000647324) , 
-1.60956, 0, 5, 0, 0.663835,-0.0974708) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.723841,-0.000495214) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.070104,0.001322) , 
0.576249, 0, 14, 0, 0.58071,-0.177701) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.398136,-6.80085e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.18476,0.000274097) , 
1.82486, 0, 17, 0, 0.277639,0.0747624) , 
-1.11433, 1, 4, 0, 0.342532,0.0207049) , 
0.695075, 0, 14, 0, 0.508042,-0.0401697)    );
  // itree = 936
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.853738,-0.000584258) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.719412,-0.000321139) , 
0.616467, 1, 17, 0, 0.776815,-0.199424) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.735946,-0.000368691) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.470527,-4.57255e-05) , 
0.598444, 1, 10, 0, 0.545593,-0.0824774) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.48703,0.000119849) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.18759,0.000242733) , 
0.0164273, 1, 6, 0, 0.352939,0.065294) , 
0.976372, 1, 8, 0, 0.467788,-0.0227984) , 
1.95319, 0, 7, 0, 0.517522,-0.0512245)    );
  // itree = 937
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.947574,-0.000199) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.618519,-0.000281456) , 
0.456302, 0, 15, 0, 0.663138,-0.128768) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.619247,-0.000348762) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186743,0.000116026) , 
0.371431, 1, 3, 0, 0.529945,-0.106259) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.423917,-3.77286e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152421,0.00124304) , 
1.19542, 1, 11, 0, 0.365857,0.0653762) , 
2.09435, 0, 10, 0, 0.403655,0.0258398) , 
1.22803, 0, 7, 0, 0.503593,-0.0337064)    );
  // itree = 938
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.778566,-0.0004163) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.530053,-0.000385728) , 
1.49542, 0, 18, 0, 0.701954,-0.159848) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.851247,-0.000497527) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.55574,-0.000131417) , 
2.24402, 0, 11, 0, 0.612819,-0.0605682) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.558434,-0.000103782) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.291443,4.21718e-05) , 
0.449559, 1, 18, 0, 0.325384,0.067852) , 
0.761292, 0, 14, 0, 0.40942,0.0303061) , 
1.71929, 0, 7, 0, 0.471643,-0.01014)    );
  // itree = 939
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.704293,-0.000383827) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.512683,-0.00018459) , 
0.445577, 1, 13, 0, 0.585689,-0.14371) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.568709,-0.000207341) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.316121,0.000105129) , 
1.39623, 1, 10, 0, 0.513282,-0.00858423) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.443122,-7.13522e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.105165,0.000629787) , 
0.28025, 0, 15, 0, 0.211687,0.143813) , 
0.335375, 1, 16, 0, 0.409755,0.0437284) , 
2.09433, 0, 10, 0, 0.452785,-0.00211535)    );
  // itree = 940
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.649304,-0.000178281) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.404726,-9.20076e-05) , 
0.224713, 0, 15, 0, 0.503527,-0.0416164) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.920031,-0.0012773) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.412429,-0.00214511) , 
0.807551, 0, 14, 0, 0.888014,-0.286605) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.449666,0.000926216) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.160429,0.000570243) , 
0.458566, 1, 18, 0, 0.216402,0.243028) , 
1.96222, 0, 7, 0, 0.296105,0.180174) , 
0.304016, 0, 2, 0, 0.486012,-0.0228878)    );
  // itree = 941
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.663964,-0.000276278) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.504347,-0.000116615) , 
2.09431, 0, 10, 0, 0.543728,-0.0614919) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.865873,-0.00178513) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.229253,-0.000129563) , 
0.18352, 1, 8, 0, 0.369266,-0.0453513) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.557918,-0.00253037) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.114442,0.000362206) , 
0.151257, 1, 10, 0, 0.122599,0.19425) , 
2.84228, 0, 9, 0, 0.165887,0.152201) , 
0.486092, 1, 16, 0, 0.494839,-0.0338423)    );
  // itree = 942
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.742122,-0.000354515) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.446781,0.000872075) , 
0.230559, 0, 2, 0, 0.711874,-0.137602) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.473529,-6.44486e-07) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.280703,-6.91205e-05) , 
0.514365, 1, 1, 0, 0.403824,0.0142708) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.613481,-0.000407809) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.159632,0.000179822) , 
0.109198, 1, 16, 0, 0.239837,0.220459) , 
0.825668, 1, 13, 0, 0.384063,0.0391167) , 
0.779586, 0, 14, 0, 0.480471,-0.0128552)    );
  // itree = 943
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738052,-0.000293565) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.493668,2.65134e-05) , 
0.732944, 1, 8, 0, 0.618263,-0.125664) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.549832,-0.000252746) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.342841,0.000221713) , 
1.54584, 0, 11, 0, 0.457302,-0.00894015) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.860906,-0.00214102) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.13663,0.000395373) , 
2.10561, 0, 4, 0, 0.172553,0.304989) , 
0.387668, 1, 15, 0, 0.429345,0.0218817) , 
1.04716, 1, 11, 0, 0.541688,-0.0658586)    );
  // itree = 944
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.711012,-0.000234102) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.401993,-9.44784e-05) , 
0.143261, 0, 15, 0, 0.62076,-0.0828952) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706204,-0.000354204) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.393678,-2.49675e-05) , 
2.05421, 0, 10, 0, 0.510243,-0.0896737) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.36755,-4.9192e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.137676,0.000330868) , 
1.79338, 1, 18, 0, 0.280118,0.0981568) , 
0.43055, 1, 8, 0, 0.346839,0.0436983) , 
0.26457, 1, 16, 0, 0.49284,-0.0237765)    );
  // itree = 945
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.554014,-0.000169448) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.410661,-2.99112e-05) , 
1.94479, 0, 9, 0, 0.521114,-0.0354086) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.930658,-0.000779053) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.00315793,0.0452622) , 
0.554947, 1, 1, 0, 0.616384,-0.292477) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.254309,0.000446058) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.102788,9.87941e-05) , 
-0.609697, 1, 5, 0, 0.155404,0.180086) , 
0.215445, 1, 13, 0, 0.17624,0.158726) , 
0.136439, 1, 0, 0, 0.454205,0.00225579)    );
  // itree = 946
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.920134,-0.00133203) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.625532,-0.000228147) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.357103,-1.09923e-05) , 
0.0451829, 1, 0, 0, 0.498733,-0.0316686) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.895449,-0.00203504) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.150736,0.000767697) , 
1.96247, 0, 7, 0, 0.237588,0.241487) , 
0.257621, 0, 2, 0, 0.486767,-0.0191523) , 
0.331909, 1, 14, 0, 0.49164,-0.0258996)    );
  // itree = 947
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.702923,-0.000240315) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.369954,3.20618e-05) , 
0.693959, 0, 14, 0, 0.523533,-0.0603241) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.98141,-0.000654274) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.019026,-0.00262018) , 
0.37919, 0, 12, 0, 0.884266,-0.40241) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.621954,-6.13909e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.294742,0.000502582) , 
1.10561, 1, 17, 0, 0.370157,0.10854) , 
0.706634, 0, 16, 0, 0.389222,0.0895921) , 
0.350413, 0, 2, 0, 0.505671,-0.0403873)    );
  // itree = 948
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.686898,-0.000401239) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.552161,-0.000189858) , 
1.79481, 0, 9, 0, 0.589087,-0.134825) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.576132,-0.000172879) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.257075,0.000379121) , 
0.410637, 1, 16, 0, 0.507757,-0.0163013) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.517456,-0.000686118) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0691946,0.00328211) , 
0.629926, 1, 17, 0, 0.0977027,0.165318) , 
0.0896043, 0, 15, 0, 0.447327,0.0104637) , 
2.09436, 0, 10, 0, 0.480627,-0.0236648)    );
  // itree = 949
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.626295,-0.000186446) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.30641,0.000589512) , 
-1.3619, 0, 5, 0, 0.603445,-0.0762109) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.828595,-0.000537284) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.407806,-0.000338635) , 
1.06283, 1, 17, 0, 0.70147,-0.151003) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.465472,-0.000248931) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.152096,0.000487827) , 
1.49615, 1, 9, 0, 0.221421,0.102621) , 
0.0881708, 1, 16, 0, 0.283601,0.0697698) , 
0.143039, 0, 15, 0, 0.497398,-0.0278099)    );
  // itree = 950
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.755807,-0.000385332) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.430079,0.000156435) , 
0.202699, 0, 1, 0, 0.70514,-0.13189) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701396,-0.000307274) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.325544,0.000172037) , 
0.230162, 1, 12, 0, 0.605048,-0.131533) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.585801,-0.000147333) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.301975,1.87428e-05) , 
0.360358, 0, 15, 0, 0.361094,0.0640222) , 
1.11429, 0, 3, 0, 0.406217,0.0278513) , 
0.803576, 0, 14, 0, 0.474407,-0.00858897)    );
  // itree = 951
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.765223,-0.000281941) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.443188,-0.000173805) , 
0.552665, 0, 2, 0, 0.682412,-0.177066) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.714352,-0.000397765) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.197199,-0.000211491) , 
0.345113, 1, 15, 0, 0.700834,-0.157035) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.452983,-1.85948e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.306793,3.12622e-05) , 
-0.370429, 1, 4, 0, 0.366319,0.0609791) , 
1.72671, 0, 7, 0, 0.440883,0.0123835) , 
0.246311, 1, 8, 0, 0.488282,-0.0247952)    );
  // itree = 952
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.734,-0.000124987) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.500999,-0.000142296) , 
-0.5838, 0, 4, 0, 0.575702,-0.096565) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.949586,-0.00081812) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0124869,0.00925999) , 
0.899196, 0, 5, 0, 0.782842,-0.435568) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682236,-0.000374288) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.360006,-5.36439e-06) , 
1.71932, 0, 7, 0, 0.421735,0.0394735) , 
0.236077, 0, 6, 0, 0.43146,0.0266802) , 
-0.371525, 1, 4, 0, 0.493625,-0.0264353)    );
  // itree = 953
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666483,-0.000204129) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.311574,0.000180755) , 
0.660911, 0, 14, 0, 0.591847,-0.0664266) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.820714,-0.000601712) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.314729,-0.00011931) , 
0.478751, 1, 8, 0, 0.459217,-0.0681694) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.396602,0.000237722) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.158139,0.000271217) , 
1.11419, 0, 5, 0, 0.21654,0.111553) , 
0.448813, 1, 11, 0, 0.276166,0.067395) , 
0.142866, 0, 15, 0, 0.483319,-0.0204201)    );
  // itree = 954
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.82072,-0.000388083) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.309507,0.000938818) , 
0.943525, 1, 8, 0, 0.638345,-0.15313) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.716928,-0.000444559) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.162851,-0.000148388) , 
0.0374073, 1, 6, 0, 0.656428,-0.140216) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.463368,-0.000107416) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.373167,0.000461953) , 
0.443208, 0, 2, 0, 0.442115,0.00457329) , 
1.04723, 1, 9, 0, 0.470918,-0.0148854) , 
0.448785, 1, 10, 0, 0.50221,-0.040724)    );
  // itree = 955
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.644772,-0.000237292) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.379843,-7.01973e-05) , 
0.697411, 0, 13, 0, 0.50703,-0.0532477) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.886471,-0.00114447) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.511345,4.25582e-05) , 
0.820733, 0, 14, 0, 0.791336,-0.192282) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.529092,0.000112451) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.275896,0.000274681) , 
0.306696, 0, 15, 0, 0.352276,0.116234) , 
1.96226, 0, 7, 0, 0.397755,0.0842776) , 
0.443213, 0, 2, 0, 0.480468,-0.0198188)    );
  // itree = 956
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.658807,-0.00022091) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0947673,0.00018535) , 
0.572196, 0, 14, 0, 0.582308,-0.0808793) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.698839,-0.000555664) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.305924,-2.82126e-05) , 
-0.866657, 1, 5, 0, 0.475007,-0.122654) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.444371,-7.89883e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.258721,0.000253468) , 
-0.6191, 0, 5, 0, 0.396247,0.0522786) , 
0.48022, 1, 13, 0, 0.411816,0.0176984) , 
1.35047, 1, 17, 0, 0.4834,-0.0236911)    );
  // itree = 957
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.575515,-0.000174392) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.666568,-0.000850433) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.249465,0.000701501) , 
-2.36411, 1, 5, 0, 0.309468,0.14471) , 
-1.36185, 0, 5, 0, 0.553973,-0.0549514) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.719419,-0.00138586) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.700938,-0.00246662) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.136297,0.000722079) , 
-2.35238, 1, 5, 0, 0.155191,0.116645) , 
0.330023, 1, 14, 0, 0.168097,0.103663) , 
0.0890491, 0, 15, 0, 0.494277,-0.0304133)    );
  // itree = 958
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.693965,-0.000333577) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.428005,-0.000194194) , 
0.123796, 0, 5, 0, 0.588918,-0.139622) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.664769,-0.000261793) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378849,0.000107518) , 
0.985053, 1, 8, 0, 0.547218,-0.039667) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.635637,-0.000484643) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186163,0.00031736) , 
1.50114, 1, 9, 0, 0.236278,0.115038) , 
0.0884162, 1, 0, 0, 0.462164,0.00265081) , 
2.09437, 0, 10, 0, 0.491178,-0.0299153)    );
  // itree = 959
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74481,-0.000122258) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234431,0.00072454) , 
-0.617439, 0, 3, 0, 0.69323,-0.169102) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.865382,-0.000595095) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.264413,0.000114386) , 
0.131222, 1, 16, 0, 0.810889,-0.213623) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.490286,-0.000273204) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.36649,-2.57753e-05) , 
2.09435, 0, 10, 0, 0.393816,0.0429759) , 
2.45284, 0, 7, 0, 0.430158,0.0206168) , 
0.387595, 0, 15, 0, 0.477994,-0.0138808)    );
  // itree = 960
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.775642,-0.000396119) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.505599,-0.000115551) , 
0.448885, 1, 10, 0, 0.557127,-0.0788176) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.907991,-0.000829427) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.378099,-2.91026e-05) , 
1.49527, 0, 11, 0, 0.758535,-0.173355) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.378782,-1.71795e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.156204,0.00111328) , 
0.375686, 0, 2, 0, 0.347499,0.0689706) , 
0.84597, 0, 14, 0, 0.392342,0.0425333) , 
0.985008, 1, 8, 0, 0.487302,-0.0273972)    );
  // itree = 961
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.77408,-0.000251779) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.536373,-0.000115333) , 
2.69264, 0, 9, 0, 0.610133,-0.0813475) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.738199,-0.000397889) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.380765,-0.000225516) , 
1.8671, 0, 17, 0, 0.562769,-0.100077) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.581492,-0.000622367) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.303222,6.44261e-05) , 
2.81072, 0, 8, 0, 0.322055,0.083475) , 
0.244921, 1, 8, 0, 0.367344,0.0489405) , 
0.225618, 0, 15, 0, 0.466359,-0.00419375)    );
  // itree = 962
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.650778,-0.000261347) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.499174,-0.00014674) , 
-0.618752, 0, 3, 0, 0.6164,-0.103258) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.653535,-0.000294522) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.227548,0.0025479) , 
0.985482, 1, 8, 0, 0.515204,-0.0629228) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.454006,-0.000223737) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.234207,0.000341581) , 
2.00174, 0, 10, 0, 0.314616,0.0911474) , 
0.748021, 1, 10, 0, 0.380646,0.0404306) , 
0.986676, 0, 7, 0, 0.495163,-0.0293658)    );
  // itree = 963
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.792865,-0.000495721) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.52251,-9.77412e-05) , 
2.20751, 0, 7, 0, 0.55623,-0.0623355) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.565023,-0.000279467) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.124776,0.000611152) , 
0.984637, 0, 18, 0, 0.40928,-0.0215391) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.887128,-0.00147655) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0967086,0.000506503) , 
2.87127, 0, 18, 0, 0.123486,0.201405) , 
1.36198, 1, 18, 0, 0.257819,0.0966139) , 
0.136298, 1, 0, 0, 0.495555,-0.0300169)    );
  // itree = 964
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.836596,-0.000370376) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.66042,-0.000361425) , 
0.726292, 0, 2, 0, 0.733092,-0.152154) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.607403,-0.000201148) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.385008,0.000101974) , 
0.928553, 0, 7, 0, 0.480271,-0.0362024) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.450766,0.000253866) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.137057,6.47626e-05) , 
0.448541, 1, 10, 0, 0.187708,0.173786) , 
0.818317, 1, 2, 0, 0.434119,-0.00307635) , 
0.132002, 1, 16, 0, 0.503972,-0.0379077)    );
  // itree = 965
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.690069,-0.000208241) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.526153,-9.01848e-05) , 
1.34234, 1, 17, 0, 0.596311,-0.0867965) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.899278,-0.000705688) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.282628,-0.000352575) , 
1.54546, 0, 3, 0, 0.765619,-0.257143) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.12714,0.00397116) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0653856,0.000895906) , 
0.656573, 0, 14, 0, 0.0739789,0.179076) , 
0.611366, 1, 17, 0, 0.15737,0.126481) , 
0.088617, 0, 15, 0, 0.535238,-0.0571214)    );
  // itree = 966
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706752,-0.00020706) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.521973,-0.000143996) , 
0.635132, 0, 2, 0, 0.621665,-0.0908926) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.617099,-0.00034427) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.111767,0.000509773) , 
0.543421, 1, 1, 0, 0.51174,-0.100217) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.499468,-0.000136501) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.193197,0.000421944) , 
0.456505, 1, 18, 0, 0.231657,0.130084) , 
0.441304, 1, 8, 0, 0.320972,0.0566437) , 
0.309517, 1, 16, 0, 0.50969,-0.0359516)    );
  // itree = 967
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.657782,-0.000216491) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.341767,4.97435e-05) , 
0.339728, 1, 16, 0, 0.553222,-0.09331) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.634589,-0.000282342) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.109759,0.00396869) , 
0.0450779, 1, 6, 0, 0.618488,-0.0602034) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.517167,-0.000339622) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.183406,0.000577149) , 
2.20441, 0, 8, 0, 0.257342,0.153388) , 
0.784417, 0, 14, 0, 0.425283,0.0540639) , 
0.541184, 0, 2, 0, 0.507236,-0.0403385)    );
  // itree = 968
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.61949,-0.000207372) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.386197,0.000135562) , 
0.449444, 0, 2, 0, 0.549802,-0.0613866) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.981983,-0.000880985) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0298525,-0.000173188) , 
0.507835, 1, 1, 0, 0.671041,-0.316013) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74588,-0.000987942) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.216282,0.000129407) , 
0.772355, 0, 0, 0, 0.228544,0.150126) , 
0.219815, 1, 13, 0, 0.257441,0.119685) , 
0.575368, 0, 13, 0, 0.485754,-0.021719)    );
  // itree = 969
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.610154,-0.000195257) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.268068,0.000146676) , 
0.11583, 0, 15, 0, 0.517808,-0.0625262) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.736336,-0.000495023) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.396439,-5.22355e-05) , 
0.188335, 0, 1, 0, 0.651077,-0.0928926) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.486685,0.000168694) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.186082,0.000543398) , 
0.372452, 0, 3, 0, 0.322582,0.129811) , 
0.857845, 0, 14, 0, 0.416409,0.0662009) , 
0.44944, 0, 2, 0, 0.491638,-0.0293027)    );
  // itree = 970
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.655959,-0.000223547) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.43238,4.83356e-05) , 
0.979673, 1, 8, 0, 0.559474,-0.0673903) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.951395,-0.000731854) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0141675,0.0141667) , 
0.552059, 0, 16, 0, 0.803588,-0.485003) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.583895,-0.000691618) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.208052,0.000126624) , 
0.227648, 0, 6, 0, 0.23426,0.112942) , 
0.462299, 1, 18, 0, 0.258782,0.0871876) , 
0.0590194, 1, 6, 0, 0.506841,-0.0403331)    );
  // itree = 971
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.730741,-0.000228773) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.389382,2.84773e-05) , 
0.688215, 0, 14, 0, 0.543842,-0.0767876) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.831416,-0.000869833) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.554106,-0.000230368) , 
2.24387, 0, 10, 0, 0.654055,-0.0912773) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.528415,-9.11623e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.255403,0.0001519) , 
-0.866429, 1, 4, 0, 0.327881,0.119897) , 
0.856891, 0, 14, 0, 0.414061,0.0641016) , 
0.346064, 0, 1, 0, 0.508052,-0.037934)    );
  // itree = 972
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691451,-0.000249281) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.483969,-8.74558e-05) , 
0.748177, 1, 10, 0, 0.551302,-0.0960253) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.621814,-0.000149848) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.380482,0.000329582) , 
1.04597, 0, 18, 0, 0.564788,-0.0364797) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.529393,-0.000372168) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.174706,0.000302731) , 
0.299527, 1, 10, 0, 0.246712,0.152971) , 
0.16938, 0, 15, 0, 0.442071,0.0366124) , 
0.354837, 0, 1, 0, 0.518501,-0.0561949)    );
  // itree = 973
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.798074,-0.000444106) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.075199,0.00194394) , 
0.490673, 0, 7, 0, 0.772297,-0.181038) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.496514,-0.000112312) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.280853,0.000318883) , 
-1.11429, 0, 5, 0, 0.467793,-0.0221671) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.778659,-2.51584e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.142567,0.00104227) , 
0.961534, 0, 13, 0, 0.210429,0.235312) , 
0.277154, 0, 2, 0, 0.453614,-0.0079817) , 
0.0885291, 1, 16, 0, 0.497833,-0.031994)    );
  // itree = 974
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.672957,-0.000238711) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.224967,8.20306e-05) , 
0.56881, 0, 13, 0, 0.596782,-0.108232) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.970225,-0.00155003) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.544369,-0.000355737) , 
1.66411, 1, 10, 0, 0.578311,-0.1038) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.414692,1.18133e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.143258,0.000329292) , 
0.818062, 1, 2, 0, 0.368727,0.0654987) , 
1.79511, 0, 11, 0, 0.40232,0.0383631) , 
0.738757, 1, 8, 0, 0.495014,-0.0315142)    );
  // itree = 975
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.718358,-0.000262965) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.439838,-0.000113439) , 
0.313584, 0, 12, 0, 0.503567,-0.0413375) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.916452,-0.0020863) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.547988,-0.000741971) , 
0.209006, 1, 1, 0, 0.745691,-0.151836) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.567885,-0.000166289) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.211216,0.00057596) , 
2.54309, 0, 11, 0, 0.248297,0.214261) , 
1.92949, 0, 7, 0, 0.294014,0.180612) , 
0.357676, 0, 2, 0, 0.476114,-0.0122608)    );
  // itree = 976
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.637633,-0.000204454) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.518369,-0.000103454) , 
2.54318, 0, 9, 0, 0.568851,-0.06607) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.89633,-0.000692058) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.339366,-0.000105536) , 
0.424154, 0, 16, 0, 0.560157,-0.241352) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.734351,-0.000525282) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.101369,0.00133876) , 
0.081823, 1, 16, 0, 0.177486,0.108975) , 
2.67756, 0, 8, 0, 0.219279,0.0707137) , 
0.0909772, 0, 15, 0, 0.512124,-0.0438734)    );
  // itree = 977
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.641113,-0.000208785) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.336942,7.62415e-05) , 
0.345384, 1, 16, 0, 0.539547,-0.0739873) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.605172,-0.000421047) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.21345,0.000786953) , 
0.211123, 0, 2, 0, 0.530457,-0.0236248) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.395855,0.000184257) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.203844,0.000528612) , 
0.653521, 1, 13, 0, 0.233146,0.207437) , 
0.386583, 0, 12, 0, 0.373605,0.0982759) , 
0.299538, 0, 1, 0, 0.510181,-0.0435029)    );
  // itree = 978
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.876326,-0.000770201) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.597889,-0.000325397) , 
0.768455, 0, 1, 0, 0.648044,-0.164652) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.600163,-0.000206915) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.194204,0.00044202) , 
0.116152, 0, 15, 0, 0.506032,-0.0277728) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.583503,-0.000127452) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.184994,0.000333009) , 
0.767274, 0, 14, 0, 0.281391,0.132887) , 
1.1112, 1, 11, 0, 0.434978,0.0230437) , 
1.94471, 0, 11, 0, 0.465046,-0.00344356)    );
  // itree = 979
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.602597,-0.000199496) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.1341,0.00111766) , 
0.277099, 1, 0, 0, 0.541115,-0.0947763) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.846535,-0.000411521) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.547754,-0.000235199) , 
0.311231, 1, 12, 0, 0.686343,-0.109784) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.547515,-0.000614057) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.314133,5.45602e-05) , 
2.68708, 0, 8, 0, 0.333485,0.0925874) , 
0.804074, 0, 14, 0, 0.440525,0.0311979) , 
0.539882, 0, 1, 0, 0.474541,-0.0114018)    );
  // itree = 980
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709108,-0.000461466) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.470767,-0.000118274) , 
2.24396, 0, 11, 0, 0.494174,-0.00895372) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.912938,-0.000803944) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.039476,0.00802069) , 
0.413231, 0, 3, 0, 0.700153,-0.372334) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.526894,0.000152506) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.137659,0.000198846) , 
0.93966, 0, 3, 0, 0.175534,0.159324) , 
0.242955, 0, 6, 0, 0.211238,0.123141) , 
0.440663, 1, 16, 0, 0.438156,0.0171996)    );
  // itree = 981
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.781751,-0.000323482) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.548182,-0.00028167) , 
1.49603, 1, 10, 0, 0.733823,-0.156848) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.930988,-0.000853092) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0148751,0.0344529) , 
0.252725, 1, 7, 0, 0.806153,-0.45754) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.701281,-0.000831609) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.415128,-2.51251e-05) , 
2.10463, 0, 5, 0, 0.428614,0.00429059) , 
0.242955, 0, 6, 0, 0.438884,-0.00827236) , 
0.804929, 0, 14, 0, 0.50547,-0.0418149)    );
  // itree = 982
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.908914,-0.000554812) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.694868,-0.00039221) , 
0.102241, 0, 6, 0, 0.712717,-0.166239) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.677782,-0.000209099) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.491138,2.60865e-05) , 
0.184019, 0, 16, 0, 0.624771,-0.0735776) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.542677,-0.000141873) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.30376,4.76812e-05) , 
0.246315, 1, 8, 0, 0.343154,0.054186) , 
0.765508, 0, 14, 0, 0.419092,0.0197343) , 
1.71693, 0, 7, 0, 0.479923,-0.0187945)    );
  // itree = 983
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.955238,-0.000286946) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.215264,0.00181385) , 
0.899831, 0, 7, 0, 0.8305,-0.290702) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.709196,-0.000314706) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.360959,-1.28764e-05) , 
0.206661, 1, 15, 0, 0.649115,-0.156798) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.871529,-0.00159923) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.430192,-5.23172e-05) , 
0.32195, 1, 14, 0, 0.435317,0.0136638) , 
0.244285, 1, 8, 0, 0.473507,-0.0167854) , 
0.468229, 0, 15, 0, 0.514082,-0.0479187)    );
  // itree = 984
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.920481,-0.00055721) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.647366,-0.000615784) , 
2.2443, 0, 9, 0, 0.881708,-0.296151) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.67785,-0.000346446) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.36468,2.45228e-05) , 
0.124561, 1, 3, 0, 0.589041,-0.129203) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707501,-0.000420885) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.41028,-1.15656e-05) , 
1.34755, 1, 9, 0, 0.421283,0.0313333) , 
2.09433, 0, 10, 0, 0.461573,-0.00722215) , 
0.61224, 1, 17, 0, 0.500506,-0.0339971)    );
  // itree = 985
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.74667,-0.000261673) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.398749,-6.58109e-05) , 
0.734084, 0, 14, 0, 0.517001,-0.0479077) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.987516,-0.000873989) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.474526,-0.00702778) , 
1.70448, 0, 17, 0, 0.92179,-0.38018) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.812025,-0.00117225) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.25427,0.000525419) , 
1.92949, 0, 7, 0, 0.318008,0.154036) , 
0.133893, 1, 2, 0, 0.354208,0.122006) , 
0.350417, 0, 2, 0, 0.495603,-0.0255736)    );
  // itree = 986
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.590684,-0.000143129) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.461386,-0.000142519) , 
0.371373, 1, 5, 0, 0.548862,-0.0487584) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.995156,-0.00152392) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.201271,-9.89045e-05) , 
2.99083, 0, 9, 0, 0.796139,-0.302407) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.514249,-0.000794578) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.126988,0.000711395) , 
0.893038, 0, 1, 0, 0.140487,0.125024) , 
2.10487, 0, 3, 0, 0.171332,0.104916) , 
0.0890491, 0, 15, 0, 0.489932,-0.0247708)    );
  // itree = 987
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.674101,-0.000254237) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.46385,-7.19283e-05) , 
0.732834, 1, 8, 0, 0.563837,-0.0785042) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.835921,-0.000313318) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0543232,7.03143e-06) , 
0.00689286, 0, 6, 0, 0.686533,-0.242661) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.587,-0.000338432) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.220348,0.000179345) , 
2.57162, 0, 10, 0, 0.261598,0.131179) , 
0.149647, 1, 10, 0, 0.303469,0.0943433) , 
0.493339, 0, 7, 0, 0.497867,-0.0347096)    );
  // itree = 988
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.604078,-0.000181439) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.193492,0.00126) , 
0.235062, 0, 2, 0, 0.589568,-0.0656502) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.950643,-0.000479328) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.401928,-0.000656958) , 
-0.619144, 1, 4, 0, 0.875263,-0.2655) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.688382,-0.000694863) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226909,0.000235745) , 
0.598492, 1, 9, 0, 0.261654,0.0814976) , 
0.0434561, 1, 16, 0, 0.301943,0.0587141) , 
0.142955, 0, 15, 0, 0.487453,-0.0214974)    );
  // itree = 989
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.62923,-0.000231365) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.215601,0.0001689) , 
0.583415, 1, 1, 0, 0.574774,-0.100452) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.908694,-0.000560187) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.398595,-9.30759e-05) , 
2.09696, 1, 9, 0, 0.789614,-0.208307) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.662922,-0.000461265) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.354449,6.32849e-05) , 
2.24382, 0, 11, 0, 0.380424,0.0552911) , 
2.54661, 0, 17, 0, 0.408047,0.0374964) , 
0.732331, 1, 8, 0, 0.484669,-0.0259001)    );
  // itree = 990
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.803229,-0.000373592) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.442018,-8.55044e-05) , 
0.788325, 0, 14, 0, 0.500205,-0.0420423) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.813234,-0.000910334) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.169689,0.00119838) , 
0.769258, 0, 14, 0, 0.470934,-0.0409626) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.795507,-0.00123415) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.283823,0.000313918) , 
2.17924, 0, 7, 0, 0.312555,0.170666) , 
0.649247, 1, 13, 0, 0.335057,0.140598) , 
0.403565, 0, 2, 0, 0.468901,-0.00742306)    );
  // itree = 991
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.682452,-0.000224855) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.482791,-0.000104887) , 
0.976671, 1, 8, 0, 0.605093,-0.0808536) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.706179,-0.0005452) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.207135,0.00372883) , 
0.934538, 0, 7, 0, 0.543409,-0.156475) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.505653,-0.000300412) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226054,0.000246806) , 
1.34671, 1, 9, 0, 0.274531,0.0911034) , 
2.20623, 0, 8, 0, 0.31053,0.0579558) , 
0.30858, 1, 16, 0, 0.492806,-0.0279395)    );
  // itree = 992
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.669928,-0.000173234) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.161401,0.000260431) , 
0.63138, 0, 14, 0, 0.592193,-0.0832802) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.707355,-0.0003698) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.336453,-0.000274486) , 
1.64803, 1, 10, 0, 0.564074,-0.0730308) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.371108,-0.000257477) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.164343,0.000244377) , 
2.09428, 0, 10, 0, 0.222969,0.139925) , 
0.920962, 1, 17, 0, 0.295887,0.0944014) , 
0.661752, 0, 13, 0, 0.493219,-0.0239299)    );
  // itree = 993
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.741248,-0.000363934) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.118806,0.00170829) , 
0.0903215, 0, 15, 0, 0.671976,-0.194174) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.717683,-0.000228307) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.464192,0.000116408) , 
1.19327, 1, 11, 0, 0.668293,-0.0995208) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.82434,-0.000779926) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.292739,0.000151437) , 
2.71226, 0, 7, 0, 0.305422,0.0627038) , 
0.706208, 0, 14, 0, 0.487347,-0.0186271) , 
2.39353, 0, 10, 0, 0.515035,-0.0449536)    );
  // itree = 994
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.757315,-0.000386574) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.542603,-6.34948e-05) , 
0.598573, 1, 10, 0, 0.600865,-0.111541) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.657128,-0.000180325) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.27701,-0.000107241) , 
0.500277, 1, 1, 0, 0.594682,-0.0749953) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.475897,-8.19338e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.104798,0.000865541) , 
0.251658, 1, 16, 0, 0.290661,0.105768) , 
0.306504, 0, 15, 0, 0.402242,0.0394244) , 
0.979725, 1, 8, 0, 0.521684,-0.0513588)    );
  // itree = 995
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.691048,-0.00027114) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.259088,0.000357333) , 
0.618943, 1, 4, 0, 0.631461,-0.153932) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.633414,-0.000186401) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.283831,-2.62318e-06) , 
0.142866, 0, 15, 0, 0.517896,-0.0358065) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.465468,-3.41425e-05) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.13621,0.000323337) , 
0.0178312, 1, 6, 0, 0.271011,0.125671) , 
0.484272, 0, 7, 0, 0.453703,0.00617971) , 
2.84239, 0, 9, 0, 0.494005,-0.0301217)    );
  // itree = 996
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.861699,-0.00061403) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.404984,-0.000405492) , 
0.584583, 1, 17, 0, 0.835647,-0.263767) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.692308,-0.000198942) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.314087,0.000512385) , 
0.265919, 0, 2, 0, 0.656857,-0.0942749) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.893339,-0.000933961) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.321374,0.000125547) , 
0.789877, 0, 16, 0, 0.330651,0.0332008) , 
0.697055, 0, 14, 0, 0.497601,-0.0320404) , 
0.612718, 1, 17, 0, 0.521875,-0.0486801)    );
  // itree = 997
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.789268,-0.000477884) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.0961033,0.000428469) , 
0.270674, 1, 16, 0, 0.759169,-0.198457) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.544881,-0.000156825) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.226203,0.000953657) , 
-1.11432, 0, 5, 0, 0.506865,-0.0234839) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.422431,-0.000145492) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.191648,0.000179854) , 
0.917532, 0, 2, 0, 0.240276,0.128903) , 
0.61005, 0, 13, 0, 0.435733,0.0171762) , 
0.759747, 1, 17, 0, 0.472721,-0.00748365)    );
  // itree = 998
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.903536,-0.000636718) , 
NN(
0, 
0, 
0, 1, -1, 1, 0.605597,-0.000255132) , 
0.149433, 0, 6, 0, 0.619746,-0.0957473) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.75982,-0.000565658) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.207964,0.00144209) , 
1.17403, 1, 8, 0, 0.65299,-0.203427) , 
NN(
NN(
0, 
0, 
0, 1, -1, -1, 0.465612,-0.000107885) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.285026,0.000237248) , 
2.39425, 0, 9, 0, 0.381961,0.0408892) , 
2.69268, 0, 10, 0, 0.4036,0.0213826) , 
1.23336, 0, 7, 0, 0.478241,-0.0190657)    );
  // itree = 999
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.734455,-0.000363694) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.414461,0.000860421) , 
0.976716, 1, 8, 0, 0.61779,-0.138158) , 
NN(
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.744503,-0.000390724) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.169522,0.000320417) , 
0.084037, 1, 0, 0, 0.697924,-0.13574) , 
NN(
NN(
0, 
0, 
0, 1, -1, 1, 0.586662,-0.000398233) , 
NN(
0, 
0, 
0, 1, -1, -1, 0.311173,0.000121789) , 
2.24429, 0, 11, 0, 0.341403,0.0869067) , 
1.7077, 0, 7, 0, 0.42142,0.0369369) , 
0.74799, 1, 10, 0, 0.490032,-0.0242421)    );
   return;
};
 
// Clean up
inline void ReadBDTGrad::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDTGrad::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
         if (IsNormalised()) {
            // normalise variables
            std::vector<double> iV;
            int ivar = 0;
            for (std::vector<double>::const_iterator varIt = inputValues.begin();
                 varIt != inputValues.end(); varIt++, ivar++) {
               iV.push_back(NormVariable( *varIt, fVmin[ivar], fVmax[ivar] ));
            }
            retval = GetMvaValue__( iV );
         }
         else {
            retval = GetMvaValue__( inputValues );
         }
      }

      return retval;
   }
